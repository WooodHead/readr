import React, { Component } from 'react';
import { Link } from 'react-router';
import Container from 'elements/Container';
class ConsoleBranding extends Component {
    constructor(props) {
        super(props);
        this.state = {
            isDropdownMenuVisible: false
        };
    }
    toggleDropdownMenu() {
        this.setState({
            isDropdownMenuVisible: !this.state.isDropdownMenuVisible
        });
    }
    render() {
        let username = this.props.username;
        let isAdmin = this.props.isAdmin ? this.props.isAdmin : 'false';
        return (React.createElement("div", {className: "branding console-branding"}, React.createElement(Container, {isFluid: true, className: "clearfix"}, React.createElement("div", null, React.createElement("h1", {className: "logo left"}, React.createElement(Link, {to: "/console"}, "readr"), React.createElement("span", {className: "sep"}, "|"), React.createElement("span", {className: "sub"}, "Console")), username ? (React.createElement("div", {onMouseLeave: this.toggleDropdownMenu.bind(this), onMouseEnter: this.toggleDropdownMenu.bind(this), className: "nav right"}, React.createElement("span", {className: "username"}, username, isAdmin ? (React.createElement("span", {className: "badge-dark"}, "Admin")) : null), this.state.isDropdownMenuVisible ? (React.createElement("ul", {className: "dropdown-menu"}, isAdmin === true ? (React.createElement("li", null, React.createElement("a", {href: "/"}, "Back to readr"))) : null, React.createElement("li", null, React.createElement(Link, {to: `/profile/${username}`}, "我的账号")), React.createElement("li", null, React.createElement("a", {href: '/logout'}, "退出")))) : null)) : (React.createElement("div", {className: "nav right"}, React.createElement("ul", {className: "nav-links"}, React.createElement("li", null, React.createElement(Link, {to: "/signin"}, "登录")), React.createElement("li", null, React.createElement(Link, {to: "/signup"}, "注册")))))))));
    }
}
export default ConsoleBranding;

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nLnRzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiT0FBTyxLQUFLLEVBQUUsRUFBRSxTQUFTLEVBQWEsTUFBTSxPQUFPO09BQzVDLEVBQUUsSUFBSSxFQUFFLE1BQU0sY0FBYztPQUU1QixTQUFTLE1BQU0sb0JBQW9CO0FBRTFDLDhCQUE4QixTQUFTO0lBRXJDLFlBQVksS0FBSztRQUNmLE1BQU0sS0FBSyxDQUFDLENBQUE7UUFDWixJQUFJLENBQUMsS0FBSyxHQUFHO1lBQ1gscUJBQXFCLEVBQUUsS0FBSztTQUM3QixDQUFBO0lBQ0gsQ0FBQztJQUVELGtCQUFrQjtRQUNoQixJQUFJLENBQUMsUUFBUSxDQUFDO1lBQ1oscUJBQXFCLEVBQUUsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLHFCQUFxQjtTQUN6RCxDQUFDLENBQUE7SUFDSixDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksUUFBUSxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsUUFBUSxDQUFBO1FBQ2xDLElBQUksT0FBTyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxHQUFDLE9BQU8sQ0FBQTtRQUUzRCxNQUFNLENBQUMsQ0FDTCxxQkFBQyxHQUFHLElBQUMsU0FBUyxFQUFDLDJCQUEyQixHQUN4QyxvQkFBQyxTQUFTLEdBQUMsT0FBTyxFQUFFLElBQUssRUFBQyxTQUFTLEVBQUMsVUFBVSxHQUM1QyxxQkFBQyxHQUFHLFNBQ0YscUJBQUMsRUFBRSxJQUFDLFNBQVMsRUFBQyxXQUFXLEdBQ3ZCLG9CQUFDLElBQUksR0FBQyxFQUFFLEVBQUMsVUFBVSxXQUFhLEVBQ2hDLHFCQUFDLElBQUksSUFBQyxTQUFTLEVBQUMsS0FBSyxPQUFTLEVBQzlCLHFCQUFDLElBQUksSUFBQyxTQUFTLEVBQUMsS0FBSyxhQUFlLENBQ2pDLEVBRUgsUUFBUSxHQUFDLENBQ1AscUJBQUMsR0FBRyxJQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBRSxFQUFDLFlBQVksRUFBRSxJQUFJLENBQUMsa0JBQWtCLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBRSxFQUFDLFNBQVMsRUFBQyxXQUFXLEdBQzVILHFCQUFDLElBQUksSUFBQyxTQUFTLEVBQUMsVUFBVSxHQUFFLFFBQVMsRUFBQyxPQUFPLEdBQUMsQ0FBQyxxQkFBQyxJQUFJLElBQUMsU0FBUyxFQUFDLFlBQVksV0FBYSxDQUFDLEdBQUMsSUFBSyxDQUFPLEVBRXBHLElBQUksQ0FBQyxLQUFLLENBQUMscUJBQXFCLEdBQUMsQ0FDL0IscUJBQUMsRUFBRSxJQUFDLFNBQVMsRUFBQyxlQUFlLEdBRXpCLE9BQU8sS0FBSyxJQUFJLEdBQUMsQ0FDZixxQkFBQyxFQUFFLFNBQUMscUJBQUMsQ0FBQyxJQUFDLElBQUksRUFBQyxHQUFHLG1CQUFrQixDQUFLLENBQ3ZDLEdBQUMsSUFDSCxFQUNELHFCQUFDLEVBQUUsU0FBQyxvQkFBQyxJQUFJLEdBQUMsRUFBRSxFQUFFLFlBQVksUUFBUSxFQUFHLFVBQVksQ0FBSyxFQUN0RCxxQkFBQyxFQUFFLFNBQUMscUJBQUMsQ0FBQyxJQUFDLElBQUksRUFBQyxTQUFTLFFBQU8sQ0FBSyxDQUM5QixDQUNOLEdBQUMsSUFDSCxDQUNHLENBQ1AsR0FBQyxDQUNBLHFCQUFDLEdBQUcsSUFBQyxTQUFTLEVBQUMsV0FBVyxHQUN4QixxQkFBQyxFQUFFLElBQUMsU0FBUyxFQUFDLFdBQVcsR0FDdkIscUJBQUMsRUFBRSxTQUNELG9CQUFDLElBQUksR0FBQyxFQUFFLEVBQUMsU0FBUyxRQUFVLENBQ3pCLEVBQ0wscUJBQUMsRUFBRSxTQUNELG9CQUFDLElBQUksR0FBQyxFQUFFLEVBQUMsU0FBUyxRQUFVLENBQ3pCLENBQ0YsQ0FDRCxDQUVULENBQ0csQ0FDSSxDQUNSLENBQ1AsQ0FBQTtJQUNILENBQUM7QUFDSCxDQUFDO0FBRUQsZUFBZSxlQUFlLENBQUEiLCJmaWxlIjoiY29tcG9uZW50cy9Db25zb2xlQnJhbmRpbmcuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50LCBQcm9wVHlwZXMgfSBmcm9tICdyZWFjdCdcbmltcG9ydCB7IExpbmsgfSBmcm9tICdyZWFjdC1yb3V0ZXInXG5pbXBvcnQgY2FsbEFwaSBmcm9tICd1dGlscy9jYWxsQXBpJ1xuaW1wb3J0IENvbnRhaW5lciBmcm9tICdlbGVtZW50cy9Db250YWluZXInXG5cbmNsYXNzIENvbnNvbGVCcmFuZGluZyBleHRlbmRzIENvbXBvbmVudDxhbnksIGFueT4ge1xuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG4gICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogZmFsc2VcbiAgICB9XG4gIH1cblxuICB0b2dnbGVEcm9wZG93bk1lbnUoKSB7XG4gICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICBpc0Ryb3Bkb3duTWVudVZpc2libGU6ICF0aGlzLnN0YXRlLmlzRHJvcGRvd25NZW51VmlzaWJsZVxuICAgIH0pXG4gIH1cblxuICByZW5kZXIoKSB7XG4gICAgbGV0IHVzZXJuYW1lID0gdGhpcy5wcm9wcy51c2VybmFtZVxuICAgIGxldCBpc0FkbWluID0gdGhpcy5wcm9wcy5pc0FkbWluP3RoaXMucHJvcHMuaXNBZG1pbjonZmFsc2UnXG5cbiAgICByZXR1cm4gKFxuICAgICAgPGRpdiBjbGFzc05hbWU9XCJicmFuZGluZyBjb25zb2xlLWJyYW5kaW5nXCI+XG4gICAgICAgIDxDb250YWluZXIgaXNGbHVpZD17dHJ1ZX0gY2xhc3NOYW1lPVwiY2xlYXJmaXhcIj5cbiAgICAgICAgICA8ZGl2PlxuICAgICAgICAgICAgPGgxIGNsYXNzTmFtZT1cImxvZ28gbGVmdFwiPlxuICAgICAgICAgICAgICA8TGluayB0bz1cIi9jb25zb2xlXCI+cmVhZHI8L0xpbms+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInNlcFwiPnw8L3NwYW4+XG4gICAgICAgICAgICAgIDxzcGFuIGNsYXNzTmFtZT1cInN1YlwiPkNvbnNvbGU8L3NwYW4+XG4gICAgICAgICAgICA8L2gxPlxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICB1c2VybmFtZT8oXG4gICAgICAgICAgICAgICAgPGRpdiBvbk1vdXNlTGVhdmU9e3RoaXMudG9nZ2xlRHJvcGRvd25NZW51LmJpbmQodGhpcyl9IG9uTW91c2VFbnRlcj17dGhpcy50b2dnbGVEcm9wZG93bk1lbnUuYmluZCh0aGlzKX0gY2xhc3NOYW1lPVwibmF2IHJpZ2h0XCI+XG4gICAgICAgICAgICAgICAgICA8c3BhbiBjbGFzc05hbWU9XCJ1c2VybmFtZVwiPnt1c2VybmFtZX17aXNBZG1pbj8oPHNwYW4gY2xhc3NOYW1lPVwiYmFkZ2UtZGFya1wiPkFkbWluPC9zcGFuPik6bnVsbH08L3NwYW4+XG4gICAgICAgICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMuc3RhdGUuaXNEcm9wZG93bk1lbnVWaXNpYmxlPyhcbiAgICAgICAgICAgICAgICAgICAgICA8dWwgY2xhc3NOYW1lPVwiZHJvcGRvd24tbWVudVwiPlxuICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICBpc0FkbWluID09PSB0cnVlPyhcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8bGk+PGEgaHJlZj1cIi9cIj5CYWNrIHRvIHJlYWRyPC9hPjwvbGk+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICk6bnVsbFxuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgPGxpPjxMaW5rIHRvPXtgL3Byb2ZpbGUvJHt1c2VybmFtZX1gfT7miJHnmoTotKblj7c8L0xpbms+PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICAgIDxsaT48YSBocmVmPScvbG9nb3V0Jz7pgIDlh7o8L2E+PC9saT5cbiAgICAgICAgICAgICAgICAgICAgICA8L3VsPlxuICAgICAgICAgICAgICAgICAgICApOm51bGxcbiAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgICAgICAgKTooXG4gICAgICAgICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJuYXYgcmlnaHRcIj5cbiAgICAgICAgICAgICAgICAgIDx1bCBjbGFzc05hbWU9XCJuYXYtbGlua3NcIj5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIHRvPVwiL3NpZ25pblwiPueZu+W9lTwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgICAgPGxpPlxuICAgICAgICAgICAgICAgICAgICAgIDxMaW5rIHRvPVwiL3NpZ251cFwiPuazqOWGjDwvTGluaz5cbiAgICAgICAgICAgICAgICAgICAgPC9saT5cbiAgICAgICAgICAgICAgICAgIDwvdWw+XG4gICAgICAgICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgICAgIClcbiAgICAgICAgICAgIH1cbiAgICAgICAgICA8L2Rpdj5cbiAgICAgICAgPC9Db250YWluZXI+XG4gICAgICA8L2Rpdj5cbiAgICApXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgQ29uc29sZUJyYW5kaW5nXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
