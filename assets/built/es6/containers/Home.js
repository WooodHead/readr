import React, { Component } from 'react';
import { connect } from 'react-redux';
import { fetchBooks, fetchCollections } from 'actions/index';
import BookListSection from 'components/BookListSection';
import CandyBox from 'components/CandyBox';
import Body from 'side-effects/Body';
class Home extends Component {
    constructor(props) {
        super(props);
    }
    static fetchData({ store }) {
        return store.dispatch(fetchBooks('newest'));
    }
    componentDidMount() {
        this.props.fetchBooks('newest');
        this.props.fetchBooks('user');
        this.props.fetchCollections();
    }
    render() {
        let newestBooks = this.props.newestBooks;
        let hotBooks = newestBooks.map((book, index) => {
            return {
                name: book.title,
                link: `/book/${book.id}`
            };
        });
        let userBooks = this.props.userBooks.map((book, index) => {
            return {
                name: book.title,
                link: `/book/${book.id}`
            };
        });
        let listName = this.props.collection ? this.props.collection.name : '';
        let list = this.props.collection ? this.props.collection.items : [];
        return (React.createElement("div", null, React.createElement(Body, {className: "home"}), React.createElement("div", {className: "row"}, React.createElement("div", {className: "col-md-8"}, React.createElement(BookListSection, {bookList: newestBooks, title: "新书速递"}), React.createElement(BookListSection, {bookList: list, title: listName})), React.createElement("div", {className: "col-md-4"}, React.createElement(CandyBox, {title: "最近阅读", list: userBooks})))));
    }
}
function mapStateToProps(state, ownProps) {
    const { pagination: { filteredBooks }, entities: { books, collections } } = state;
    const genList = (whichPagination) => (whichPagination ? whichPagination.ids.map(id => books[id]) : []);
    return {
        userBooks: genList(filteredBooks['user']),
        newestBooks: genList(filteredBooks['newest']),
        collection: (() => {
            for (let prop in collections) {
                return collections[prop];
            }
        })()
    };
}
export default connect(mapStateToProps, { fetchBooks, fetchCollections })(Home);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhaW5lcnMvSG9tZS50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sS0FBSyxFQUFFLEVBQUUsU0FBUyxFQUFFLE1BQU0sT0FBTztPQUNqQyxFQUFFLE9BQU8sRUFBRSxNQUFNLGFBQWE7T0FFOUIsRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQUUsTUFBTSxlQUFlO09BQ3JELGVBQWUsTUFBTSw0QkFBNEI7T0FFakQsUUFBUSxNQUFNLHFCQUFxQjtPQUNuQyxJQUFJLE1BQU0sbUJBQW1CO0FBRXBDLG1CQUFtQixTQUFTO0lBTTFCLFlBQVksS0FBSztRQUNmLE1BQU0sS0FBSyxDQUFDLENBQUE7SUFDZCxDQUFDO0lBTkQsT0FBTyxTQUFTLENBQUMsRUFBQyxLQUFLLEVBQUM7UUFDdEIsTUFBTSxDQUFDLEtBQUssQ0FBQyxRQUFRLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFDLENBQUE7SUFDN0MsQ0FBQztJQU1ELGlCQUFpQjtRQUNmLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLFFBQVEsQ0FBQyxDQUFBO1FBQy9CLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxDQUFDLE1BQU0sQ0FBQyxDQUFBO1FBQzdCLElBQUksQ0FBQyxLQUFLLENBQUMsZ0JBQWdCLEVBQUUsQ0FBQTtJQUMvQixDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxDQUFBO1FBQ3hDLElBQUksUUFBUSxHQUFHLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSztZQUN6QyxNQUFNLENBQUM7Z0JBQ0wsSUFBSSxFQUFFLElBQUksQ0FBQyxLQUFLO2dCQUNoQixJQUFJLEVBQUUsU0FBUyxJQUFJLENBQUMsRUFBRSxFQUFFO2FBQ3pCLENBQUE7UUFDSCxDQUFDLENBQUMsQ0FBQTtRQUNGLElBQUksU0FBUyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsU0FBUyxDQUFDLEdBQUcsQ0FBQyxDQUFDLElBQUksRUFBRSxLQUFLO1lBQ25ELE1BQU0sQ0FBQztnQkFDTCxJQUFJLEVBQUUsSUFBSSxDQUFDLEtBQUs7Z0JBQ2hCLElBQUksRUFBRSxTQUFTLElBQUksQ0FBQyxFQUFFLEVBQUU7YUFDekIsQ0FBQTtRQUNILENBQUMsQ0FBQyxDQUFBO1FBQ0YsSUFBSSxRQUFRLEdBQUcsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEdBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLENBQUMsSUFBSSxHQUFDLEVBQUUsQ0FBQTtRQUNsRSxJQUFJLElBQUksR0FBRyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFVBQVUsQ0FBQyxLQUFLLEdBQUMsRUFBRSxDQUFBO1FBRS9ELE1BQU0sQ0FBQyxDQUNMLHFCQUFDLEdBQUcsU0FDRixvQkFBQyxJQUFJLEdBQUMsU0FBUyxFQUFDLE1BQU0sRUFBRyxFQUN6QixxQkFBQyxHQUFHLElBQUMsU0FBUyxFQUFDLEtBQUssR0FDbEIscUJBQUMsR0FBRyxJQUFDLFNBQVMsRUFBQyxVQUFVLEdBQ3ZCLG9CQUFDLGVBQWUsR0FBQyxRQUFRLEVBQUUsV0FBWSxFQUFDLEtBQUssRUFBQyxNQUFNLEVBQUcsRUFDdkQsb0JBQUMsZUFBZSxHQUFDLFFBQVEsRUFBRSxJQUFLLEVBQUMsS0FBSyxFQUFFLFFBQVMsRUFBRyxDQUNoRCxFQUNOLHFCQUFDLEdBQUcsSUFBQyxTQUFTLEVBQUMsVUFBVSxHQUN2QixvQkFBQyxRQUFRLEdBQUMsS0FBSyxFQUFDLE1BQU0sRUFBQyxJQUFJLEVBQUUsU0FBVSxFQUFHLENBQ3RDLENBQ0YsQ0FDRixDQUNQLENBQUE7SUFDSCxDQUFDO0FBQ0gsQ0FBQztBQUVELHlCQUF5QixLQUFLLEVBQUUsUUFBUTtJQUN0QyxNQUFNLEVBQ0osVUFBVSxFQUFFLEVBQUUsYUFBYSxFQUFFLEVBQzdCLFFBQVEsRUFBRSxFQUFFLEtBQUssRUFBRSxXQUFXLEVBQUUsRUFDakMsR0FBRyxLQUFLLENBQUE7SUFFVCxNQUFNLE9BQU8sR0FBRyxDQUFDLGVBQWUsS0FBSyxDQUNuQyxlQUFlLEdBQUMsZUFBZSxDQUFDLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxJQUFJLEtBQUssQ0FBQyxFQUFFLENBQUMsQ0FBQyxHQUFDLEVBQUUsQ0FDNUQsQ0FBQTtJQUVELE1BQU0sQ0FBQztRQUNMLFNBQVMsRUFBRSxPQUFPLENBQUMsYUFBYSxDQUFDLE1BQU0sQ0FBQyxDQUFDO1FBQ3pDLFdBQVcsRUFBRSxPQUFPLENBQUMsYUFBYSxDQUFDLFFBQVEsQ0FBQyxDQUFDO1FBQzdDLFVBQVUsRUFBRSxDQUFDO1lBQ1gsR0FBRyxDQUFBLENBQUMsSUFBSSxJQUFJLElBQUksV0FBVyxDQUFDLENBQUMsQ0FBQztnQkFDNUIsTUFBTSxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsQ0FBQTtZQUMxQixDQUFDO1FBQ0gsQ0FBQyxDQUFDLEVBQUU7S0FDTCxDQUFBO0FBQ0gsQ0FBQztBQUVELGVBQWUsT0FBTyxDQUNwQixlQUFlLEVBQ2YsRUFBRSxVQUFVLEVBQUUsZ0JBQWdCLEVBQVMsQ0FDeEMsQ0FBQyxJQUFJLENBQUMsQ0FBQSIsImZpbGUiOiJjb250YWluZXJzL0hvbWUuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJ1xuaW1wb3J0IHsgZmV0Y2hCb29rcywgZmV0Y2hDb2xsZWN0aW9ucyB9IGZyb20gJ2FjdGlvbnMvaW5kZXgnXG5pbXBvcnQgQm9va0xpc3RTZWN0aW9uIGZyb20gJ2NvbXBvbmVudHMvQm9va0xpc3RTZWN0aW9uJ1xuaW1wb3J0IExvYWRpbmcgZnJvbSAnY29tcG9uZW50cy9Mb2FkaW5nJ1xuaW1wb3J0IENhbmR5Qm94IGZyb20gJ2NvbXBvbmVudHMvQ2FuZHlCb3gnXG5pbXBvcnQgQm9keSBmcm9tICdzaWRlLWVmZmVjdHMvQm9keSdcblxuY2xhc3MgSG9tZSBleHRlbmRzIENvbXBvbmVudDxhbnksIGFueT4ge1xuXG4gIHN0YXRpYyBmZXRjaERhdGEoe3N0b3JlfSkge1xuICAgIHJldHVybiBzdG9yZS5kaXNwYXRjaChmZXRjaEJvb2tzKCduZXdlc3QnKSlcbiAgfVxuXG4gIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgc3VwZXIocHJvcHMpXG4gIH1cblxuICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB0aGlzLnByb3BzLmZldGNoQm9va3MoJ25ld2VzdCcpXG4gICAgdGhpcy5wcm9wcy5mZXRjaEJvb2tzKCd1c2VyJylcbiAgICB0aGlzLnByb3BzLmZldGNoQ29sbGVjdGlvbnMoKVxuICB9XG5cbiAgcmVuZGVyKCkge1xuICAgIGxldCBuZXdlc3RCb29rcyA9IHRoaXMucHJvcHMubmV3ZXN0Qm9va3NcbiAgICBsZXQgaG90Qm9va3MgPSBuZXdlc3RCb29rcy5tYXAoKGJvb2ssIGluZGV4KSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBib29rLnRpdGxlLFxuICAgICAgICBsaW5rOiBgL2Jvb2svJHtib29rLmlkfWBcbiAgICAgIH1cbiAgICB9KVxuICAgIGxldCB1c2VyQm9va3MgPSB0aGlzLnByb3BzLnVzZXJCb29rcy5tYXAoKGJvb2ssIGluZGV4KSA9PiB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICBuYW1lOiBib29rLnRpdGxlLFxuICAgICAgICBsaW5rOiBgL2Jvb2svJHtib29rLmlkfWBcbiAgICAgIH1cbiAgICB9KVxuICAgIGxldCBsaXN0TmFtZSA9IHRoaXMucHJvcHMuY29sbGVjdGlvbj90aGlzLnByb3BzLmNvbGxlY3Rpb24ubmFtZTonJ1xuICAgIGxldCBsaXN0ID0gdGhpcy5wcm9wcy5jb2xsZWN0aW9uP3RoaXMucHJvcHMuY29sbGVjdGlvbi5pdGVtczpbXVxuXG4gICAgcmV0dXJuIChcbiAgICAgIDxkaXY+XG4gICAgICAgIDxCb2R5IGNsYXNzTmFtZT1cImhvbWVcIiAvPlxuICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInJvd1wiPlxuICAgICAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29sLW1kLThcIj5cbiAgICAgICAgICAgIDxCb29rTGlzdFNlY3Rpb24gYm9va0xpc3Q9e25ld2VzdEJvb2tzfSB0aXRsZT1cIuaWsOS5pumAn+mAklwiIC8+XG4gICAgICAgICAgICA8Qm9va0xpc3RTZWN0aW9uIGJvb2tMaXN0PXtsaXN0fSB0aXRsZT17bGlzdE5hbWV9IC8+XG4gICAgICAgICAgPC9kaXY+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb2wtbWQtNFwiPlxuICAgICAgICAgICAgPENhbmR5Qm94IHRpdGxlPVwi5pyA6L+R6ZiF6K+7XCIgbGlzdD17dXNlckJvb2tzfSAvPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIClcbiAgfVxufVxuXG5mdW5jdGlvbiBtYXBTdGF0ZVRvUHJvcHMoc3RhdGUsIG93blByb3BzKSB7XG4gIGNvbnN0IHtcbiAgICBwYWdpbmF0aW9uOiB7IGZpbHRlcmVkQm9va3MgfSxcbiAgICBlbnRpdGllczogeyBib29rcywgY29sbGVjdGlvbnMgfVxuICB9ID0gc3RhdGVcblxuICBjb25zdCBnZW5MaXN0ID0gKHdoaWNoUGFnaW5hdGlvbikgPT4gKFxuICAgIHdoaWNoUGFnaW5hdGlvbj93aGljaFBhZ2luYXRpb24uaWRzLm1hcChpZCA9PiBib29rc1tpZF0pOltdXG4gIClcblxuICByZXR1cm4ge1xuICAgIHVzZXJCb29rczogZ2VuTGlzdChmaWx0ZXJlZEJvb2tzWyd1c2VyJ10pLFxuICAgIG5ld2VzdEJvb2tzOiBnZW5MaXN0KGZpbHRlcmVkQm9va3NbJ25ld2VzdCddKSxcbiAgICBjb2xsZWN0aW9uOiAoKCkgPT4ge1xuICAgICAgZm9yKGxldCBwcm9wIGluIGNvbGxlY3Rpb25zKSB7XG4gICAgICAgIHJldHVybiBjb2xsZWN0aW9uc1twcm9wXVxuICAgICAgfVxuICAgIH0pKClcbiAgfVxufVxuXG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KFxuICBtYXBTdGF0ZVRvUHJvcHMsXG4gIHsgZmV0Y2hCb29rcywgZmV0Y2hDb2xsZWN0aW9ucyB9IGFzIGFueVxuKShIb21lKVxuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9
