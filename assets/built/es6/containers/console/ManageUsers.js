import React, { Component } from 'react';
import { connect } from 'react-redux';
import { fetchUserList } from 'actions/index';
class ManageUsers extends Component {
    constructor(props) {
        super(props);
    }
    componentDidMount() {
        this.props.fetchUserList();
    }
    render() {
        let userListAll = this.props.userListAll ? this.props.userListAll : [];
        return (React.createElement("div", null, React.createElement("table", null, React.createElement("tbody", null, React.createElement("tr", null, React.createElement("td", null, "ID"), React.createElement("td", null, "Name"), React.createElement("td", null, "Date created"), React.createElement("td", null, "Actions")), userListAll.map((user, index) => {
            return (React.createElement("tr", {key: index}, React.createElement("td", null, user.id), React.createElement("td", null, user.username), React.createElement("td", null, user.dateCreated), React.createElement("td", null, React.createElement("a", {href: "#"}, "Delete"))));
        })))));
    }
}
function mapStateToProps(state, ownProps) {
    const type = 'all';
    const { pagination: { userList }, entities: { users } } = state;
    const userListPagination = userList[type];
    const userListAll = userListPagination ? userListPagination.ids.map(id => users[id]) : [];
    return {
        userListAll
    };
}
export default connect(mapStateToProps, { fetchUserList })(ManageUsers);

//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbnRhaW5lcnMvY29uc29sZS9NYW5hZ2VVc2Vycy50c3giXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ik9BQU8sS0FBSyxFQUFFLEVBQUUsU0FBUyxFQUFFLE1BQU0sT0FBTztPQUNqQyxFQUFFLE9BQU8sRUFBRSxNQUFNLGFBQWE7T0FDOUIsRUFBRSxhQUFhLEVBQUUsTUFBTSxlQUFlO0FBRTdDLDBCQUEwQixTQUFTO0lBRWpDLFlBQVksS0FBSztRQUNmLE1BQU0sS0FBSyxDQUFDLENBQUE7SUFDZCxDQUFDO0lBRUQsaUJBQWlCO1FBQ2YsSUFBSSxDQUFDLEtBQUssQ0FBQyxhQUFhLEVBQUUsQ0FBQTtJQUM1QixDQUFDO0lBRUQsTUFBTTtRQUNKLElBQUksV0FBVyxHQUFHLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsV0FBVyxHQUFDLEVBQUUsQ0FBQTtRQUVsRSxNQUFNLENBQUMsQ0FDTCxxQkFBQyxHQUFHLFNBQ0YscUJBQUMsS0FBSyxTQUNKLHFCQUFDLEtBQUssU0FDSixxQkFBQyxFQUFFLFNBQ0QscUJBQUMsRUFBRSxjQUFRLEVBQ1gscUJBQUMsRUFBRSxnQkFBVSxFQUNiLHFCQUFDLEVBQUUsd0JBQWtCLEVBQ3JCLHFCQUFDLEVBQUUsbUJBQWEsQ0FDYixFQUNKLFdBQVcsQ0FBQyxHQUFHLENBQUMsQ0FBQyxJQUFJLEVBQUUsS0FBSztZQUMzQixNQUFNLENBQUMsQ0FDTCxxQkFBQyxFQUFFLElBQUMsR0FBRyxFQUFFLEtBQU0sR0FDYixxQkFBQyxFQUFFLFNBQUUsSUFBSSxDQUFDLEVBQUcsQ0FBSyxFQUNsQixxQkFBQyxFQUFFLFNBQUUsSUFBSSxDQUFDLFFBQVMsQ0FBSyxFQUN4QixxQkFBQyxFQUFFLFNBQUUsSUFBSSxDQUFDLFdBQVksQ0FBSyxFQUMzQixxQkFBQyxFQUFFLFNBQUMscUJBQUMsQ0FBQyxJQUFDLElBQUksRUFBQyxHQUFHLFlBQVcsQ0FBSyxDQUM1QixDQUNOLENBQUE7UUFDSCxDQUFDLENBQUUsQ0FDRyxDQUNGLENBQ0osQ0FDUCxDQUFBO0lBQ0gsQ0FBQztBQUNILENBQUM7QUFFRCx5QkFBeUIsS0FBSyxFQUFFLFFBQVE7SUFDdEMsTUFBTSxJQUFJLEdBQUcsS0FBSyxDQUFBO0lBRWxCLE1BQU0sRUFDSixVQUFVLEVBQUUsRUFBRSxRQUFRLEVBQUUsRUFDeEIsUUFBUSxFQUFFLEVBQUUsS0FBSyxFQUFFLEVBQ3BCLEdBQUcsS0FBSyxDQUFBO0lBRVQsTUFBTSxrQkFBa0IsR0FBRyxRQUFRLENBQUMsSUFBSSxDQUFDLENBQUE7SUFDekMsTUFBTSxXQUFXLEdBQUcsa0JBQWtCLEdBQUMsa0JBQWtCLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQyxFQUFFLElBQUksS0FBSyxDQUFDLEVBQUUsQ0FBQyxDQUFDLEdBQUMsRUFBRSxDQUFBO0lBRXJGLE1BQU0sQ0FBQztRQUNMLFdBQVc7S0FDWixDQUFBO0FBQ0gsQ0FBQztBQUVELGVBQWUsT0FBTyxDQUNwQixlQUFlLEVBQ2YsRUFBRSxhQUFhLEVBQVMsQ0FDekIsQ0FBQyxXQUFXLENBQUMsQ0FBQSIsImZpbGUiOiJjb250YWluZXJzL2NvbnNvbGUvTWFuYWdlVXNlcnMuanMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBjb25uZWN0IH0gZnJvbSAncmVhY3QtcmVkdXgnXG5pbXBvcnQgeyBmZXRjaFVzZXJMaXN0IH0gZnJvbSAnYWN0aW9ucy9pbmRleCdcblxuY2xhc3MgTWFuYWdlVXNlcnMgZXh0ZW5kcyBDb21wb25lbnQ8YW55LCBhbnk+IHtcblxuICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgIHN1cGVyKHByb3BzKVxuICB9XG5cbiAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgdGhpcy5wcm9wcy5mZXRjaFVzZXJMaXN0KClcbiAgfVxuXG4gIHJlbmRlcigpIHtcbiAgICBsZXQgdXNlckxpc3RBbGwgPSB0aGlzLnByb3BzLnVzZXJMaXN0QWxsP3RoaXMucHJvcHMudXNlckxpc3RBbGw6W11cblxuICAgIHJldHVybiAoXG4gICAgICA8ZGl2PlxuICAgICAgICA8dGFibGU+XG4gICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgPHRyPlxuICAgICAgICAgICAgICA8dGQ+SUQ8L3RkPlxuICAgICAgICAgICAgICA8dGQ+TmFtZTwvdGQ+XG4gICAgICAgICAgICAgIDx0ZD5EYXRlIGNyZWF0ZWQ8L3RkPlxuICAgICAgICAgICAgICA8dGQ+QWN0aW9uczwvdGQ+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAge3VzZXJMaXN0QWxsLm1hcCgodXNlciwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8dHIga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICA8dGQ+e3VzZXIuaWR9PC90ZD5cbiAgICAgICAgICAgICAgICAgIDx0ZD57dXNlci51c2VybmFtZX08L3RkPlxuICAgICAgICAgICAgICAgICAgPHRkPnt1c2VyLmRhdGVDcmVhdGVkfTwvdGQ+XG4gICAgICAgICAgICAgICAgICA8dGQ+PGEgaHJlZj1cIiNcIj5EZWxldGU8L2E+PC90ZD5cbiAgICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgICApXG4gICAgICAgICAgICB9KX1cbiAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgICAgPC9kaXY+XG4gICAgKVxuICB9XG59XG5cbmZ1bmN0aW9uIG1hcFN0YXRlVG9Qcm9wcyhzdGF0ZSwgb3duUHJvcHMpIHtcbiAgY29uc3QgdHlwZSA9ICdhbGwnXG5cbiAgY29uc3Qge1xuICAgIHBhZ2luYXRpb246IHsgdXNlckxpc3QgfSxcbiAgICBlbnRpdGllczogeyB1c2VycyB9XG4gIH0gPSBzdGF0ZVxuXG4gIGNvbnN0IHVzZXJMaXN0UGFnaW5hdGlvbiA9IHVzZXJMaXN0W3R5cGVdXG4gIGNvbnN0IHVzZXJMaXN0QWxsID0gdXNlckxpc3RQYWdpbmF0aW9uP3VzZXJMaXN0UGFnaW5hdGlvbi5pZHMubWFwKGlkID0+IHVzZXJzW2lkXSk6W11cblxuICByZXR1cm4ge1xuICAgIHVzZXJMaXN0QWxsXG4gIH1cbn1cblxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChcbiAgbWFwU3RhdGVUb1Byb3BzLFxuICB7IGZldGNoVXNlckxpc3QgfSBhcyBhbnlcbikoTWFuYWdlVXNlcnMpXG4iXSwic291cmNlUm9vdCI6Ii9zb3VyY2UvIn0=
