require('source-map-support').install()
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "1" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		0:1
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "1" is the signal for "already loaded"
/******/ 		if(!installedChunks[chunkId]) {
/******/ 			var chunk = require("./" + chunkId + "." + ({}[chunkId]||chunkId) + ".js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 1;
/******/ 		}
/******/ 		callback.call(null, __webpack_require__);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("babel-polyfill");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _initialize = __webpack_require__(3);
	
	var _initialize2 = _interopRequireDefault(_initialize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var baseDir = process.cwd();
	var app = (0, _initialize2.default)(baseDir);
	exports.default = app;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = initialize;
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	var _expressSession = __webpack_require__(5);
	
	var _expressSession2 = _interopRequireDefault(_expressSession);
	
	var _routes = __webpack_require__(6);
	
	var _routes2 = _interopRequireDefault(_routes);
	
	var _bootstrap = __webpack_require__(397);
	
	var _bootstrap2 = _interopRequireDefault(_bootstrap);
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _hotModuleReplacement = __webpack_require__(399);
	
	var _hotModuleReplacement2 = _interopRequireDefault(_hotModuleReplacement);
	
	var _options = __webpack_require__(83);
	
	var _options2 = _interopRequireDefault(_options);
	
	var _path = __webpack_require__(404);
	
	var _path2 = _interopRequireDefault(_path);
	
	var _middleware = __webpack_require__(8);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _morgan = __webpack_require__(414);
	
	var _morgan2 = _interopRequireDefault(_morgan);
	
	var _cookieParser = __webpack_require__(415);
	
	var _cookieParser2 = _interopRequireDefault(_cookieParser);
	
	var _bodyParser = __webpack_require__(416);
	
	var _bodyParser2 = _interopRequireDefault(_bodyParser);
	
	var _connectMongo = __webpack_require__(417);
	
	var _connectMongo2 = _interopRequireDefault(_connectMongo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MongoStore = (0, _connectMongo2.default)(_expressSession2.default);
	var app = (0, _express2.default)();
	var PUBLIC_PATH_NAME = 'public';
	var SESSION_SECRET = 'key';
	// TODO: what happens when max age exceeds
	var SESSION_MAX_AGE = 70 * 24 * 60 * 60 * 1000; // 70 days
	var REQ_SIZE_LIMIT = '5mb';
	var MONGO_STORE_URL = _app2.default.database.host + '/' + _app2.default.database.mongoStoreName;
	var REQ_BASE_PATH = '__basePath';
	function initialize(basePath) {
	    app.use((0, _expressSession2.default)({
	        secret: SESSION_SECRET,
	        cookie: {
	            maxAge: SESSION_MAX_AGE,
	            expires: new Date(Date.now() + SESSION_MAX_AGE)
	        },
	        resave: true,
	        saveUninitialized: true,
	        store: new MongoStore({ url: MONGO_STORE_URL })
	    }));
	    // 需要放在开始的位置
	    if (_options2.default.hot) {
	        app.use((0, _hotModuleReplacement2.default)());
	    }
	    app.use(_bodyParser2.default.urlencoded({ limit: REQ_SIZE_LIMIT, extended: false }));
	    app.use(_bodyParser2.default.json({ limit: REQ_SIZE_LIMIT }));
	    app.use((0, _cookieParser2.default)());
	    app.use(_express2.default.static(_path2.default.join(basePath, PUBLIC_PATH_NAME)));
	    // set basePath
	    app.use(function (req, res, next) {
	        req[REQ_BASE_PATH] = basePath;
	        next();
	    });
	    // log error info
	    app.use((0, _morgan2.default)('dev', {
	        skip: function skip(req, res) {
	            return res.statusCode < 400;
	        }
	    }));
	    // api routing
	    app.use('/' + _app2.default.api.prefix, _routes2.default.api());
	    // frontend routing
	    app.use(_middleware2.default.parseContext, _routes2.default.pages);
	    return (0, _bootstrap2.default)(app, _options2.default);
	}

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("express");

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("express-session");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _apiRoutes = __webpack_require__(7);
	
	var _apiRoutes2 = _interopRequireDefault(_apiRoutes);
	
	var _pages = __webpack_require__(82);
	
	var _pages2 = _interopRequireDefault(_pages);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    api: _apiRoutes2.default,
	    pages: _pages2.default
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = setupApiApp;
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	var _middleware = __webpack_require__(8);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _endpoints = __webpack_require__(69);
	
	var endpoints = _interopRequireWildcard(_endpoints);
	
	var _common = __webpack_require__(52);
	
	var _multer = __webpack_require__(81);
	
	var _multer2 = _interopRequireDefault(_multer);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FORM_DATA_FILE_KEY = 'file';
	// const UPLOADS_DIR = '__uploads__'
	// const upload = multer({ dest: UPLOADS_DIR })
	var upload = (0, _multer2.default)();
	var authenticatePublic = [_middleware2.default.prepareApi, _middleware2.default.parseContext];
	var authenticatePrivate = [_middleware2.default.prepareApi, _middleware2.default.parseContext, _middleware2.default.requirePermissionsOf(_common.ROLES.USER)];
	var authenticateAdmin = [_middleware2.default.prepareApi, _middleware2.default.parseContext, _middleware2.default.requirePermissionsOf(_common.ROLES.ADMIN)];
	function apiRoutes() {
	    var router = _express2.default.Router();
	    // authors
	    router.get('/authors/:id', authenticatePublic, endpoints.author.findOne); // basic
	    router.get('/authors', authenticatePublic, endpoints.author.list); // basic
	    router.post('/authors', authenticatePublic, endpoints.author.add); // basic
	    router.put('/authors/:id', authenticatePublic, endpoints.author.update); // basic
	    router.delete('/authors/:id', authenticatePublic, endpoints.author.remove); // basic
	    // collections
	    router.get('/collections/:id', authenticatePublic, endpoints.collection.findOne); // basic
	    router.get('/collections', authenticatePublic, endpoints.listCollections);
	    router.post('/collections', authenticatePublic, endpoints.collection.add); // basic
	    router.put('/collections/:id', authenticatePublic, endpoints.collection.update); // basic
	    router.delete('/collections/:id', authenticatePublic, endpoints.collection.remove); // basic
	    // books
	    router.get('/books/:book', authenticatePublic, endpoints.findBook);
	    router.get('/books/:book/content', authenticatePublic, endpoints.resolveBookContent);
	    router.get('/books', authenticatePublic, endpoints.listBooks);
	    // router.post('/books', authenticateAdmin, endpoints.book.add) // basic
	    router.post('/books', authenticateAdmin, upload.single(FORM_DATA_FILE_KEY), _middleware2.default.logFile, endpoints.addBook); // 处理文件
	    router.put('/books/:id', authenticateAdmin, endpoints.book.update); // basic
	    router.delete('/books/:book', authenticateAdmin, endpoints.removeBook);
	    // tags
	    router.get('/tags/:id', authenticatePublic, endpoints.tag.findOne); // basic
	    router.get('/tags', authenticatePublic, endpoints.tag.list); // basic
	    router.post('/tags', authenticatePublic, endpoints.tag.add); // basic
	    router.put('/tags/:id', authenticatePublic, endpoints.tag.update); // basic
	    router.delete('/tags/:id', authenticatePublic, endpoints.tag.remove); // basic
	    // users
	    router.get('/users', authenticateAdmin, endpoints.user.list); // basic
	    router.post('/users', authenticatePublic, endpoints.addUser);
	    // user
	    router.get('/user/profile', authenticatePrivate, endpoints.findUser);
	    router.get('/user/books/shelf', authenticatePrivate, endpoints.listShelfBooks);
	    // progress
	    router.get('/user/books/:book/progress', authenticatePrivate, endpoints.getReadingProgress);
	    router.put('/user/books/:book/progress', authenticatePrivate, endpoints.setReadingProgress);
	    // file
	    router.get('/files/:file', authenticateAdmin, endpoints.readFile);
	    router.delete('/files/:file', authenticateAdmin, endpoints.delFile);
	    // auth
	    router.post('/auth', authenticatePublic, _middleware2.default.auth.basicAuth);
	    router.get('/auth', authenticatePublic, _middleware2.default.auth.check);
	    router.put('/auth/revoke', authenticatePublic, _middleware2.default.auth.revoke);
	    return router;
	}
	function setupApiApp() {
	    var apiApp = (0, _express2.default)();
	    apiApp.use(apiRoutes());
	    apiApp.use(_middleware2.default.handleApiNotFound);
	    apiApp.use(_middleware2.default.handleJSONResponse);
	    apiApp.use(_middleware2.default.handleError);
	    return apiApp;
	}

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _parseContext = __webpack_require__(9);
	
	var _parseContext2 = _interopRequireDefault(_parseContext);
	
	var _auth = __webpack_require__(11);
	
	var _auth2 = _interopRequireDefault(_auth);
	
	var _requirePermissionsOf = __webpack_require__(51);
	
	var _requirePermissionsOf2 = _interopRequireDefault(_requirePermissionsOf);
	
	var _handleError = __webpack_require__(53);
	
	var _handleError2 = _interopRequireDefault(_handleError);
	
	var _handleJsonResponse = __webpack_require__(56);
	
	var _handleJsonResponse2 = _interopRequireDefault(_handleJsonResponse);
	
	var _logFile = __webpack_require__(66);
	
	var _logFile2 = _interopRequireDefault(_logFile);
	
	var _prepareApi = __webpack_require__(67);
	
	var _prepareApi2 = _interopRequireDefault(_prepareApi);
	
	var _handleApiNotFound = __webpack_require__(68);
	
	var _handleApiNotFound2 = _interopRequireDefault(_handleApiNotFound);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    parseContext: _parseContext2.default, auth: _auth2.default, requirePermissionsOf: _requirePermissionsOf2.default,
	    handleError: _handleError2.default, handleJSONResponse: _handleJsonResponse2.default, logFile: _logFile2.default, prepareApi: _prepareApi2.default,
	    handleApiNotFound: _handleApiNotFound2.default
	};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = parseContext;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function parseContext(req, res, next) {
	    if (req.session.user) {
	        req.context = {
	            user: _lodash2.default.omit(req.session.user, ['password', 'dateCreated', 'email'])
	        };
	    } else {
	        req.context = {
	            user: {
	                role: 'visitor'
	            }
	        };
	    }
	    next();
	}

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = require("lodash");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.basicAuth = basicAuth;
	exports.check = check;
	exports.revoke = revoke;
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function basicAuth(req, res, next) {
	    var user = new _model2.default(schemas.user);
	    var login = req.body.login ? req.body.login.toLowerCase() : undefined;
	    var password = req.body.password;
	    if (typeof login === 'undefined') {
	        next(new _errors2.default.ValidationError((0, _i18n2.default)('errors.validation.preCheck.missRequiredFields', 'login')));
	    }
	    if (typeof password === 'undefined') {
	        next(new _errors2.default.ValidationError((0, _i18n2.default)('errors.validation.preCheck.missRequiredFields', 'password')));
	    }
	    var query = { $or: [{ username: login, password: password }, { email: login, password: password }] };
	    user.findOne(query).then(function (result) {
	        req.session.user = _humps2.default.camelizeKeys(result);
	        req.apiResults = Promise.resolve({ ok: 1 });
	        next();
	    }, function (error) {
	        next(new _errors2.default.UnauthorizedError((0, _i18n2.default)('errors.middleware.auth.wrongCombination')));
	    });
	}
	function check(req, res) {
	    res.send(_humps2.default.decamelizeKeys(req.context.user));
	}
	function revoke(req, res) {
	    req.session.destroy();
	    res.status(204).send(null);
	}
	exports.default = { basicAuth: basicAuth, check: check, revoke: revoke };

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _notFoundError = __webpack_require__(13);
	
	var _notFoundError2 = _interopRequireDefault(_notFoundError);
	
	var _validationError = __webpack_require__(15);
	
	var _validationError2 = _interopRequireDefault(_validationError);
	
	var _badRequestError = __webpack_require__(16);
	
	var _badRequestError2 = _interopRequireDefault(_badRequestError);
	
	var _internalServerError = __webpack_require__(17);
	
	var _internalServerError2 = _interopRequireDefault(_internalServerError);
	
	var _noPermissionError = __webpack_require__(18);
	
	var _noPermissionError2 = _interopRequireDefault(_noPermissionError);
	
	var _unauthorizedError = __webpack_require__(19);
	
	var _unauthorizedError2 = _interopRequireDefault(_unauthorizedError);
	
	var _requestTooLargeError = __webpack_require__(20);
	
	var _requestTooLargeError2 = _interopRequireDefault(_requestTooLargeError);
	
	var _unsupportedFileTypeError = __webpack_require__(21);
	
	var _unsupportedFileTypeError2 = _interopRequireDefault(_unsupportedFileTypeError);
	
	var _emailError = __webpack_require__(22);
	
	var _emailError2 = _interopRequireDefault(_emailError);
	
	var _methodNotAllowedError = __webpack_require__(23);
	
	var _methodNotAllowedError2 = _interopRequireDefault(_methodNotAllowedError);
	
	var _tooManyRequestsError = __webpack_require__(24);
	
	var _tooManyRequestsError2 = _interopRequireDefault(_tooManyRequestsError);
	
	var _tokenRevocationError = __webpack_require__(25);
	
	var _tokenRevocationError2 = _interopRequireDefault(_tokenRevocationError);
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    NotFoundError: _notFoundError2.default,
	    ValidationError: _validationError2.default,
	    BadRequestError: _badRequestError2.default,
	    InternalServerError: _internalServerError2.default,
	    NoPermissionError: _noPermissionError2.default,
	    UnauthorizedError: _unauthorizedError2.default,
	    RequestEntityTooLargeError: _requestTooLargeError2.default,
	    UnsupportedMediaTypeError: _unsupportedFileTypeError2.default,
	    EmailError: _emailError2.default,
	    MethodNotAllowedError: _methodNotAllowedError2.default,
	    TooManyRequestsError: _tooManyRequestsError2.default,
	    TokenRevocationError: _tokenRevocationError2.default,
	    GenericError: _genericError2.default
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NotFoundError = function (_GenericError) {
	    _inherits(NotFoundError, _GenericError);
	
	    function NotFoundError(message) {
	        _classCallCheck(this, NotFoundError);
	
	        var _this = _possibleConstructorReturn(this, (NotFoundError.__proto__ || Object.getPrototypeOf(NotFoundError)).call(this, message, 'NotFoundError'));
	
	        _this.statusCode = 404;
	        return _this;
	    }
	
	    return NotFoundError;
	}(_genericError2.default);
	
	exports.default = NotFoundError;

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var GenericError = function GenericError(message, name) {
	    _classCallCheck(this, GenericError);
	
	    this.name = name || 'GenericError';
	    this.statusCode = 500;
	    this.message = message;
	    this.stack = new Error().stack;
	    this.type = this.name;
	};
	
	exports.default = GenericError;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ValidationError = function (_GenericError) {
	    _inherits(ValidationError, _GenericError);
	
	    function ValidationError(message, offendingProperty) {
	        _classCallCheck(this, ValidationError);
	
	        var _this = _possibleConstructorReturn(this, (ValidationError.__proto__ || Object.getPrototypeOf(ValidationError)).call(this, message, 'ValidationError'));
	
	        _this.statusCode = 422;
	        if (offendingProperty) {
	            _this.property = offendingProperty;
	        }
	        return _this;
	    }
	
	    return ValidationError;
	}(_genericError2.default);
	
	exports.default = ValidationError;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BadRequestError = function (_GenericError) {
	    _inherits(BadRequestError, _GenericError);
	
	    function BadRequestError(message, code) {
	        _classCallCheck(this, BadRequestError);
	
	        var _this = _possibleConstructorReturn(this, (BadRequestError.__proto__ || Object.getPrototypeOf(BadRequestError)).call(this, message, 'BadRequestError'));
	
	        _this.statusCode = 400;
	        if (code) {
	            _this.code = code;
	        }
	        return _this;
	    }
	
	    return BadRequestError;
	}(_genericError2.default);
	
	exports.default = BadRequestError;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var InternalServerError = function (_GenericError) {
	    _inherits(InternalServerError, _GenericError);
	
	    function InternalServerError(message) {
	        _classCallCheck(this, InternalServerError);
	
	        var _this = _possibleConstructorReturn(this, (InternalServerError.__proto__ || Object.getPrototypeOf(InternalServerError)).call(this, message, 'InternalServerError'));
	
	        _this.statusCode = 500;
	        return _this;
	    }
	
	    return InternalServerError;
	}(_genericError2.default);
	
	exports.default = InternalServerError;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NoPermissionError = function (_GenericError) {
	    _inherits(NoPermissionError, _GenericError);
	
	    function NoPermissionError(message) {
	        _classCallCheck(this, NoPermissionError);
	
	        var _this = _possibleConstructorReturn(this, (NoPermissionError.__proto__ || Object.getPrototypeOf(NoPermissionError)).call(this, message, 'NoPermissionError'));
	
	        _this.statusCode = 403;
	        return _this;
	    }
	
	    return NoPermissionError;
	}(_genericError2.default);
	
	exports.default = NoPermissionError;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UnauthorizedError = function (_GenericError) {
	    _inherits(UnauthorizedError, _GenericError);
	
	    function UnauthorizedError(message) {
	        _classCallCheck(this, UnauthorizedError);
	
	        var _this = _possibleConstructorReturn(this, (UnauthorizedError.__proto__ || Object.getPrototypeOf(UnauthorizedError)).call(this, message, 'UnauthorizedError'));
	
	        _this.statusCode = 401;
	        return _this;
	    }
	
	    return UnauthorizedError;
	}(_genericError2.default);
	
	exports.default = UnauthorizedError;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RequestEntityTooLargeError = function (_GenericError) {
	    _inherits(RequestEntityTooLargeError, _GenericError);
	
	    function RequestEntityTooLargeError(message) {
	        _classCallCheck(this, RequestEntityTooLargeError);
	
	        var _this = _possibleConstructorReturn(this, (RequestEntityTooLargeError.__proto__ || Object.getPrototypeOf(RequestEntityTooLargeError)).call(this, message, 'RequestEntityTooLargeError'));
	
	        _this.statusCode = 413;
	        return _this;
	    }
	
	    return RequestEntityTooLargeError;
	}(_genericError2.default);
	
	exports.default = RequestEntityTooLargeError;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UnsupportedFileTypeError = function (_GenericError) {
	    _inherits(UnsupportedFileTypeError, _GenericError);
	
	    function UnsupportedFileTypeError(message) {
	        _classCallCheck(this, UnsupportedFileTypeError);
	
	        var _this = _possibleConstructorReturn(this, (UnsupportedFileTypeError.__proto__ || Object.getPrototypeOf(UnsupportedFileTypeError)).call(this, message, 'UnsupportedFileTypeError'));
	
	        _this.statusCode = 415;
	        return _this;
	    }
	
	    return UnsupportedFileTypeError;
	}(_genericError2.default);
	
	exports.default = UnsupportedFileTypeError;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var EmailError = function (_GenericError) {
	    _inherits(EmailError, _GenericError);
	
	    function EmailError(message) {
	        _classCallCheck(this, EmailError);
	
	        var _this = _possibleConstructorReturn(this, (EmailError.__proto__ || Object.getPrototypeOf(EmailError)).call(this, message, 'EmailError'));
	
	        _this.statusCode = 500;
	        return _this;
	    }
	
	    return EmailError;
	}(_genericError2.default);
	
	exports.default = EmailError;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MethodNotAllowedError = function (_GenericError) {
	    _inherits(MethodNotAllowedError, _GenericError);
	
	    function MethodNotAllowedError(message) {
	        _classCallCheck(this, MethodNotAllowedError);
	
	        var _this = _possibleConstructorReturn(this, (MethodNotAllowedError.__proto__ || Object.getPrototypeOf(MethodNotAllowedError)).call(this, message, 'MethodNotAllowedError'));
	
	        _this.statusCode = 405;
	        return _this;
	    }
	
	    return MethodNotAllowedError;
	}(_genericError2.default);
	
	exports.default = MethodNotAllowedError;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TooManyRequestsError = function (_GenericError) {
	    _inherits(TooManyRequestsError, _GenericError);
	
	    function TooManyRequestsError(message) {
	        _classCallCheck(this, TooManyRequestsError);
	
	        var _this = _possibleConstructorReturn(this, (TooManyRequestsError.__proto__ || Object.getPrototypeOf(TooManyRequestsError)).call(this, message, 'TooManyRequestsError'));
	
	        _this.statusCode = 429;
	        return _this;
	    }
	
	    return TooManyRequestsError;
	}(_genericError2.default);
	
	exports.default = TooManyRequestsError;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TokenRevocationError = function (_GenericError) {
	    _inherits(TokenRevocationError, _GenericError);
	
	    function TokenRevocationError(message) {
	        _classCallCheck(this, TokenRevocationError);
	
	        var _this = _possibleConstructorReturn(this, (TokenRevocationError.__proto__ || Object.getPrototypeOf(TokenRevocationError)).call(this, message, 'TokenRevocationError'));
	
	        _this.statusCode = 503;
	        return _this;
	    }
	
	    return TokenRevocationError;
	}(_genericError2.default);
	
	exports.default = TokenRevocationError;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = i18n;
	
	var _cn = __webpack_require__(27);
	
	var _cn2 = _interopRequireDefault(_cn);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * referenced ghost i18n.js, it's a simplified version
	 * and I used js to store local translations instead of json
	 */
	function addPadding(str) {
	    if (!str) {
	        return '';
	    }
	    if (escape(str.substr(-1)).indexOf('%u') !== 0) {
	        return ' ' + str + ' ';
	    }
	    return str;
	}
	function getMatchingString(msgPath) {
	    var matchingString = _cn2.default;
	    var path = msgPath.split('.');
	    for (var i = 0; i < path.length; i++) {
	        if (matchingString[path[i]]) {
	            matchingString = matchingString[path[i]];
	        } else {
	            matchingString = null;
	            break;
	        }
	    }
	    return matchingString;
	}
	function addPunc(str, lang) {
	    // todo: lang
	    return str + '\uFF01';
	}
	function i18n(msgPath, value) {
	    var matchingString = getMatchingString(msgPath);
	    if (_lodash2.default.isNull(matchingString)) {
	        console.error('Unable to find matching path [' + msgPath + '] in locale file.\n');
	        matchingString = 'i18n error: path "' + msgPath + '" was not found.';
	    } else {
	        var placeholderIndex = matchingString.indexOf('{value}');
	        if (placeholderIndex !== -1) {
	            var before = matchingString.substring(0, placeholderIndex);
	            var after = matchingString.substr(placeholderIndex + 7);
	            var matchingValue = '';
	            if (typeof value !== 'undefined') {
	                matchingValue = getMatchingString('common.terms.' + value);
	                if (_lodash2.default.isNull(matchingValue)) {
	                    matchingValue = value;
	                }
	                matchingValue = addPadding(matchingValue);
	            }
	            matchingString = addPunc(before + matchingValue + after);
	        } else {
	            matchingString = addPunc(matchingString);
	        }
	    }
	    return matchingString.trim();
	}

/***/ },
/* 27 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    common: {
	        terms: {
	            id: 'ID',
	            username: '用户名',
	            password: '密码',
	            percentage: '进度百分比',
	            email: '邮箱',
	            login: '登录项',
	            description: '描述',
	            name: '名称',
	            creator: '创建者',
	            title: '标题',
	            progress: '进度',
	            user: '用户',
	            admin: '管理员',
	            file: '文件',
	            files: '文件',
	            book: '书籍',
	            books: '书籍'
	        }
	    },
	    errors: {
	        validation: {
	            valueLimit: {
	                notString: '{value}不是字符串',
	                stringOnly: '输入项类型只能为字符串',
	                alphanumeric: '{value}只能为字母或数字',
	                undefined: '{value}未定义',
	                invalidFormat: '{value}格式不对',
	                noPureNumber: '{value}不能为纯数字',
	                onlyStartWithLetters: '{value}只能以字母开头',
	                length: '长度不匹配',
	                minLength: '{value}长度不足',
	                maxLength: '{value}超出最大长度',
	                username: {
	                    allowedChars: '用户名只能包含字母，数字及以下字符 "-","_"'
	                }
	            },
	            preCheck: {
	                emptyObject: '提交数据不能为空',
	                missRequiredFields: '{value}为必填项',
	                unsupportedInput: '发现未知的输入项{value}',
	                inputEmpty: '{value}输入不能为空'
	            }
	        },
	        api: {
	            general: {
	                notFound: '{value}未找到',
	                notFoundIn: '在{value}中未找到',
	                exists: '{value}已存在'
	            },
	            auth: {
	                needPermissionsOf: '需要 {value} 权限',
	                loginRequired: '需要登录'
	            }
	        },
	        schema: {
	            unique: '{value}已存在'
	        },
	        middleware: {
	            auth: {
	                accessDenied: '访问被禁止',
	                wrongPassword: '密码错误',
	                wrongCombination: '用户名或密码错误'
	            },
	            oauth: {
	                tokenExpired: 'token 过期'
	            },
	            spamprevention: {
	                tooManyAttempts: '您的访问过于频繁',
	                noUsername: '无用户名',
	                noPassword: '无密码'
	            }
	        },
	        mail: {
	            failedSendingEmail: '邮件发送失败'
	        },
	        general: {
	            anErrorOccurred: '发生错误',
	            unknownErrorOccurred: '发生未知错误',
	            notFound: '{value}未找到'
	        }
	    }
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _database = __webpack_require__(29);
	
	var _database2 = _interopRequireDefault(_database);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _validate = __webpack_require__(42);
	
	var _validate2 = _interopRequireDefault(_validate);
	
	var _outputEmptyEntity = __webpack_require__(33);
	
	var _outputEmptyEntity2 = _interopRequireDefault(_outputEmptyEntity);
	
	var _paginate = __webpack_require__(43);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _helpers = __webpack_require__(44);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Model = function () {
	    _createClass(Model, null, [{
	        key: 'parseQuery',
	        value: function parseQuery(idOrQuery) {
	            if (typeof idOrQuery === 'undefined') {
	                throw new Error('Param idOrQuery is undefined!');
	            }
	            return typeof idOrQuery === 'string' ? { _id: idOrQuery } : idOrQuery;
	        }
	    }]);
	
	    function Model(schema) {
	        _classCallCheck(this, Model);
	
	        this._schema = schema;
	        this._tableName = schema.name;
	    }
	
	    _createClass(Model, [{
	        key: 'outputEmpty',
	        value: function outputEmpty(id) {
	            return (0, _outputEmptyEntity2.default)(this._schema.fields, id);
	        }
	    }, {
	        key: 'findOne',
	        value: function findOne(idOrQuery, raw) {
	            var _this = this;
	
	            var query = Model.parseQuery(idOrQuery);
	            return this.list({ raw: raw, disablePagination: true, query: query }).then(function (result) {
	                var entity = result[0];
	                if (!entity) {
	                    return Promise.reject((0, _helpers.notFoundIn)(_this._schema._baseTable));
	                }
	                return entity;
	            });
	        }
	    }, {
	        key: 'list',
	        value: function list() {
	            var _this2 = this;
	
	            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	            var raw = options.raw;
	            var page = options.page;
	            var disablePagination = options.disablePagination;
	            var filter = options.filter;
	            var mapping = options.mapping;
	            var query = options.query;
	
	            var doQuery = function doQuery() {
	                var listRaw = function listRaw(listRawQuery) {
	                    return _database2.default.getCollection(_this2._tableName).then(function (collection) {
	                        return collection.find(listRawQuery).toArray();
	                    });
	                };
	                var rawResults = listRaw(query || {});
	                if (raw) {
	                    return rawResults;
	                } else {
	                    return rawResults.then(function (results) {
	                        return (0, _database.embedRef)(results, _this2._schema);
	                    });
	                }
	            };
	            return doQuery().then(function (entities) {
	                var modifiedEntities = entities.filter(filter || function () {
	                    return true;
	                }).map(mapping || function (entity) {
	                    return entity;
	                });
	                if (!disablePagination) {
	                    return (0, _paginate2.default)(modifiedEntities, {
	                        page: page || 1
	                    });
	                }
	                return modifiedEntities;
	            });
	        }
	    }, {
	        key: 'listRaw',
	        value: function listRaw() {
	            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	            var filter = options.filter;
	            var mapping = options.mapping;
	            var query = options.query;
	
	            return this.list({
	                disablePagination: true,
	                raw: true,
	                filter: filter,
	                mapping: mapping,
	                query: query || {}
	            });
	        }
	    }, {
	        key: 'add',
	        value: function add(data) {
	            var _this3 = this;
	
	            var query = function query() {
	                var dataWithID = Object.assign({}, data, {
	                    _id: Math.random().toFixed(8).substr(2),
	                    date_created: new Date().toString()
	                });
	                // 检查是否需要确认唯一性
	                var dataToCheck = _this3._schema.fields.filter(function (field) {
	                    return Boolean(field.unique);
	                }).map(function (field) {
	                    return {
	                        key: field.name,
	                        value: data[field.name]
	                    };
	                }).filter(function (fileld) {
	                    return Boolean(fileld.value);
	                });
	                // 过滤出和数据库中已存在数据相匹配的输入项
	                if (dataToCheck.length !== 0) {
	                    var checkingResult = Promise.all(dataToCheck.map(function (dataItem) {
	                        return _database2.default.getRowByMatch(_defineProperty({}, dataItem.key, dataItem.value), _this3._tableName).then(function (res) {
	                            if (res.length !== 0) {
	                                return dataItem;
	                            }
	                            return false;
	                        });
	                    })).then(function (res) {
	                        return res.filter(function (r) {
	                            return r !== false;
	                        });
	                    });
	                    return checkingResult.then(function (res) {
	                        if (res.length !== 0) {
	                            return Promise.reject(new _errors2.default.BadRequestError((0, _i18n2.default)('errors.schema.unique', res[0].key)));
	                        }
	                        return _database2.default.getCollection(_this3._tableName).then(function (collection) {
	                            return collection.insert([dataWithID]);
	                        });
	                    });
	                }
	                return _database2.default.getCollection(_this3._tableName).then(function (collection) {
	                    return collection.insert([dataWithID]);
	                });
	            };
	            return _utils2.default.reduceTasks([(0, _validate2.default)(data, this._schema), query]);
	        }
	    }, {
	        key: 'update',
	        value: function update(idOrQuery, data) {
	            var _this4 = this;
	
	            var updateConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	            var multi = updateConfig.multi;
	            var upsert = updateConfig.upsert;
	
	            var query = Model.parseQuery(idOrQuery);
	            var doQuery = function doQuery() {
	                var data2 = Object.assign({}, data, {
	                    date_updated: new Date().toString()
	                });
	                var doIt = function doIt() {
	                    return _database2.default.getCollection(_this4._tableName).then(function (collection) {
	                        return collection.update(query, { $set: data2 }, {
	                            upsert: Boolean(upsert),
	                            multi: Boolean(multi)
	                        });
	                    });
	                };
	                if (!upsert) {
	                    return _this4.findOne(idOrQuery, true).then(function (result) {
	                        return doIt();
	                    });
	                }
	                return doIt();
	            };
	            return _utils2.default.reduceTasks([(0, _validate2.default)(data, this._schema, true), doQuery]);
	        }
	    }, {
	        key: 'remove',
	        value: function remove(idOrQuery) {
	            var query = Model.parseQuery(idOrQuery);
	            return _database2.default.getCollection(this._tableName).then(function (collection) {
	                return collection.remove(query);
	            });
	        }
	    }]);
	
	    return Model;
	}();
	
	exports.default = Model;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.getCollection = getCollection;
	exports.getRowByMatch = getRowByMatch;
	exports.getRowById = getRowById;
	exports.embedRef = embedRef;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _outputEmptyEntity = __webpack_require__(33);
	
	var _outputEmptyEntity2 = _interopRequireDefault(_outputEmptyEntity);
	
	var _mongodb = __webpack_require__(34);
	
	var _mongodb2 = _interopRequireDefault(_mongodb);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var MongoClient = _mongodb2.default.MongoClient;
	function getCollection(table) {
	    var dbConnect = MongoClient.connect(_app2.default.database.host + '/' + _app2.default.database.name);
	    return dbConnect.then(function (db) {
	        return Promise.resolve(db.collection(table));
	    });
	}
	function getRowByMatch(match, table) {
	    return getCollection(table).then(function (collection) {
	        return collection.find(match).toArray();
	    });
	}
	function getRowById(id, table) {
	    return getRowByMatch({ _id: id }, table);
	}
	var getRefFieldsWithIds = function getRefFieldsWithIds(rawResult, schema) {
	    return schema.fields.filter(function (field) {
	        return typeof field.ref !== 'undefined';
	    }).map(function (field) {
	        var ids = rawResult[field.name];
	        // 将 ids 通通转换为数组
	        // 这里包括本该传数组却得到字符串被转换的情况
	        if (!Array.isArray(ids)) {
	            ids = [ids];
	        }
	        return Object.assign({}, field, { ids: ids });
	    });
	};
	// 并且添加相应错误信息
	var handleRefResult = function handleRefResult(rawRefResult, refSchema, id) {
	    if ((typeof rawRefResult === 'undefined' ? 'undefined' : _typeof(rawRefResult)) === 'object') {
	        return rawRefResult;
	    }
	    return (0, _outputEmptyEntity2.default)(refSchema.fields, id);
	};
	var doesRefHaveRefInside = function doesRefHaveRefInside(ref) {
	    return _lodash2.default.filter(ref.fields, function (field) {
	        return Boolean(field.ref);
	    }).length !== 0;
	};
	function embedRef(rawResults, schema) {
	    if (rawResults.length === 0) {
	        return Promise.resolve([]);
	    }
	    // 获取 ref 数据，生成由 ref 字段组成的对象
	    var getRefFieldsWithData = function getRefFieldsWithData(fieldsWithRefIds) {
	        var fieldsWithData = fieldsWithRefIds.map(function (field) {
	            // 一个 field 里面的 ids 返回的查询结果
	            return Promise.all(field.ids.map(function (id) {
	                return getRowById(id, field.ref.name).then(function (results) {
	                    var isRefInRef = doesRefHaveRefInside(field.ref);
	                    var refSchema = field.ref;
	                    if (isRefInRef) {
	                        // 递归！！
	                        return embedRef(results, refSchema).then(function (reRefedResult) {
	                            return handleRefResult(reRefedResult[0], refSchema, id);
	                        });
	                    }
	                    return handleRefResult(results[0], refSchema, id);
	                });
	            })).then(function (refResults) {
	                // 处理单个 ref field 数据，都是数组形式，最终是否为数组取决于 ref field 的 type
	                var fieldData = refResults;
	                if (!field.type || !field.type.isArray()) {
	                    fieldData = refResults[0];
	                }
	                return {
	                    name: field.name,
	                    data: fieldData
	                };
	            });
	        });
	        return Promise.all(fieldsWithData).then(function (fields) {
	            return fields.reduce(function (fieldsObj, field) {
	                return Object.assign({}, fieldsObj, _defineProperty({}, field.name, field.data));
	            }, {});
	        });
	    };
	    return Promise.all(rawResults.map(function (rawResult) {
	        var fieldsWithIds = getRefFieldsWithIds(rawResult, schema);
	        return getRefFieldsWithData(fieldsWithIds).then(function (refObj) {
	            return _lodash2.default.assign({}, rawResult, refObj);
	        });
	    }));
	}
	exports.default = {
	    embedRef: embedRef,
	    getCollection: getCollection,
	    getRowByMatch: getRowByMatch,
	    getRowById: getRowById
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _appConfig = __webpack_require__(31);
	
	var _appConfig2 = _interopRequireDefault(_appConfig);
	
	var _appConfig3 = __webpack_require__(32);
	
	var _appConfig4 = _interopRequireDefault(_appConfig3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var appConfig = _appConfig2.default;
	if (process.env.NODE_ENV === 'production') {
	    appConfig = _appConfig4.default;
	}
	exports.default = appConfig;

/***/ },
/* 31 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var appConfig = {
	    api: {
	        prefix: 'api'
	    },
	    database: {
	        host: 'mongodb://localhost:27017',
	        name: 'readr',
	        mongoStoreName: 'readr_session'
	    },
	    siteUrl: 'http://readrweb.com',
	    port: 3000,
	    enableEntityCache: false
	};
	exports.default = appConfig;

/***/ },
/* 32 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var appConfig = {
	    api: {
	        prefix: 'api'
	    },
	    database: {
	        host: 'mongodb://localhost:27017',
	        name: 'readr',
	        mongoStoreName: 'readr_session'
	    },
	    siteUrl: 'http://readrweb.com',
	    port: 3000,
	    enableEntityCache: true
	};
	exports.default = appConfig;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = outputEmptyEntity;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function outputEmptyEntity(fields) {
	    var idObjOrIdString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    // id 可以为对象，此时会直接被扩展到输出结果里面
	    var idObj = idObjOrIdString;
	    if (typeof idObjOrIdString === 'string') {
	        idObj = { _id: idObjOrIdString };
	    }
	    var entity = {};
	    fields.forEach(function (field) {
	        // todo
	        // 添加类型判断
	        entity[field.name] = '';
	    });
	    return _lodash2.default.assign({}, entity, idObj);
	}

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = require("mongodb");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _validator = __webpack_require__(36);
	
	var _validator2 = _interopRequireDefault(_validator);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _pipeline = __webpack_require__(38);
	
	var _pipeline2 = _interopRequireDefault(_pipeline);
	
	var _reduceTasks = __webpack_require__(40);
	
	var _reduceTasks2 = _interopRequireDefault(_reduceTasks);
	
	var _sortByDate = __webpack_require__(41);
	
	var _sortByDate2 = _interopRequireDefault(_sortByDate);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = { validator: _validator2.default, i18n: _i18n2.default, pipeline: _pipeline2.default, reduceTasks: _reduceTasks2.default, sortByDate: _sortByDate2.default };

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var validator = __webpack_require__(37);
	var additionalValidators = {
	    lengthMin: function lengthMin(len) {
	        return function (input) {
	            return input.length >= len;
	        };
	    },
	    lengthMax: function lengthMax(len) {
	        return function (input) {
	            return input.length <= len;
	        };
	    }
	};
	exports.default = Object.assign({}, validator, additionalValidators);

/***/ },
/* 37 */
/***/ function(module, exports) {

	module.exports = require("validator");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _bluebird = __webpack_require__(39);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function pipeline(tasks /* initial arguments */) {
	    var args = Array.prototype.slice.call(arguments, 1);
	    var _runTask = function runTask(task, args) {
	        // Self-optimizing function to run first task with multiple
	        // args using apply, but subsequent tasks via direct invocation
	        _runTask = function runTask(task, arg) {
	            return task(arg);
	        };
	        return task.apply(null, args);
	    };
	    // Resolve any promises for the arguments passed in first
	    return _bluebird2.default.all(args).then(function (args) {
	        // Iterate through the tasks passing args from one into the next
	        return _bluebird2.default.reduce(tasks, function (arg, task) {
	            return _runTask(task, arg);
	        }, args);
	    });
	} /**
	   * # Pipeline Utility (borrowed from Ghost)
	   *
	   * Based on pipeline.js from when.js:
	   * https://github.com/cujojs/when/blob/3.7.4/pipeline.js
	   */
	exports.default = pipeline;

/***/ },
/* 39 */
/***/ function(module, exports) {

	module.exports = require("bluebird");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = reduceTasks;
	
	var _bluebird = __webpack_require__(39);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// tasks 可以是返回 Promise 的 fn
	// 也可以是 Promise
	function reduceTasks(tasks) {
	    var _this = this;
	
	    return _bluebird2.default.reduce(tasks, function (result, task) {
	        if (typeof task === 'function') {
	            return task.call(_this);
	        }
	        // 如果 task 是 Promise blue bird 貌似会自动把 promise resolve 出来，是 reject 直接就终止执行
	        // 所以 写 task()#then 会出错
	        return task;
	    });
	}

/***/ },
/* 41 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = sortByDate;
	// 最新的在前面
	// 最新的在前面
	function sortByDate() {
	    return function (a, b) {
	        return new Date(b.date_updated).valueOf() - new Date(a.date_updated).valueOf();
	    };
	}

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = validate;
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var reduceTasks = _utils2.default.reduceTasks;
	var i18n = _utils2.default.i18n;
	function validate(data, schema, isEditing) {
	    if (typeof data === 'undefined') {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.emptyObject')));
	    }
	    var suppliedFields = Object.keys(data).filter(function (key) {
	        return !_lodash2.default.isUndefined(data[key]);
	    });
	    var suppliedFieldsInSchema = schema.fields.filter(function (field) {
	        return !_lodash2.default.isUndefined(data[field.name]);
	    });
	    var allFields = _lodash2.default.map(schema.fields, 'name');
	    var requiredFields = schema.fields.filter(function (field) {
	        return Boolean(field.required);
	    }).map(function (field) {
	        return field.name;
	    });
	    var unsupportedFields = suppliedFields.filter(function (key) {
	        return allFields.indexOf(key) === -1;
	    });
	    var missedFields = requiredFields.filter(function (key) {
	        return suppliedFields.indexOf(key) === -1;
	    });
	    if (unsupportedFields.length > 0) {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.unsupportedInput', unsupportedFields[0])));
	    }
	    if (missedFields.length > 0 && !isEditing) {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.missRequiredFields', missedFields[0])));
	    }
	    // 验证 fields，因为每个 field 可能有不止一个 validator
	    var validateField = function validateField(val, validators) {
	        return reduceTasks(validators.map(function (validation) {
	            if (validation.fn(val)) {
	                return Promise.resolve(true);
	            }
	            return Promise.reject(new _errors2.default.BadRequestError(validation.errorMsg));
	        }));
	    };
	    // 所有 fields 验证一遍
	    return reduceTasks(suppliedFieldsInSchema.map(function (field) {
	        var validators = field.validators;
	        if (validators) {
	            return validateField(data[field.name], validators);
	        }
	        // 跳过未定义 validation 的 filed
	        return Promise.resolve(true);
	    }));
	}

/***/ },
/* 43 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = paginate;
	var defaultOptions = {
	    page: 1,
	    limit: 10,
	    order: 'new'
	};
	function paginate(results, options) {
	    var _Object$assign = Object.assign({}, defaultOptions, options);
	
	    var page = _Object$assign.page;
	    var limit = _Object$assign.limit;
	    var order = _Object$assign.order;
	    // query 里面传过来的都是 string
	
	    page = parseInt(page, 10);
	    // 如果 page 小于 0 则当做 1 来处理，大于最大页面则不管
	    // 此逻辑参照 GitHub api
	    page = page <= 0 ? 1 : page;
	    limit = parseInt(limit, 10);
	    if (order === 'new') {
	        results.reverse();
	    }
	    var startIndex = (page - 1) * limit;
	    return {
	        entities: results.slice(startIndex, limit + startIndex),
	        _pagination: {
	            current: page,
	            all: Math.ceil(results.length / limit) || 1
	        }
	    };
	}

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.computeHash = undefined;
	exports.notFoundError = notFoundError;
	exports.notFoundIn = notFoundIn;
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _computeHash = __webpack_require__(45);
	
	var _computeHash2 = _interopRequireDefault(_computeHash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function notFoundError(itemName) {
	    return new _errors2.default.NotFoundError((0, _i18n2.default)('errors.api.general.notFound', itemName));
	}
	function notFoundIn(collectionName) {
	    return new _errors2.default.NotFoundError((0, _i18n2.default)('errors.api.general.notFoundIn', collectionName));
	}
	exports.computeHash = _computeHash2.default;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = computeHash;
	
	var _crypto = __webpack_require__(46);
	
	var _crypto2 = _interopRequireDefault(_crypto);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * source:
	 * http://stackoverflow.com/questions/6984139/how-can-i-get-the-sha1-hash-of-a-string-in-node-js
	 */
	function computeHash(buffer) {
	  var shasum = _crypto2.default.createHash('sha1');
	  shasum.update(buffer);
	  return shasum.digest('hex');
	}

/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = require("crypto");

/***/ },
/* 47 */
/***/ function(module, exports) {

	module.exports = require("humps");

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.collection = exports.book = exports.author = exports.tag = exports.progress = exports.file = exports.user = undefined;
	
	var _schema = __webpack_require__(49);
	
	var _schema2 = _interopRequireDefault(_schema);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _validator = __webpack_require__(36);
	
	var _validator2 = _interopRequireDefault(_validator);
	
	var _types = __webpack_require__(50);
	
	var _types2 = _interopRequireDefault(_types);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var user = exports.user = new _schema2.default('users', [{
	    name: 'username',
	    required: true,
	    unique: true,
	    validators: [{
	        fn: _validator2.default.lengthMin(5),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.minLength', 'name')
	    }, {
	        fn: _validator2.default.lengthMax(20),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.maxLength', 'name')
	    }]
	}, {
	    name: 'password',
	    required: true,
	    validators: [{
	        fn: _validator2.default.lengthMin(6),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.minLength', 'password')
	    }, {
	        fn: _validator2.default.lengthMax(20),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.maxLength', 'password')
	    }]
	}, {
	    name: 'email',
	    required: true,
	    unique: true,
	    validators: [{
	        fn: _validator2.default.isEmail,
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.invalidFormat', 'email')
	    }]
	}, {
	    name: 'role',
	    required: true
	}]);
	var file = exports.file = new _schema2.default('files', [{
	    name: 'filename',
	    required: true
	}, {
	    name: 'content',
	    required: true
	}, {
	    name: 'mimetype'
	}, {
	    name: 'size'
	}, {
	    name: 'encoding'
	}, {
	    name: 'hash',
	    unique: true
	}]);
	var progress = exports.progress = new _schema2.default('reading_progress', [{
	    name: 'percentage',
	    required: true,
	    type: _types2.default.Number
	}, {
	    name: 'user_id',
	    type: _types2.default.ID
	}, {
	    name: 'book_id',
	    type: _types2.default.ID
	}]);
	var tag = exports.tag = new _schema2.default('tags', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'slug',
	    unique: true
	}, {
	    name: 'description'
	}]);
	var author = exports.author = new _schema2.default('authors', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'slug',
	    unique: true,
	    validators: [{
	        fn: _validator2.default.isAlphanumeric,
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.alphanumeric', 'slug')
	    }]
	}, {
	    name: 'description'
	}]);
	var book = exports.book = new _schema2.default('books', [{
	    name: 'title',
	    required: true
	}, {
	    name: 'authors',
	    ref: author,
	    type: (0, _types.arrayOf)(_types2.default.ID)
	}, {
	    name: 'description'
	}, {
	    name: 'cover'
	}, {
	    name: 'file',
	    ref: file,
	    required: true
	}]);
	var collection = exports.collection = new _schema2.default('collections', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'items',
	    required: true,
	    ref: book,
	    type: (0, _types.arrayOf)(_types2.default.ID)
	}, {
	    name: 'description'
	}, {
	    name: 'creator',
	    required: true,
	    ref: user
	}]);

/***/ },
/* 49 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Schema = function () {
	    function Schema(baseTable, fieldDefinition) {
	        _classCallCheck(this, Schema);
	
	        this._fieldDefinition = fieldDefinition;
	        this._baseTable = baseTable;
	    }
	
	    _createClass(Schema, [{
	        key: "name",
	        get: function get() {
	            return this._baseTable;
	        }
	    }, {
	        key: "fields",
	        get: function get() {
	            return this._fieldDefinition;
	        }
	    }]);
	
	    return Schema;
	}();
	
	exports.default = Schema;

/***/ },
/* 50 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var DataType = exports.DataType = function () {
	    function DataType(mark, isTypeArray) {
	        _classCallCheck(this, DataType);
	
	        this.mark = mark;
	        this.isTypeArray = typeof isTypeArray === 'undefined' ? false : isTypeArray;
	    }
	
	    _createClass(DataType, [{
	        key: 'isArray',
	        value: function isArray() {
	            if (typeof this.isTypeArray === 'undefined' || !this.isTypeArray) {
	                return false;
	            }
	            return true;
	        }
	    }, {
	        key: 'equals',
	        value: function equals(type) {
	            return type.mark === this.mark && type.isArray() === this.isTypeArray;
	        }
	    }]);
	
	    return DataType;
	}();
	
	var arrayOf = exports.arrayOf = function arrayOf(type) {
	    return new DataType(type.mark, true);
	};
	var DataTypes = {
	    String: new DataType('STRING'),
	    Number: new DataType('NUMBER'),
	    ID: new DataType('ID')
	};
	exports.default = DataTypes;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = requirePermissionsOf;
	
	var _common = __webpack_require__(52);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * 权限等级排序
	 * admin | user | visitor | none
	 */
	function requirePermissionsOf(userRole) {
	    return function (req, res, next) {
	        switch (userRole) {
	            case _common.ROLES.ADMIN:
	                if (req.context.user.role === _common.ROLES.ADMIN) {
	                    next();
	                    break;
	                }
	                next(new _errors2.default.NoPermissionError((0, _i18n2.default)('errors.api.auth.needPermissionsOf', 'admin')));
	                break;
	            case _common.ROLES.USER:
	                if (req.context.user.role === _common.ROLES.USER || req.context.user.role === _common.ROLES.ADMIN) {
	                    next();
	                    break;
	                }
	                next(new _errors2.default.NoPermissionError((0, _i18n2.default)('errors.api.auth.loginRequired')));
	                break;
	            default:
	                if (userRole !== _common.ROLES.VISITOR) {
	                    next(new Error('Undefined role!'));
	                    break;
	                }
	                next();
	        }
	    };
	}

/***/ },
/* 52 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// 全局变量
	// 全局变量
	var ENABLE_SERVER_ROUTING = exports.ENABLE_SERVER_ROUTING = '__ENABLE_SERVER_ROUTING__';
	var INITIAL_STATE = exports.INITIAL_STATE = '__INITIAL_STATE__';
	// 其他常量
	var DOUBAN_API_ROOT = exports.DOUBAN_API_ROOT = 'https://api.douban.com/v2';
	var GITHUB_API_ROOT = exports.GITHUB_API_ROOT = 'https://api.github.com';
	var ROLES = exports.ROLES = {
	    USER: 'user',
	    ADMIN: 'admin',
	    VISITOR: 'visitor'
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleError;
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function handleError(error, req, res, next) {
	    var statusCode = error.statusCode || 500;
	    var errorJson = error;
	    if (Error.prototype.isPrototypeOf(error)) {
	        errorJson = {
	            message: error.message || (0, _i18n2.default)('errors.general.unknownErrorOccurred'),
	            type: error.name
	        };
	    }
	    if (!error.statusCode) {
	        _print2.default.error(error);
	    }
	    res.status(statusCode).send(_lodash2.default.omit(errorJson, ['statusCode', 'name', 'stack']));
	}

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var colors = __webpack_require__(55);
	var print = {
	    info: function info(message) {
	        console.info('\n' + colors.bgGreen.bold.white(' INFO '), colors.green(message));
	    },
	    test: function test(message) {
	        console.info('\n' + colors.bgCyan.bold.black(' INFO '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.cyan(message) : message);
	    },
	    warn: function warn(message) {
	        console.error('\n' + colors.bgYellow.bold.black(' WARNING '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.yellow(message) : message);
	    },
	    error: function error(message) {
	        console.error('\n' + colors.bgRed.bold.white(' ERROR '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.red(message) : message);
	    }
	};
	exports.default = print;

/***/ },
/* 55 */
/***/ function(module, exports) {

	module.exports = require("colors/safe");

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var API_ROOT = _helpers2.default.getApiRoot();
	function parsePagination(_ref, _ref2) {
	    var fullPath = _ref.fullPath;
	    var query = _ref.query;
	    var current = _ref2.current;
	    var all = _ref2.all;
	
	    var getLintByPage = function getLintByPage(page) {
	        return fullPath + '?' + (0, _parseUrlencoded2.default)(_lodash2.default.assign({}, query, { page: page }));
	    };
	    var links = {
	        first: getLintByPage(1),
	        last: getLintByPage(all),
	        prev: getLintByPage(current - 1),
	        next: getLintByPage(current + 1)
	    };
	    if (current > all) {
	        links.prev = links.last;
	    }
	    if (all === 1) {
	        if (current > 1) {
	            return _lodash2.default.omit(links, ['next']);
	        }
	        if (current === 1) {
	            return _lodash2.default.omit(links, ['prev', 'next']);
	        }
	    }
	    if (current <= 1) {
	        return _lodash2.default.omit(links, ['prev']);
	    }
	    if (current >= all) {
	        return _lodash2.default.omit(links, ['next']);
	    }
	    return links;
	}
	var handleSuccess = function handleSuccess(apiResults, req, res) {
	    if (req.method === 'POST') {
	        res.status(201).send(apiResults);
	    } else {
	        if (apiResults._pagination) {
	            var host = API_ROOT;
	            res.links(parsePagination({
	                fullPath: host + req.path,
	                query: req.query
	            }, apiResults._pagination));
	            res.status(200).send(apiResults.entities);
	            return false;
	        }
	        res.status(200).send(apiResults);
	    }
	};
	function handleJSONResponse(req, res, next) {
	    var apiResults = req.apiResults;
	
	    if (!apiResults) {
	        next(new Error('"apiResults" is not present!'));
	    }
	    apiResults.then(function (results) {
	        handleSuccess(results, req, res);
	    }, function (error) {
	        next(error);
	    });
	}
	exports.default = handleJSONResponse;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = parseUrlencoded;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// todo
	function parseUrlencoded(originalObj) {
	    if (_lodash2.default.isEmpty(originalObj)) {
	        return '';
	    }
	    var object = _lodash2.default.cloneDeep(originalObj);
	    var encodedurl = '';
	    for (var prop in object) {
	        if (_typeof(object[prop]) === 'object' && object[prop] !== null) {
	            object[prop] = object[prop].toString();
	        }
	        encodedurl = '' + encodedurl + prop + '=' + encodeURI(object[prop]) + '&';
	    }
	    return encodedurl.substr(0, encodedurl.length - 1);
	}

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _lifecircle = __webpack_require__(59);
	
	var lifecircle = _interopRequireWildcard(_lifecircle);
	
	var _getApiRoot = __webpack_require__(60);
	
	var _getApiRoot2 = _interopRequireDefault(_getApiRoot);
	
	var _isServerRoutingEnabled = __webpack_require__(61);
	
	var _isServerRoutingEnabled2 = _interopRequireDefault(_isServerRoutingEnabled);
	
	var _redirect = __webpack_require__(62);
	
	var _redirect2 = _interopRequireDefault(_redirect);
	
	var _isServerEnv = __webpack_require__(64);
	
	var _isServerEnv2 = _interopRequireDefault(_isServerEnv);
	
	var _print = __webpack_require__(65);
	
	var _print2 = _interopRequireDefault(_print);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = Object.assign({}, lifecircle, {
	    getApiRoot: _getApiRoot2.default,
	    isServerRoutingEnabled: _isServerRoutingEnabled2.default,
	    redirect: _redirect2.default,
	    isServerEnv: _isServerEnv2.default,
	    print: _print2.default
	});

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.onRoutingChange = undefined;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// 检查 store 里面的 routing 是否变化
	var onRoutingChange = exports.onRoutingChange = function onRoutingChange(fn) {
	    return function (nextProps, currentProps) {
	        if (!currentProps.routing) {
	            console.error('routing 需要现在组件 props 里面声明！');
	            return false;
	        }
	        var hasPathParamChanged = !_lodash2.default.isEqual(nextProps.routing, currentProps.routing);
	        if (hasPathParamChanged) {
	            fn(nextProps.routing);
	        }
	    };
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getApiRoot;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getApiRoot() {
	    var host = typeof window !== 'undefined' ? window.location.origin : 'http://localhost:3000';
	    return host + '/' + _app2.default.api.prefix;
	}

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isServerRoutingEnabled;
	
	var _common = __webpack_require__(52);
	
	function isServerRoutingEnabled() {
	    return Boolean(window[_common.ENABLE_SERVER_ROUTING]);
	}

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = redirect;
	
	var _isServerRoutingEnabled = __webpack_require__(61);
	
	var _isServerRoutingEnabled2 = _interopRequireDefault(_isServerRoutingEnabled);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function redirect(url) {
	    if ((0, _isServerRoutingEnabled2.default)()) {
	        _reactRouter.browserHistory.push(url);
	    } else {
	        _reactRouter.hashHistory.push(url);
	    }
	}

/***/ },
/* 63 */
/***/ function(module, exports) {

	module.exports = require("react-router");

/***/ },
/* 64 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isServerEnv;
	function isServerEnv() {
	    return typeof window === 'undefined';
	}

/***/ },
/* 65 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = print;
	function print() {
	    if (process.env.NODE_ENV !== 'production') {
	        var style = 'color: blue;';
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        var mergedArgs = [args.join(' ')];
	        var modArgs = mergedArgs.map(function (arg, index) {
	            if (index === 0) {
	                return '%c [DEV] ' + arg;
	            }
	        });
	        modArgs = modArgs.concat(style);
	        console.trace.apply(null, modArgs);
	    }
	}

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = logFile;
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _helpers = __webpack_require__(44);
	
	var helpers = _interopRequireWildcard(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var fileModel = new _model2.default(schemas.file);
	// @req#loggedFileId
	function logFile(req, res, next) {
	    var file = req.file;
	    var hash = helpers.computeHash(file.buffer);
	    var data = {
	        filename: file.originalname,
	        // 会被转换为 binData 的 BSON type
	        content: file.buffer,
	        mimetype: file.mimetype,
	        size: file.size,
	        encoding: file.encoding,
	        hash: hash
	    };
	    fileModel.findOne({ hash: hash }).then(function (result) {
	        // req.loggedFileId = result._id
	        // TODO: 404 处理
	        var err = new Error('File already exists!');
	        next(err);
	    }, function (notFoundError) {
	        // TODO: 不使用 404
	        // 为了确定是未找到而不是其他错误需要做额外的判断
	        fileModel.add(data).then(function (result) {
	            var loggedFileId = _lodash2.default.get(result, ['ops', 0]);
	            if (!loggedFileId) {
	                // TODO
	                // throw new Error('File not Found!')
	                var err = new Error('File not Found!');
	                next(err);
	            } else {
	                req.loggedFileId = loggedFileId;
	                next();
	            }
	        }).catch(function (error) {
	            next(error);
	        });
	    });
	}

/***/ },
/* 67 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = prepareApi;
	function prepareApi(req, res, next) {
	    req.__apiTouched = true;
	    next();
	}

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleApiNotFound;
	
	var _helpers = __webpack_require__(44);
	
	function handleApiNotFound(req, res, next) {
	    if (!req.__apiTouched) {
	        next((0, _helpers.notFoundError)('API'));
	    }
	    next();
	}

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.listCollections = exports.delFile = exports.readFile = exports.setReadingProgress = exports.getReadingProgress = exports.listShelfBooks = exports.addUser = exports.findUser = exports.removeBook = exports.listBooks = exports.resolveBookContent = exports.findBook = exports.addBook = exports.user = exports.tag = exports.book = exports.collection = exports.author = undefined;
	
	var _api = __webpack_require__(70);
	
	var api = _interopRequireWildcard(_api);
	
	var _makeBasicEndpoint = __webpack_require__(80);
	
	var _makeBasicEndpoint2 = _interopRequireDefault(_makeBasicEndpoint);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// basic endpoints
	var author = exports.author = (0, _makeBasicEndpoint2.default)(api.author);
	var collection = exports.collection = (0, _makeBasicEndpoint2.default)(api.collection);
	var book = exports.book = (0, _makeBasicEndpoint2.default)(api.book);
	var tag = exports.tag = (0, _makeBasicEndpoint2.default)(api.tag);
	var user = exports.user = (0, _makeBasicEndpoint2.default)(api.user);
	// common endpoints
	// books
	var addBook = exports.addBook = function addBook(req, res, next) {
	    req.apiResults = api.addBook(req.body, req.loggedFileId);
	    next();
	};
	var findBook = exports.findBook = function findBook(req, res, next) {
	    req.apiResults = api.findBook(req.params.book);
	    next();
	};
	var resolveBookContent = exports.resolveBookContent = function resolveBookContent(req, res, next) {
	    req.apiResults = api.resolveBookContent(req.params.book);
	    next();
	};
	var listBooks = exports.listBooks = function listBooks(req, res, next) {
	    req.apiResults = api.listBooks(req.query.page || 1);
	    next();
	};
	var removeBook = exports.removeBook = function removeBook(req, res, next) {
	    req.apiResults = api.removeBook(req.params.book);
	    next();
	};
	// users
	var findUser = exports.findUser = function findUser(req, res, next) {
	    req.apiResults = api.findUser(req.context.user.id);
	    next();
	};
	var addUser = exports.addUser = function addUser(req, res, next) {
	    req.apiResults = api.addUser(req.body);
	    next();
	};
	// user
	var listShelfBooks = exports.listShelfBooks = function listShelfBooks(req, res, next) {
	    req.apiResults = api.listShelfBooks(req.context.user.id, req.query.page || 1);
	    next();
	};
	var getReadingProgress = exports.getReadingProgress = function getReadingProgress(req, res, next) {
	    req.apiResults = api.getReadingProgress(req.context.user.id, req.params.book);
	    next();
	};
	var setReadingProgress = exports.setReadingProgress = function setReadingProgress(req, res, next) {
	    req.apiResults = api.setReadingProgress(req.context.user.id, req.params.book, req.body);
	    next();
	};
	// file
	var readFile = exports.readFile = function readFile(req, res, next) {
	    req.apiResults = api.readFile(req.params.file);
	    next();
	};
	var delFile = exports.delFile = function delFile(req, res, next) {
	    req.apiResults = api.delFile(req.params.file);
	    next();
	};
	// other
	var listCollections = exports.listCollections = function listCollections(req, res, next) {
	    req.apiResults = api.listCollection(req.query.page || 1);
	    next();
	};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.user = exports.tag = exports.book = exports.collection = exports.author = undefined;
	
	var _file = __webpack_require__(71);
	
	Object.keys(_file).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _file[key];
	    }
	  });
	});
	
	var _books = __webpack_require__(72);
	
	Object.keys(_books).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _books[key];
	    }
	  });
	});
	
	var _user = __webpack_require__(76);
	
	Object.keys(_user).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _user[key];
	    }
	  });
	});
	
	var _users = __webpack_require__(77);
	
	Object.keys(_users).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _users[key];
	    }
	  });
	});
	
	var _collections = __webpack_require__(78);
	
	Object.keys(_collections).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _collections[key];
	    }
	  });
	});
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _basicApi = __webpack_require__(79);
	
	var _basicApi2 = _interopRequireDefault(_basicApi);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var author = exports.author = new _basicApi2.default(schemas.author);
	var collection = exports.collection = new _basicApi2.default(schemas.collection);
	var book = exports.book = new _basicApi2.default(schemas.book);
	var tag = exports.tag = new _basicApi2.default(schemas.tag);
	var user = exports.user = new _basicApi2.default(schemas.user);

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.readFile = readFile;
	exports.delFile = delFile;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var UPLOADS_DIR = '__uploads__';
	var BASE_DIR = process.cwd();
	var fileModel = new _model2.default(schemas.file);
	function readFile(fileId, parser) {
	    return fileModel.findOne(fileId).then(function (fileResult) {
	        if (parser && typeof parser === 'function') {
	            var binaryFile = fileResult.content.buffer;
	            return parser(binaryFile).then(function (content) {
	                return _lodash2.default.assign({}, fileResult, {
	                    content: content
	                });
	            });
	        }
	        return fileResult;
	        // return _.assign({}, fileResult, {
	        //   // TODO: 验证可用性
	        //   content: fileResult.content.buffer.toString('utf-8')
	        // })
	    });
	}
	// TODO
	function delFile(fileId) {
	    return fileModel.findOne(fileId).then(function (resultFile) {
	        return fileModel.remove(fileId);
	    }, function (error) {
	        if (error.type === 'NotFoundError') {
	            return {
	                message: 'File record not found, probably because it doesn\'t exist, or hasn\'t been created in the first place!'
	            };
	        }
	        return Promise.reject(error);
	    });
	}

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.findBook = findBook;
	exports.addBook = addBook;
	exports.resolveBookContent = resolveBookContent;
	exports.listBooks = listBooks;
	exports.listShelfBooks = listShelfBooks;
	exports.removeBook = removeBook;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _paginate = __webpack_require__(43);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _helpers = __webpack_require__(44);
	
	var _file2 = __webpack_require__(71);
	
	var _parsers = __webpack_require__(73);
	
	var _parsers2 = _interopRequireDefault(_parsers);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) {
	            try {
	                step(generator.next(value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function rejected(value) {
	            try {
	                step(generator["throw"](value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function step(result) {
	            result.done ? resolve(result.value) : new P(function (resolve) {
	                resolve(result.value);
	            }).then(fulfilled, rejected);
	        }
	        step((generator = generator.apply(thisArg, _arguments)).next());
	    });
	};
	
	var bookModel = new _model2.default(schemas.book);
	var progressModel = new _model2.default(schemas.progress);
	var authorModel = new _model2.default(schemas.author);
	function findBook(id) {
	    return bookModel.findOne(id).then(function (result) {
	        var data = _lodash2.default.omit(result, ['file']);
	        var contentType = 'txt';
	        if (!result.file) {
	            contentType = '';
	        } else if (result.file.mimetype === 'application/epub+zip') {
	            contentType = 'epub';
	        }
	        return _lodash2.default.assign({}, data, {
	            content_type: contentType
	        });
	    });
	}
	function addBook(meta, fileId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee3() {
	        var getAuthorId, mergeMeta, doSave, fileResult, file, parsedContent, authorName, _file, fileContentArray, title, _authorName;
	
	        return regeneratorRuntime.wrap(function _callee3$(_context3) {
	            while (1) {
	                switch (_context3.prev = _context3.next) {
	                    case 0:
	                        doSave = function doSave(title, authorName) {
	                            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee2() {
	                                var authorId;
	                                return regeneratorRuntime.wrap(function _callee2$(_context2) {
	                                    while (1) {
	                                        switch (_context2.prev = _context2.next) {
	                                            case 0:
	                                                _context2.next = 2;
	                                                return getAuthorId(authorName);
	
	                                            case 2:
	                                                authorId = _context2.sent;
	                                                return _context2.abrupt('return', bookModel.add(mergeMeta(title, authorId)).then(function (result) {
	                                                    return __assign({}, result, {
	                                                        ops: result.ops.map(function (item) {
	                                                            return __assign({}, item, {
	                                                                file: _lodash2.default.omit(item.file, ['content'])
	                                                            });
	                                                        })
	                                                    });
	                                                }));
	
	                                            case 4:
	                                            case 'end':
	                                                return _context2.stop();
	                                        }
	                                    }
	                                }, _callee2, this);
	                            }));
	                        };
	
	                        getAuthorId = function getAuthorId(authorName) {
	                            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
	                                var authorEntity, result;
	                                return regeneratorRuntime.wrap(function _callee$(_context) {
	                                    while (1) {
	                                        switch (_context.prev = _context.next) {
	                                            case 0:
	                                                _context.prev = 0;
	                                                _context.next = 3;
	                                                return authorModel.findOne({ name: authorName });
	
	                                            case 3:
	                                                authorEntity = _context.sent;
	                                                return _context.abrupt('return', authorEntity._id);
	
	                                            case 7:
	                                                _context.prev = 7;
	                                                _context.t0 = _context['catch'](0);
	                                                _context.next = 11;
	                                                return authorModel.add({
	                                                    name: authorName
	                                                });
	
	                                            case 11:
	                                                result = _context.sent;
	                                                return _context.abrupt('return', result.ops[0]._id);
	
	                                            case 13:
	                                            case 'end':
	                                                return _context.stop();
	                                        }
	                                    }
	                                }, _callee, this, [[0, 7]]);
	                            }));
	                        };
	
	                        mergeMeta = function mergeMeta(title, authorId) {
	                            return _lodash2.default.assign({}, {
	                                title: title,
	                                authors: [authorId],
	                                file: fileId
	                            }, meta);
	                        };
	
	                        if (!fileId) {
	                            _context3.next = 27;
	                            break;
	                        }
	
	                        _context3.next = 6;
	                        return (0, _file2.readFile)(fileId);
	
	                    case 6:
	                        fileResult = _context3.sent;
	
	                        if (!(fileResult.mimetype === 'application/epub+zip')) {
	                            _context3.next = 16;
	                            break;
	                        }
	
	                        _context3.next = 10;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.epub);
	
	                    case 10:
	                        file = _context3.sent;
	                        parsedContent = file.content;
	                        authorName = parsedContent.meta.author;
	                        return _context3.abrupt('return', doSave(parsedContent.meta.title, authorName));
	
	                    case 16:
	                        if (!(fileResult.mimetype === 'text/plain')) {
	                            _context3.next = 26;
	                            break;
	                        }
	
	                        _context3.next = 19;
	                        return (0, _file2.readFile)(fileId);
	
	                    case 19:
	                        _file = _context3.sent;
	                        fileContentArray = _file.content.buffer.toString('utf-8').split('\n');
	                        title = fileContentArray[0];
	                        _authorName = fileContentArray[1];
	                        return _context3.abrupt('return', doSave(title, _authorName));
	
	                    case 26:
	                        return _context3.abrupt('return', Promise.reject(new Error('Unsupported file type!')));
	
	                    case 27:
	                        return _context3.abrupt('return', bookModel.add(meta));
	
	                    case 28:
	                    case 'end':
	                        return _context3.stop();
	                }
	            }
	        }, _callee3, this);
	    }));
	}
	function resolveBookContent(bookId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee4() {
	        var bookEntity, fileId, bookContent, fileResult, _fileResult;
	
	        return regeneratorRuntime.wrap(function _callee4$(_context4) {
	            while (1) {
	                switch (_context4.prev = _context4.next) {
	                    case 0:
	                        _context4.next = 2;
	                        return bookModel.findOne(bookId);
	
	                    case 2:
	                        bookEntity = _context4.sent;
	                        fileId = bookEntity.file._id;
	                        bookContent = void 0;
	
	                        if (fileId) {
	                            _context4.next = 7;
	                            break;
	                        }
	
	                        return _context4.abrupt('return', Promise.reject((0, _helpers.notFoundError)('book')));
	
	                    case 7:
	                        if (!(bookEntity.file.mimetype === 'application/epub+zip')) {
	                            _context4.next = 14;
	                            break;
	                        }
	
	                        _context4.next = 10;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.epub);
	
	                    case 10:
	                        fileResult = _context4.sent;
	
	                        bookContent = _lodash2.default.omit(fileResult.content, ['meta']);
	                        _context4.next = 22;
	                        break;
	
	                    case 14:
	                        if (!(bookEntity.file.mimetype === 'text/plain')) {
	                            _context4.next = 21;
	                            break;
	                        }
	
	                        _context4.next = 17;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.txtContent);
	
	                    case 17:
	                        _fileResult = _context4.sent;
	
	                        bookContent = _fileResult.content;
	                        _context4.next = 22;
	                        break;
	
	                    case 21:
	                        return _context4.abrupt('return', Promise.reject(new Error('Unsupported file type!')));
	
	                    case 22:
	                        return _context4.abrupt('return', _lodash2.default.assign({}, bookContent, { _id: bookId, content_id: fileId }));
	
	                    case 23:
	                    case 'end':
	                        return _context4.stop();
	                }
	            }
	        }, _callee4, this);
	    }));
	}
	function listBooks(page) {
	    return bookModel.list({
	        page: page,
	        disablePagination: _lodash2.default.isNil(page),
	        mapping: function mapping(entity) {
	            return _lodash2.default.omit(entity, ['content', 'file']);
	        }
	    });
	}
	function listShelfBooks(userId, page) {
	    return progressModel.listRaw({ query: { user_id: userId } }).then(function (results) {
	        if (results.length === 0) {
	            return results;
	        }
	        return Promise.all(results.sort(_utils2.default.sortByDate()).map(function (result) {
	            return bookModel.findOne(result.book_id).then(function (res) {
	                return res;
	            }, function (error) {
	                // 如果错误不是 404 也输出空的 entity
	                return bookModel.outputEmpty(result.book_id);
	            });
	        })).then(function (res) {
	            return (0, _paginate2.default)(res.map(function (entity) {
	                return _lodash2.default.omit(entity, ['content']);
	            }), {
	                page: page
	            });
	        });
	    });
	}
	function removeBook(bookId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee5() {
	        var book, fileId;
	        return regeneratorRuntime.wrap(function _callee5$(_context5) {
	            while (1) {
	                switch (_context5.prev = _context5.next) {
	                    case 0:
	                        _context5.next = 2;
	                        return bookModel.findOne(bookId, true);
	
	                    case 2:
	                        book = _context5.sent;
	                        fileId = book.file._id;
	                        _context5.next = 6;
	                        return bookModel.remove(bookId);
	
	                    case 6:
	                        return _context5.abrupt('return', (0, _file2.delFile)(fileId));
	
	                    case 7:
	                    case 'end':
	                        return _context5.stop();
	                }
	            }
	        }, _callee5, this);
	    }));
	}

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _simpleEpubParser = __webpack_require__(74);
	
	var _simpleEpubParser2 = _interopRequireDefault(_simpleEpubParser);
	
	var _txtContent = __webpack_require__(75);
	
	var _txtContent2 = _interopRequireDefault(_txtContent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = { epub: _simpleEpubParser2.default, txtContent: _txtContent2.default };

/***/ },
/* 74 */
/***/ function(module, exports) {

	module.exports = require("simple-epub-parser");

/***/ },
/* 75 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = txtContent;
	var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) {
	            try {
	                step(generator.next(value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function rejected(value) {
	            try {
	                step(generator["throw"](value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function step(result) {
	            result.done ? resolve(result.value) : new P(function (resolve) {
	                resolve(result.value);
	            }).then(fulfilled, rejected);
	        }
	        step((generator = generator.apply(thisArg, _arguments)).next());
	    });
	};
	function txtContent(target) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
	        var nav, content, buffer, flesh;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	            while (1) {
	                switch (_context.prev = _context.next) {
	                    case 0:
	                        nav = [{
	                            ref: 'part01',
	                            label: '第一章节',
	                            index: 0
	                        }];
	                        content = void 0;
	
	                        if (!(typeof target === 'string')) {
	                            _context.next = 7;
	                            break;
	                        }
	
	                        buffer = new Buffer(target, 'binary');
	
	                        content = buffer.toString();
	                        _context.next = 12;
	                        break;
	
	                    case 7:
	                        if (!Buffer.isBuffer(target)) {
	                            _context.next = 11;
	                            break;
	                        }
	
	                        content = target.toString();
	                        _context.next = 12;
	                        break;
	
	                    case 11:
	                        throw new Error('Only string or buffer is supported!');
	
	                    case 12:
	                        flesh = [{
	                            src: 'part01',
	                            markdown: content
	                        }];
	                        return _context.abrupt('return', { nav: nav, flesh: flesh });
	
	                    case 14:
	                    case 'end':
	                        return _context.stop();
	                }
	            }
	        }, _callee, this);
	    }));
	}

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getReadingProgress = getReadingProgress;
	exports.setReadingProgress = setReadingProgress;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var progressModel = new _model2.default(schemas.progress);
	function getReadingProgress(userId, bookId) {
	    var query = _humps2.default.decamelizeKeys({ userId: userId, bookId: bookId });
	    return progressModel.list({ disablePagination: true, raw: true, query: query }).then(function (res) {
	        if (res.length === 0) {
	            return progressModel.outputEmpty({
	                user_id: userId,
	                book_id: bookId
	            });
	        }
	        return res[0];
	    });
	}
	function setReadingProgress(userId, bookId, data) {
	    var query = _humps2.default.decamelizeKeys({ userId: userId, bookId: bookId });
	    return progressModel.update(query, data, {
	        upsert: true
	    });
	}

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.findUser = findUser;
	exports.addUser = addUser;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var userModel = new _model2.default(schemas.user);
	function findUser(id) {
	    return userModel.findOne(id).then(function (entity) {
	        return _lodash2.default.omit(entity, ['password']);
	    });
	}
	function addUser(userInfo) {
	    return userModel.add(_lodash2.default.assign({}, userInfo, {
	        role: _common.ROLES.USER
	    }));
	}

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.listCollection = listCollection;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var collectionModel = new _model2.default(schemas.collection);
	function listCollection(page) {
	    return collectionModel.list({
	        page: page,
	        disablePagination: _lodash2.default.isNil(page),
	        mapping: function mapping(entity) {
	            return _lodash2.default.assign({}, entity, {
	                items: entity['items'].map(function (item) {
	                    return _lodash2.default.omit(item, 'content');
	                })
	            });
	        }
	    });
	}

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BasicApi = function () {
	    function BasicApi(schema) {
	        _classCallCheck(this, BasicApi);
	
	        this._schema = schema;
	        this._model = new _model2.default(schema);
	    }
	
	    _createClass(BasicApi, [{
	        key: 'findOne',
	        value: function findOne(id) {
	            return this._model.findOne(id);
	        }
	    }, {
	        key: 'list',
	        value: function list(page, keyword) {
	            return this._model.list({
	                page: page,
	                disablePagination: _lodash2.default.isNil(page),
	                // TODO
	                filter: function filter(entity) {
	                    return true;
	                }
	            });
	        }
	    }, {
	        key: 'add',
	        value: function add(data) {
	            return this._model.add(data);
	        }
	    }, {
	        key: 'update',
	        value: function update(id, data) {
	            // todo
	            // 无法提前知道是否为 upsert，所以无法预先决定是否验证 fields
	            // 可能会造成 upsert 的数据 fields 不全的问题
	            return this._model.update(id, data);
	        }
	    }, {
	        key: 'remove',
	        value: function remove(id) {
	            return this._model.remove(id);
	        }
	    }]);
	
	    return BasicApi;
	}();
	
	exports.default = BasicApi;

/***/ },
/* 80 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var makeBasicEndpoint = function makeBasicEndpoint(apiFns) {
	    var findOne = function findOne(req, res, next) {
	        req.apiResults = apiFns.findOne(req.params.id);
	        next();
	    };
	    var list = function list(req, res, next) {
	        req.apiResults = apiFns.list(req.query.page || 1);
	        next();
	    };
	    var add = function add(req, res, next) {
	        req.apiResults = apiFns.add(req.body);
	        next();
	    };
	    var update = function update(req, res, next) {
	        req.apiResults = apiFns.update(req.params.id, req.body);
	        next();
	    };
	    var remove = function remove(req, res, next) {
	        req.apiResults = apiFns.remove(req.params.id);
	        next();
	    };
	    return { findOne: findOne, list: list, add: add, update: update, remove: remove };
	};
	exports.default = makeBasicEndpoint;

/***/ },
/* 81 */
/***/ function(module, exports) {

	module.exports = require("multer");

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _options = __webpack_require__(83);
	
	var _options2 = _interopRequireDefault(_options);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _createRoutes = __webpack_require__(86);
	
	var _createRoutes2 = _interopRequireDefault(_createRoutes);
	
	var _render = __webpack_require__(358);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PROD_ERROR_MSG = '稍安勿躁，工程师正在解决问题 ...';
	var isRoot = function isRoot(url) {
	    var urlParts = url.split('?')[0].split('/');
	    if (urlParts.length !== 2) {
	        return false;
	    }
	    if (_lodash2.default.last(urlParts) !== '') {
	        return false;
	    }
	    return true;
	};
	function pages(req, res) {
	    // 服务端路由关闭（仅限开发模式）
	    if (_options2.default.route === false) {
	        if (!isRoot(req.url)) {
	            res.status(404).send('\n        <div style="margin: 60px auto; width: 600px; padding: 5px 20px; border: 1px solid #222;">\n          <h1 style="font-weight: bold; font-size: 22px; margin: 10px 0;">404 Not Found</h1>\n          <p style="margin: 10px 0;">Dev mode with server routing disabled</p>\n        </div>\n      ');
	            return false;
	        }
	        (0, _render2.default)().then(function (result) {
	            res.send(result);
	        });
	        return false;
	    }
	    var isProd = _options2.default.production;
	    try {
	        (0, _render2.default)({
	            reqUrl: req.url,
	            routes: (0, _createRoutes2.default)({ request: req, response: res }),
	            isProd: isProd,
	            fetchData: _options2.default.render,
	            isHot: _options2.default.hot,
	            userSession: req.context.user
	        }).then(function (_ref) {
	            var html = _ref.html;
	            var redirectLocation = _ref.redirectLocation;
	            var statusCode = _ref.statusCode;
	
	            if (redirectLocation) {
	                res.redirect(302, redirectLocation.pathname + redirectLocation.search);
	            }
	            res.status(statusCode).send(html);
	        });
	    } catch (error) {
	        var errorMsg = isProd ? PROD_ERROR_MSG : error.message;
	        var htmlString = (0, _render.render500)(errorMsg, isProd);
	        res.status(500).send(htmlString);
	    }
	}
	exports.default = pages;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _parsedArgv = __webpack_require__(84);
	
	var _parsedArgv2 = _interopRequireDefault(_parsedArgv);
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Server 支持的选项
	 * --hot 热重载
	 * --production 生产环境
	 * --noRender 服务端渲染
	 * --noRoute 服务端路由
	 */
	var app = (0, _express2.default)();
	var appEnv = app.get('env');
	var render = !Boolean(_parsedArgv2.default['noRender']);
	var hot = Boolean(_parsedArgv2.default['hot']);
	var route = !Boolean(_parsedArgv2.default['noRoute']);
	if (route === false) {
	    render = false;
	}
	var production = Boolean(_parsedArgv2.default['production']);
	if (appEnv === 'production') {
	    production = true;
	}
	var options = {
	    hot: hot,
	    render: render,
	    route: route,
	    production: production
	};
	exports.default = options;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _minimist = __webpack_require__(85);
	
	var _minimist2 = _interopRequireDefault(_minimist);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var argv = (0, _minimist2.default)(process.argv.slice(2));
	exports.default = argv;

/***/ },
/* 85 */
/***/ function(module, exports) {

	module.exports = require("minimist");

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Master = __webpack_require__(88);
	
	var _Master2 = _interopRequireDefault(_Master);
	
	var _App = __webpack_require__(167);
	
	var _App2 = _interopRequireDefault(_App);
	
	var _Console = __webpack_require__(191);
	
	var _Console2 = _interopRequireDefault(_Console);
	
	var _reactRouter = __webpack_require__(63);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	var createRoutes = function createRoutes() {
	    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var request = context.request;
	    var response = context.response;
	
	    var handleConsoleEnter = function handleConsoleEnter(nextState, replace, callback) {
	        if (request) {
	            // 服务端校验方式
	            var role = request.context.user.role;
	
	            if (role !== _common.ROLES.ADMIN) {
	                response.redirect('/');
	            }
	            callback();
	        } else {
	            // 客户端校验方式
	            try {
	                _api2.default.auth().then(function (res) {
	                    if (res.json.role !== _common.ROLES.ADMIN) {
	                        replace('/');
	                    }
	                    callback();
	                });
	            } catch (error) {
	                alert('服务器异常，请稍后再试！');
	                console.error(error);
	            }
	        }
	    };
	    return _react2.default.createElement(_reactRouter.Route, { path: "/", component: _Master2.default }, _react2.default.createElement(_reactRouter.Route, __assign({ path: "viewer/book/:id" }, __webpack_require__(210))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "test" }, __webpack_require__(262))), _react2.default.createElement(_reactRouter.Route, { component: _App2.default }, _react2.default.createElement(_reactRouter.IndexRoute, __assign({}, __webpack_require__(264))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "browse" }, __webpack_require__(285))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "book/:id" }, __webpack_require__(289))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections" }, __webpack_require__(293))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections/:id" }, __webpack_require__(301))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "signin" }, __webpack_require__(305))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "signup" }, __webpack_require__(309))), _react2.default.createElement(_reactRouter.Route, { path: "user" }, _react2.default.createElement(_reactRouter.IndexRedirect, { to: "/user/profile" }), _react2.default.createElement(_reactRouter.Route, __assign({ path: "shelf" }, __webpack_require__(312))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "preference" }, __webpack_require__(319))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "profile" }, __webpack_require__(324))))), _react2.default.createElement(_reactRouter.Route, { onEnter: handleConsoleEnter, path: "console", component: _Console2.default }, _react2.default.createElement(_reactRouter.IndexRedirect, { to: "/console/books" }), _react2.default.createElement(_reactRouter.Route, __assign({ path: "books" }, __webpack_require__(328))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "users" }, __webpack_require__(343))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "books/new" }, __webpack_require__(345))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections/new" }, __webpack_require__(349)))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "*" }, __webpack_require__(352))));
	};
	exports.default = createRoutes;

/***/ },
/* 87 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _actions = __webpack_require__(90);
	
	var _Alert = __webpack_require__(116);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _Modal = __webpack_require__(134);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Master = function (_Component) {
	    _inherits(Master, _Component);
	
	    _createClass(Master, null, [{
	        key: 'fetchData',
	        value: function fetchData(_ref) {
	            var store = _ref.store;
	            var userSession = _ref.userSession;
	
	            return store.dispatch((0, _actions.userAuth)(userSession));
	        }
	    }]);
	
	    function Master(props) {
	        _classCallCheck(this, Master);
	
	        return _possibleConstructorReturn(this, (Master.__proto__ || Object.getPrototypeOf(Master)).call(this, props));
	    }
	
	    _createClass(Master, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var hasNewErrorMsg = this.props.errorMessage.length !== nextProps.errorMessage.length;
	            var routerChanged = nextProps.routing.locationBeforeTransitions.pathname !== this.props.routing.locationBeforeTransitions.pathname;
	            if (hasNewErrorMsg) {
	                this.props.sendNotification(_lodash2.default.last(nextProps.errorMessage).toString(), 'error', 0);
	            }
	            if (routerChanged) {
	                // 返回顶部
	                window.document.body.scrollTop = 0;
	            }
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.props.userAuth();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props;
	            var confirmModal = _props.confirmModal;
	            var closeConfirmModal = _props.closeConfirmModal;
	            var modal = _props.modal;
	            var closeModal = _props.closeModal;
	
	            return _react2.default.createElement("div", { className: "app-root" }, _react2.default.createElement(_Modal.ConfirmModal, { open: confirmModal.open, title: confirmModal.title, onConfirm: confirmModal.onConfirm, onRequestClose: closeConfirmModal, width: 500 }, confirmModal.content), _react2.default.createElement(_Modal.ModalPlus, { open: modal.open, width: 500, onRequestClose: closeModal, title: modal.title }, modal.content), this.props.notifications.filter(function (noti) {
	                return noti.visible;
	            }).length > 0 && _react2.default.createElement(_Alert.Alerts, { onRequestClose: this.props.hideNotification, messages: this.props.notifications.map(function (noti) {
	                    return {
	                        content: noti.message || '发生错误！',
	                        type: noti.type,
	                        visible: noti.visible,
	                        id: noti.id
	                    };
	                }) }), this.props.children);
	        }
	    }]);
	
	    return Master;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notifications: state.components.notifications,
	        errorMessage: state.errorMessage,
	        confirmModal: state.components.confirmModal,
	        modal: state.components.modal,
	        routing: state.routing,
	        session: state.session
	    };
	}, { sendNotification: _actions.sendNotification, hideNotification: _actions.hideNotification, closeConfirmModal: _actions.closeConfirmModal, userAuth: _actions.userAuth, closeModal: _actions.closeModal })(Master);

/***/ },
/* 89 */
/***/ function(module, exports) {

	module.exports = require("react-redux");

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.resetForm = exports.initializeForm = undefined;
	
	var _api = __webpack_require__(91);
	
	Object.keys(_api).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _api[key];
	    }
	  });
	});
	
	var _common = __webpack_require__(107);
	
	Object.keys(_common).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _common[key];
	    }
	  });
	});
	
	var _test = __webpack_require__(108);
	
	Object.keys(_test).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _test[key];
	    }
	  });
	});
	
	var _viewer = __webpack_require__(109);
	
	Object.keys(_viewer).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _viewer[key];
	    }
	  });
	});
	
	var _betterReduxForm = __webpack_require__(114);
	
	// form
	var initializeForm = exports.initializeForm = _betterReduxForm.actions.initialize;
	var resetForm = exports.resetForm = _betterReduxForm.actions.reset;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOAD_ACTIONS = exports.loadBookProgress = exports.progress = exports.userLogout = exports.logout = exports.loadUsers = exports.users = exports.loadBooks = exports.books = exports.loadBookContent = exports.bookContent = exports.loadBook = exports.book = exports.removeEntity = undefined;
	exports.fetchAuthors = fetchAuthors;
	exports.fetchCollections = fetchCollections;
	exports.fetchCollection = fetchCollection;
	exports.searchDoubanBooks = searchDoubanBooks;
	exports.fetchProfile = fetchProfile;
	exports.userAuth = userAuth;
	exports.fetchShelf = fetchShelf;
	
	var _utils = __webpack_require__(92);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _schemas = __webpack_require__(103);
	
	var _schemas2 = _interopRequireDefault(_schemas);
	
	var _common = __webpack_require__(52);
	
	var _utils3 = __webpack_require__(105);
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var removeEntity = exports.removeEntity = function removeEntity(name, id) {
	    return { type: ActionTypes.REMOVE_ENTITY, name: name, id: id };
	};
	var book = exports.book = (0, _utils3.createActionEntity)(ActionTypes.BOOK);
	var loadBook = exports.loadBook = function loadBook(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK, { id: id });
	};
	var bookContent = exports.bookContent = (0, _utils3.createActionEntity)(ActionTypes.BOOK_CONTENT);
	var loadBookContent = exports.loadBookContent = function loadBookContent(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK_CONTENT, { id: id });
	};
	var books = exports.books = (0, _utils3.createActionEntity)(ActionTypes.BOOKS);
	var loadBooks = exports.loadBooks = function loadBooks(options, key) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOKS, { options: options, key: key });
	};
	var users = exports.users = (0, _utils3.createActionEntity)(ActionTypes.USERS);
	var loadUsers = exports.loadUsers = function loadUsers(options) {
	    return (0, _utils3.action)(ActionTypes.LOAD_USERS, { options: options });
	};
	var logout = exports.logout = (0, _utils3.createActionEntity)(ActionTypes.LOGOUT);
	var userLogout = exports.userLogout = function userLogout() {
	    return (0, _utils3.action)(ActionTypes.USER_LOGOUT);
	};
	var progress = exports.progress = (0, _utils3.createActionEntity)(ActionTypes.BOOK_PROGRESS);
	var loadBookProgress = exports.loadBookProgress = function loadBookProgress(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK_PROGRESS, { id: id });
	};
	// define load actions handled in sagas
	var LOAD_ACTIONS = exports.LOAD_ACTIONS = [ActionTypes.LOAD_BOOK, ActionTypes.LOAD_BOOK_CONTENT, ActionTypes.LOAD_BOOKS, ActionTypes.LOAD_USERS];
	/**
	 * legacy call api actions
	 */
	function fetchAuthors(options) {
	    var CALL_API = {
	        types: [ActionTypes.AUTHORS.REQUEST, ActionTypes.AUTHORS.SUCCESS, ActionTypes.AUTHORS.FAILURE],
	        endpoint: 'authors?' + _utils2.default.parseUrlencoded(options),
	        schema: _schemas2.default.AUTHOR_ARRAY,
	        pagination: {
	            name: 'authors',
	            q: options.q
	        }
	    };
	    return { CALL_API: CALL_API };
	}
	function fetchCollections() {
	    var flowType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'newest';
	
	    return {
	        flowType: flowType,
	        CALL_API: {
	            types: [ActionTypes.COLLECTIONS.REQUEST, ActionTypes.COLLECTIONS.SUCCESS, ActionTypes.COLLECTIONS.FAILURE],
	            endpoint: 'collections',
	            schema: _schemas2.default.COLLECTION_ARRAY
	        }
	    };
	}
	function fetchCollection(collectionId) {
	    return {
	        collectionId: collectionId,
	        CALL_API: {
	            types: [ActionTypes.COLLECTION.REQUEST, ActionTypes.COLLECTION.SUCCESS, ActionTypes.COLLECTION.FAILURE],
	            endpoint: 'collections/' + collectionId,
	            schema: _schemas2.default.COLLECTION
	        }
	    };
	}
	function searchDoubanBooks(q) {
	    var CALL_API = {
	        types: [ActionTypes.DOUBAN_BOOKS.REQUEST, ActionTypes.DOUBAN_BOOKS.SUCCESS, ActionTypes.DOUBAN_BOOKS.FAILURE],
	        endpoint: 'book/search?count=10&q=' + q,
	        apiUrl: _common.DOUBAN_API_ROOT,
	        schema: _schemas2.default.DOUBAN_BOOK_SEARCH_RESULTS,
	        options: { useJsonp: true },
	        pagination: {
	            name: 'doubanBooks',
	            q: q
	        }
	    };
	    return { q: q, CALL_API: CALL_API };
	}
	function fetchProfile() {
	    var CALL_API = {
	        types: [ActionTypes.PROFILE.REQUEST, ActionTypes.PROFILE.SUCCESS, ActionTypes.PROFILE.FAILURE],
	        endpoint: 'user/profile',
	        schema: _schemas2.default.PROFILE
	    };
	    return { CALL_API: CALL_API };
	}
	function userAuth(userSession) {
	    // 服务端渲染 session
	    if (userSession) {
	        return {
	            SERVER_STORE: {
	                body: {
	                    response: userSession,
	                    type: ActionTypes.AUTH.SUCCESS
	                }
	            }
	        };
	    }
	    return {
	        CALL_API: {
	            types: [ActionTypes.AUTH.REQUEST, ActionTypes.AUTH.SUCCESS, ActionTypes.AUTH.FAILURE],
	            endpoint: 'auth'
	        }
	    };
	}
	function fetchShelf() {
	    var CALL_API = {
	        types: [ActionTypes.SHELF.REQUEST, ActionTypes.SHELF.SUCCESS, ActionTypes.SHELF.FAILURE],
	        endpoint: 'user/books/shelf',
	        schema: _schemas2.default.SHELF_BOOK_ARRAY,
	        pagination: {
	            name: 'bookShelves'
	        }
	    };
	    return { CALL_API: CALL_API };
	}

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getCurrentTime = __webpack_require__(93);
	
	var _getCurrentTime2 = _interopRequireDefault(_getCurrentTime);
	
	var _padNumberWithZero = __webpack_require__(94);
	
	var _padNumberWithZero2 = _interopRequireDefault(_padNumberWithZero);
	
	var _parseQuery = __webpack_require__(95);
	
	var _parseQuery2 = _interopRequireDefault(_parseQuery);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _dom = __webpack_require__(96);
	
	var _dom2 = _interopRequireDefault(_dom);
	
	var _browser = __webpack_require__(98);
	
	var _browser2 = _interopRequireDefault(_browser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = Object.assign({
	    getCurrentTime: _getCurrentTime2.default,
	    padNumberWithZero: _padNumberWithZero2.default,
	    parseQuery: _parseQuery2.default,
	    parseUrlencoded: _parseUrlencoded2.default
	}, _dom2.default, _browser2.default);

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getCurrentTime;
	
	var _padNumberWithZero = __webpack_require__(94);
	
	var _padNumberWithZero2 = _interopRequireDefault(_padNumberWithZero);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getCurrentTime() {
	    var d = new Date();
	    var time = [d.getFullYear(), d.getMonth() + 1, d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds()];
	    return time.map(function (t) {
	        return (0, _padNumberWithZero2.default)(t);
	    }).join('');
	}

/***/ },
/* 94 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = padNumberWithZero;
	function padNumberWithZero(num) {
	    var numStrWithZero = void 0;
	    if (num < 10) {
	        numStrWithZero = '0' + num.toString();
	    } else {
	        numStrWithZero = num.toString();
	    }
	    return numStrWithZero;
	}

/***/ },
/* 95 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = parseQuery;
	function parseQuery(queryString) {
	    var params = queryString.split('&');
	    var object = {};
	    params.forEach(function (param) {
	        var key = param.split('=')[0];
	        var val = param.split('=')[1];
	        object[key] = val;
	    });
	    return object;
	}

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _isDescendant = __webpack_require__(97);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    isDescendant: _isDescendant2.default
	};

/***/ },
/* 97 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isDescendant;
	function isDescendant(parent, child) {
	    var node = child.parentNode;
	    while (node != null) {
	        if (node === parent) {
	            return true;
	        }
	        node = node.parentNode;
	    }
	    return false;
	}

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getScreenInfo = __webpack_require__(99);
	
	var _getScreenInfo2 = _interopRequireDefault(_getScreenInfo);
	
	var _isIE = __webpack_require__(100);
	
	var _isIE2 = _interopRequireDefault(_isIE);
	
	var _lockScroll = __webpack_require__(101);
	
	var _lockScroll2 = _interopRequireDefault(_lockScroll);
	
	var _unlockScroll = __webpack_require__(102);
	
	var _unlockScroll2 = _interopRequireDefault(_unlockScroll);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    getScreenInfo: _getScreenInfo2.default,
	    isIE: _isIE2.default,
	    lockScroll: _lockScroll2.default,
	    unlockScroll: _unlockScroll2.default
	};

/***/ },
/* 99 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getScreenInfo;
	function getScreenInfo() {
	    if (typeof window === 'undefined') {
	        console.error('window is undefined, empty info object will be returned!');
	        return {
	            view: {},
	            screen: {}
	        };
	    }
	    return {
	        view: {
	            width: window.innerWidth,
	            height: window.innerHeight,
	            aspectRatio: window.innerWidth / window.innerHeight
	        },
	        screen: window.screen
	    };
	}

/***/ },
/* 100 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.isIE = isIE;
	function isIE(ver) {
	    if (typeof ver === 'undefined') {
	        ver = null;
	    }
	    var b = document.createElement('b');
	    b.innerHTML = '<!--[if IE ' + ver + ']><i></i><![endif]-->';
	    return b.getElementsByTagName('i').length === 1;
	}

/***/ },
/* 101 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = lockScroll;
	function lockScroll() {
	    document.body.style.overflow = 'hidden';
	}

/***/ },
/* 102 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = unlockScroll;
	function unlockScroll() {
	    document.body.style.overflow = 'visible';
	}

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _normalizr = __webpack_require__(104);
	
	var book = new _normalizr.Schema('books', {
	    idAttribute: 'id'
	});
	var bookContent = new _normalizr.Schema('bookContents', {
	    idAttribute: 'id'
	});
	var author = new _normalizr.Schema('authors', {
	    idAttribute: 'id'
	});
	var collection = new _normalizr.Schema('bookCollections', {
	    idAttribute: 'id'
	});
	collection.define({
	    items: (0, _normalizr.arrayOf)(book)
	});
	var profile = new _normalizr.Schema('profiles', {
	    idAttribute: 'id'
	});
	var user = new _normalizr.Schema('users', {
	    idAttribute: 'id'
	});
	var doubanBook = new _normalizr.Schema('doubanBooks', {
	    idAttribute: 'id'
	});
	var shelfBook = new _normalizr.Schema('shelfBooks', {
	    idAttribute: 'id'
	});
	var bookProgress = new _normalizr.Schema('bookProgress', {
	    idAttribute: 'bookId'
	});
	var matchedBooks = new _normalizr.Schema('books', {
	    idAttribute: 'bookId'
	});
	exports.default = {
	    BOOK: book,
	    BOOK_CONTENT: bookContent,
	    BOOK_PROGRESS: bookProgress,
	    BOOK_ARRAY: (0, _normalizr.arrayOf)(book),
	    DOUBAN_BOOK_SEARCH_RESULTS: { books: (0, _normalizr.arrayOf)(doubanBook) },
	    USER_ARRAY: (0, _normalizr.arrayOf)(user),
	    MATCHED_BOOK_ARRAY: (0, _normalizr.arrayOf)(matchedBooks),
	    COLLECTION: collection,
	    COLLECTION_ARRAY: (0, _normalizr.arrayOf)(collection),
	    PROFILE: profile,
	    AUTHOR: author,
	    AUTHOR_ARRAY: (0, _normalizr.arrayOf)(author),
	    SHELF_BOOK_ARRAY: (0, _normalizr.arrayOf)(shelfBook)
	};

/***/ },
/* 104 */
/***/ function(module, exports) {

	module.exports = require("normalizr");

/***/ },
/* 105 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var REQUEST = 'REQUEST';
	var SUCCESS = 'SUCCESS';
	var FAILURE = 'FAILURE';
	var LOAD_CACHE = 'LOAD_CACHE';
	var action = exports.action = function action(type) {
	    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    return Object.assign({}, {
	        type: type
	    }, payload);
	};
	var createRequestTypes = exports.createRequestTypes = function createRequestTypes(base) {
	    return [REQUEST, SUCCESS, FAILURE, LOAD_CACHE].reduce(function (acc, type) {
	        acc[type] = 'api/' + base + '/' + type;
	        return acc;
	    }, {});
	};
	var createComponentActionType = exports.createComponentActionType = function createComponentActionType(name, operation) {
	    return 'components/' + name + '/' + operation;
	};
	var createSagaTriggerActionType = exports.createSagaTriggerActionType = function createSagaTriggerActionType(operation) {
	    return 'saga-triggers/' + operation;
	};
	var createActionEntity = exports.createActionEntity = function createActionEntity(requestTypes) {
	    return {
	        request: function request(payload) {
	            return action(requestTypes.REQUEST, payload);
	        },
	        success: function success(response, payload) {
	            return action(requestTypes.SUCCESS, Object.assign({}, { response: response }, payload));
	        },
	        // TODO
	        loadCache: function loadCache(response, payload) {
	            return action(requestTypes.SUCCESS, Object.assign({}, { response: response }, payload, { loadedFromCache: true }));
	        },
	        failure: function failure(error, payload) {
	            return action(requestTypes.FAILURE, Object.assign({}, { error: error }, payload));
	        }
	    };
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.VIEWER = exports.MODAL = exports.CLOSE_CONFIRM_MODAL = exports.OPEN_CONFIRM_MODAL = exports.NOTIFICATION = exports.SHELF = exports.AUTH = exports.PROFILE = exports.DOUBAN_BOOKS = exports.COLLECTION = exports.COLLECTIONS = exports.AUTHORS = exports.LOAD_BOOK_PROGRESS = exports.BOOK_PROGRESS = exports.USER_LOGOUT = exports.LOGOUT = exports.LOAD_USERS = exports.USERS = exports.LOAD_BOOKS = exports.BOOKS = exports.LOAD_BOOK_CONTENT = exports.BOOK_CONTENT = exports.LOAD_BOOK = exports.BOOK = exports.REMOVE_ENTITY = undefined;
	
	var _utils = __webpack_require__(105);
	
	/**
	 * api
	 */
	var REMOVE_ENTITY = exports.REMOVE_ENTITY = 'REMOVE_ENTITY';
	var BOOK = exports.BOOK = (0, _utils.createRequestTypes)('book');
	var LOAD_BOOK = exports.LOAD_BOOK = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK');
	var BOOK_CONTENT = exports.BOOK_CONTENT = (0, _utils.createRequestTypes)('book-content');
	var LOAD_BOOK_CONTENT = exports.LOAD_BOOK_CONTENT = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK_CONTENT');
	var BOOKS = exports.BOOKS = (0, _utils.createRequestTypes)('books');
	var LOAD_BOOKS = exports.LOAD_BOOKS = (0, _utils.createSagaTriggerActionType)('LOAD_BOOKS');
	var USERS = exports.USERS = (0, _utils.createRequestTypes)('users');
	var LOAD_USERS = exports.LOAD_USERS = (0, _utils.createSagaTriggerActionType)('LOAD_USERS');
	var LOGOUT = exports.LOGOUT = (0, _utils.createRequestTypes)('revoke');
	var USER_LOGOUT = exports.USER_LOGOUT = (0, _utils.createSagaTriggerActionType)('USER_LOGOUT');
	var BOOK_PROGRESS = exports.BOOK_PROGRESS = (0, _utils.createRequestTypes)('book-progress');
	var LOAD_BOOK_PROGRESS = exports.LOAD_BOOK_PROGRESS = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK_PROGRESS');
	var AUTHORS = exports.AUTHORS = (0, _utils.createRequestTypes)('authors');
	var COLLECTIONS = exports.COLLECTIONS = (0, _utils.createRequestTypes)('collections');
	var COLLECTION = exports.COLLECTION = (0, _utils.createRequestTypes)('collection');
	var DOUBAN_BOOKS = exports.DOUBAN_BOOKS = (0, _utils.createRequestTypes)('douban-books');
	var PROFILE = exports.PROFILE = (0, _utils.createRequestTypes)('profile');
	var AUTH = exports.AUTH = (0, _utils.createRequestTypes)('auth');
	var SHELF = exports.SHELF = (0, _utils.createRequestTypes)('shelf');
	/**
	 * components
	 */
	// general
	var NOTIFICATION = exports.NOTIFICATION = {
	    SHOW: (0, _utils.createComponentActionType)('notification', 'SHOW'),
	    HIDE: (0, _utils.createComponentActionType)('notification', 'HIDE')
	};
	var OPEN_CONFIRM_MODAL = exports.OPEN_CONFIRM_MODAL = (0, _utils.createComponentActionType)('confirm-modal', 'OPEN');
	var CLOSE_CONFIRM_MODAL = exports.CLOSE_CONFIRM_MODAL = (0, _utils.createComponentActionType)('confirm-modal', 'CLOSE');
	var MODAL = exports.MODAL = {
	    OPEN: (0, _utils.createComponentActionType)('modal', 'SHOW'),
	    CLOSE: (0, _utils.createComponentActionType)('modal', 'HIDE')
	};
	// viewer
	var VIEWER = exports.VIEWER = {
	    INITIALIZE: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'INITIALIZE')),
	    INITIALIZE_CONFIG: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'INITIALIZE_CONFIG')),
	    CONFIG: (0, _utils.createComponentActionType)('viewer', 'CONFIG'),
	    CALC_START: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'CALC_START')),
	    CALC_SUCCESS: (0, _utils.createComponentActionType)('viewer', 'CALC_SUCCESS'),
	    CALC_FAILURE: (0, _utils.createComponentActionType)('viewer', 'CALC_FAILURE'),
	    BOOK_PROGRESS_UPDATE: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer/progress', 'UPDATE')),
	    // TODO: 这个好像没用
	    BOOK_PROGRESS_INITIALIZE: (0, _utils.createComponentActionType)('viewer/progress', 'INITIALIZE'),
	    // TODO: 这个好像也没用
	    BOOK_PROGRESS_DESTROY: (0, _utils.createComponentActionType)('viewer/progress', 'DESTROY'),
	    JUMP: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'JUMP')),
	    FONT_CHANGE: (0, _utils.createComponentActionType)('viewer/preference', 'CHANGE_FONT_SIZE'),
	    PANEL_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/panel', 'TOGGLE'),
	    PREFERENCE_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/preference', 'TOGGLE'),
	    NAVIGATION_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/navigation', 'TOGGLE'),
	    THEME_CHANGE: (0, _utils.createComponentActionType)('viewer/theme', 'CHANGE'),
	    SCROLL_MODE_TOGGLE: (0, _utils.createComponentActionType)('viewer/scroll-mode', 'TOGGLE')
	};

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.sendNotification = undefined;
	exports.showNotification = showNotification;
	exports.hideNotification = hideNotification;
	exports.openConfirmModal = openConfirmModal;
	exports.closeConfirmModal = closeConfirmModal;
	exports.openModal = openModal;
	exports.closeModal = closeModal;
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var sendNotification = exports.sendNotification = function sendNotification(message) {
	    var msgType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'success';
	    var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2000;
	
	    return function (dispatch, getState) {
	        var id = Math.random().toFixed(8).substr(2);
	        dispatch(showNotification(id, message, msgType));
	        if (t !== 0) {
	            setTimeout(function () {
	                dispatch(hideNotification(id));
	            }, t);
	        }
	    };
	};
	function showNotification(id, message) {
	    var msgType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'success';
	
	    return {
	        type: ActionTypes.NOTIFICATION.SHOW,
	        message: message,
	        msgType: msgType,
	        id: id
	    };
	}
	function hideNotification(id) {
	    return {
	        type: ActionTypes.NOTIFICATION.HIDE,
	        id: id
	    };
	}
	function openConfirmModal(data) {
	    return {
	        type: ActionTypes.OPEN_CONFIRM_MODAL,
	        data: data
	    };
	}
	function closeConfirmModal() {
	    return {
	        type: ActionTypes.CLOSE_CONFIRM_MODAL
	    };
	}
	function openModal(data) {
	    return {
	        type: ActionTypes.MODAL.OPEN,
	        data: data
	    };
	}
	function closeModal() {
	    return {
	        type: ActionTypes.MODAL.CLOSE
	    };
	}

/***/ },
/* 108 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var loadSomething = exports.loadSomething = function loadSomething() {
	    return {
	        type: 'LOAD'
	    };
	};
	var saveSomething = exports.saveSomething = function saveSomething() {
	    return {
	        type: 'SAVE'
	    };
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.toggleViewerScrollMode = exports.changeViewerTheme = exports.changeViewerFontSize = exports.toggleViewerNavigation = exports.toggleViewerPreference = exports.toggleViewerPanel = exports.viewerJumpTo = exports.destroyBookProgress = exports.updateBookProgress = exports.initializeBookProgress = exports.calcBookFailure = exports.calcBookSuccess = exports.calcBook = exports.configViewer = exports.initializeViewer = exports.initializeViewerConfig = undefined;
	
	var _selectors = __webpack_require__(110);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// viewer
	var initializeViewerConfig = exports.initializeViewerConfig = function initializeViewerConfig(bookId) {
	    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    return { bookId: bookId, config: config, type: ACTION_TYPES.VIEWER.INITIALIZE_CONFIG };
	};
	var initializeViewer = exports.initializeViewer = function initializeViewer(bookId) {
	    return { bookId: bookId, type: ACTION_TYPES.VIEWER.INITIALIZE };
	};
	var configViewer = exports.configViewer = function configViewer(bookId, payload) {
	    return {
	        bookId: bookId,
	        payload: payload,
	        type: ACTION_TYPES.VIEWER.CONFIG
	    };
	};
	// book
	var calcBook = exports.calcBook = function calcBook(bookId, wrap) {
	    return {
	        bookId: bookId,
	        wrap: wrap,
	        type: ACTION_TYPES.VIEWER.CALC_START
	    };
	};
	var calcBookSuccess = exports.calcBookSuccess = function calcBookSuccess(bookId, computed) {
	    return {
	        bookId: bookId,
	        computed: computed,
	        type: ACTION_TYPES.VIEWER.CALC_SUCCESS
	    };
	};
	var calcBookFailure = exports.calcBookFailure = function calcBookFailure(bookId, error) {
	    return {
	        bookId: bookId,
	        error: error,
	        type: ACTION_TYPES.VIEWER.CALC_FAILURE
	    };
	};
	var initializeBookProgress = exports.initializeBookProgress = function initializeBookProgress() {
	    return { type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_INITIALIZE };
	};
	// progress
	var updateBookProgress = exports.updateBookProgress = function updateBookProgress(percentage) {
	    return function (dispatch, getState) {
	        _helpers2.default.print('Action updateBookProgress');
	        var state = getState();
	
	        var _selectors$viewer$con = selectors.viewer.config(state);
	
	        var bookId = _selectors$viewer$con.bookId;
	
	        var computed = selectors.viewer.computed(bookId)(state);
	        var pageNo = Math.floor(computed.length * percentage) + 1;
	        return dispatch({
	            id: bookId,
	            percentage: percentage,
	            pageNo: pageNo,
	            type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE
	        });
	    };
	};
	var destroyBookProgress = exports.destroyBookProgress = function destroyBookProgress() {
	    return {
	        type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_DESTROY
	    };
	};
	var viewerJumpTo = exports.viewerJumpTo = function viewerJumpTo(percentage) {
	    return { type: ACTION_TYPES.VIEWER.JUMP, percentage: percentage };
	};
	// sub components
	var toggleViewerPanel = exports.toggleViewerPanel = function toggleViewerPanel(reset) {
	    return { type: ACTION_TYPES.VIEWER.PANEL_TOGGLE, reset: reset };
	};
	var toggleViewerPreference = exports.toggleViewerPreference = function toggleViewerPreference(reset) {
	    return { type: ACTION_TYPES.VIEWER.PREFERENCE_TOGGLE, reset: reset };
	};
	var toggleViewerNavigation = exports.toggleViewerNavigation = function toggleViewerNavigation(reset) {
	    return { type: ACTION_TYPES.VIEWER.NAVIGATION_TOGGLE, reset: reset };
	};
	// config
	var changeViewerFontSize = exports.changeViewerFontSize = function changeViewerFontSize(fontSizeInPixel) {
	    return { type: ACTION_TYPES.VIEWER.FONT_CHANGE, fontSize: fontSizeInPixel };
	};
	var changeViewerTheme = exports.changeViewerTheme = function changeViewerTheme(themeName) {
	    return { type: ACTION_TYPES.VIEWER.THEME_CHANGE, theme: themeName };
	};
	var toggleViewerScrollMode = exports.toggleViewerScrollMode = function toggleViewerScrollMode(reset) {
	    return { type: ACTION_TYPES.VIEWER.SCROLL_MODE_TOGGLE, reset: reset };
	};

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.viewer = exports.form = exports.common = undefined;
	
	var _entities = __webpack_require__(111);
	
	Object.keys(_entities).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _entities[key];
	    }
	  });
	});
	
	var _common = __webpack_require__(113);
	
	var common = _interopRequireWildcard(_common);
	
	var _betterReduxForm = __webpack_require__(114);
	
	var _viewer = __webpack_require__(115);
	
	var viewer = _interopRequireWildcard(_viewer);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.common = common;
	exports.form = _betterReduxForm.selectors;
	exports.viewer = viewer;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.sessionUserId = exports.users = exports.booksAsOptions = exports.authorsAsOptions = exports.doubanBooksAsOptions = exports.books = exports.shelfBooks = exports.authors = exports.doubanBooks = undefined;
	
	var _reselect = __webpack_require__(112);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(113);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var doubanBooks = exports.doubanBooks = function doubanBooks(key) {
	    return (0, _reselect.createSelector)((0, _common.pagedEntities)({
	        entitiesName: 'doubanBooks',
	        paginationName: 'doubanBooks',
	        paginationKey: key
	    }), function (books) {
	        return books;
	    });
	};
	var authors = exports.authors = function authors(key) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'authors',
	        paginationName: 'authors',
	        paginationKey: key
	    });
	};
	var shelfBooks = exports.shelfBooks = function shelfBooks(key) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'shelfBooks',
	        paginationName: 'bookShelves',
	        paginationKey: key
	    });
	};
	var books = exports.books = function books(key, page) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'books',
	        paginationName: 'books',
	        paginationKey: key,
	        page: page
	    });
	};
	var doubanBooksAsOptions = exports.doubanBooksAsOptions = function doubanBooksAsOptions(key) {
	    return (0, _reselect.createSelector)(doubanBooks(key), function (selectedBooks) {
	        return selectedBooks.map(function (book) {
	            return {
	                name: book.title,
	                value: book.id,
	                additional: {
	                    description: book.summary,
	                    cover: book.images.large,
	                    author: book.author.join(', ')
	                }
	            };
	        });
	    });
	};
	var authorsAsOptions = exports.authorsAsOptions = function authorsAsOptions(key) {
	    return (0, _reselect.createSelector)(authors(key), function (items) {
	        return items.map(function (item) {
	            return {
	                name: item.name,
	                value: item.id
	            };
	        });
	    });
	};
	var booksAsOptions = exports.booksAsOptions = function booksAsOptions(key) {
	    return (0, _reselect.createSelector)(books(key), function (items) {
	        return items.map(function (item) {
	            return {
	                name: item.title,
	                value: item.id
	            };
	        });
	    });
	};
	var users = exports.users = (0, _common.pagedEntities)({
	    entitiesName: 'users',
	    paginationName: 'users'
	});
	var sessionUserId = exports.sessionUserId = function sessionUserId(state) {
	    return _lodash2.default.get(state, ['session', 'user', 'id']);
	};

/***/ },
/* 112 */
/***/ function(module, exports) {

	module.exports = require("reselect");

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.pagedEntities = exports.entityPages = exports.currentPage = exports.nextPage = exports.paginationLinks = exports.paginationPages = exports.isPaginationFetching = exports.entity = exports.entities = exports.session = undefined;
	
	var _reselect = __webpack_require__(112);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DEFAULT_KEY = 'default';
	var session = exports.session = function session(state) {
	    return _lodash2.default.get(state, ['session'], {});
	};
	var entities = exports.entities = function entities(name) {
	    return function (state) {
	        return state.entities[name] || {};
	    };
	};
	var entity = exports.entity = function entity(name, id) {
	    return function (state) {
	        return _lodash2.default.get(state, ['entities', name, id], {});
	    };
	};
	var isPaginationFetching = exports.isPaginationFetching = function isPaginationFetching(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.get(state, ['pagination', name, key, 'isFetching'], true);
	    };
	};
	var paginationPages = exports.paginationPages = function paginationPages(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.get(state, ['pagination', name, key, 'pages'], {});
	    };
	};
	var paginationLinks = exports.paginationLinks = function paginationLinks(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.pick(_lodash2.default.get(state.pagination, name + '.' + key, {}), ['next', 'last']);
	    };
	};
	var nextPage = exports.nextPage = function nextPage(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return (0, _reselect.createSelector)(paginationLinks(name, key), function (selectedPaginationLinks) {
	        return _lodash2.default.get(selectedPaginationLinks, 'next.page', 0);
	    });
	};
	var currentPage = exports.currentPage = function currentPage(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return (0, _reselect.createSelector)(paginationLinks(name, key), function (selectedPaginationLinks) {
	        var next = _lodash2.default.get(selectedPaginationLinks, 'next.page');
	        var last = _lodash2.default.get(selectedPaginationLinks, 'last.page');
	        return next ? next - 1 : last;
	    });
	};
	var entityPages = exports.entityPages = function entityPages(options) {
	    var entitiesName = options.entitiesName;
	    var paginationName = options.paginationName;
	    var paginationKey = options.paginationKey;
	
	    return (0, _reselect.createSelector)(entities(entitiesName), paginationPages(paginationName, paginationKey), function (selectedEntities, pages) {
	        return _lodash2.default.mapValues(pages, function (ids) {
	            return ids.map(function (id) {
	                return selectedEntities[id];
	            }).filter(function (item) {
	                return Boolean(item);
	            });
	        });
	    });
	};
	var pagedEntities = exports.pagedEntities = function pagedEntities(options) {
	    var page = options.page;
	
	    return (0, _reselect.createSelector)(entityPages(options), function (pages) {
	        if (page) {
	            return _lodash2.default.get(pages, [page], []);
	        }
	        var allEntities = [];
	        _lodash2.default.keys(pages).forEach(function (p) {
	            allEntities = allEntities.concat(pages[p]);
	        });
	        return allEntities;
	    });
	};

/***/ },
/* 114 */
/***/ function(module, exports) {

	module.exports = require("better-redux-form");

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.navigation = exports.preference = exports.panel = exports.progress = exports.navData = exports.computed = exports.config = exports.self = undefined;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(113);
	
	var common = _interopRequireWildcard(_common);
	
	var _reselect = __webpack_require__(112);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var self = exports.self = function self(state) {
	    return _lodash2.default.get(state, ['components', 'viewer'], {});
	};
	var config = exports.config = function config(state) {
	    return _lodash2.default.get(state, ['components', 'viewer', 'config'], {});
	};
	var computed = exports.computed = function computed(bookId) {
	    return function (state) {
	        return _lodash2.default.get(state, ['components', 'viewer', 'contents', bookId, 'computed'], []);
	    };
	};
	var navData = exports.navData = function navData(bookId) {
	    return function (state) {
	        var bookContent = common.entity('bookContents', bookId)(state);
	        return _lodash2.default.get(bookContent, 'nav', []);
	    };
	};
	var progress = exports.progress = function progress(bookId) {
	    return function (state) {
	        return _lodash2.default.get(state, ['components', 'viewer', 'progress', bookId], {});
	    };
	};
	// sub components
	var panel = exports.panel = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'panel'], {});
	});
	var preference = exports.preference = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'preference'], {});
	});
	var navigation = exports.navigation = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'navigation'], {});
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Alert = exports.Alerts = undefined;
	
	var _Alert = __webpack_require__(117);
	
	var _Alert2 = _interopRequireDefault(_Alert);
	
	var _Alerts = __webpack_require__(133);
	
	var _Alerts2 = _interopRequireDefault(_Alerts);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Alerts = _Alerts2.default;
	exports.Alert = _Alert2.default;
	exports.default = _Alert2.default;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Icon = __webpack_require__(118);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(131);
	var Alert = function (_Component) {
	    _inherits(Alert, _Component);
	
	    function Alert() {
	        _classCallCheck(this, Alert);
	
	        return _possibleConstructorReturn(this, (Alert.__proto__ || Object.getPrototypeOf(Alert)).apply(this, arguments));
	    }
	
	    _createClass(Alert, [{
	        key: "render",
	        value: function render() {
	            var type = this.props.type ? this.props.type : 'success';
	            return _react2.default.createElement("div", null, this.props.visible && _react2.default.createElement("div", { styleName: "alert--" + type }, _react2.default.createElement("div", { styleName: "alert-close" }, _react2.default.createElement(_Icon2.default, { onClick: this.props.onRequestClose, name: "close", size: 15 })), _react2.default.createElement("div", { styleName: "content" }, this.props.message)));
	        }
	    }]);
	
	    return Alert;
	}(_react.Component);
	Alert = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Alert);
	exports.default = Alert;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Icon = __webpack_require__(119);
	
	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Icon2.default;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(120);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _svgIcons = __webpack_require__(121);
	
	var _svgIcons2 = _interopRequireDefault(_svgIcons);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(123);
	var Icon = function (_Component) {
	    _inherits(Icon, _Component);
	
	    function Icon(props) {
	        _classCallCheck(this, Icon);
	
	        return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).call(this, props));
	    }
	
	    _createClass(Icon, [{
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var name = _props.name;
	            var onClick = _props.onClick;
	            var size = _props.size;
	
	            var className = (0, _classnames2.default)('icon', "icon-" + name, this.props.className);
	            if (typeof _svgIcons2.default[name] === 'undefined') {
	                console.error('Icon name (%s) not found! ', name);
	            }
	            size = size || 30;
	            var svgWrapStyle = {
	                position: 'absolute',
	                top: '50%',
	                marginTop: -size / 2
	            };
	            return _react2.default.createElement("span", { styleName: "icon", style: { minWidth: size, minHeight: size }, className: className, onClick: onClick }, _react2.default.createElement("div", { style: svgWrapStyle }, _react2.default.createElement("svg", __assign({}, _svgIcons2.default[name].viewBox && { viewBox: _svgIcons2.default[name].viewBox }, { width: size, height: size, styleName: "svg-shape" }), _react2.default.createElement("path", { d: _svgIcons2.default[name].path }))));
	        }
	    }]);
	
	    return Icon;
	}(_react.Component);
	Icon = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Icon);
	exports.default = Icon;

/***/ },
/* 120 */
/***/ function(module, exports) {

	module.exports = require("classnames");

/***/ },
/* 121 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    close: {
	        path: 'M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z',
	        viewBox: '0 0 12 16'
	    },
	    star: {
	        path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z'
	    },
	    users: {
	        path: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z'
	    },
	    folder: {
	        path: 'M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z'
	    },
	    database: {
	        path: 'M20.2 5.9l.8-.8C19.6 3.7 17.8 3 16 3s-3.6.7-5 2.1l.8.8C13 4.8 14.5 4.2 16 4.2s3 .6 4.2 1.7zm-.9.8c-.9-.9-2.1-1.4-3.3-1.4s-2.4.5-3.3 1.4l.8.8c.7-.7 1.6-1 2.5-1 .9 0 1.8.3 2.5 1l.8-.8zM19 13h-2V9h-2v4H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zM8 18H6v-2h2v2zm3.5 0h-2v-2h2v2zm3.5 0h-2v-2h2v2z'
	    },
	    statistics: {
	        path: 'M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z'
	    },
	    books: {
	        path: 'M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z'
	    },
	    back: {
	        // path: 'M732 832l-55 55l-505 -505l505 -505l55 54l-451 451z'
	        // path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z',
	        path: 'm 26,25 c -0.467574,0 -0.909434,0.16865 -1.25,0.4375 C 24.555279,25.591215 6.6130516,42.546285 6.46875,42.71875 6.1782332,43.06596 6,43.51187 6,44 6,44.51946 6.2065566,44.98818 6.53125,45.34375 6.6683992,45.493941 24.625,62.4375 24.625,62.4375 c 0.759842,0.725152 2.121842,0.700421 2.84375,-0.0625 0.721908,-0.76293 0.672244,-2.125099 -0.09375,-2.84375 L 13.03125,46 64,46 c 13.888871,0 25.660392,11.63955 26,26.03125 0.0035,0.140557 0,0.77485 0,0.96875 0,1.108 0.892,2 2,2 1.108,0 2,-0.892 2,-2 l 0,-1.0625 C 93.610208,55.4194 80.118529,42 64,42 L 13.03125,42 C 13.03125,42 27.362732,28.495959 27.5,28.34375 27.81971,27.98925 28,27.51497 28,27 28,25.89543 27.104569,25 26,25 z',
	        viewBox: '0 0 100 125'
	    },
	    preference: {
	        path: 'M 17.78125 8.96875 A 2.0002 2.0002 0 0 0 16 11 L 16 56.25 C 12.008188 57.168302 9 60.741406 9 65 C 9 69.259224 12.007427 72.863534 16 73.78125 L 16 89 A 2.0002 2.0002 0 1 0 20 89 L 20 73.78125 C 23.992573 72.863534 27 69.259224 27 65 C 27 60.741406 23.991812 57.168302 20 56.25 L 20 11 A 2.0002 2.0002 0 0 0 17.78125 8.96875 z M 49.78125 8.96875 A 2.0002 2.0002 0 0 0 48 11 L 48 26.25 C 44.008188 27.168305 41 30.741423 41 35 C 41 39.25912 44.007427 42.863511 48 43.78125 L 48 89 A 2.0002 2.0002 0 1 0 52 89 L 52 43.78125 C 55.992573 42.863511 59 39.25912 59 35 C 59 30.741423 55.991812 27.168305 52 26.25 L 52 11 A 2.0002 2.0002 0 0 0 49.78125 8.96875 z M 81.78125 8.96875 A 2.0002 2.0002 0 0 0 80 11 L 80 56.25 C 76.008188 57.168302 73 60.741406 73 65 C 73 69.259224 76.007427 72.863534 80 73.78125 L 80 89 A 2.0002 2.0002 0 1 0 84 89 L 84 73.78125 C 87.992573 72.863534 91 69.259224 91 65 C 91 60.741406 87.991812 57.168302 84 56.25 L 84 11 A 2.0002 2.0002 0 0 0 81.78125 8.96875 z M 50 30 C 52.785116 30 55 32.21488 55 35 C 55 37.78512 52.785116 40 50 40 C 47.214884 40 45 37.78512 45 35 C 45 32.21488 47.214884 30 50 30 z M 18 60 C 20.785116 60 23 62.2149 23 65 C 23 67.7852 20.785116 70 18 70 C 15.214884 70 13 67.7852 13 65 C 13 62.2149 15.214884 60 18 60 z M 82 60 C 84.785116 60 87 62.2149 87 65 C 87 67.7852 84.785116 70 82 70 C 79.214884 70 77 67.7852 77 65 C 77 62.2149 79.214884 60 82 60 z ',
	        viewBox: '0 0 100 125'
	    },
	    font: {
	        // path: 'M14 8.77v-1.6l-1.94-.64-.45-1.09.88-1.84-1.13-1.13-1.81.91-1.09-.45-.69-1.92h-1.6l-.63 1.94-1.11.45-1.84-.88-1.13 1.13.91 1.81-.45 1.09L0 7.23v1.59l1.94.64.45 1.09-.88 1.84 1.13 1.13 1.81-.91 1.09.45.69 1.92h1.59l.63-1.94 1.11-.45 1.84.88 1.13-1.13-.92-1.81.47-1.09L14 8.75v.02zM7 11c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z'
	        path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z'
	    },
	    arrowRight: {
	        path: 'M-290.9,430.1l-0.7-0.7l8.2-8.6l-8.2-8.2l0.7-0.7l8.9,8.9L-290.9,430.1z',
	        viewBox: '-292 411.9 11 18'
	    }
	};

/***/ },
/* 122 */
/***/ function(module, exports) {

	module.exports = require("react-css-modules");

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(124);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".svg-shape_423Wb {\n  fill: currentColor;\n  overflow: hidden; }\n\n.icon_2s6T3 {\n  display: inline-block;\n  position: relative; }\n", ""]);
	
	// exports
	exports.locals = {
		"svg-shape": "svg-shape_423Wb",
		"icon": "icon_2s6T3"
	};

/***/ },
/* 125 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _assign = __webpack_require__(127);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _stringify = __webpack_require__(128);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _slicedToArray2 = __webpack_require__(129);
	
	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);
	
	var _getIterator2 = __webpack_require__(130);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Isomorphic CSS style loader for Webpack
	 *
	 * Copyright © 2015-2016 Kriasoft, LLC. All rights reserved.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE.txt file in the root directory of this source tree.
	 */
	
	var prefix = 's';
	var inserted = {};
	
	// Base64 encoding and decoding - The "Unicode Problem"
	// https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem
	function b64EncodeUnicode(str) {
	  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {
	    return String.fromCharCode('0x' + p1);
	  }));
	}
	
	/**
	 * Remove style/link elements for specified node IDs
	 * if they are no longer referenced by UI components.
	 */
	function removeCss(ids) {
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = (0, _getIterator3.default)(ids), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var id = _step.value;
	
	      if (--inserted[id] <= 0) {
	        var elem = document.getElementById(prefix + id);
	        if (elem) {
	          elem.parentNode.removeChild(elem);
	        }
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	}
	
	/**
	 * Example:
	 *   // Insert CSS styles object generated by `css-loader` into DOM
	 *   var removeCss = insertCss([[1, 'body { color: red; }']]);
	 *
	 *   // Remove it from the DOM
	 *   removeCss();
	 */
	function insertCss(styles, options) {
	  var _Object$assign = (0, _assign2.default)({
	    replace: false,
	    prepend: false
	  }, options);
	
	  var replace = _Object$assign.replace;
	  var prepend = _Object$assign.prepend;
	
	
	  var ids = [];
	  for (var i = 0; i < styles.length; i++) {
	    var _styles$i = (0, _slicedToArray3.default)(styles[i], 4);
	
	    var moduleId = _styles$i[0];
	    var css = _styles$i[1];
	    var media = _styles$i[2];
	    var sourceMap = _styles$i[3];
	
	    var id = moduleId + '-' + i;
	
	    ids.push(id);
	
	    if (inserted[id]) {
	      if (!replace) {
	        inserted[id]++;
	        continue;
	      }
	    }
	
	    inserted[id] = 1;
	
	    var elem = document.getElementById(prefix + id);
	    var create = false;
	
	    if (!elem) {
	      create = true;
	
	      elem = document.createElement('style');
	      elem.setAttribute('type', 'text/css');
	      elem.id = prefix + id;
	
	      if (media) {
	        elem.setAttribute('media', media);
	      }
	    }
	
	    var cssText = css;
	    if (sourceMap) {
	      cssText += '\n/*# sourceMappingURL=data:application/json;base64,' + b64EncodeUnicode((0, _stringify2.default)(sourceMap)) + '*/';
	      cssText += '\n/*# sourceURL=' + sourceMap.file + '*/';
	    }
	
	    if ('textContent' in elem) {
	      elem.textContent = cssText;
	    } else {
	      elem.styleSheet.cssText = cssText;
	    }
	
	    if (create) {
	      if (prepend) {
	        document.head.insertBefore(elem, document.head.childNodes[0]);
	      } else {
	        document.head.appendChild(elem);
	      }
	    }
	  }
	
	  return removeCss.bind(null, ids);
	}
	
	module.exports = insertCss;

/***/ },
/* 127 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/object/assign");

/***/ },
/* 128 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/json/stringify");

/***/ },
/* 129 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/slicedToArray");

/***/ },
/* 130 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/get-iterator");

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(132);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".alerts_lNYyS {\n  position: fixed;\n  width: 100%;\n  padding: 0 20px;\n  top: 10px;\n  left: 0;\n  z-index: 9999; }\n\n.alert_Tg6AL, .alert--success_ibIol, .alert--error_36iOd, .alert--warning_6_19X {\n  padding: 10px 0;\n  font-size: 16px;\n  text-align: center;\n  background: #fff;\n  position: relative;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.32);\n  font-size: 1rem;\n  font-weight: bold;\n  border-radius: 3px;\n  width: 700px;\n  margin: 0 auto 10px; }\n  @media (max-width: 540px) {\n    .alert_Tg6AL, .alert--success_ibIol, .alert--error_36iOd, .alert--warning_6_19X {\n      max-width: 100%; } }\n\n.content_2CILg {\n  overflow: hidden;\n  padding: 0 30px; }\n\n.alert-close_3Ckz- {\n  cursor: pointer;\n  position: absolute;\n  right: 10px;\n  top: 11px;\n  display: inline-block; }\n\n.alert--success_ibIol {\n  background: #72efa8;\n  color: #204d33; }\n\n.alert--error_36iOd {\n  background: #cc0000;\n  color: #fff; }\n\n.alert--warning_6_19X {\n  background: orange;\n  color: black; }\n", ""]);
	
	// exports
	exports.locals = {
		"alerts": "alerts_lNYyS",
		"alert": "alert_Tg6AL",
		"alert--success": "alert--success_ibIol",
		"alert--error": "alert--error_36iOd",
		"alert--warning": "alert--warning_6_19X",
		"content": "content_2CILg",
		"alert-close": "alert-close_3Ckz-"
	};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Alert = __webpack_require__(117);
	
	var _Alert2 = _interopRequireDefault(_Alert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(131);
	function Alerts(props) {
	    return _react2.default.createElement("div", { className: styles.alerts }, props.messages.map(function (msg, index) {
	        return _react2.default.createElement(_Alert2.default, { key: index, type: msg.type, message: msg.content, visible: msg.visible, onRequestClose: function onRequestClose() {
	                props.onRequestClose(msg.id);
	            } });
	    }));
	}
	exports.default = Alerts;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ConfirmModal = exports.ModalPlus = undefined;
	
	var _Modal = __webpack_require__(135);
	
	Object.keys(_Modal).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Modal[key];
	    }
	  });
	});
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _ModalPlus = __webpack_require__(144);
	
	var _ModalPlus2 = _interopRequireDefault(_ModalPlus);
	
	var _ConfirmModal = __webpack_require__(145);
	
	var _ConfirmModal2 = _interopRequireDefault(_ConfirmModal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Modal2.default;
	exports.ModalPlus = _ModalPlus2.default;
	exports.ConfirmModal = _ConfirmModal2.default;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(136);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _utils = __webpack_require__(92);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _Fade = __webpack_require__(137);
	
	var _Fade2 = _interopRequireDefault(_Fade);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(142);
	var Modal = function (_Component) {
	    _inherits(Modal, _Component);
	
	    function Modal(props) {
	        _classCallCheck(this, Modal);
	
	        var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));
	
	        _this.state = {
	            modalHeight: 0,
	            isModalHidden: false,
	            isModalVerticalCenter: true
	        };
	        _this.setView = _this.setView.bind(_this);
	        _this.hideModal = _this.hideModal.bind(_this);
	        return _this;
	    }
	
	    _createClass(Modal, [{
	        key: "hideModal",
	        value: function hideModal() {
	            this.props.onRequestClose();
	            _utils2.default.unlockScroll();
	            window.removeEventListener('resize', this.setView);
	        }
	    }, {
	        key: "setView",
	        value: function setView() {
	            var modalHeight = _reactDom2.default.findDOMNode(this.modal).clientHeight;
	            var isModalVerticalCenter = true;
	            var documentHeight = document.body.clientHeight;
	            if (window.innerHeight < modalHeight) {
	                isModalVerticalCenter = false;
	            }
	            if (window.innerHeight > document.body.clientHeight) {
	                documentHeight = window.innerHeight;
	            }
	            this.setState({
	                modalHeight: modalHeight,
	                isModalVerticalCenter: isModalVerticalCenter,
	                documentHeight: documentHeight
	            });
	        }
	    }, {
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {}
	    }, {
	        key: "componentDidUpdate",
	        value: function componentDidUpdate(prevProps) {
	            // modal show
	            if (!prevProps.open && this.props.open === true) {
	                this.setView();
	                _utils2.default.lockScroll();
	                window.addEventListener('resize', this.setView);
	            }
	            // modal hide
	            if (prevProps.open === true && this.props.open === false) {
	                window.removeEventListener('resize', this.setView);
	                _utils2.default.unlockScroll();
	            }
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            window.removeEventListener('resize', this.setView);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var open = this.props.open;
	
	            var defaultClass = 'modal';
	            var modalId = "modal-" + new Date().valueOf();
	            var className = this.props.className ? defaultClass + " " + this.props.className : defaultClass;
	            var width = this.props.width ? this.props.width : 500;
	            var height = this.state.modalHeight;
	            var style = {
	                backdrop: {},
	                verticalCenter: {},
	                scroll: {},
	                modal: {}
	            };
	            style.backdrop = {
	                position: 'fixed',
	                height: '100%',
	                width: '100%',
	                left: 0,
	                top: 0,
	                background: 'rgba(0, 0, 0, 0.23)',
	                overflow: 'scroll'
	            };
	            style.verticalCenter = {
	                width: width,
	                marginTop: -height / 2,
	                marginLeft: -width / 2,
	                position: 'absolute',
	                left: '50%',
	                top: '50%'
	            };
	            style.scroll = {
	                width: width,
	                margin: '50px auto'
	            };
	            style.modal = {};
	            if (this.state.isModalVerticalCenter) {
	                style.modal = Object.assign({}, style.modal, style.verticalCenter);
	            } else {
	                style.modal = Object.assign({}, style.modal, style.scroll);
	            }
	            return _react2.default.createElement(_Fade2.default, null, open === true ? _react2.default.createElement("div", { onClick: function onClick(e) {
	                    // 使用阻止冒泡会造成问题
	                    if (e.target.querySelector("#" + modalId)) {
	                        _this2.hideModal();
	                    }
	                }, styleName: "modal-backdrop", style: style.backdrop }, _react2.default.createElement("div", { id: modalId, style: style.modal, className: className, styleName: "modal", ref: function ref(_ref) {
	                    _this2.modal = _ref;
	                } }, this.props.children)) : null);
	        }
	    }]);
	
	    return Modal;
	}(_react.Component);
	Modal = __decorate([(0, _reactCssModules2.default)(styles)], Modal);
	exports.default = Modal;

/***/ },
/* 136 */
/***/ function(module, exports) {

	module.exports = require("react-dom");

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Fade = __webpack_require__(138);
	
	var _Fade2 = _interopRequireDefault(_Fade);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Fade2.default;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(139);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(140);
	
	exports.default = function (props) {
	    return _react2.default.createElement(_reactAddonsCssTransitionGroup2.default, { component: "div", transitionName: styles, transitionEnterTimeout: 300, transitionLeaveTimeout: 300 }, props.children);
	};

/***/ },
/* 139 */
/***/ function(module, exports) {

	module.exports = require("react-addons-css-transition-group");

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(141);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  --time: .3s; }\n\n.enter_b08lF {\n  opacity: 0.01;\n  transition: opacity var(--time) ease-in; }\n\n.enterActive_2lPGz {\n  opacity: 1; }\n\n.leave_3S2Q- {\n  opacity: 1;\n  transition: opacity var(--time) ease-in; }\n\n.leaveActive_2i4qH {\n  opacity: 0; }\n", ""]);
	
	// exports
	exports.locals = {
		"enter": "enter_b08lF",
		"enterActive": "enterActive_2lPGz",
		"leave": "leave_3S2Q-",
		"leaveActive": "leaveActive_2i4qH"
	};

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(143);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".modal_20AZ1 {\n  background: #fff;\n  padding: 0;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);\n  border-radius: 3px; }\n  .modal_20AZ1 .icon-close_5uuLa {\n    cursor: pointer; }\n\n.modal-backdrop_3rq0k {\n  z-index: 900; }\n\n.modal-body_2gT23 {\n  margin: 10px 0 0; }\n\n.modal-header_2dz68 {\n  margin: 10px 0; }\n\n.modal-title_8pOfE {\n  font-size: 1.4rem;\n  font-weight: normal;\n  color: #333;\n  margin: 5px 0; }\n\n.modal-footer_fyZtS {\n  border-top: 3px solid #e9ebf2;\n  text-align: right;\n  overflow: hidden; }\n  .modal-footer_fyZtS .btn-red_3zomi {\n    float: left;\n    margin-left: 0; }\n  .modal-footer_fyZtS button {\n    margin: 5px 0 5px 10px; }\n\n.modal-content_3ZIHb {\n  margin: 15px 0;\n  line-height: 1.5; }\n\n.confirm-modal_k5GF0 {\n  background: #fff;\n  padding: 20px 30px; }\n  .confirm-modal_k5GF0 p {\n    font-size: 1.2rem; }\n\n.modal-plus_1_TST {\n  padding: 20px 30px; }\n", ""]);
	
	// exports
	exports.locals = {
		"modal": "modal_20AZ1",
		"icon-close": "icon-close_5uuLa",
		"modal-backdrop": "modal-backdrop_3rq0k",
		"modal-body": "modal-body_2gT23",
		"modal-header": "modal-header_2dz68",
		"modal-title": "modal-title_8pOfE",
		"modal-footer": "modal-footer_fyZtS",
		"btn-red": "btn-red_3zomi",
		"modal-content": "modal-content_3ZIHb",
		"confirm-modal": "confirm-modal_k5GF0",
		"modal-plus": "modal-plus_1_TST"
	};

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Modal = __webpack_require__(135);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(142);
	var ModalPlus = function (_Component) {
	    _inherits(ModalPlus, _Component);
	
	    function ModalPlus(props) {
	        _classCallCheck(this, ModalPlus);
	
	        return _possibleConstructorReturn(this, (ModalPlus.__proto__ || Object.getPrototypeOf(ModalPlus)).call(this, props));
	    }
	
	    _createClass(ModalPlus, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var title = _props.title;
	            var open = _props.open;
	            var onRequestClose = _props.onRequestClose;
	            var width = _props.width;
	            var actions = _props.actions;
	
	            return _react2.default.createElement(_Modal2.default, { open: open, onRequestClose: onRequestClose, width: width || 600 }, _react2.default.createElement("div", { styleName: "modal-plus" }, title && _react2.default.createElement("div", { styleName: "modal-header" }, _react2.default.createElement("h1", { styleName: "modal-title" }, title)), _react2.default.createElement("div", { styleName: "modal-body" }, this.props.children), actions && actions.map(function (action, index) {
	                return _react2.default.cloneElement(action, {
	                    key: index
	                });
	            })));
	        }
	    }]);
	
	    return ModalPlus;
	}(_react.Component);
	ModalPlus = __decorate([(0, _reactCssModules2.default)(styles)], ModalPlus);
	exports.default = ModalPlus;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Modal = __webpack_require__(134);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _ModalFooter = __webpack_require__(146);
	
	var _ModalFooter2 = _interopRequireDefault(_ModalFooter);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(142);
	var Dialog = function (_Component) {
	    _inherits(Dialog, _Component);
	
	    function Dialog(props) {
	        _classCallCheck(this, Dialog);
	
	        return _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).call(this, props));
	    }
	
	    _createClass(Dialog, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var onConfirm = _props.onConfirm;
	            var onRequestClose = _props.onRequestClose;
	            var open = _props.open;
	
	            return _react2.default.createElement(_Modal2.default, { open: open, onRequestClose: onRequestClose, width: this.props.width }, _react2.default.createElement("div", { styleName: "confirm-modal" }, this.props.title && _react2.default.createElement("div", { styleName: "modal-header" }, _react2.default.createElement("h1", { styleName: "modal-title" }, this.props.title)), _react2.default.createElement("div", { styleName: "modal-content" }, this.props.children), _react2.default.createElement(_ModalFooter2.default, { onConfirm: onConfirm, onCancel: onRequestClose })));
	        }
	    }]);
	
	    return Dialog;
	}(_react.Component);
	Dialog = __decorate([(0, _reactCssModules2.default)(styles)], Dialog);
	exports.default = Dialog;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _form = __webpack_require__(147);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(165);
	function ModalFooter(props) {
	    var onConfirm = props.onConfirm;
	    var onCancel = props.onCancel;
	
	    return _react2.default.createElement("div", { className: styles['modal-footer'] }, _react2.default.createElement(_form.Button, { color: "blue", onClick: onConfirm }, '\u786E\u8BA4'), onCancel && _react2.default.createElement(_form.Button, { color: "white", onClick: onCancel }, '\u53D6\u6D88'));
	}
	exports.default = ModalFooter;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Textarea = exports.SelectizeInput = exports.Input = exports.Button = undefined;
	
	var _Button = __webpack_require__(148);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Input = __webpack_require__(152);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _SelectizeInput = __webpack_require__(156);
	
	var _SelectizeInput2 = _interopRequireDefault(_SelectizeInput);
	
	var _Textarea = __webpack_require__(160);
	
	var _Textarea2 = _interopRequireDefault(_Textarea);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Button = _Button2.default;
	exports.Input = _Input2.default;
	exports.SelectizeInput = _SelectizeInput2.default;
	exports.Textarea = _Textarea2.default;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Button = __webpack_require__(149);
	
	var _Button2 = _interopRequireDefault(_Button);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Button2.default;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _classnames2 = __webpack_require__(120);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(150);
	var Button = function (_Component) {
	    _inherits(Button, _Component);
	
	    function Button(props) {
	        _classCallCheck(this, Button);
	
	        var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));
	
	        _this.state = {
	            isMouseOver: false
	        };
	        return _this;
	    }
	
	    _createClass(Button, [{
	        key: "render",
	        value: function render() {
	            var _classnames,
	                _this2 = this;
	
	            var _props = this.props;
	            var onClick = _props.onClick;
	            var className = _props.className;
	            var color = _props.color;
	            var size = _props.size;
	            var isFluid = _props.isFluid;
	            var width = _props.width;
	            var to = _props.to;
	
	            var style = {};
	            var styleName = (0, _classnames3.default)((_classnames = {
	                'btn': true,
	                'btn--hover': this.state.isMouseOver,
	                'btn--fluid': isFluid
	            }, _defineProperty(_classnames, "btn--" + color, Boolean(color)), _defineProperty(_classnames, "btn--" + size, Boolean(size)), _classnames));
	            if (this.props.to) {
	                onClick = function onClick(e) {
	                    e.preventDefault();
	                    _helpers2.default.redirect(to);
	                };
	            } else {
	                onClick = function onClick(e) {
	                    e.preventDefault();
	                    if (_this2.props.onClick) {
	                        _this2.props.onClick(e);
	                    }
	                };
	            }
	            if (typeof width !== 'undefined') {
	                style = {
	                    width: width
	                };
	            }
	            var props = (0, _lodash2.default)(this.props).omit(['to', 'color', 'size', 'isFluid', 'width', 'styles']).assign({}, {
	                className: className || '',
	                onClick: onClick,
	                style: style
	            }).value();
	            return _react2.default.createElement("button", __assign({}, props, { styleName: styleName, onMouseOver: function onMouseOver() {
	                    _this2.setState({
	                        isMouseOver: true
	                    });
	                }, onMouseOut: function onMouseOut() {
	                    _this2.setState({
	                        isMouseOver: false
	                    });
	                } }), this.props.children);
	        }
	    }]);
	
	    return Button;
	}(_react.Component);
	Button = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Button);
	Button.defaultProps = {
	    color: 'blue'
	};
	exports.default = Button;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(151);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".btn_M2NhQ {\n  color: #fff;\n  background-color: #1B267F;\n  border-color: #1B267F;\n  padding: 3px 12px;\n  font-size: 1rem;\n  border-radius: 3px;\n  transition: all 0.2s 0s;\n  outline: none;\n  border: 1px solid transparent;\n  display: inline-block;\n  margin: 5px 0;\n  cursor: pointer; }\n  .btn_M2NhQ:hover {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d; }\n  .btn_M2NhQ:focus, .btn_M2NhQ.focus_ptKD_ {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n  .btn_M2NhQ:active, .btn_M2NhQ.active_156lK {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n    .btn_M2NhQ:active:hover, .btn_M2NhQ:active:focus, .btn_M2NhQ:active.focus_ptKD_, .btn_M2NhQ.active_156lK:hover, .btn_M2NhQ.active_156lK:focus, .btn_M2NhQ.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #0c1138;\n      border-color: #050716;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9 !important; }\n  .btn_M2NhQ.disabled_2GlXh:focus, .btn_M2NhQ.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ:disabled:focus, .btn_M2NhQ:disabled.focus_ptKD_ {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.disabled_2GlXh:hover, .btn_M2NhQ:disabled:hover {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.disabled_2GlXh, .btn_M2NhQ:disabled {\n    cursor: not-allowed;\n    opacity: .65; }\n  .btn_M2NhQ:active:hover {\n    box-shadow: none; }\n\n.btn--hover_2KwUv {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); }\n\n.btn_M2NhQ.btn--blue_20YQo {\n  color: #fff;\n  background-color: #1B267F;\n  border-color: #1B267F; }\n  .btn_M2NhQ.btn--blue_20YQo:hover {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d; }\n  .btn_M2NhQ.btn--blue_20YQo:focus, .btn_M2NhQ.btn--blue_20YQo.focus_ptKD_ {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n  .btn_M2NhQ.btn--blue_20YQo:active, .btn_M2NhQ.btn--blue_20YQo.active_156lK {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n    .btn_M2NhQ.btn--blue_20YQo:active:hover, .btn_M2NhQ.btn--blue_20YQo:active:focus, .btn_M2NhQ.btn--blue_20YQo:active.focus_ptKD_, .btn_M2NhQ.btn--blue_20YQo.active_156lK:hover, .btn_M2NhQ.btn--blue_20YQo.active_156lK:focus, .btn_M2NhQ.btn--blue_20YQo.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #0c1138;\n      border-color: #050716;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9 !important; }\n  .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh:focus, .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--blue_20YQo:disabled:focus, .btn_M2NhQ.btn--blue_20YQo:disabled.focus_ptKD_ {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh:hover, .btn_M2NhQ.btn--blue_20YQo:disabled:hover {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n\n.btn_M2NhQ.btn--orange_Ecn3s {\n  color: #fff;\n  background-color: #ee9333;\n  border-color: #ee9333; }\n  .btn_M2NhQ.btn--orange_Ecn3s:hover {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412; }\n  .btn_M2NhQ.btn--orange_Ecn3s:focus, .btn_M2NhQ.btn--orange_Ecn3s.focus_ptKD_ {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62; }\n  .btn_M2NhQ.btn--orange_Ecn3s:active, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62; }\n    .btn_M2NhQ.btn--orange_Ecn3s:active:hover, .btn_M2NhQ.btn--orange_Ecn3s:active:focus, .btn_M2NhQ.btn--orange_Ecn3s:active.focus_ptKD_, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK:hover, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK:focus, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #bb6710;\n      border-color: #95530c;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62 !important; }\n  .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh:focus, .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--orange_Ecn3s:disabled:focus, .btn_M2NhQ.btn--orange_Ecn3s:disabled.focus_ptKD_ {\n    background-color: #ee9333;\n    border-color: #ee9333; }\n  .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh:hover, .btn_M2NhQ.btn--orange_Ecn3s:disabled:hover {\n    background-color: #ee9333;\n    border-color: #ee9333; }\n\n.btn_M2NhQ.btn--red_3EKC3 {\n  color: #fff;\n  background-color: #d42020;\n  border-color: #d42020; }\n  .btn_M2NhQ.btn--red_3EKC3:hover {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818; }\n  .btn_M2NhQ.btn--red_3EKC3:focus, .btn_M2NhQ.btn--red_3EKC3.focus_ptKD_ {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444; }\n  .btn_M2NhQ.btn--red_3EKC3:active, .btn_M2NhQ.btn--red_3EKC3.active_156lK {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444; }\n    .btn_M2NhQ.btn--red_3EKC3:active:hover, .btn_M2NhQ.btn--red_3EKC3:active:focus, .btn_M2NhQ.btn--red_3EKC3:active.focus_ptKD_, .btn_M2NhQ.btn--red_3EKC3.active_156lK:hover, .btn_M2NhQ.btn--red_3EKC3.active_156lK:focus, .btn_M2NhQ.btn--red_3EKC3.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #891515;\n      border-color: #650f0f;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444 !important; }\n  .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh:focus, .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--red_3EKC3:disabled:focus, .btn_M2NhQ.btn--red_3EKC3:disabled.focus_ptKD_ {\n    background-color: #d42020;\n    border-color: #d42020; }\n  .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh:hover, .btn_M2NhQ.btn--red_3EKC3:disabled:hover {\n    background-color: #d42020;\n    border-color: #d42020; }\n\n.btn_M2NhQ.btn--white_3Rv2J {\n  color: #333;\n  background-color: #fff;\n  border-color: #fff; }\n  .btn_M2NhQ.btn--white_3Rv2J:hover {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0; }\n  .btn_M2NhQ.btn--white_3Rv2J:focus, .btn_M2NhQ.btn--white_3Rv2J.focus_ptKD_ {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px white; }\n  .btn_M2NhQ.btn--white_3Rv2J:active, .btn_M2NhQ.btn--white_3Rv2J.active_156lK {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px white; }\n    .btn_M2NhQ.btn--white_3Rv2J:active:hover, .btn_M2NhQ.btn--white_3Rv2J:active:focus, .btn_M2NhQ.btn--white_3Rv2J:active.focus_ptKD_, .btn_M2NhQ.btn--white_3Rv2J.active_156lK:hover, .btn_M2NhQ.btn--white_3Rv2J.active_156lK:focus, .btn_M2NhQ.btn--white_3Rv2J.active_156lK.focus_ptKD_ {\n      color: #333;\n      background-color: #d4d4d4;\n      border-color: #bfbfbf;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px white !important; }\n  .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh:focus, .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--white_3Rv2J:disabled:focus, .btn_M2NhQ.btn--white_3Rv2J:disabled.focus_ptKD_ {\n    background-color: #fff;\n    border-color: #fff; }\n  .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh:hover, .btn_M2NhQ.btn--white_3Rv2J:disabled:hover {\n    background-color: #fff;\n    border-color: #fff; }\n", ""]);
	
	// exports
	exports.locals = {
		"btn": "btn_M2NhQ",
		"focus": "focus_ptKD_",
		"active": "active_156lK",
		"disabled": "disabled_2GlXh",
		"btn--hover": "btn--hover_2KwUv",
		"btn--blue": "btn--blue_20YQo",
		"btn--orange": "btn--orange_Ecn3s",
		"btn--red": "btn--red_3EKC3",
		"btn--white": "btn--white_3Rv2J"
	};

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Input = __webpack_require__(153);
	
	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Input2.default;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _classnames = __webpack_require__(120);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(154);
	var Input = function (_Component) {
	    _inherits(Input, _Component);
	
	    function Input(props) {
	        _classCallCheck(this, Input);
	
	        return _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));
	    }
	
	    _createClass(Input, [{
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var props = Object.assign({}, this.props);
	            delete props.className;
	            var _props = this.props;
	            var error = _props.error;
	            var touched = _props.touched;
	
	            var showError = error && touched;
	            return _react2.default.createElement("div", { styleName: (0, _classnames2.default)({ 'input-wrap': !showError, 'input-wrap--error': showError }), className: this.props.className || '' }, _react2.default.createElement("input", { styleName: "input", placeholder: this.props.placeholder, value: this.props.value, onChange: function onChange(e) {
	                    _this2.props.onChange(e);
	                }, type: this.props.type ? this.props.type : 'text', name: this.props.name ? this.props.name : null }), showError && _react2.default.createElement("div", { styleName: "error-msg" }, error));
	        }
	    }]);
	
	    return Input;
	}(_react.Component);
	Input = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Input);
	exports.default = Input;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(155);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".input-wrap_1uL9i, .input-wrap--error_oOHxx {\n  margin: 10px 0;\n  position: relative; }\n\n.input_c1thg {\n  width: 100%;\n  padding: 5px 5px;\n  border: 1px solid #ddd;\n  transition: border-color .3s;\n  line-height: 25px;\n  outline: none; }\n\n.input_c1thg:focus {\n  border-color: #1B267F; }\n\n.input-wrap--error_oOHxx .input_c1thg {\n  border-color: #cc0000; }\n\n.error-msg_1VjPs {\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  line-height: 25px;\n  color: #cc0000; }\n", ""]);
	
	// exports
	exports.locals = {
		"input-wrap": "input-wrap_1uL9i",
		"input-wrap--error": "input-wrap--error_oOHxx",
		"input": "input_c1thg",
		"error-msg": "error-msg_1VjPs"
	};

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SelectizeInput = __webpack_require__(157);
	
	var _SelectizeInput2 = _interopRequireDefault(_SelectizeInput);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SelectizeInput2.default;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Icon = __webpack_require__(118);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _classnames = __webpack_require__(120);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _isDescendant = __webpack_require__(97);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(158);
	var SelectizeInput = function (_Component) {
	    _inherits(SelectizeInput, _Component);
	
	    function SelectizeInput(props) {
	        _classCallCheck(this, SelectizeInput);
	
	        var _this = _possibleConstructorReturn(this, (SelectizeInput.__proto__ || Object.getPrototypeOf(SelectizeInput)).call(this, props));
	
	        _this.state = {
	            showOptions: false,
	            focus: false,
	            value: '',
	            expendedOptionIndex: 0
	        };
	        _this.handleOutsideClick = _this.handleOutsideClick.bind(_this);
	        _this.focusInput = _this.focusInput.bind(_this);
	        _this.handleInputChange = _this.handleInputChange.bind(_this);
	        return _this;
	    }
	
	    _createClass(SelectizeInput, [{
	        key: "addValue",
	        value: function addValue(newValue) {
	            var _this2 = this;
	
	            if (!this.props.useValue) {
	                this.props.onValuesChange(this.props.values.concat(newValue));
	                if (this.props.onOptionsChange) {
	                    this.props.onOptionsChange(this.props.options.map(function (option) {
	                        return option.value === newValue.value ? Object.assign({}, option, { disabled: true }) : option;
	                    }));
	                }
	                // React setState 是异步的，如果都是用 state 管理则会出现同时调用 setState 的情况，从而造成问题
	                setTimeout(function () {
	                    _this2.clearInputValue();
	                }, 1);
	                if (typeof this.props.stayFocused === 'undefined' || this.props.stayFocused !== false) {
	                    this.focusInput();
	                }
	                this.hideOptions();
	            } else {
	                this.props.onInputChange(newValue.name);
	                this.hideOptions();
	            }
	        }
	    }, {
	        key: "showOptions",
	        value: function showOptions() {
	            this.setState({
	                showOptions: true
	            });
	        }
	    }, {
	        key: "hideOptions",
	        value: function hideOptions() {
	            this.setState({
	                showOptions: false
	            });
	        }
	    }, {
	        key: "removeValue",
	        value: function removeValue(index) {
	            var newValues = [];
	            var removedValue = void 0;
	            if (index === -1) {
	                newValues = this.props.values.slice(0, this.props.values.length - 1);
	                removedValue = this.props.values[this.props.values.length - 1].value;
	            } else {
	                newValues = this.props.values.filter(function (v, i) {
	                    removedValue = v.value;
	                    return i !== index;
	                });
	            }
	            if (this.props.onOptionsChange) {
	                this.props.onOptionsChange(this.props.options.map(function (option) {
	                    return option.value === removedValue ? Object.assign({}, option, { disabled: false }) : option;
	                }));
	            }
	            this.props.onValuesChange(newValues);
	        }
	    }, {
	        key: "clearInputValue",
	        value: function clearInputValue() {
	            this.props.onInputChange('');
	        }
	    }, {
	        key: "handleKeyPress",
	        value: function handleKeyPress(e) {
	            if (e.keyCode === 8 && !this.props.value && this.props.values.length !== 0) {
	                this.removeValue(-1);
	            }
	        }
	    }, {
	        key: "handleInputChange",
	        value: function handleInputChange(e) {
	            this.props.onInputChange(e.target.value);
	            if ((this.props.options || []).length !== 0) {
	                this.showOptions();
	            }
	        }
	    }, {
	        key: "focusInput",
	        value: function focusInput() {
	            this.input.focus();
	        }
	    }, {
	        key: "handleOutsideClick",
	        value: function handleOutsideClick(e) {
	            if ((0, _isDescendant2.default)(this.inputWrap, e.target) || this.inputWrap === e.target) {
	                this.focusInput();
	                this.showOptions();
	            } else {
	                this.hideOptions();
	            }
	        }
	    }, {
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {
	            var optionsLoaded = (nextProps.options || []).length !== 0 && (this.props.options || []).length === 0;
	            if (optionsLoaded && this.state.focus) {
	                this.showOptions();
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            window.addEventListener('click', this.handleOutsideClick);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            window.removeEventListener('click', this.handleOutsideClick);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this3 = this;
	
	            var _props = this.props;
	            var label = _props.label;
	            var values = _props.values;
	            var onAddNewValue = _props.onAddNewValue;
	            var omitSelectedValuesFromOptions = _props.omitSelectedValuesFromOptions;
	
	            var value = this.props.value || '';
	            var options = this.props.options || [];
	            var inputWidth = values.length > 0 ? value.length === 0 ? 16 : value.length * 16 : '100%';
	            var placeholder = values.length > 0 ? '' : this.props.placeholder;
	            var filteredOptions = options.filter(function (option) {
	                if (omitSelectedValuesFromOptions) {
	                    var valueOfValues = _lodash2.default.map(values, 'value');
	                    return valueOfValues.indexOf(option.value) === -1;
	                }
	                return true;
	            });
	            var selectizeInputStyleName = (0, _classnames2.default)({
	                'selectize-input': true,
	                'selectize-input--focus': this.state.focus,
	                'selectize-input--empty': values.length === 0
	            });
	            return _react2.default.createElement("div", { styleName: "selectize-wrap", className: this.props.className || '' }, label ? _react2.default.createElement("label", { className: "form-label" }, label) : null, _react2.default.createElement("div", { styleName: selectizeInputStyleName, ref: function ref(_ref) {
	                    _this3.inputWrap = _ref;
	                } }, values.map(function (v, index) {
	                return _react2.default.createElement("span", { key: index, styleName: "selectize-tag" }, v.name, _react2.default.createElement(_Icon2.default, { styleName: "icon-remove", size: 20, name: "close", onClick: function onClick(e) {
	                        _this3.removeValue(index);
	                    } }));
	            }), _react2.default.createElement("input", { style: { width: inputWidth }, ref: function ref(_ref2) {
	                    _this3.input = _ref2;
	                }, value: value, placeholder: placeholder, onBlur: function onBlur(e) {
	                    _this3.setState({ focus: false });
	                }, onFocus: function onFocus(e) {
	                    _this3.setState({ focus: true });
	                }, onChange: this.handleInputChange, onKeyDown: function onKeyDown(e) {
	                    _this3.handleKeyPress(e);
	                } })), this.state.showOptions && (filteredOptions.length !== 0 || onAddNewValue) ? _react2.default.createElement("ul", { styleName: "query-results" }, filteredOptions.map(function (option, index) {
	                if (option.disabled) {
	                    return _react2.default.createElement("li", { key: index, className: "disabled" }, option.name);
	                }
	                return _react2.default.createElement("li", { key: index, onClick: function onClick(e) {
	                        _this3.addValue(option);
	                        if (_this3.props.onOptionClick) {
	                            _this3.props.onOptionClick(option);
	                        }
	                    } }, _react2.default.createElement("span", null, option.name));
	            }), onAddNewValue ? _react2.default.createElement("li", { onClick: function onClick(e) {
	                    onAddNewValue(_this3.props.value);
	                }, className: "add" }, "\u6DFB\u52A0 ", _react2.default.createElement("strong", null, this.props.value)) : null) : null);
	        }
	    }]);
	
	    return SelectizeInput;
	}(_react.Component);
	SelectizeInput = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], SelectizeInput);
	SelectizeInput['defaultProps'] = {
	    omitSelectedValuesFromOptions: true
	};
	exports.default = SelectizeInput;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(159);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".selectize-wrap_P-y2- {\n  margin: 10px 0;\n  position: relative; }\n\n.selectize-input_36ULe {\n  min-width: 300px;\n  border: 1px solid #ddd;\n  margin: 10px 0;\n  box-sizing: border-box;\n  transition: all 0s;\n  cursor: text;\n  background: #fff; }\n  .selectize-input_36ULe input {\n    background: transparent;\n    line-height: 22px; }\n\n.selectize-input--focus_30LU5 {\n  border-color: #1B267F; }\n\n.selectize-input--empty_3eAmI {\n  background: #fff;\n  padding: 5px 5px 0; }\n\n.selectize-input_36ULe input {\n  border: none;\n  outline: none;\n  margin-bottom: 5px; }\n\n.query-results_3Ph-Z {\n  margin-top: -3px;\n  margin-bottom: 5px;\n  padding: 5px;\n  border-radius: 3px;\n  position: absolute;\n  left: 0;\n  width: 100%;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.32);\n  background: #fff;\n  z-index: 900; }\n\n.query-results_3Ph-Z li {\n  padding: 0 7px;\n  line-height: 2;\n  cursor: pointer;\n  border-radius: 3px; }\n  .query-results_3Ph-Z li:hover {\n    background: #1B267F;\n    color: #fff; }\n\n.selectize-tag_1PWDE {\n  background: #1B267F;\n  cursor: pointer;\n  border-radius: 3px;\n  padding: 3px 25px 3px 5px;\n  margin: 5px;\n  color: #fff;\n  display: inline-block;\n  position: relative; }\n\n.icon-remove_2BuSV {\n  font-size: 0.8rem;\n  margin-left: 5px;\n  position: absolute;\n  right: 5px;\n  top: 2px; }\n", ""]);
	
	// exports
	exports.locals = {
		"selectize-wrap": "selectize-wrap_P-y2-",
		"selectize-input": "selectize-input_36ULe",
		"selectize-input--focus": "selectize-input--focus_30LU5",
		"selectize-input--empty": "selectize-input--empty_3eAmI",
		"query-results": "query-results_3Ph-Z",
		"selectize-tag": "selectize-tag_1PWDE",
		"icon-remove": "icon-remove_2BuSV"
	};

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Textarea = __webpack_require__(161);
	
	var _Textarea2 = _interopRequireDefault(_Textarea);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Textarea2.default;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(162);
	var Textarea = function (_Component) {
	    _inherits(Textarea, _Component);
	
	    function Textarea(props) {
	        _classCallCheck(this, Textarea);
	
	        return _possibleConstructorReturn(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).call(this, props));
	    }
	
	    _createClass(Textarea, [{
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            return _react2.default.createElement("div", { styleName: "textarea-wrap", className: this.props.className || '' }, _react2.default.createElement("textarea", { placeholder: this.props.placeholder, value: this.props.value, onChange: function onChange(e) {
	                    _this2.props.onChange(e);
	                }, styleName: "textarea", type: this.props.type ? this.props.type : 'text', name: this.props.name ? this.props.name : null }));
	        }
	    }]);
	
	    return Textarea;
	}(_react.Component);
	Textarea = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Textarea);
	exports.default = Textarea;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(163);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	exports.i(__webpack_require__(164), "");
	
	// module
	exports.push([module.id, ".textarea-wrap_1BTJU {\n  margin: 10px 0;\n  position: relative;\n}\n\n.textarea_2xSxv {\n  width: 100%;\n  padding: 5px;\n  border: 1px solid var(--gray);\n  outline: none;\n  height: 100px;\n  transition: border-color .3s;\n}\n\n.textarea_2xSxv:focus {\n  border-color: var(--blue);\n}\n", ""]);
	
	// exports
	exports.locals = {
		"textarea-wrap": "textarea-wrap_1BTJU",
		"textarea": "textarea_2xSxv"
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  /* colors */\n  --text: #666;\n  --text-dark: #333;\n  --text-light: #999;\n  --blue: #1B267F;\n  --shiny-blue: #1B267F;\n  --dark-blue: #04082E;\n  --gray: #ddd;\n\n  --branding-height: 60px;\n  --sidebar-width: 300px;\n  --input-line-height: 25px;\n  --input-padding: 5px;\n  --reading-width: 700px;\n\n  /* style values */\n  --font-size-root: 16px;\n  --border-radius: 3px;\n  --font-family: Helvetica, Arial, \"Hiragino Sans GB\", \"Hiragino Sans GB W3\", \"Microsoft Yahei\", sans-serif;\n  --font-family-mono: Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n\n  --shadow-z1: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  --shadow-z2: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  --shadow-z3: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  --shadow-z4: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  --shadow-z5: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n\n  --shadow-y1: 0 2px 12px rgba(0, 0, 0, 0.32);\n\n  \\--page-title: {\n    margin: 35px 0;\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: #333;\n  };\n\n  /* z-index */\n  --z-selectize-options: 900;\n  --z-dropdown-menu: 900;\n}\n", ""]);
	
	// exports


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(166);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".modal-footer_FaHiU button {\n  margin-right: 10px; }\n", ""]);
	
	// exports
	exports.locals = {
		"modal-footer": "modal-footer_FaHiU"
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _Branding = __webpack_require__(168);
	
	var _Branding2 = _interopRequireDefault(_Branding);
	
	var _Colophon = __webpack_require__(187);
	
	var _Colophon2 = _interopRequireDefault(_Colophon);
	
	var _actions = __webpack_require__(90);
	
	var _selectors = __webpack_require__(110);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var App = function (_Component) {
	    _inherits(App, _Component);
	
	    function App(props) {
	        _classCallCheck(this, App);
	
	        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));
	
	        _this.handleLogout = _this.handleLogout.bind(_this);
	        return _this;
	    }
	
	    _createClass(App, [{
	        key: 'handleLogout',
	        value: function handleLogout() {
	            this.props.userLogout();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (this.props.session.user.role !== 'visitor') {
	                this.props.fetchShelf();
	            }
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var userLoggedIn = this.props.session.user.role === 'visitor' && nextProps.session.user.role !== 'visitor';
	            if (userLoggedIn) {
	                this.props.fetchShelf();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var isAdmin = false;
	            var username = null;
	            if (this.props.session.user.role !== 'visitor') {
	                isAdmin = this.props.session.user.role === 'admin';
	                username = this.props.session.user.username;
	            }
	            var bookShelf = this.props.bookShelf;
	
	            var bookShelfList = bookShelf.map(function (book) {
	                return {
	                    title: book.title,
	                    id: book.id
	                };
	            });
	            return _react2.default.createElement("div", null, _react2.default.createElement(_Branding2.default, { recentReading: bookShelfList, isAdmin: isAdmin, username: username, onLogout: this.handleLogout }), this.props.children, _react2.default.createElement(_Colophon2.default, null));
	        }
	    }]);
	
	    return App;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notification: state.components.notification,
	        session: state.session,
	        bookShelf: selectors.shelfBooks()(state)
	    };
	}, { fetchShelf: _actions.fetchShelf, userLogout: _actions.userLogout })(App);

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Branding = __webpack_require__(169);
	
	var _Branding2 = _interopRequireDefault(_Branding);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Branding2.default;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _layout = __webpack_require__(170);
	
	var _Dropdown = __webpack_require__(173);
	
	var _Logo = __webpack_require__(179);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(185);
	var Branding = function (_Component) {
	    _inherits(Branding, _Component);
	
	    function Branding(props) {
	        _classCallCheck(this, Branding);
	
	        var _this = _possibleConstructorReturn(this, (Branding.__proto__ || Object.getPrototypeOf(Branding)).call(this, props));
	
	        _this.state = {
	            isDropdownMenuVisible: false
	        };
	        _this.handleLogoutClick = _this.handleLogoutClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(Branding, [{
	        key: "toggleDropdownMenu",
	        value: function toggleDropdownMenu() {
	            this.setState({
	                isDropdownMenuVisible: !this.state.isDropdownMenuVisible
	            });
	        }
	    }, {
	        key: "handleLogoutClick",
	        value: function handleLogoutClick(e) {
	            this.props.onLogout();
	            e.preventDefault();
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var isAdmin = this.props.isAdmin ? this.props.isAdmin : false;
	            var _props = this.props;
	            var username = _props.username;
	            var recentReading = _props.recentReading;
	
	            return _react2.default.createElement("div", { styleName: "branding " + (this.props.className ? this.props.className : '') }, _react2.default.createElement(_layout.Container, { className: "clearfix" }, _react2.default.createElement("div", null, _react2.default.createElement("div", { className: "left" }, _react2.default.createElement(_Logo2.default, null)), _react2.default.createElement("div", { className: "left", styleName: "nav" }, _react2.default.createElement("ul", { styleName: "nav-links" }, _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/browse" }, "\u6D4F\u89C8")))), username ? _react2.default.createElement("div", { styleName: "nav--user" }, recentReading.length !== 0 && _react2.default.createElement(_Dropdown.Dropdown, { styleName: "dropdown-recent-reading", title: "最近阅读" }, recentReading.slice(0, 5).map(function (book, index) {
	                return _react2.default.createElement(_Dropdown.DropdownItem, { key: index }, _react2.default.createElement(_reactRouter.Link, { to: "/viewer/book/" + book.id }, book.title));
	            }), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/shelf" }, "\u67E5\u770B\u5168\u90E8"))), _react2.default.createElement(_Dropdown.Dropdown, { title: _react2.default.createElement("div", { style: { display: 'inline-block' } }, username, isAdmin && _react2.default.createElement("span", { className: "badge" }, "\u7BA1\u7406\u5458")) }, isAdmin === true && _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/console" }, "\u63A7\u5236\u53F0")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/shelf" }, "\u4E66\u67B6")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/profile" }, "\u4E2A\u4EBA\u4E3B\u9875")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/preference" }, "\u8BBE\u7F6E")), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement("a", { onClick: this.handleLogoutClick, href: "#" }, "\u9000\u51FA")))) : _react2.default.createElement("div", { styleName: "nav--user" }, _react2.default.createElement("ul", { styleName: "nav-links" }, _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/signin" }, "\u767B\u5F55")), _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/signup" }, "\u6CE8\u518C")))))));
	        }
	    }]);
	
	    return Branding;
	}(_react.Component);
	Branding = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Branding);
	exports.default = Branding;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Container = undefined;
	
	var _Container = __webpack_require__(171);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Container = _Container2.default;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Container = __webpack_require__(172);
	
	var _Container2 = _interopRequireDefault(_Container);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Container2.default;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Container = function (_Component) {
	    _inherits(Container, _Component);
	
	    function Container() {
	        _classCallCheck(this, Container);
	
	        return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
	    }
	
	    _createClass(Container, [{
	        key: 'render',
	        value: function render() {
	            var className = (this.props.isFluid ? 'container-fluid' : 'container') + (this.props.className ? ' ' + this.props.className : '');
	            return _react2.default.createElement("div", { className: className }, this.props.children);
	        }
	    }]);
	
	    return Container;
	}(_react.Component);
	
	exports.default = Container;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DropdownItemSep = exports.Dropdown = exports.DropdownItem = undefined;
	
	var _Dropdown = __webpack_require__(174);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _DropdownItem = __webpack_require__(177);
	
	var _DropdownItem2 = _interopRequireDefault(_DropdownItem);
	
	var _DropdownItemSep = __webpack_require__(178);
	
	var _DropdownItemSep2 = _interopRequireDefault(_DropdownItemSep);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.DropdownItem = _DropdownItem2.default;
	exports.Dropdown = _Dropdown2.default;
	exports.DropdownItemSep = _DropdownItemSep2.default;
	exports.default = _Dropdown2.default;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _isDescendant = __webpack_require__(97);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(175);
	var Dropdown = function (_Component) {
	    _inherits(Dropdown, _Component);
	
	    function Dropdown(props) {
	        _classCallCheck(this, Dropdown);
	
	        var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));
	
	        _this.state = {
	            showMenu: false
	        };
	        _this.handleGlobalClick = _this.handleGlobalClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(Dropdown, [{
	        key: "handleGlobalClick",
	        value: function handleGlobalClick(e) {
	            // 检查点击的 dom 是否是 dropdown 的子元素
	            // 如果是那么就不做处理，而 toggleDropdown 会响应
	            // 解决了页面上同时用两个 dropdown 时，其中一个展开，点击另一个前者不合上的问题
	            if (!(0, _isDescendant2.default)(this.dropdown, e.target)) {
	                this.setState({
	                    showMenu: false
	                });
	            } else {
	                // 如果使用了原生事件，尽量不要混合使用 synthetic 事件，react 的生产版本似乎会出现相关的 bug
	                this.setState({
	                    showMenu: !this.state.showMenu
	                });
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            window.addEventListener('click', this.handleGlobalClick);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            window.removeEventListener('click', this.handleGlobalClick);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var _props = this.props;
	            var className = _props.className;
	            var style = _props.style;
	
	            return _react2.default.createElement("div", { ref: function ref(_ref) {
	                    _this2.dropdown = _ref;
	                }, styleName: "dropdown", className: className || '' }, _react2.default.createElement("div", { styleName: "dropdown-toggle" }, _react2.default.createElement("span", null, this.props.title), _react2.default.createElement("span", { styleName: "dropdown-caret" })), this.state.showMenu && _react2.default.createElement("div", { styleName: style === 'dark' ? 'dropdown-menu--dark' : 'dropdown-menu' }, _react2.default.createElement("ul", null, this.props.children)));
	        }
	    }]);
	
	    return Dropdown;
	}(_react.Component);
	Dropdown = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Dropdown);
	exports.default = Dropdown;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(176);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".dropdown-item_2C1dz {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden; }\n\n.light-link_2QDeA {\n  color: #ddd; }\n  .light-link_2QDeA:hover {\n    color: #fff; }\n\n.dropdown_SZfyp {\n  display: inline-block;\n  cursor: pointer;\n  position: relative; }\n\n.dropdown-toggle_34Qfd {\n  display: block;\n  user-select: none;\n  -webkit-user-select: none;\n  max-height: 100%; }\n\n.dropdown-menu_1HgbS {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.22);\n  line-height: 2.2;\n  font-size: 1rem;\n  text-align: left;\n  background: #222;\n  position: absolute;\n  right: 0;\n  width: 150px;\n  overflow: hidden;\n  padding: 5px 0;\n  z-index: 900; }\n\n.dropdown-caret_FcBWI {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  vertical-align: middle;\n  content: \"\";\n  border: 4px solid;\n  border-right-color: transparent;\n  border-bottom-color: transparent;\n  border-left-color: transparent;\n  margin-left: 5px; }\n\n.dropdown-item_2C1dz {\n  display: block;\n  padding: 0 25px;\n  transition: all 0s; }\n  .dropdown-item_2C1dz:hover {\n    background: #3c3c3c; }\n  .dropdown-item_2C1dz:active {\n    background: #3c3c3c; }\n\n.sep_10Y0o {\n  margin: 5px 0;\n  height: 1px;\n  background: #3c3c3c; }\n\n.dropdown-menu--dark_6eVPX {\n  background: #1B267F; }\n  .dropdown-menu--dark_6eVPX .sep_10Y0o {\n    background: #1f2c94; }\n  .dropdown-menu--dark_6eVPX .dropdown-item_2C1dz:hover {\n    background: #1f2c94; }\n", ""]);
	
	// exports
	exports.locals = {
		"dropdown-item": "dropdown-item_2C1dz light-link_2QDeA",
		"light-link": "light-link_2QDeA",
		"dropdown": "dropdown_SZfyp",
		"dropdown-toggle": "dropdown-toggle_34Qfd",
		"dropdown-menu": "dropdown-menu_1HgbS",
		"dropdown-caret": "dropdown-caret_FcBWI",
		"sep": "sep_10Y0o",
		"dropdown-menu--dark": "dropdown-menu--dark_6eVPX dropdown-menu_1HgbS"
	};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(175);
	function DropdownItem(props) {
	    return _react2.default.createElement("li", null, typeof props.children === 'string' ? _react2.default.createElement("div", { className: styles['dropdown-item'] }, props.children) : _react2.default.cloneElement(props.children, {
	        className: styles['dropdown-item']
	    }));
	}
	exports.default = DropdownItem;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(175);
	function DropdownItemSep(props) {
	    return _react2.default.createElement("li", { className: styles['sep'] });
	}
	exports.default = DropdownItemSep;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Logo = __webpack_require__(180);
	
	var _Logo2 = _interopRequireDefault(_Logo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Logo2.default;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(181);
	function Logo(props) {
	    var dark = props.dark;
	    var to = props.to;
	
	    var styleName = dark ? 'logo--dark' : 'logo';
	    return _react2.default.createElement("h1", { className: styles['logo-wrap'] }, _react2.default.createElement(_reactRouter.Link, { className: styles[styleName], to: to }, "readr"));
	}
	Logo['defaultProps'] = {
	    to: '/'
	};
	exports.default = Logo;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(182);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  --branding-height: 60px;\n}\n\n.logo-wrap_CP5P9 {\n  margin: 0;\n  line-height: var(--branding-height);\n  color: #fff;\n  margin-top: -3px;\n  display: inline-block;\n}\n\n.logo_3qcbV {\n  background: url(" + __webpack_require__(183) + ") no-repeat left;\n  width: 70px;\n  height: var(--branding-height);\n  background-size: 70px;\n  text-indent: -999em;\n  display: inline-block;\n}\n\n.logo--dark_38F-H {\n  background: url(" + __webpack_require__(184) + ") no-repeat left;\n  background-size: 70px;\n}\n", ""]);
	
	// exports
	exports.locals = {
		"logo-wrap": "logo-wrap_CP5P9",
		"logo": "logo_3qcbV",
		"logo--dark": "logo--dark_38F-H logo_3qcbV"
	};

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "img/logo.81eb83d7f7.png";

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "img/logo-dark.4754e8aa78.png";

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(186);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".nav-link_3X0T8 {\n  color: #fff; }\n  .nav-link_3X0T8:hover {\n    color: #ddd; }\n\n.branding_8EVAt {\n  min-height: 60px;\n  background: #222; }\n\n.dropdown-menu_5Sc50 {\n  position: absolute;\n  top: 60px;\n  right: 0;\n  z-index: 999; }\n\n.username_3Mm6z,\n.nav-links_2wTYY {\n  line-height: 60px; }\n\n.nav_1oj1z, .nav--user_1L7Lb {\n  position: relative;\n  color: #fff;\n  cursor: pointer;\n  padding: 0 10px;\n  line-height: 60px;\n  display: inline-block; }\n\n.dropdown-recent-reading_2oyjH {\n  margin-right: 15px; }\n\n.nav--user_1L7Lb {\n  float: right; }\n\n.nav-link_3X0T8 {\n  padding: 0 5px; }\n\n.nav-item_f83bh {\n  display: inline-block; }\n\n.recent-reading_1kJKh {\n  margin-right: 15px; }\n", ""]);
	
	// exports
	exports.locals = {
		"nav-link": "nav-link_3X0T8",
		"branding": "branding_8EVAt",
		"dropdown-menu": "dropdown-menu_5Sc50",
		"username": "username_3Mm6z",
		"nav-links": "nav-links_2wTYY",
		"nav": "nav_1oj1z",
		"nav--user": "nav--user_1L7Lb",
		"dropdown-recent-reading": "dropdown-recent-reading_2oyjH",
		"nav-item": "nav-item_f83bh",
		"recent-reading": "recent-reading_1kJKh"
	};

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Colophon = __webpack_require__(188);
	
	var _Colophon2 = _interopRequireDefault(_Colophon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Colophon2.default;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Container = __webpack_require__(171);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(189);
	var Colophon = function (_Component) {
	    _inherits(Colophon, _Component);
	
	    function Colophon() {
	        _classCallCheck(this, Colophon);
	
	        return _possibleConstructorReturn(this, (Colophon.__proto__ || Object.getPrototypeOf(Colophon)).apply(this, arguments));
	    }
	
	    _createClass(Colophon, [{
	        key: "render",
	        value: function render() {
	            return _react2.default.createElement("div", { className: "colophon", styleName: "colophon" }, _react2.default.createElement(_Container2.default, null, _react2.default.createElement("p", null, "\xA9 2015\uFF0D2016 readrweb.com, all rights reserved")));
	        }
	    }]);
	
	    return Colophon;
	}(_react.Component);
	Colophon = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Colophon);
	exports.default = Colophon;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(190);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".colophon_3cQJ0 {\n  font-size: 1rem;\n  padding: 20px 0;\n  color: #999; }\n", ""]);
	
	// exports
	exports.locals = {
		"colophon": "colophon_3cQJ0"
	};

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _layout = __webpack_require__(170);
	
	var _ConsoleBranding = __webpack_require__(192);
	
	var _ConsoleBranding2 = _interopRequireDefault(_ConsoleBranding);
	
	var _actions = __webpack_require__(90);
	
	var _ConsoleSidebar = __webpack_require__(196);
	
	var _ConsoleSidebar2 = _interopRequireDefault(_ConsoleSidebar);
	
	var _menus = __webpack_require__(200);
	
	var _menus2 = _interopRequireDefault(_menus);
	
	var _DocContainer = __webpack_require__(201);
	
	var _DocContainer2 = _interopRequireDefault(_DocContainer);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Console = function (_Component) {
	    _inherits(Console, _Component);
	
	    function Console(props) {
	        _classCallCheck(this, Console);
	
	        var _this = _possibleConstructorReturn(this, (Console.__proto__ || Object.getPrototypeOf(Console)).call(this, props));
	
	        _this.handleLogout = _this.handleLogout.bind(_this);
	        return _this;
	    }
	
	    _createClass(Console, [{
	        key: 'redirectIfNotAdmin',
	        value: function redirectIfNotAdmin() {
	            var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
	
	            if (props.session.user.role !== 'admin') {
	                _helpers2.default.redirect('/');
	            }
	        }
	    }, {
	        key: 'handleLogout',
	        value: function handleLogout() {
	            this.props.userLogout();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var userRoleChanged = this.props.session.user.role !== nextProps.session.user.role;
	            if (userRoleChanged) {
	                this.redirectIfNotAdmin(nextProps);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var isAdmin = this.props.session.user.role === 'admin';
	            var username = this.props.session.user.username;
	            var pathname = this.props.routing.locationBeforeTransitions ? this.props.routing.locationBeforeTransitions.pathname : 'console';
	            var contentStyle = {
	                marginLeft: 320,
	                paddingTop: 60
	            };
	            return isAdmin ? _react2.default.createElement(_DocContainer2.default, { bodyClass: "console" }, _react2.default.createElement(_ConsoleBranding2.default, { isAdmin: isAdmin, username: username, onLogout: this.handleLogout }), _react2.default.createElement(_layout.Container, { isFluid: true }, _react2.default.createElement(_ConsoleSidebar2.default, { menuMapping: _menus2.default, currentPath: pathname }), _react2.default.createElement("div", { style: contentStyle }, this.props.children))) : _react2.default.createElement("div", { style: { textAlign: 'center', margin: '20px 0' } }, "ACCESS DENIED!");
	        }
	    }]);
	
	    return Console;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notifications: state.components.notifications,
	        session: state.session,
	        routing: state.routing
	    };
	}, { sendNotification: _actions.sendNotification, userAuth: _actions.userAuth, userLogout: _actions.userLogout })(Console);

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ConsoleBranding = __webpack_require__(193);
	
	var _ConsoleBranding2 = _interopRequireDefault(_ConsoleBranding);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ConsoleBranding2.default;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	var _Container = __webpack_require__(171);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	var _Dropdown = __webpack_require__(173);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _Logo = __webpack_require__(179);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(194);
	var ConsoleBranding = function (_Component) {
	    _inherits(ConsoleBranding, _Component);
	
	    function ConsoleBranding(props) {
	        _classCallCheck(this, ConsoleBranding);
	
	        var _this = _possibleConstructorReturn(this, (ConsoleBranding.__proto__ || Object.getPrototypeOf(ConsoleBranding)).call(this, props));
	
	        _this.state = {
	            isDropdownMenuVisible: false
	        };
	        _this.handleLogoutClick = _this.handleLogoutClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(ConsoleBranding, [{
	        key: "handleLogoutClick",
	        value: function handleLogoutClick(e) {
	            this.props.onLogout();
	            e.preventDefault();
	        }
	    }, {
	        key: "toggleDropdownMenu",
	        value: function toggleDropdownMenu() {
	            this.setState({
	                isDropdownMenuVisible: !this.state.isDropdownMenuVisible
	            });
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var username = this.props.username;
	            var isAdmin = this.props.isAdmin ? this.props.isAdmin : 'false';
	            return _react2.default.createElement("div", { styleName: "branding" }, _react2.default.createElement(_Container2.default, { isFluid: true, className: "clearfix" }, _react2.default.createElement("div", null, _react2.default.createElement("div", { className: "left" }, _react2.default.createElement(_Logo2.default, { to: "/console" })), _react2.default.createElement("div", { styleName: "sub-name" }, _react2.default.createElement("span", { styleName: "sub" }, "\u63A7\u5236\u53F0")), _react2.default.createElement("div", { styleName: "nav right" }, username && _react2.default.createElement(_Dropdown.Dropdown, { style: "dark", title: _react2.default.createElement("span", null, username, isAdmin && _react2.default.createElement("span", { className: "badge badge--dark" }, "\u7BA1\u7406\u5458")) }, _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/" }, "\u56DE\u5230 Readr")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/profile" }, "\u4E2A\u4EBA\u4E3B\u9875")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/preference" }, "\u8BBE\u7F6E")), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement("a", { onClick: this.handleLogoutClick, href: "#" }, "\u9000\u51FA")))))));
	        }
	    }]);
	
	    return ConsoleBranding;
	}(_react.Component);
	ConsoleBranding = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], ConsoleBranding);
	exports.default = ConsoleBranding;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(195);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	exports.i(__webpack_require__(186), undefined);
	
	// module
	exports.push([module.id, ".branding_3goRG {\n  background: #1B267F;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 800;\n  height: 60px; }\n\n.sep_AT6Gl {\n  margin: 0 10px;\n  opacity: .6;\n  font-size: 1rem; }\n\n.sub_Iyhms {\n  opacity: .8;\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  margin-top: -3px;\n  display: inline-block; }\n\n.right_1ZAQP {\n  float: right; }\n\n.sub-name_2T8ah {\n  float: left;\n  margin-left: 15px; }\n  .sub-name_2T8ah span {\n    display: inline-block;\n    line-height: 60px;\n    height: 60px;\n    color: #fff; }\n\n.nav_10yn4 {\n  color: #fff;\n  line-height: 60px;\n  height: 60px; }\n", ""]);
	
	// exports
	exports.locals = {
		"branding": "branding_3goRG",
		"sep": "sep_AT6Gl",
		"sub": "sub_Iyhms",
		"right": "right_1ZAQP",
		"sub-name": "sub-name_2T8ah",
		"nav": "nav_10yn4 " + __webpack_require__(186).locals["nav"] + ""
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ConsoleSidebar = __webpack_require__(197);
	
	var _ConsoleSidebar2 = _interopRequireDefault(_ConsoleSidebar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ConsoleSidebar2.default;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	var _Icon = __webpack_require__(118);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(198);
	var ConsoleSidebar = function (_Component) {
	    _inherits(ConsoleSidebar, _Component);
	
	    function ConsoleSidebar(props) {
	        _classCallCheck(this, ConsoleSidebar);
	
	        return _possibleConstructorReturn(this, (ConsoleSidebar.__proto__ || Object.getPrototypeOf(ConsoleSidebar)).call(this, props));
	    }
	
	    _createClass(ConsoleSidebar, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var menuMapping = _props.menuMapping;
	            var currentPath = _props.currentPath;
	
	            var currentMenu = {
	                rootIndex: 0,
	                subIndex: 0
	            };
	            menuMapping.forEach(function (menu, rootIndex) {
	                var subIndex = void 0;
	                var result = menu.subMenu.filter(function (item, index) {
	                    if (item.path === currentPath) {
	                        subIndex = index;
	                        return true;
	                    }
	                });
	                if (result.length > 0) {
	                    currentMenu.rootIndex = rootIndex;
	                    currentMenu.subIndex = subIndex;
	                }
	            });
	            var rootMenu = _react2.default.createElement("ul", { styleName: "nav-side-root" }, menuMapping.map(function (menu, index) {
	                return _react2.default.createElement("li", { key: index, styleName: index !== currentMenu.rootIndex ? 'root-item' : 'root-item--current' }, _react2.default.createElement(_reactRouter.Link, { to: menu.path }, _react2.default.createElement(_Icon2.default, { size: 25, styleName: "icon", name: menu.component })));
	            }));
	            var subMenu = _react2.default.createElement("ul", { styleName: "nav-side-sub" }, menuMapping[currentMenu.rootIndex].subMenu.map(function (menu, index) {
	                return _react2.default.createElement("li", { key: index, styleName: index !== currentMenu.subIndex ? 'sub-item' : 'sub-item--current' }, _react2.default.createElement(_reactRouter.Link, { to: menu.path }, menu.displayName));
	            }));
	            return _react2.default.createElement("div", { styleName: "sidebar-left" }, rootMenu, subMenu);
	        }
	    }]);
	
	    return ConsoleSidebar;
	}(_react.Component);
	ConsoleSidebar = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], ConsoleSidebar);
	exports.default = ConsoleSidebar;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(199);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	exports.i(__webpack_require__(164), "");
	
	// module
	exports.push([module.id, ":root {\n  --nav-root-width: 80px;\n  --item-line-height: 50px;\n}\n\n.sidebar-left_2Nfva {\n  position: fixed;\n  left: 0;\n  top: var(--branding-height);\n  height: 100%;\n  width: var(--sidebar-width);\n  background: #E4E4E4;\n}\n\n.nav-side_3L8f6 {\n  position: fixed;\n  left: 0;\n  height: 100%;\n}\n\n.nav-side-root_1_PBg {\n  width: var(--nav-root-width);\n  background: #04082E;\n}\n\n.nav-side-root--current_3BV5t {\n  background: red;\n}\n\n.nav-side-sub_5Q_f5 {\n  width: calc(var(--sidebar-width) - var(--nav-root-width));\n  left: var(--nav-root-width);\n}\n\n/* item */\n.nav-item_2r1zn {\n  height: var(--item-line-height);\n  line-height: var(--item-line-height);\n\n  & a {\n    display: block;\n    padding: 0 15px;\n    color: #fff;\n    height: var(--item-line-height);\n  }\n}\n\n.icon_26PwG {\n  margin-top: 12px;\n}\n\n.root-item_VPwuM {\n  text-align: center;\n\n  & a:hover {\n    background: color(var(--dark-blue) l(+ 10%));\n  }\n}\n\n.root-item--current_3LMnD {\n  background: var(--blue);\n}\n\n.sub-item_waA-O {\n\n  & a {\n    color: var(--text);\n  }\n  & a:hover {\n    background: gray(200);\n  }\n}\n\n.sub-item--current_3CzmM {\n\n  & a,\n  & a:hover {\n    color: var(--blue);\n    background: #fff;\n  }\n}\n", ""]);
	
	// exports
	exports.locals = {
		"sidebar-left": "sidebar-left_2Nfva",
		"nav-side": "nav-side_3L8f6",
		"nav-side-root": "nav-side-root_1_PBg nav-side_3L8f6",
		"nav-side-root--current": "nav-side-root--current_3BV5t nav-side-root_1_PBg nav-side_3L8f6",
		"nav-side-sub": "nav-side-sub_5Q_f5 nav-side_3L8f6",
		"nav-item": "nav-item_2r1zn",
		"icon": "icon_26PwG",
		"root-item": "root-item_VPwuM nav-item_2r1zn",
		"root-item--current": "root-item--current_3LMnD root-item_VPwuM nav-item_2r1zn",
		"sub-item": "sub-item_waA-O nav-item_2r1zn",
		"sub-item--current": "sub-item--current_3CzmM sub-item_waA-O nav-item_2r1zn"
	};

/***/ },
/* 200 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var menus = [{
	    component: 'books',
	    displayName: '',
	    path: '/console/books',
	    subMenu: [{
	        component: 'managebooks',
	        displayName: '书籍管理',
	        path: '/console/books'
	    }, {
	        component: 'addbook',
	        displayName: '添加书籍',
	        path: '/console/books/new'
	    }, {
	        component: 'addcollection',
	        displayName: '添加合集',
	        path: '/console/collections/new'
	    }]
	}, {
	    component: 'users',
	    displayName: '',
	    path: '/console/users',
	    subMenu: [{
	        component: 'manageusers',
	        displayName: '用户管理',
	        path: '/console/users'
	    }]
	}];
	exports.default = menus;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSideEffect = __webpack_require__(202);
	
	var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var defaultTitle = 'Readr';
	var DocContainer = function (_Component) {
	    _inherits(DocContainer, _Component);
	
	    function DocContainer() {
	        _classCallCheck(this, DocContainer);
	
	        return _possibleConstructorReturn(this, (DocContainer.__proto__ || Object.getPrototypeOf(DocContainer)).apply(this, arguments));
	    }
	
	    _createClass(DocContainer, [{
	        key: "render",
	        value: function render() {
	            var className = this.props.className;
	
	            return className ? _react2.default.createElement("div", { className: 'gb-doc-container' + className }, this.props.children) : _react2.default.createElement("div", { className: "gb-doc-container" }, this.props.children);
	        }
	    }]);
	
	    return DocContainer;
	}(_react.Component);
	DocContainer = __decorate([(0, _reactSideEffect2.default)(reducePropsToState, handleStateChangeOnClient)], DocContainer);
	function reducePropsToState(propsList) {
	    var innermostProps = propsList[propsList.length - 1];
	    var data = {};
	    if (innermostProps) {
	        data = _lodash2.default.pick(innermostProps, ['title', 'bodyClass']);
	        if (data.title && !innermostProps.useAsMasterTitle) {
	            data.title = data.title + " | " + defaultTitle;
	        } else {
	            data.title = data.title || defaultTitle;
	        }
	    }
	    data.bodyClass = propsList.filter(function (prop) {
	        return prop.bodyClass;
	    }).map(function (prop) {
	        return prop.bodyClass;
	    }).join(' ');
	    return data;
	}
	function handleStateChangeOnClient(propList) {
	    var title = propList.title;
	    var bodyClass = propList.bodyClass;
	
	    if (typeof bodyClass !== 'undefined') {
	        document.body.className = bodyClass;
	    } else {
	        document.body.removeAttribute('class');
	    }
	    if (typeof title !== 'undefined') {
	        document.title = title;
	    } else {
	        document.title = defaultTitle;
	    }
	}
	exports.default = DocContainer;

/***/ },
/* 202 */
/***/ function(module, exports) {

	module.exports = require("react-side-effect");

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _api = __webpack_require__(204);
	
	Object.keys(_api).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _api[key];
	    }
	  });
	});
	
	var api = _interopRequireWildcard(_api);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = Object.assign({}, api);

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.logout = exports.auth = exports.userSignup = exports.userLogin = exports.fetchDoubanBooks = exports.fetchUsers = exports.fetchBooks = exports.fetchBookContent = exports.fetchBook = exports.fetchBookProgress = undefined;
	exports.fetchNormalized = fetchNormalized;
	exports.addCollection = addCollection;
	exports.addBook = addBook;
	exports.addAuthor = addAuthor;
	exports.setProgress = setProgress;
	exports.deleteBook = deleteBook;
	
	var _callApi = __webpack_require__(205);
	
	var _callApi2 = _interopRequireDefault(_callApi);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _normalizeResponse = __webpack_require__(208);
	
	var _normalizeResponse2 = _interopRequireDefault(_normalizeResponse);
	
	var _schemas = __webpack_require__(103);
	
	var _schemas2 = _interopRequireDefault(_schemas);
	
	var _utils = __webpack_require__(92);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var API_ROOT = _helpers2.default.getApiRoot();
	/**
	 * general helper functions
	 */
	var parseEndpointWithOptions = function parseEndpointWithOptions(endpoint, options) {
	    if (typeof options === 'string') {
	        return options;
	    } else {
	        var queryString = _utils2.default.parseUrlencoded(options);
	        return endpoint + '?' + queryString;
	    }
	};
	function fetchNormalized(endpoint, schema) {
	    var fetchOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    if (endpoint.indexOf('http://') !== -1) {
	        return (0, _normalizeResponse2.default)((0, _callApi2.default)(endpoint, fetchOptions), schema);
	    }
	    return (0, _normalizeResponse2.default)((0, _callApi2.default)(API_ROOT + '/' + endpoint, fetchOptions), schema);
	}
	/**
	 * specific api services
	 */
	var fetchBookProgress = exports.fetchBookProgress = function fetchBookProgress(id) {
	    return fetchNormalized('user/books/' + id + '/progress', _schemas2.default.BOOK_PROGRESS);
	};
	var fetchBook = exports.fetchBook = function fetchBook(id) {
	    return fetchNormalized('books/' + id, _schemas2.default.BOOK);
	};
	var fetchBookContent = exports.fetchBookContent = function fetchBookContent(id) {
	    return fetchNormalized('books/' + id + '/content', _schemas2.default.BOOK_CONTENT);
	};
	var fetchBooks = exports.fetchBooks = function fetchBooks() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var withContent = options.withContent;
	
	    var apiOptions = !withContent ? {
	        exclude: 'content'
	    } : {};
	    apiOptions = _lodash2.default.assign({}, _lodash2.default.omit(options, ['withContent']), apiOptions);
	    return fetchNormalized(parseEndpointWithOptions('books', apiOptions), _schemas2.default.BOOK_ARRAY);
	};
	var fetchUsers = exports.fetchUsers = function fetchUsers(options) {
	    return fetchNormalized(parseEndpointWithOptions('users', options), _schemas2.default.USER_ARRAY);
	};
	// external apis
	var fetchDoubanBooks = exports.fetchDoubanBooks = function fetchDoubanBooks(keyword) {
	    return (0, _callApi2.default)(_common.DOUBAN_API_ROOT + '/book/search?count=10&q=' + keyword, {
	        useJsonp: true
	    });
	};
	var userLogin = exports.userLogin = function userLogin(data) {
	    return (0, _callApi2.default)(API_ROOT + '/auth', {
	        method: 'POST',
	        data: data
	    });
	};
	var userSignup = exports.userSignup = function userSignup(data) {
	    return (0, _callApi2.default)(API_ROOT + '/users', {
	        method: 'POST',
	        data: data
	    });
	};
	var auth = exports.auth = function auth() {
	    return (0, _callApi2.default)(API_ROOT + '/auth', {
	        method: 'GET'
	    });
	};
	var logout = exports.logout = function logout() {
	    return (0, _callApi2.default)(API_ROOT + '/auth/revoke', {
	        method: 'PUT'
	    });
	};
	function addCollection(data) {
	    return (0, _callApi2.default)(API_ROOT + '/collections', { method: 'POST', data: data });
	}
	function addBook(data) {
	    return (0, _callApi2.default)(API_ROOT + '/books', { method: 'POST', data: data });
	}
	function addAuthor(data) {
	    return (0, _callApi2.default)(API_ROOT + '/authors', { method: 'POST', data: data });
	}
	function setProgress(bookId, data) {
	    (0, _callApi2.default)(API_ROOT + '/user/books/' + bookId + '/progress', { method: 'PUT', data: data });
	}
	function deleteBook(id) {
	    return (0, _callApi2.default)(API_ROOT + '/books/' + id, {
	        method: 'DELETE'
	    });
	}

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.callApi = callApi;
	
	__webpack_require__(206);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _jsonp = __webpack_require__(207);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultOptions = {
	    dataType: 'json',
	    method: 'GET',
	    credentials: 'same-origin'
	};
	// return fetch options
	var parseOptions = function parseOptions(originanOptions) {
	    var _Object$assign = Object.assign({}, defaultOptions, originanOptions);
	
	    var method = _Object$assign.method;
	    var data = _Object$assign.data;
	    var credentials = _Object$assign.credentials;
	    var dataType = _Object$assign.dataType;
	    var useJsonp = _Object$assign.useJsonp;
	
	    var fetchOptions = {};
	    if (useJsonp) {
	        return {
	            useJsonp: true
	        };
	    }
	    if (method) {
	        fetchOptions.method = method;
	    }
	    if (credentials) {
	        fetchOptions.credentials = credentials;
	    }
	    // handle request headers and body
	    if (method === 'POST' || method === 'PUT') {
	        var contentType = void 0;
	        var body = void 0;
	        if (dataType === 'json') {
	            contentType = 'application/json';
	            body = JSON.stringify(data);
	        } else {
	            contentType = 'application/x-www-form-urlencoded';
	            body = (0, _parseUrlencoded2.default)(data);
	            if (dataType !== 'urlencoded') {
	                console.warn('Unsupported dataType used "urlencoded" instead!');
	            }
	        }
	        fetchOptions.headers = {
	            'Content-Type': contentType,
	            'Access-Control-Request-Method': method
	        };
	        fetchOptions.body = body;
	    }
	    if (method === 'DELETE') {
	        fetchOptions.headers = {
	            'Access-Control-Request-Method': 'DELETE'
	        };
	    }
	    return fetchOptions;
	};
	// type Result = {
	//   json: any
	//   response: any
	// }
	function callApi(fullUrl) {
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    if (options.useJsonp) {
	        return (0, _jsonp2.default)(fullUrl);
	    }
	    return fetch(fullUrl, parseOptions(options)).then(function (response) {
	        if (response.status !== 204) {
	            return response.json().then(function (json) {
	                if (!response.ok) {
	                    return Promise.reject(json);
	                }
	                return { json: json, _response: response };
	            });
	        }
	        return { json: {}, _response: response };
	    });
	}
	exports.default = callApi;

/***/ },
/* 206 */
/***/ function(module, exports) {

	module.exports = require("isomorphic-fetch");

/***/ },
/* 207 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = jsonp;
	function jsonp(fullUrl) {
	    if (fullUrl.indexOf('douban') !== -1) {
	        var _ret = function () {
	            var id = new Date().valueOf();
	            var jsonpId = 'jsonp-' + id;
	            var jsonpCallback = 'jsonpCallback' + id;
	            var jsonpCallbackData = '__JSONP_DATA_' + id + '__';
	            window[jsonpCallback] = function (data) {
	                window[jsonpCallbackData] = data;
	            };
	            var script = document.createElement('script');
	            script.setAttribute('src', fullUrl + '&callback=' + jsonpCallback);
	            script.setAttribute('id', jsonpId);
	            document.body.appendChild(script);
	            return {
	                v: new Promise(function (resolve) {
	                    script.onload = function () {
	                        document.body.removeChild(document.getElementById(jsonpId));
	                        resolve({ json: window[jsonpCallbackData] });
	                    };
	                })
	            };
	        }();
	
	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	}

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = normalizeResponse;
	
	var _handleResponse = __webpack_require__(209);
	
	var _handleResponse2 = _interopRequireDefault(_handleResponse);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function normalizeResponse(resultPromise, schema) {
	    return resultPromise.then(function (response) {
	        return { response: (0, _handleResponse2.default)(response, schema) };
	    }, function (error) {
	        return { error: error };
	    });
	}

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _normalizr = __webpack_require__(104);
	
	var _parseQuery = __webpack_require__(95);
	
	var _parseQuery2 = _interopRequireDefault(_parseQuery);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var parseHeaderPageLinkByRel = function parseHeaderPageLinkByRel(links, rel) {
	    var link = links.split(',').find(function (s) {
	        return s.indexOf('rel="' + rel + '"') > -1;
	    });
	    if (!link) {
	        return undefined;
	    }
	    var url = link.split(';')[0].trim().slice(1, -1);
	    return {
	        // todo
	        page: parseInt(_lodash2.default.get((0, _parseQuery2.default)(url.split('?')[1] || ''), 'page', 0), 10),
	        url: url
	    };
	};
	function parseResHeaderToPagination(response) {
	    if (!response) {
	        return {};
	    }
	    var links = response.headers.get('link');
	    if (!links) {
	        return {};
	    }
	    var next = parseHeaderPageLinkByRel(links, 'next');
	    var last = parseHeaderPageLinkByRel(links, 'last');
	    return {
	        next: next,
	        last: last
	    };
	}
	function handleResponse(_ref, schema) {
	    var json = _ref.json;
	    var _response = _ref._response;
	
	    var camelizedJson = _humps2.default.camelizeKeys(json);
	
	    var _parseResHeaderToPagi = parseResHeaderToPagination(_response);
	
	    var next = _parseResHeaderToPagi.next;
	    var last = _parseResHeaderToPagi.last;
	
	    if (typeof schema !== 'undefined') {
	        return _lodash2.default.assign({}, (0, _normalizr.normalize)(camelizedJson, schema), {
	            _next: next,
	            _last: last
	        });
	    }
	    return camelizedJson;
	}
	exports.default = handleResponse;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(1, function (require) {
	            fn(null, __webpack_require__(211).default);
	        });
	    }
	};

/***/ },
/* 211 */,
/* 212 */
/***/ function(module, exports) {

	module.exports = require("redux");

/***/ },
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(223);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".content_deYS4 {\n  margin: 0 auto;\n  width: 550px;\n  position: relative;\n  overflow: hidden;\n  line-height: 1.9; }\n  .content_deYS4 p {\n    margin: 0;\n    min-height: 25px; }\n\n.page_26Jj7 {\n  display: block;\n  width: 100%;\n  overflow: hidden; }\n\n.page--fluid_20eQM { }\n  .page--fluid_20eQM .content_deYS4 {\n    width: 100%;\n    padding: 0 20px; }\n\n.page--init_1VHVM {\n  position: relative;\n  height: auto; }\n  .page--init_1VHVM .content_deYS4 {\n    height: auto; }\n\n.gb-line_3RYqK {\n  overflow: hidden; }\n\n.page-no_2_187 {\n  position: absolute;\n  left: 0;\n  top: 0;\n  border-top: 1px solid #e6e6e6;\n  padding: 0 10px;\n  color: #e6e6e6;\n  font-size: 0.8rem; }\n\n.white_1TVO9 {\n  color: #333; }\n\n.night_3alh8 {\n  color: #eee; }\n  .night_3alh8 a {\n    color: #fff;\n    text-decoration: underline; }\n\n.sepia_1CF69 {\n  color: #503220; }\n", ""]);
	
	// exports
	exports.locals = {
		"content": "content_deYS4",
		"page": "page_26Jj7",
		"page--fluid": "page--fluid_20eQM page_26Jj7",
		"page--init": "page--init_1VHVM",
		"gb-line": "gb-line_3RYqK",
		"page-no": "page-no_2_187",
		"white": "white_1TVO9",
		"night": "night_3alh8",
		"sepia": "sepia_1CF69"
	};

/***/ },
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var THEMES = exports.THEMES = {
	    WHITE: 'WHITE',
	    NIGHT: 'NIGHT',
	    SEPIA: 'SEPIA'
	};

/***/ },
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getNodeHeights = getNodeHeights;
	exports.groupNodesByPage = groupNodesByPage;
	exports.groupPageFromChapters = groupPageFromChapters;
	exports.resolveBookLocation = resolveBookLocation;
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(222);
	// 暂不支持包含图片的计算
	// 计算没有等待图片加载完成，所以结果是不正确的
	function getNodeHeights(nodes) {
	    var nodesHeight = [];
	    Array.prototype.forEach.call(nodes, function (node, index) {
	        if (node.className !== styles['gb-line']) {
	            console.error('Unsupported content found!');
	        }
	        nodesHeight.push(node.clientHeight);
	    });
	    return nodesHeight;
	}
	// long paragraph situation doesn't seem to affect this function
	// offset distance is always negtive or zero
	// the index will be of the paragraph with this offset at the end
	function getPageOffset(_ref) {
	    var pageIndex = _ref.pageIndex;
	    var pageHeight = _ref.pageHeight;
	    var nodeHeights = _ref.nodeHeights;
	
	    var offset = 0;
	    var nodeIndex = 0;
	    var nodeStartIndex = void 0;
	    if (pageIndex !== 0) {
	        var nodeHeightSum = 0;
	        while (nodeHeightSum <= pageHeight * pageIndex) {
	            nodeHeightSum += nodeHeights[nodeIndex];
	            nodeIndex++;
	        }
	        offset = nodeHeightSum - nodeHeights[nodeIndex - 1] - pageIndex * pageHeight;
	        nodeStartIndex = nodeIndex - 1;
	    } else {
	        nodeStartIndex = 0;
	    }
	    return { offset: offset, nodeStartIndex: nodeStartIndex };
	}
	function getNodesOfPage(_ref2) {
	    var pageIndex = _ref2.pageIndex;
	    var nodes = _ref2.nodes;
	    var pageHeight = _ref2.pageHeight;
	    var nodeHeights = _ref2.nodeHeights;
	
	    var _getPageOffset = getPageOffset({ pageIndex: pageIndex, pageHeight: pageHeight, nodeHeights: nodeHeights });
	
	    var offset = _getPageOffset.offset;
	    var nodeStartIndex = _getPageOffset.nodeStartIndex;
	
	    var nodeIndex = nodeStartIndex;
	    var nodeEndIndex = void 0;
	    var pageNodes = [];
	    var nodeHeightSum = offset + nodeHeights[nodeStartIndex];
	    nodeIndex++;
	    if (nodeHeightSum < pageHeight) {
	        while (nodeHeightSum <= pageHeight && nodeIndex !== nodes.length) {
	            nodeHeightSum += nodeHeights[nodeIndex];
	            nodeIndex++;
	        }
	        nodeEndIndex = nodeIndex - 1;
	    } else {
	        nodeEndIndex = nodeStartIndex;
	    }
	    for (var i = nodeStartIndex; i <= nodeEndIndex && i <= nodes.length - 1; i++) {
	        pageNodes.push(nodes[i]);
	    }
	    return { pageNodes: pageNodes, offset: offset };
	}
	function groupNodesByPage(nodes, nodeHeights, pageHeight) {
	    var pageStartFrom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	    var chapterId = arguments[4];
	
	    var pages = [];
	    var pageHeightSum = nodeHeights.reduce(function (a, b) {
	        return a + b;
	    }, 0);
	    var pageSum = Math.ceil(pageHeightSum / pageHeight);
	    if (nodeHeights.length === 0) {
	        return [{
	            nodes: nodes,
	            meta: {
	                pageNo: 1 + pageStartFrom,
	                offset: 0,
	                chapterId: chapterId
	            }
	        }];
	    }
	    // finally
	
	    var _loop = function _loop(i) {
	        var _getNodesOfPage = getNodesOfPage({ pageIndex: i, nodes: nodes, nodeHeights: nodeHeights, pageHeight: pageHeight });
	
	        var pageNodes = _getNodesOfPage.pageNodes;
	        var offset = _getNodesOfPage.offset;
	
	        var findIdOfHTags = function findIdOfHTags(mdNode) {
	            var pattern = /<h\d id="(.*)">(.*)<\/h\d>/;
	            var result = mdNode.match(pattern);
	            if (result) {
	                return result[1];
	            }
	            return null;
	        };
	        var hash = pageNodes.map(function (node) {
	            return findIdOfHTags(node);
	        }).filter(function (id) {
	            return Boolean(id);
	        });
	        pages.push({
	            nodes: pageNodes,
	            meta: {
	                pageNo: pageStartFrom + i + 1,
	                offset: offset,
	                chapterId: chapterId,
	                hash: hash
	            }
	        });
	    };
	
	    for (var i = 0; i < pageSum; i++) {
	        _loop(i);
	    }
	    return pages;
	}
	function groupPageFromChapters(contentOfChapters, nodeHeightsOfChapters, pageHeight) {
	    var pageStartFrom = 0;
	    var allPages = [];
	    var t0 = new Date().valueOf();
	    contentOfChapters.forEach(function (chapter, index) {
	        var pages = groupNodesByPage(chapter.markdown.split('\n\n'), nodeHeightsOfChapters[index].nodeHeights, pageHeight, pageStartFrom, chapter.id);
	        allPages = allPages.concat(pages);
	        pageStartFrom = pageStartFrom + pages.length;
	    });
	    var t1 = new Date().valueOf();
	    _helpers2.default.print('Grouping nodes takes ' + (t1 - t0) + 'ms');
	    return allPages;
	}
	function resolveBookLocation(href, computedPages) {
	    var chapterId = href.split('$')[0];
	    var hash = href.split('$')[1];
	    var i = 0;
	    var foundChapterPage = void 0;
	    while (i < computedPages.length) {
	        var page = computedPages[i];
	        if ('#' + page.meta.chapterId === chapterId) {
	            foundChapterPage = page.meta.pageNo;
	            if (hash) {
	                if (page.meta.hash && page.meta.hash.indexOf(hash) !== -1) {
	                    _helpers2.default.print('with hash', page.meta.pageNo);
	                    return page.meta.pageNo;
	                }
	            } else {
	                _helpers2.default.print('without hash', page.meta.pageNo);
	                return page.meta.pageNo;
	            }
	        }
	        i++;
	    }
	    if (!foundChapterPage) {
	        throw new Error('未找到位置！');
	    }
	    console.warn('所在章节未找到位置，已跳转至章节！');
	    _helpers2.default.print('foundChapterPage', foundChapterPage);
	    return foundChapterPage;
	}

/***/ },
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(2, function (require) {
	            fn(null, __webpack_require__(263).default);
	        });
	    }
	};

/***/ },
/* 263 */,
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(3, function (require) {
	            fn(null, __webpack_require__(265).default);
	        });
	    }
	};

/***/ },
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(4, function (require) {
	            fn(null, __webpack_require__(286).default);
	        });
	    }
	};

/***/ },
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(5, function (require) {
	            fn(null, __webpack_require__(290).default);
	        });
	    }
	};

/***/ },
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(6, function (require) {
	            fn(null, __webpack_require__(294).default);
	        });
	    }
	};

/***/ },
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(7, function (require) {
	            fn(null, __webpack_require__(302).default);
	        });
	    }
	};

/***/ },
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(8, function (require) {
	            fn(null, __webpack_require__(306).default);
	        });
	    }
	};

/***/ },
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(9, function (require) {
	            fn(null, __webpack_require__(310).default);
	        });
	    }
	};

/***/ },
/* 310 */,
/* 311 */,
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(10, function (require) {
	            fn(null, __webpack_require__(313).default);
	        });
	    }
	};

/***/ },
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(11, function (require) {
	            fn(null, __webpack_require__(320).default);
	        });
	    }
	};

/***/ },
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(12, function (require) {
	            fn(null, __webpack_require__(325).default);
	        });
	    }
	};

/***/ },
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(13, function (require) {
	            fn(null, __webpack_require__(329).default);
	        });
	    }
	};

/***/ },
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(14, function (require) {
	            fn(null, __webpack_require__(344).default);
	        });
	    }
	};

/***/ },
/* 344 */,
/* 345 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(15, function (require) {
	            fn(null, __webpack_require__(346).default);
	        });
	    }
	};

/***/ },
/* 346 */,
/* 347 */,
/* 348 */,
/* 349 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(16, function (require) {
	            fn(null, __webpack_require__(350).default);
	        });
	    }
	};

/***/ },
/* 350 */,
/* 351 */,
/* 352 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(17, function (require) {
	            fn(null, __webpack_require__(353).default);
	        });
	    }
	};

/***/ },
/* 353 */,
/* 354 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _AppError = __webpack_require__(355);
	
	var _AppError2 = _interopRequireDefault(_AppError);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _AppError2.default;

/***/ },
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _Logo = __webpack_require__(179);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(356);
	var AppError = function (_Component) {
	    _inherits(AppError, _Component);
	
	    function AppError() {
	        _classCallCheck(this, AppError);
	
	        return _possibleConstructorReturn(this, (AppError.__proto__ || Object.getPrototypeOf(AppError)).apply(this, arguments));
	    }
	
	    _createClass(AppError, [{
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var title = _props.title;
	            var message = _props.message;
	
	            return _react2.default.createElement("div", null, _react2.default.createElement("div", { styleName: "header" }, _react2.default.createElement(_Logo2.default, { dark: true })), _react2.default.createElement("div", { styleName: "body" }, _react2.default.createElement("h1", { styleName: "title" }, title), _react2.default.createElement("div", null, message)));
	        }
	    }]);
	
	    return AppError;
	}(_react.Component);
	AppError = __decorate([(0, _reactCssModules2.default)(styles)], AppError);
	exports.default = AppError;

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(357);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".header_3jAuQ {\n  text-align: center; }\n\n.title_17FS5 {\n  font-size: 1.6rem;\n  color: #222; }\n\n.body_3v-hj {\n  text-align: center;\n  width: 500px;\n  margin: 0 auto;\n  padding: 150px 0;\n  font-size: 1.1rem; }\n", ""]);
	
	// exports
	exports.locals = {
		"header": "header_3jAuQ",
		"title": "title_17FS5",
		"body": "body_3v-hj"
	};

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.render500 = exports.renderHtml = exports.matchRoute = exports.getStore = undefined;
	
	var _getStore = __webpack_require__(359);
	
	var _getStore2 = _interopRequireDefault(_getStore);
	
	var _matchRoute = __webpack_require__(371);
	
	var _matchRoute2 = _interopRequireDefault(_matchRoute);
	
	var _renderHtml = __webpack_require__(372);
	
	var _renderHtml2 = _interopRequireDefault(_renderHtml);
	
	var _render = __webpack_require__(395);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.getStore = _getStore2.default;
	exports.matchRoute = _matchRoute2.default;
	exports.renderHtml = _renderHtml2.default;
	exports.render500 = _render2.default;
	exports.default = _renderHtml2.default;

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _sagas = __webpack_require__(360);
	
	var _sagas2 = _interopRequireDefault(_sagas);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Get Redux store tree with initial fetched data
	 */
	function getStore(renderProps, fetchData, userSession, store) {
	    if (fetchData === true) {
	        var _ret = function () {
	            var params = renderProps.params;
	            var query = renderProps.location.query;
	            var fetchDataFns = renderProps.components.map(function (comp) {
	                return comp.fetchData || null;
	            }).filter(function (comp) {
	                return Boolean(comp);
	            });
	            store.runSaga(_sagas2.default);
	            if (fetchDataFns.length !== 0) {
	                return {
	                    v: Promise.all(fetchDataFns.map(function (fetchDataFn) {
	                        // 这边应该是对 store 做了 mutation
	                        var result = fetchDataFn({ store: store, params: params, query: query, userSession: userSession });
	                        // todo: 遇到请求数组会报错
	                        if (Array.isArray(result)) {
	                            return Promise.all(result).then(function () {
	                                return 0;
	                            }, function (error) {
	                                return error;
	                            });
	                        }
	                        // todo
	                        // 结果不是 Promise, saga 的 action 暂时这么处理
	                        if (!result || !result.then) {
	                            return 0;
	                        }
	                        return result.then(function () {
	                            return 0;
	                        }, function (error) {
	                            return error;
	                        });
	                    })).then(function () {
	                        return store;
	                    }, function (error) {
	                        return error;
	                    })
	                };
	            }
	            return {
	                v: Promise.resolve(store)
	            };
	        }();
	
	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	    return Promise.resolve(store);
	}
	exports.default = getStore;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = rootSaga;
	
	var _effects = __webpack_require__(361);
	
	var _loadRequests = __webpack_require__(362);
	
	var _loadRequests2 = _interopRequireDefault(_loadRequests);
	
	var _loginFlow = __webpack_require__(367);
	
	var _loginFlow2 = _interopRequireDefault(_loginFlow);
	
	var _viewerTasks = __webpack_require__(368);
	
	var _viewerTasks2 = _interopRequireDefault(_viewerTasks);
	
	var _test = __webpack_require__(370);
	
	var _test2 = _interopRequireDefault(_test);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _marked = [rootSaga].map(regeneratorRuntime.mark);
	
	function rootSaga() {
	    return regeneratorRuntime.wrap(function rootSaga$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    _context.next = 2;
	                    return [(0, _effects.fork)(_loadRequests2.default), (0, _effects.fork)(_loginFlow2.default), (0, _effects.fork)(_viewerTasks2.default), (0, _effects.fork)(_test.watchTest2), (0, _effects.fork)(_test2.default)];
	
	                case 2:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}

/***/ },
/* 361 */
/***/ function(module, exports) {

	module.exports = require("redux-saga/effects");

/***/ },
/* 362 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RESERVED_ACTION_KYES = exports.API_CONFIG_KEYS = undefined;
	exports.default = watchAllLoadRequests;
	
	var _effects = __webpack_require__(361);
	
	var _actions = __webpack_require__(90);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _utils = __webpack_require__(363);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [handleLoad, watchAllLoadRequests].map(regeneratorRuntime.mark);
	
	var OPTIONS = 'options';
	var ID = 'id';
	var DATA = 'data';
	var TYPE = 'type';
	var API_CONFIG_KEYS = exports.API_CONFIG_KEYS = [OPTIONS, ID, DATA];
	var RESERVED_ACTION_KYES = exports.RESERVED_ACTION_KYES = [TYPE].concat(API_CONFIG_KEYS);
	var fetchBook = _utils.fetchEntity.bind(null, actions.book, _api2.default.fetchBook);
	var fetchBookContent = _utils.fetchEntity.bind(null, actions.bookContent, _api2.default.fetchBookContent);
	var fetchBooks = _utils.fetchEntity.bind(null, actions.books, _api2.default.fetchBooks);
	var fetchUsers = _utils.fetchEntity.bind(null, actions.users, _api2.default.fetchUsers);
	function handleLoad(fetchFn, parsedAction, callApi) {
	    var apiConfig, payload;
	    return regeneratorRuntime.wrap(function handleLoad$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    apiConfig = parsedAction.apiConfig;
	                    payload = parsedAction.payload;
	                    // 在检查是否有数据的算法完成之前默认直接 call api
	
	                    if (!(typeof callApi === 'undefined' || callApi === true)) {
	                        _context.next = 5;
	                        break;
	                    }
	
	                    _context.next = 5;
	                    return (0, _effects.call)(fetchFn, apiConfig, payload);
	
	                case 5:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}
	function watchAllLoadRequests() {
	    var action, apiConfig, payload, parsedAction;
	    return regeneratorRuntime.wrap(function watchAllLoadRequests$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    if (false) {
	                        _context2.next = 24;
	                        break;
	                    }
	
	                    _context2.next = 3;
	                    return (0, _effects.take)(actions.LOAD_ACTIONS);
	
	                case 3:
	                    action = _context2.sent;
	                    apiConfig = _lodash2.default.pick(action, API_CONFIG_KEYS);
	                    // 如果直接使用 payload 可能在 pagination 之类的 reducer 里面会有一些麻烦
	                    // 因为可能比较难判断哪个是 key
	
	                    payload = _lodash2.default.omit(action, RESERVED_ACTION_KYES);
	                    parsedAction = { apiConfig: apiConfig, payload: payload };
	                    _context2.t0 = action.type;
	                    _context2.next = _context2.t0 === ACTION_TYPES.LOAD_USERS ? 10 : _context2.t0 === ACTION_TYPES.LOAD_BOOKS ? 13 : _context2.t0 === ACTION_TYPES.LOAD_BOOK ? 16 : _context2.t0 === ACTION_TYPES.LOAD_BOOK_CONTENT ? 19 : 22;
	                    break;
	
	                case 10:
	                    _context2.next = 12;
	                    return (0, _effects.fork)(handleLoad, fetchUsers, parsedAction);
	
	                case 12:
	                    return _context2.abrupt('break', 22);
	
	                case 13:
	                    _context2.next = 15;
	                    return (0, _effects.fork)(handleLoad, fetchBooks, parsedAction);
	
	                case 15:
	                    return _context2.abrupt('break', 22);
	
	                case 16:
	                    _context2.next = 18;
	                    return (0, _effects.fork)(handleLoad, fetchBook, parsedAction);
	
	                case 18:
	                    return _context2.abrupt('break', 22);
	
	                case 19:
	                    _context2.next = 21;
	                    return (0, _effects.fork)(handleLoad, fetchBookContent, parsedAction);
	
	                case 21:
	                    return _context2.abrupt('break', 22);
	
	                case 22:
	                    _context2.next = 0;
	                    break;
	
	                case 24:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RESERVED_ACTION_KYES = exports.API_CONFIG_KEYS = undefined;
	exports.fetchEntity = fetchEntity;
	
	var _cache = __webpack_require__(364);
	
	var cache = _interopRequireWildcard(_cache);
	
	var _effects = __webpack_require__(361);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [fetchEntity].map(regeneratorRuntime.mark);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var OPTIONS = 'options';
	var ID = 'id';
	var DATA = 'data';
	var TYPE = 'type';
	var API_CONFIG_KEYS = exports.API_CONFIG_KEYS = [OPTIONS, ID, DATA];
	var RESERVED_ACTION_KYES = exports.RESERVED_ACTION_KYES = [TYPE].concat(API_CONFIG_KEYS);
	// TODO
	// 似乎需要优化，缓存的逻辑和获取的耦合太深了
	function fetchEntity(entity, apiFn, apiConfig, payload) {
	    var fullPayload, id, options, apiArgs, hasCache, cacheId, cacheContent, action, _ref, response, error, _action, _action2;
	
	    return regeneratorRuntime.wrap(function fetchEntity$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    fullPayload = _lodash2.default.assign({}, apiConfig, payload);
	                    id = apiConfig[ID];
	                    options = apiConfig[OPTIONS];
	                    apiArgs = [id, options].filter(function (arg) {
	                        return !_lodash2.default.isUndefined(arg);
	                    });
	                    hasCache = void 0;
	                    cacheId = void 0;
	
	                    if (!(id && _app2.default.enableEntityCache)) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    cacheId = cache.createCacheId(apiFn + id + options);
	                    cacheContent = cache.getCache(cacheId);
	
	                    hasCache = Boolean(cacheContent);
	
	                    if (!hasCache) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    action = entity.loadCache(cacheContent, fullPayload);
	                    _context.next = 14;
	                    return (0, _effects.put)(entity.request(fullPayload));
	
	                case 14:
	                    _context.next = 16;
	                    return (0, _effects.put)(action);
	
	                case 16:
	                    return _context.abrupt('return', action);
	
	                case 17:
	                    _context.next = 19;
	                    return (0, _effects.put)(entity.request(fullPayload));
	
	                case 19:
	                    _context.next = 21;
	                    return _effects.call.apply(undefined, [apiFn].concat(_toConsumableArray(apiArgs)));
	
	                case 21:
	                    _ref = _context.sent;
	                    response = _ref.response;
	                    error = _ref.error;
	
	                    if (!response) {
	                        _context.next = 32;
	                        break;
	                    }
	
	                    // 如果是 undefined 也不会有任何处理
	                    if (hasCache === false) {
	                        cache.setCache(cacheId, response);
	                    }
	                    _action = entity.success(response, fullPayload);
	                    _context.next = 29;
	                    return (0, _effects.put)(_action);
	
	                case 29:
	                    return _context.abrupt('return', _action);
	
	                case 32:
	                    _action2 = entity.failure(error, fullPayload);
	                    _context.next = 35;
	                    return (0, _effects.put)(_action2);
	
	                case 35:
	                    return _context.abrupt('return', _action2);
	
	                case 36:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.createCacheId = createCacheId;
	exports.getCache = getCache;
	exports.setCache = setCache;
	
	var _md = __webpack_require__(365);
	
	var _md2 = _interopRequireDefault(_md);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createCacheId(identifier) {
	    if (_lodash2.default.isEmpty(identifier)) {
	        throw new Error('缓存标识符不能为空！');
	    }
	    return (0, _md2.default)(identifier.toString());
	}
	function getCache(key) {
	    if (typeof key !== 'string') {
	        throw new Error('Name should be string!');
	    }
	    var content = localStorage.getItem(key);
	    if (!content) {
	        return undefined;
	    }
	    try {
	        content = JSON.parse(content);
	    } catch (error) {
	        throw error;
	    }
	    return content;
	}
	function setCache(key, content) {
	    if (typeof key !== 'string') {
	        throw new Error('Name should be string!');
	    }
	    if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) !== 'object') {
	        throw new Error('Cache content type should be object!');
	    }
	    var save = function save() {
	        localStorage.setItem(key, JSON.stringify(content));
	    };
	    try {
	        save();
	    } catch (error) {
	        if (error.name === 'QuotaExceededError') {
	            // TODO: 能否只清除最旧的
	            console.warn('本地缓存已满，旧的缓存将被清除！');
	            localStorage.clear();
	            save();
	        } else {
	            console.error(error);
	        }
	    }
	    return true;
	}

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var md5 = __webpack_require__(366);
	exports.default = md5;

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/*
	 * JavaScript MD5
	 * https://github.com/blueimp/JavaScript-MD5
	 *
	 * Copyright 2011, Sebastian Tschan
	 * https://blueimp.net
	 *
	 * Licensed under the MIT license:
	 * http://www.opensource.org/licenses/MIT
	 *
	 * Based on
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */
	
	/*global unescape, define, module */
	
	;(function ($) {
	  'use strict';
	
	  /*
	  * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	  * to work around bugs in some JS interpreters.
	  */
	
	  function safe_add(x, y) {
	    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	    return msw << 16 | lsw & 0xFFFF;
	  }
	
	  /*
	  * Bitwise rotate a 32-bit number to the left.
	  */
	  function bit_rol(num, cnt) {
	    return num << cnt | num >>> 32 - cnt;
	  }
	
	  /*
	  * These functions implement the four basic operations the algorithm uses.
	  */
	  function md5_cmn(q, a, b, x, s, t) {
	    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
	  }
	  function md5_ff(a, b, c, d, x, s, t) {
	    return md5_cmn(b & c | ~b & d, a, b, x, s, t);
	  }
	  function md5_gg(a, b, c, d, x, s, t) {
	    return md5_cmn(b & d | c & ~d, a, b, x, s, t);
	  }
	  function md5_hh(a, b, c, d, x, s, t) {
	    return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	  }
	  function md5_ii(a, b, c, d, x, s, t) {
	    return md5_cmn(c ^ (b | ~d), a, b, x, s, t);
	  }
	
	  /*
	  * Calculate the MD5 of an array of little-endian words, and a bit length.
	  */
	  function binl_md5(x, len) {
	    /* append padding */
	    x[len >> 5] |= 0x80 << len % 32;
	    x[(len + 64 >>> 9 << 4) + 14] = len;
	
	    var i;
	    var olda;
	    var oldb;
	    var oldc;
	    var oldd;
	    var a = 1732584193;
	    var b = -271733879;
	    var c = -1732584194;
	    var d = 271733878;
	
	    for (i = 0; i < x.length; i += 16) {
	      olda = a;
	      oldb = b;
	      oldc = c;
	      oldd = d;
	
	      a = md5_ff(a, b, c, d, x[i], 7, -680876936);
	      d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
	      c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
	      b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
	      a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
	      d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
	      c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
	      b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
	      a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
	      d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
	      c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
	      b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
	      a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
	      d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
	      c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
	      b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
	
	      a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
	      d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
	      c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
	      b = md5_gg(b, c, d, a, x[i], 20, -373897302);
	      a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
	      d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
	      c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
	      b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
	      a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
	      d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
	      c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
	      b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
	      a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
	      d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
	      c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
	      b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
	
	      a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
	      d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
	      c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
	      b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
	      a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
	      d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
	      c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
	      b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
	      a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
	      d = md5_hh(d, a, b, c, x[i], 11, -358537222);
	      c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
	      b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
	      a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
	      d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
	      c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
	      b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
	
	      a = md5_ii(a, b, c, d, x[i], 6, -198630844);
	      d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
	      c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
	      b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
	      a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
	      d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
	      c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
	      b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
	      a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
	      d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
	      c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
	      b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
	      a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
	      d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
	      c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
	      b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
	
	      a = safe_add(a, olda);
	      b = safe_add(b, oldb);
	      c = safe_add(c, oldc);
	      d = safe_add(d, oldd);
	    }
	    return [a, b, c, d];
	  }
	
	  /*
	  * Convert an array of little-endian words to a string
	  */
	  function binl2rstr(input) {
	    var i;
	    var output = '';
	    var length32 = input.length * 32;
	    for (i = 0; i < length32; i += 8) {
	      output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xFF);
	    }
	    return output;
	  }
	
	  /*
	  * Convert a raw string to an array of little-endian words
	  * Characters >255 have their high-byte silently ignored.
	  */
	  function rstr2binl(input) {
	    var i;
	    var output = [];
	    output[(input.length >> 2) - 1] = undefined;
	    for (i = 0; i < output.length; i += 1) {
	      output[i] = 0;
	    }
	    var length8 = input.length * 8;
	    for (i = 0; i < length8; i += 8) {
	      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << i % 32;
	    }
	    return output;
	  }
	
	  /*
	  * Calculate the MD5 of a raw string
	  */
	  function rstr_md5(s) {
	    return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));
	  }
	
	  /*
	  * Calculate the HMAC-MD5, of a key and some data (raw strings)
	  */
	  function rstr_hmac_md5(key, data) {
	    var i;
	    var bkey = rstr2binl(key);
	    var ipad = [];
	    var opad = [];
	    var hash;
	    ipad[15] = opad[15] = undefined;
	    if (bkey.length > 16) {
	      bkey = binl_md5(bkey, key.length * 8);
	    }
	    for (i = 0; i < 16; i += 1) {
	      ipad[i] = bkey[i] ^ 0x36363636;
	      opad[i] = bkey[i] ^ 0x5C5C5C5C;
	    }
	    hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
	    return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));
	  }
	
	  /*
	  * Convert a raw string to a hex string
	  */
	  function rstr2hex(input) {
	    var hex_tab = '0123456789abcdef';
	    var output = '';
	    var x;
	    var i;
	    for (i = 0; i < input.length; i += 1) {
	      x = input.charCodeAt(i);
	      output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);
	    }
	    return output;
	  }
	
	  /*
	  * Encode a string as utf-8
	  */
	  function str2rstr_utf8(input) {
	    return unescape(encodeURIComponent(input));
	  }
	
	  /*
	  * Take string arguments and return either raw or hex encoded strings
	  */
	  function raw_md5(s) {
	    return rstr_md5(str2rstr_utf8(s));
	  }
	  function hex_md5(s) {
	    return rstr2hex(raw_md5(s));
	  }
	  function raw_hmac_md5(k, d) {
	    return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));
	  }
	  function hex_hmac_md5(k, d) {
	    return rstr2hex(raw_hmac_md5(k, d));
	  }
	
	  function md5(string, key, raw) {
	    if (!key) {
	      if (!raw) {
	        return hex_md5(string);
	      }
	      return raw_md5(string);
	    }
	    if (!raw) {
	      return hex_hmac_md5(key, string);
	    }
	    return raw_hmac_md5(key, string);
	  }
	
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return md5;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {
	    module.exports = md5;
	  } else {
	    $.md5 = md5;
	  }
	})(undefined);

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchLoginFlow;
	
	var _effects = __webpack_require__(361);
	
	var _actions = __webpack_require__(90);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [watchLoginFlow].map(regeneratorRuntime.mark);
	
	function watchLoginFlow() {
	    return regeneratorRuntime.wrap(function watchLoginFlow$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    if (false) {
	                        _context.next = 18;
	                        break;
	                    }
	
	                    _context.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.USER_LOGOUT);
	
	                case 3:
	                    _context.next = 5;
	                    return (0, _effects.put)(actions.logout.request());
	
	                case 5:
	                    _context.prev = 5;
	                    _context.next = 8;
	                    return (0, _effects.call)(_api2.default.logout);
	
	                case 8:
	                    _context.next = 10;
	                    return (0, _effects.put)(actions.logout.success());
	
	                case 10:
	                    _context.next = 16;
	                    break;
	
	                case 12:
	                    _context.prev = 12;
	                    _context.t0 = _context['catch'](5);
	                    _context.next = 16;
	                    return (0, _effects.put)(actions.logout.failure(_context.t0));
	
	                case 16:
	                    _context.next = 0;
	                    break;
	
	                case 18:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this, [[5, 12]]);
	}

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchViewer;
	
	var _reduxSaga = __webpack_require__(369);
	
	var _effects = __webpack_require__(361);
	
	var _actions = __webpack_require__(90);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _selectors = __webpack_require__(110);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	var _common = __webpack_require__(52);
	
	var _utils = __webpack_require__(363);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _Viewer = __webpack_require__(250);
	
	var viewerUtils = _interopRequireWildcard(_Viewer);
	
	var _utils2 = __webpack_require__(92);
	
	var _utils3 = _interopRequireDefault(_utils2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [setViewer, setViewerWithAction, watchInitViewer, updateProgress, watchCalcBook, watchProgressOperations, jumpTo, watchJumpRequest, fetchProgressAndJump, initializeViewer, watchViewer].map(regeneratorRuntime.mark);
	
	var DEFAULT_PAGE_HEIGHT = 900;
	var DEFAULT_FONT_SIZE = 16;
	var fetchBookProgress = _utils.fetchEntity.bind(null, actions.progress, _api2.default.fetchBookProgress);
	function setViewer(bookId) {
	    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var viewerWidth, isSmallScreen, initialized, computed;
	    return regeneratorRuntime.wrap(function setViewer$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    viewerWidth = _utils3.default.getScreenInfo().view.width;
	                    isSmallScreen = viewerWidth < 700;
	                    initialized = {
	                        bookId: bookId,
	                        isCalcMode: true,
	                        fluid: isSmallScreen,
	                        isTouchMode: isSmallScreen,
	                        pageHeight: DEFAULT_PAGE_HEIGHT,
	                        fontSize: DEFAULT_FONT_SIZE,
	                        width: isSmallScreen ? viewerWidth : 'max'
	                    };
	                    _context.next = 5;
	                    return (0, _effects.select)(selectors.viewer.computed(bookId));
	
	                case 5:
	                    computed = _context.sent;
	
	                    if (computed.length > 0) {
	                        initialized.isCalcMode = false;
	                    }
	                    initialized = _lodash2.default.merge({}, initialized, config);
	                    _context.next = 10;
	                    return (0, _effects.put)(actions.configViewer(bookId, initialized));
	
	                case 10:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}
	function setViewerWithAction(action) {
	    var bookId, config;
	    return regeneratorRuntime.wrap(function setViewerWithAction$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    bookId = action.bookId;
	                    config = action.config;
	                    _context2.next = 4;
	                    return setViewer(bookId, config);
	
	                case 4:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}
	function watchInitViewer() {
	    return regeneratorRuntime.wrap(function watchInitViewer$(_context3) {
	        while (1) {
	            switch (_context3.prev = _context3.next) {
	                case 0:
	                    return _context3.delegateYield((0, _reduxSaga.takeEvery)(ACTION_TYPES.VIEWER.INITIALIZE_CONFIG, setViewerWithAction), 't0', 1);
	
	                case 1:
	                case 'end':
	                    return _context3.stop();
	            }
	        }
	    }, _marked[2], this);
	}
	function calcBook(wrap, flesh) {
	    var startCalcHtmlTime = new Date().valueOf();
	    var computedChapters = Array.prototype.map.call(wrap.childNodes, function (child) {
	        var childDiv = child;
	        var id = childDiv.getAttribute('id');
	        var nodeHeights = viewerUtils.getNodeHeights(childDiv.querySelector('.lines').childNodes);
	        return {
	            id: id,
	            nodeHeights: nodeHeights
	        };
	    });
	    var endCalcHtmlTime = new Date().valueOf();
	    _helpers2.default.print('Calculating html takes ' + (endCalcHtmlTime - startCalcHtmlTime) + 'ms');
	    var computedPages = viewerUtils.groupPageFromChapters(flesh, computedChapters, 900);
	    return computedPages;
	}
	function updateProgress(bookId, percentage) {
	    return regeneratorRuntime.wrap(function updateProgress$(_context4) {
	        while (1) {
	            switch (_context4.prev = _context4.next) {
	                case 0:
	                    _context4.prev = 0;
	                    _context4.next = 3;
	                    return (0, _effects.call)(_api2.default.setProgress, bookId, {
	                        percentage: percentage
	                    });
	
	                case 3:
	                    _context4.next = 8;
	                    break;
	
	                case 5:
	                    _context4.prev = 5;
	                    _context4.t0 = _context4['catch'](0);
	
	                    console.error(_context4.t0);
	
	                case 8:
	                    _context4.prev = 8;
	                    _context4.next = 11;
	                    return (0, _effects.cancelled)();
	
	                case 11:
	                    if (!_context4.sent) {
	                        _context4.next = 13;
	                        break;
	                    }
	
	                    _helpers2.default.print('updateProgress canceled');
	
	                case 13:
	                    return _context4.finish(8);
	
	                case 14:
	                case 'end':
	                    return _context4.stop();
	            }
	        }
	    }, _marked[3], this, [[0, 5, 8, 14]]);
	}
	function watchCalcBook() {
	    var _ref, bookId, wrap, bookContent, flesh, computed;
	
	    return regeneratorRuntime.wrap(function watchCalcBook$(_context5) {
	        while (1) {
	            switch (_context5.prev = _context5.next) {
	                case 0:
	                    if (false) {
	                        _context5.next = 24;
	                        break;
	                    }
	
	                    _context5.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.CALC_START);
	
	                case 3:
	                    _ref = _context5.sent;
	                    bookId = _ref.bookId;
	                    wrap = _ref.wrap;
	                    _context5.next = 8;
	                    return (0, _effects.select)(selectors.common.entity('bookContents', bookId));
	
	                case 8:
	                    bookContent = _context5.sent;
	                    flesh = bookContent.flesh || {};
	                    _context5.prev = 10;
	                    computed = calcBook(wrap, flesh);
	                    _context5.next = 14;
	                    return (0, _effects.put)(actions.calcBookSuccess(bookId, computed));
	
	                case 14:
	                    _context5.next = 16;
	                    return (0, _effects.put)(actions.configViewer(bookId, {
	                        isCalcMode: false
	                    }));
	
	                case 16:
	                    _context5.next = 22;
	                    break;
	
	                case 18:
	                    _context5.prev = 18;
	                    _context5.t0 = _context5['catch'](10);
	                    _context5.next = 22;
	                    return (0, _effects.put)(actions.calcBookFailure(bookId, _context5.t0));
	
	                case 22:
	                    _context5.next = 0;
	                    break;
	
	                case 24:
	                case 'end':
	                    return _context5.stop();
	            }
	        }
	    }, _marked[4], this, [[10, 18]]);
	}
	function watchProgressOperations() {
	    var action, session, userRole;
	    return regeneratorRuntime.wrap(function watchProgressOperations$(_context6) {
	        while (1) {
	            switch (_context6.prev = _context6.next) {
	                case 0:
	                    if (false) {
	                        _context6.next = 20;
	                        break;
	                    }
	
	                    _context6.next = 3;
	                    return (0, _effects.take)([ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE, ACTION_TYPES.LOAD_BOOK_PROGRESS]);
	
	                case 3:
	                    action = _context6.sent;
	                    _context6.next = 6;
	                    return (0, _effects.select)(selectors.common.session);
	
	                case 6:
	                    session = _context6.sent;
	                    userRole = _lodash2.default.get(session, 'user.role');
	
	                    if (!(userRole !== _common.ROLES.VISITOR)) {
	                        _context6.next = 17;
	                        break;
	                    }
	
	                    if (!(action.type === ACTION_TYPES.LOAD_BOOK_PROGRESS)) {
	                        _context6.next = 12;
	                        break;
	                    }
	
	                    _context6.next = 12;
	                    return (0, _effects.call)(fetchBookProgress, { id: action.id });
	
	                case 12:
	                    if (!(action.type === ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE)) {
	                        _context6.next = 15;
	                        break;
	                    }
	
	                    _context6.next = 15;
	                    return updateProgress(action.id, action.percentage);
	
	                case 15:
	                    _context6.next = 18;
	                    break;
	
	                case 17:
	                    _helpers2.default.print('Not logged in, progress will not be fetched!');
	
	                case 18:
	                    _context6.next = 0;
	                    break;
	
	                case 20:
	                case 'end':
	                    return _context6.stop();
	            }
	        }
	    }, _marked[5], this);
	}
	function jumpTo(action) {
	    var percentage, _ref2, bookId, pageHeight, isScrollMode, allPages, pageCount, totalHeight;
	
	    return regeneratorRuntime.wrap(function jumpTo$(_context7) {
	        while (1) {
	            switch (_context7.prev = _context7.next) {
	                case 0:
	                    percentage = action.percentage;
	                    _context7.next = 3;
	                    return (0, _effects.select)(selectors.viewer.config);
	
	                case 3:
	                    _ref2 = _context7.sent;
	                    bookId = _ref2.bookId;
	                    pageHeight = _ref2.pageHeight;
	                    isScrollMode = _ref2.isScrollMode;
	                    _context7.next = 9;
	                    return (0, _effects.select)(selectors.viewer.computed(bookId));
	
	                case 9:
	                    allPages = _context7.sent;
	                    pageCount = allPages.length;
	                    totalHeight = pageCount * pageHeight;
	
	                    if (!isScrollMode) {
	                        _context7.next = 16;
	                        break;
	                    }
	
	                    document.body.scrollTop = percentage ? totalHeight * percentage : 0;
	                    _context7.next = 18;
	                    break;
	
	                case 16:
	                    _context7.next = 18;
	                    return (0, _effects.put)(actions.updateBookProgress(percentage));
	
	                case 18:
	                case 'end':
	                    return _context7.stop();
	            }
	        }
	    }, _marked[6], this);
	}
	function watchJumpRequest() {
	    return regeneratorRuntime.wrap(function watchJumpRequest$(_context8) {
	        while (1) {
	            switch (_context8.prev = _context8.next) {
	                case 0:
	                    return _context8.delegateYield((0, _reduxSaga.takeEvery)(ACTION_TYPES.VIEWER.JUMP, jumpTo), 't0', 1);
	
	                case 1:
	                case 'end':
	                    return _context8.stop();
	            }
	        }
	    }, _marked[7], this);
	}
	function fetchProgressAndJump(bookId) {
	    var _ref3, percentage;
	
	    return regeneratorRuntime.wrap(function fetchProgressAndJump$(_context9) {
	        while (1) {
	            switch (_context9.prev = _context9.next) {
	                case 0:
	                    _context9.next = 2;
	                    return (0, _effects.put)(actions.loadBookProgress(bookId));
	
	                case 2:
	                    _context9.next = 4;
	                    return (0, _effects.take)(ACTION_TYPES.BOOK_PROGRESS.SUCCESS);
	
	                case 4:
	                    _context9.next = 6;
	                    return (0, _effects.select)(selectors.common.entity('bookProgress', bookId));
	
	                case 6:
	                    _ref3 = _context9.sent;
	                    percentage = _ref3.percentage;
	                    _context9.next = 10;
	                    return (0, _effects.put)(actions.viewerJumpTo(percentage));
	
	                case 10:
	                case 'end':
	                    return _context9.stop();
	            }
	        }
	    }, _marked[8], this);
	}
	function initializeViewer() {
	    var _ref4, _bookId, computed;
	
	    return regeneratorRuntime.wrap(function initializeViewer$(_context10) {
	        while (1) {
	            switch (_context10.prev = _context10.next) {
	                case 0:
	                    if (false) {
	                        _context10.next = 23;
	                        break;
	                    }
	
	                    _context10.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.INITIALIZE);
	
	                case 3:
	                    _ref4 = _context10.sent;
	                    _bookId = _ref4.bookId;
	                    _context10.next = 7;
	                    return (0, _effects.select)(selectors.viewer.computed(_bookId));
	
	                case 7:
	                    computed = _context10.sent;
	
	                    if (!_lodash2.default.isEmpty(computed)) {
	                        _context10.next = 19;
	                        break;
	                    }
	
	                    _context10.next = 11;
	                    return [(0, _effects.put)(actions.loadBook(_bookId)), (0, _effects.put)(actions.loadBookContent(_bookId))];
	
	                case 11:
	                    _context10.next = 13;
	                    return (0, _effects.put)(actions.initializeViewerConfig(_bookId));
	
	                case 13:
	                    _context10.next = 15;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.CALC_SUCCESS);
	
	                case 15:
	                    _context10.next = 17;
	                    return fetchProgressAndJump(_bookId);
	
	                case 17:
	                    _context10.next = 21;
	                    break;
	
	                case 19:
	                    _context10.next = 21;
	                    return fetchProgressAndJump(_bookId);
	
	                case 21:
	                    _context10.next = 0;
	                    break;
	
	                case 23:
	                case 'end':
	                    return _context10.stop();
	            }
	        }
	    }, _marked[9], this);
	}
	function watchViewer() {
	    return regeneratorRuntime.wrap(function watchViewer$(_context11) {
	        while (1) {
	            switch (_context11.prev = _context11.next) {
	                case 0:
	                    _context11.next = 2;
	                    return [(0, _effects.fork)(watchProgressOperations), (0, _effects.fork)(watchCalcBook), (0, _effects.fork)(watchInitViewer), (0, _effects.fork)(watchJumpRequest), (0, _effects.fork)(initializeViewer)];
	
	                case 2:
	                case 'end':
	                    return _context11.stop();
	            }
	        }
	    }, _marked[10], this);
	}

/***/ },
/* 369 */
/***/ function(module, exports) {

	module.exports = require("redux-saga");

/***/ },
/* 370 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchTest;
	exports.watchTest2 = watchTest2;
	
	var _effects = __webpack_require__(361);
	
	var _marked = [doLoadWithCancel, watchTest, watchTest2].map(regeneratorRuntime.mark);
	
	function someAsyncTask() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            console.log('loaded');
	            resolve('load done');
	            // yield put({ type: 'LOADED'})
	        }, 1000);
	    });
	}
	function doLoad() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            resolve('load done');
	        }, 3000);
	    });
	}
	function doLoadWithCancel() {
	    var res;
	    return regeneratorRuntime.wrap(function doLoadWithCancel$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    _context.prev = 0;
	                    _context.next = 3;
	                    return someAsyncTask();
	
	                case 3:
	                    res = _context.sent;
	                    _context.next = 6;
	                    return (0, _effects.put)({ type: 'done', res: res });
	
	                case 6:
	                    _context.next = 10;
	                    break;
	
	                case 8:
	                    _context.prev = 8;
	                    _context.t0 = _context['catch'](0);
	
	                case 10:
	                    _context.prev = 10;
	                    _context.next = 13;
	                    return (0, _effects.cancelled)();
	
	                case 13:
	                    if (!_context.sent) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    console.log('canceled');
	                    _context.next = 17;
	                    return (0, _effects.put)({ type: 'CANCEL_LOAD' });
	
	                case 17:
	                    return _context.finish(10);
	
	                case 18:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this, [[0, 8, 10, 18]]);
	}
	function doSave() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            resolve('save done');
	        }, 3000);
	    });
	}
	function watchTest() {
	    var action, res;
	    return regeneratorRuntime.wrap(function watchTest$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    if (false) {
	                        _context2.next = 17;
	                        break;
	                    }
	
	                    _context2.next = 3;
	                    return (0, _effects.take)(['LOAD', 'SAVE']);
	
	                case 3:
	                    action = _context2.sent;
	                    res = void 0;
	
	                    if (!(action.type === 'LOAD')) {
	                        _context2.next = 10;
	                        break;
	                    }
	
	                    _context2.next = 8;
	                    return doLoad();
	
	                case 8:
	                    res = _context2.sent;
	
	                    console.log(res);
	
	                case 10:
	                    if (!(action.type === 'SAVE')) {
	                        _context2.next = 15;
	                        break;
	                    }
	
	                    _context2.next = 13;
	                    return doSave();
	
	                case 13:
	                    res = _context2.sent;
	
	                    console.log(res);
	
	                case 15:
	                    _context2.next = 0;
	                    break;
	
	                case 17:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}
	function watchTest2() {
	    var loadAction, loadTask, saveAction;
	    return regeneratorRuntime.wrap(function watchTest2$(_context3) {
	        while (1) {
	            switch (_context3.prev = _context3.next) {
	                case 0:
	                    if (false) {
	                        _context3.next = 18;
	                        break;
	                    }
	
	                    _context3.next = 3;
	                    return (0, _effects.take)('LOAD');
	
	                case 3:
	                    loadAction = _context3.sent;
	                    _context3.next = 6;
	                    return (0, _effects.fork)(doLoadWithCancel);
	
	                case 6:
	                    loadTask = _context3.sent;
	                    _context3.next = 9;
	                    return (0, _effects.take)('SAVE');
	
	                case 9:
	                    saveAction = _context3.sent;
	
	                    if (!(saveAction.type === 'SAVE')) {
	                        _context3.next = 14;
	                        break;
	                    }
	
	                    console.log('save?');
	                    _context3.next = 14;
	                    return (0, _effects.cancel)(loadTask);
	
	                case 14:
	                    _context3.next = 16;
	                    return (0, _effects.put)({ type: 'then what' });
	
	                case 16:
	                    _context3.next = 0;
	                    break;
	
	                case 18:
	                case 'end':
	                    return _context3.stop();
	            }
	        }
	    }, _marked[2], this);
	}

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRouter = __webpack_require__(63);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function matchRoute(routes, reqUrl, history) {
	    return new Promise(function (resolve, reject) {
	        (0, _reactRouter.match)({ history: history, routes: routes, location: reqUrl }, function (error, redirectLocation, renderProps) {
	            if (error) {
	                reject(error);
	            } else if (redirectLocation) {
	                resolve({ redirectLocation: redirectLocation, statusCode: 302 });
	            } else if (renderProps) {
	                var wrappedComponent = _lodash2.default.last(renderProps.components)['WrappedComponent'];
	                var statusCode = wrappedComponent ? 200 : 404;
	                resolve({ renderProps: renderProps, statusCode: statusCode });
	            } else {
	                reject(new Error('routes 里不存在对 404 的处理'));
	            }
	        });
	    });
	}
	exports.default = matchRoute;

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _server = __webpack_require__(373);
	
	var _reactRouterRedux = __webpack_require__(374);
	
	var _reactRouter = __webpack_require__(63);
	
	var _getStore = __webpack_require__(359);
	
	var _getStore2 = _interopRequireDefault(_getStore);
	
	var _matchRoute = __webpack_require__(371);
	
	var _matchRoute2 = _interopRequireDefault(_matchRoute);
	
	var _Page = __webpack_require__(375);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	var _DocContainer = __webpack_require__(201);
	
	var _DocContainer2 = _interopRequireDefault(_DocContainer);
	
	var _ServerSideAppRoot = __webpack_require__(378);
	
	var _ServerSideAppRoot2 = _interopRequireDefault(_ServerSideAppRoot);
	
	var _configureStore = __webpack_require__(379);
	
	var _configureStore2 = _interopRequireDefault(_configureStore);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function renderHtml(config) {
	    if (!config) {
	        return Promise.resolve((0, _server.renderToStaticMarkup)(_react2.default.createElement(_Page2.default, null)));
	    }
	    var reqUrl = config.reqUrl;
	    var routes = config.routes;
	    var isProd = config.isProd;
	    var fetchData = config.fetchData;
	    var isHot = config.isHot;
	    var userSession = config.userSession;
	
	    var memoryHistory = (0, _reactRouter.createMemoryHistory)(reqUrl);
	    var store = (0, _configureStore2.default)();
	    var history = (0, _reactRouterRedux.syncHistoryWithStore)(memoryHistory, store);
	    return (0, _matchRoute2.default)(routes, reqUrl, history).then(function (result) {
	        var renderProps = result.renderProps;
	        var redirectLocation = result.redirectLocation;
	        var statusCode = result.statusCode;
	
	        if (redirectLocation) {
	            return Promise.resolve({ redirectLocation: redirectLocation });
	        }
	        return (0, _getStore2.default)(renderProps, fetchData, userSession, store).then(function (storeWithFetchedData) {
	            var genPageComp = function genPageComp(bodyClass, title, appMarkup) {
	                return _react2.default.createElement(_Page2.default, { title: title, store: storeWithFetchedData, isProd: isProd, bodyClass: bodyClass, appMarkup: appMarkup, scriptData: _defineProperty({}, _common.ENABLE_SERVER_ROUTING, true) });
	            };
	            var appRoot = _react2.default.createElement(_ServerSideAppRoot2.default, { renderPageContent: fetchData, renderProps: result.renderProps, store: storeWithFetchedData });
	            // rewind 必须在 render 之后调用，所以只能调用两次 render
	            // 没有更好的方法之前先这样
	            (0, _server.renderToStaticMarkup)(appRoot);
	            var data = _DocContainer2.default['rewind']() || {};
	            var appRootMarkup = void 0;
	            if (fetchData) {
	                appRootMarkup = (0, _server.renderToString)(appRoot);
	            } else {
	                appRootMarkup = (0, _server.renderToStaticMarkup)(appRoot);
	            }
	            var html = (0, _server.renderToStaticMarkup)(genPageComp(data.bodyClass, data.title, appRootMarkup));
	            return { html: html, statusCode: statusCode };
	        });
	    });
	}
	exports.default = renderHtml;

/***/ },
/* 373 */
/***/ function(module, exports) {

	module.exports = require("react-dom/server");

/***/ },
/* 374 */
/***/ function(module, exports) {

	module.exports = require("react-router-redux");

/***/ },
/* 375 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Html = __webpack_require__(376);
	
	var _Html2 = _interopRequireDefault(_Html);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	var _fs = __webpack_require__(377);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DEFAULT_TITLE = 'Readr';
	var SCRIPT_CONTENT_ID = 'script-data';
	var ASSET_PATH = '/built';
	var ASSET_PATH_PROD = '/built_prod';
	var SCRIPTS_PROD = ['react_kit.js', 'utils.js', 'app.js'];
	var SCRIPTS_DEV = ['react_kit.dll.js', 'utils.dll.js', 'app.js'];
	var GLOBAL_STYLES = ['base.global.css', 'vendor.global.css', 'modifiers.global.css'];
	var LOCAL_STYLES = ['app.css'];
	var CSS_MANIFEST_PATH = process.cwd() + '/public/built_prod/css.manifest.json';
	var CHUNKS_MANIFEST_PATH = process.cwd() + '/public/built_prod/chunks.manifest.json';
	var getManifest = function getManifest() {
	    var chunkManifest = {};
	    var cssManifest = {};
	    try {
	        cssManifest = JSON.parse(_fs2.default.readFileSync(CSS_MANIFEST_PATH, 'utf8'));
	        chunkManifest = JSON.parse(_fs2.default.readFileSync(CHUNKS_MANIFEST_PATH, 'utf8'));
	    } catch (error) {
	        _print2.default.error(error.message);
	    }
	    return _lodash2.default.assign({}, chunkManifest, cssManifest);
	};
	var getHashedFilename = function getHashedFilename(manifest) {
	    return function (filename) {
	        if (manifest[filename]) {
	            return manifest[filename];
	        }
	        _print2.default.error('File (' + filename + ') not included in manifest, will use original filename instead!');
	        return filename;
	    };
	};
	function Page(props) {
	    var title = props.title;
	    var store = props.store;
	    var includeLocalStylesheets = props.includeLocalStylesheets;
	    var bodyClass = props.bodyClass;
	    var appMarkup = props.appMarkup;
	    var scriptData = props.scriptData;
	    var isProd = props.isProd;
	    var noScript = props.noScript;
	
	    var manifest = void 0;
	    if (isProd) {
	        manifest = getManifest();
	    }
	    var scripts = isProd ? SCRIPTS_PROD.map(getHashedFilename(manifest)) : SCRIPTS_DEV;
	    var styles = isProd ? GLOBAL_STYLES.concat(LOCAL_STYLES).map(getHashedFilename(manifest)) : includeLocalStylesheets ? GLOBAL_STYLES.concat(LOCAL_STYLES) : GLOBAL_STYLES;
	    var scriptContent = _lodash2.default.map(scriptData, function (val, key) {
	        return 'var ' + key + ' = ' + val + ';';
	    }).join('');
	    if (noScript) {
	        scripts = [];
	        scriptContent = '';
	    }
	    var assetPath = isProd ? ASSET_PATH_PROD : ASSET_PATH;
	    return _react2.default.createElement(_Html2.default, { title: title, styles: styles, scripts: scripts, initialState: store && store.getState(), bodyClass: bodyClass || null, appMarkup: appMarkup, scriptContentId: SCRIPT_CONTENT_ID, scriptContent: scriptContent, assetPath: assetPath });
	}
	Page['defaultProps'] = {
	    title: DEFAULT_TITLE,
	    includeLocalStylesheets: true
	};
	exports.default = Page;

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = Html;
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	function StyleLink(props) {
	    return _react2.default.createElement("link", { rel: "stylesheet", href: (props.assetPath || '') + '/' + props.filename });
	}
	function Script(props) {
	    return _react2.default.createElement("script", { src: (props.assetPath || '') + '/' + props.filename });
	}
	function Html(props) {
	    var title = props.title;
	    var styles = props.styles;
	    var scripts = props.scripts;
	    var initialState = props.initialState;
	    var bodyClass = props.bodyClass;
	    var appMarkup = props.appMarkup;
	    var useFavicon = props.useFavicon;
	    var scriptContent = props.scriptContent;
	    var scriptContentId = props.scriptContentId;
	    var assetPath = props.assetPath;
	
	    return _react2.default.createElement("html", null, _react2.default.createElement("head", null, _react2.default.createElement("meta", { httpEquiv: "X-UA-Compatible", content: "IE=edge,chrome=1" }), _react2.default.createElement("meta", { name: "viewport", content: "width=device-width, initial-scale=1, user-scalable=no" }), _react2.default.createElement("meta", { name: "description", content: "The next generation online reading app." }), _react2.default.createElement("link", { rel: "shortcut icon", type: "image/png", href: "/static/apple-touch-icon-60x60-1.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "60x60", href: "/static/apple-touch-icon-60x60-1.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "120x120", href: "/static/apple-touch-icon-120x120.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "180x180", href: "/static/apple-touch-icon-180x180.png" }), _react2.default.createElement("title", null, title || ''), styles && styles.map(function (stylesheetName, index) {
	        return _react2.default.createElement(StyleLink, { assetPath: assetPath, filename: stylesheetName, key: index });
	    })), _react2.default.createElement("body", __assign({}, bodyClass && { className: bodyClass }), _react2.default.createElement("div", { id: "root", dangerouslySetInnerHTML: { __html: appMarkup || '' } }), scriptContent && _react2.default.createElement("script", { id: scriptContentId, dangerouslySetInnerHTML: { __html: scriptContent } }), initialState && _react2.default.createElement("script", { dangerouslySetInnerHTML: { __html: 'var ' + _common.INITIAL_STATE + ' = ' + JSON.stringify(initialState) } }), scripts && scripts.map(function (scriptName, index) {
	        return _react2.default.createElement(Script, { assetPath: assetPath, filename: scriptName, key: index });
	    })));
	}

/***/ },
/* 377 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 378 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _reactRouter = __webpack_require__(63);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	function ServerSideAppRoot(props) {
	    var store = props.store;
	    var renderProps = props.renderProps;
	    var renderPageContent = props.renderPageContent;
	
	    return !_lodash2.default.isEmpty(renderProps) && _react2.default.createElement(_reactRedux.Provider, { store: store }, renderPageContent ? _react2.default.createElement(_reactRouter.RouterContext, __assign({}, renderProps)) : _react2.default.createElement("div", { className: "text-loading" }, '\u52A0\u8F7D\u4E2D ...'));
	}
	exports.default = ServerSideAppRoot;

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = configureStore;
	
	var _redux = __webpack_require__(212);
	
	var _reduxThunk = __webpack_require__(380);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _reducers = __webpack_require__(381);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _api = __webpack_require__(387);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _modifyResponse = __webpack_require__(388);
	
	var _modifyResponse2 = _interopRequireDefault(_modifyResponse);
	
	var _handleServerStore = __webpack_require__(389);
	
	var _handleServerStore2 = _interopRequireDefault(_handleServerStore);
	
	var _handleInitialState = __webpack_require__(390);
	
	var _handleInitialState2 = _interopRequireDefault(_handleInitialState);
	
	var _logActionTypes = __webpack_require__(391);
	
	var _logActionTypes2 = _interopRequireDefault(_logActionTypes);
	
	var _reduxLogger = __webpack_require__(392);
	
	var _reduxLogger2 = _interopRequireDefault(_reduxLogger);
	
	var _middleware = __webpack_require__(393);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _reduxSaga = __webpack_require__(369);
	
	var _reduxSaga2 = _interopRequireDefault(_reduxSaga);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var sagaMiddleware = (0, _reduxSaga2.default)();
	var SERVER_MIDDLEWARES_DEV = [_handleServerStore2.default, sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default, _logActionTypes2.default];
	var SERVER_MIDDLEWARES_PROD = [_handleServerStore2.default, sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default];
	var MIDDLEWARES_DEV = [sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default, (0, _reduxLogger2.default)({ collapsed: true })];
	var MIDDLEWARES_PROD = [sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default];
	var handleStore = function handleStore(middlewares) {
	    return (0, _redux.createStore)(_reducers2.default, (0, _handleInitialState2.default)(), _redux.applyMiddleware.apply(null, middlewares));
	};
	function configureStore() {
	    var store = {};
	    if (_helpers2.default.isServerEnv()) {
	        // server side
	        if (process.env.NODE_ENV === 'production') {
	            store = handleStore(SERVER_MIDDLEWARES_PROD);
	        } else {
	            store = handleStore(SERVER_MIDDLEWARES_DEV);
	        }
	    } else {
	        // client side
	        if (process.env.NODE_ENV === 'production') {
	            store = handleStore(MIDDLEWARES_PROD);
	        } else {
	            store = handleStore(MIDDLEWARES_DEV);
	        }
	    }
	    if (false) {
	        module.hot.accept('./reducers', function () {
	            console.info('hot updating reducers');
	            var nextRootReducer = require('./reducers').default;
	            store.replaceReducer(nextRootReducer);
	        });
	    }
	    store['runSaga'] = sagaMiddleware.run;
	    store['close'] = function () {
	        return store.dispatch(_reduxSaga.END);
	    };
	    return store;
	}

/***/ },
/* 380 */
/***/ function(module, exports) {

	module.exports = require("redux-thunk");

/***/ },
/* 381 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.entities = entities;
	exports.session = session;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _redux = __webpack_require__(212);
	
	var _reactRouterRedux = __webpack_require__(374);
	
	var _components = __webpack_require__(382);
	
	var _components2 = _interopRequireDefault(_components);
	
	var _pagination = __webpack_require__(385);
	
	var _pagination2 = _interopRequireDefault(_pagination);
	
	var _betterReduxForm = __webpack_require__(114);
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function errorMessage() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];
	    var error = action.error;
	
	    if (error) {
	        return [].concat(_toConsumableArray(state), [action.error.message || '发生未知错误！']);
	    }
	    return state;
	}
	function entities() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.response && action.response.entities) {
	        return _lodash2.default.merge({}, state, action.response.entities);
	    }
	    if (action.type === ActionTypes.REMOVE_ENTITY) {
	        var name = action.name;
	        var id = action.id;
	
	        return _lodash2.default.assign({}, state, _defineProperty({}, name, _lodash2.default.omit(state[name], [id])));
	    }
	    return state;
	}
	var DEFAULT_VISTOR_STATE = { user: { role: 'visitor' }, isFetching: false, determined: false };
	function session() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_VISTOR_STATE;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ActionTypes.AUTH.REQUEST:
	            return Object.assign({}, state, {
	                isFetching: true
	            });
	        case ActionTypes.AUTH.SUCCESS:
	            return Object.assign({}, state, {
	                isFetching: false,
	                determined: true,
	                user: action.response
	            });
	        case ActionTypes.AUTH.FAILURE:
	            return Object.assign({}, state, {
	                isFetching: false,
	                determined: true
	            });
	        case ActionTypes.LOGOUT.SUCCESS:
	            return Object.assign({}, DEFAULT_VISTOR_STATE, {
	                determined: true
	            });
	        default:
	            return state;
	    }
	}
	var rootReducer = (0, _redux.combineReducers)({
	    components: _components2.default,
	    entities: entities,
	    errorMessage: errorMessage,
	    session: session,
	    routing: _reactRouterRedux.routerReducer,
	    form: _betterReduxForm.reducer,
	    pagination: _pagination2.default
	});
	exports.default = rootReducer;

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(212);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _viewer = __webpack_require__(383);
	
	var _viewer2 = _interopRequireDefault(_viewer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function notifications() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.NOTIFICATION.HIDE) {
	        return state.map(function (n) {
	            return n.id === action.id ? Object.assign({}, n, { visible: false }) : n;
	        });
	    }
	    if (action.type === ACTION_TYPES.NOTIFICATION.SHOW) {
	        return [].concat(_toConsumableArray(state), [{
	            visible: true,
	            message: action.message,
	            type: action.msgType,
	            id: action.id
	        }]);
	    }
	    return state;
	}
	function confirmModal() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.OPEN_CONFIRM_MODAL) {
	        return Object.assign({}, state, { open: true }, action.data);
	    }
	    if (action.type === ACTION_TYPES.CLOSE_CONFIRM_MODAL) {
	        return {
	            open: false
	        };
	    }
	    return state;
	}
	function modal() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.MODAL.OPEN) {
	        return Object.assign({}, state, { open: true }, action.data);
	    }
	    if (action.type === ACTION_TYPES.MODAL.CLOSE) {
	        return {
	            open: false
	        };
	    }
	    return state;
	}
	var components = (0, _redux.combineReducers)({
	    notifications: notifications,
	    confirmModal: confirmModal,
	    modal: modal,
	    viewer: _viewer2.default
	});
	exports.default = components;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(212);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _constants = __webpack_require__(384);
	
	var CONSTANTS = _interopRequireWildcard(_constants);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var getFlag = function getFlag(reset, currentFlag) {
	    if (typeof reset === 'undefined') {
	        return !currentFlag;
	    }
	    return reset;
	};
	function contents() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.CALC_SUCCESS:
	            return _lodash2.default.merge({}, state, _defineProperty({}, action.bookId, {
	                computed: action.computed
	            }));
	        default:
	            return state;
	    }
	}
	function config() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { theme: CONSTANTS.VIEWER_DEFS.THEMES.WHITE, isScrollMode: true };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.SCROLL_MODE_TOGGLE:
	            var reset = action.reset;
	
	            return _lodash2.default.merge({}, state, {
	                isScrollMode: getFlag(reset, state.isScrollMode)
	            });
	        case ACTION_TYPES.VIEWER.THEME_CHANGE:
	            return _lodash2.default.merge({}, state, {
	                theme: action.theme
	            });
	        case ACTION_TYPES.VIEWER.FONT_CHANGE:
	            return _lodash2.default.merge({}, state, {
	                fontSize: action.fontSize
	            });
	        case ACTION_TYPES.VIEWER.CONFIG:
	            return _lodash2.default.merge({}, state, {
	                bookId: action.bookId
	            }, action.payload);
	        default:
	            return state;
	    }
	}
	function progress() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE:
	            return _lodash2.default.merge({}, state, _defineProperty({}, action.id, {
	                isFetching: false,
	                percentage: action.percentage,
	                pageNo: action.pageNo
	            }));
	        case ACTION_TYPES.VIEWER.BOOK_PROGRESS_DESTROY:
	            return _lodash2.default.assign({}, state, _defineProperty({}, action.id, {
	                isFetching: false
	            }));
	        default:
	            return state;
	    }
	}
	var panel = function panel() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.PANEL_TOGGLE:
	            var reset = action.reset;
	
	            var a = getFlag(reset, state.show);
	            return {
	                show: a
	            };
	        default:
	            return state;
	    }
	};
	var preference = function preference() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.PREFERENCE_TOGGLE:
	            var reset = action.reset;
	
	            return {
	                show: getFlag(reset, state.show)
	            };
	        default:
	            return state;
	    }
	};
	var navigation = function navigation() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.NAVIGATION_TOGGLE:
	            var reset = action.reset;
	
	            return {
	                show: getFlag(reset, state.show)
	            };
	        default:
	            return state;
	    }
	};
	var components = (0, _redux.combineReducers)({
	    panel: panel,
	    preference: preference,
	    navigation: navigation
	});
	exports.default = (0, _redux.combineReducers)({
	    config: config,
	    contents: contents,
	    progress: progress,
	    components: components
	});

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.VIEWER_DEFS = exports.COMMON = exports.ACTION_TYPES = undefined;
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _common = __webpack_require__(52);
	
	var COMMON = _interopRequireWildcard(_common);
	
	var _viewerDefs = __webpack_require__(245);
	
	var VIEWER_DEFS = _interopRequireWildcard(_viewerDefs);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.ACTION_TYPES = ACTION_TYPES;
	exports.COMMON = COMMON;
	exports.VIEWER_DEFS = VIEWER_DEFS;

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = combined;
	
	var _paginate = __webpack_require__(386);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _redux = __webpack_require__(212);
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var DEFAULT_KEY = 'default';
	var SEARCH_KEY = 'search';
	var parseTypes = function parseTypes(actionTypes) {
	    return [actionTypes.REQUEST, actionTypes.SUCCESS, actionTypes.FAILURE];
	};
	var generalMapActionToKey = function generalMapActionToKey(action) {
	    var options = action.options;
	    var key = action.key;
	
	    var _ref = options || {};
	
	    var q = _ref.q;
	
	    if (key) {
	        return key;
	    }
	    if (q) {
	        return SEARCH_KEY;
	    }
	    return DEFAULT_KEY;
	};
	function pagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    var combinedReducer = (0, _redux.combineReducers)({
	        books: (0, _paginate2.default)({
	            mapActionToKey: generalMapActionToKey,
	            types: parseTypes(ActionTypes.BOOKS)
	        }),
	        users: (0, _paginate2.default)({
	            mapActionToKey: generalMapActionToKey,
	            types: parseTypes(ActionTypes.USERS)
	        }),
	        authors: function authors() {
	            return state.authors || {};
	        },
	        doubanBooks: function doubanBooks() {
	            return state.doubanBooks || {};
	        },
	        bookShelves: function bookShelves() {
	            return state.bookShelves || {};
	        }
	    });
	    return combinedReducer(state, action);
	}
	// legacy pagination support
	var updatePagination = function updatePagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _paginate.DEFAULT_PAGINATION_STATE;
	    var action = arguments[1];
	    var merge = arguments[2];
	
	    if (!action.response) {
	        return Object.assign({}, state, {
	            isFetching: true
	        });
	    } else {
	        return (0, _paginate.computePaginationState)(state, action);
	    }
	};
	function legacyPagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.pagination) {
	        var _action$pagination = action.pagination;
	        var name = _action$pagination.name;
	        var q = _action$pagination.q;
	        var key = _action$pagination.key;
	        var merge = _action$pagination.merge;
	
	        var qKey = q ? SEARCH_KEY : null;
	        var finalKey = qKey || key || DEFAULT_KEY;
	        var originalState = state[name] && state[name][finalKey] || undefined;
	        return Object.assign({}, state, _defineProperty({}, name, _defineProperty({}, finalKey, updatePagination(originalState, action, merge))));
	    }
	    return state;
	}
	function combined(state, action) {
	    return pagination(legacyPagination(state, action), action);
	}

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DEFAULT_PAGINATION_STATE = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	exports.computePaginationState = computePaginationState;
	exports.default = paginate;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var DEFAULT_PAGINATION_STATE = exports.DEFAULT_PAGINATION_STATE = {
	    isFetching: false,
	    pages: {},
	    ids: [],
	    pageCount: 0
	};
	function computePaginationState(state, action) {
	    var currentPage = action.response._next ? action.response._next.page - 1 : action.response._last && action.response._last.page || 1;
	    var pages = _lodash2.default.assign({}, _defineProperty({}, currentPage, action.response.result));
	    return _lodash2.default.assign({}, state, {
	        isFetching: false,
	        pages: pages,
	        ids: _lodash2.default.union(state.ids, action.response.result),
	        // 如果不使用 null 在外层的 merge 会忽略 undefined 从而导致一些边缘问题
	        next: action.response._next || null,
	        last: action.response._last || null,
	        pageCount: state.pageCount + 1
	    });
	}
	function paginate(_ref) {
	    var types = _ref.types;
	    var mapActionToKey = _ref.mapActionToKey;
	
	    if (!Array.isArray(types) || types.length !== 3) {
	        throw new Error('Expected types to be an array of three elements.');
	    }
	    if (!types.every(function (t) {
	        return typeof t === 'string';
	    })) {
	        throw new Error('Expected types to be strings.');
	    }
	    if (typeof mapActionToKey !== 'function') {
	        throw new Error('Expected mapActionToKey to be a function.');
	    }
	
	    var _types = _slicedToArray(types, 3);
	
	    var requestType = _types[0];
	    var successType = _types[1];
	    var failureType = _types[2];
	
	    function updatePagination() {
	        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_PAGINATION_STATE;
	        var action = arguments[1];
	
	        switch (action.type) {
	            case requestType:
	                return _lodash2.default.assign({}, state, {
	                    isFetching: true
	                });
	            case successType:
	                return computePaginationState(state, action);
	            case failureType:
	                return _lodash2.default.assign({}, state, {
	                    isFetching: false
	                });
	            default:
	                return state;
	        }
	    }
	    return function updatePaginationByKey() {
	        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	        var action = arguments[1];
	
	        switch (action.type) {
	            case requestType:
	            case successType:
	            case failureType:
	                var key = mapActionToKey(action);
	                if (typeof key !== 'string') {
	                    throw new Error('Expected key to be a string.');
	                }
	                return _lodash2.default.merge({}, state, _defineProperty({}, key, updatePagination(state[key], action)));
	            default:
	                return state;
	        }
	    };
	}

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _callApi = __webpack_require__(205);
	
	var _callApi2 = _interopRequireDefault(_callApi);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _handleResponse = __webpack_require__(209);
	
	var _handleResponse2 = _interopRequireDefault(_handleResponse);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            var CALL_API = action.CALL_API;
	            if (typeof CALL_API === 'undefined') {
	                return next(action);
	            }
	            var endpoint = CALL_API.endpoint;
	            var apiUrl = CALL_API.apiUrl;
	            var options = CALL_API.options;
	            var pagination = CALL_API.pagination;
	            var types = CALL_API.types;
	            var schema = CALL_API.schema;
	
	            var _types = _slicedToArray(types, 3);
	
	            var requestType = _types[0];
	            var successType = _types[1];
	            var failureType = _types[2];
	
	            var actionWith = function actionWith(_ref) {
	                var data = _ref.data;
	                var hasPagination = _ref.hasPagination;
	
	                var finalAction = Object.assign({}, action, data);
	                finalAction = _lodash2.default.omit(finalAction, ['CALL_API']);
	                if (!hasPagination) {
	                    finalAction = _lodash2.default.omit(finalAction, ['CALL_API', 'pagination']);
	                }
	                return finalAction;
	            };
	            next(actionWith({
	                data: {
	                    type: requestType,
	                    pagination: pagination
	                },
	                hasPagination: Boolean(pagination)
	            }));
	            if (typeof endpoint === 'function') {
	                endpoint = endpoint(store.getState());
	            }
	            if (typeof apiUrl === 'undefined') {
	                apiUrl = _helpers2.default.getApiRoot();
	            }
	            var fullUrl = apiUrl + '/' + endpoint;
	            return (0, _callApi2.default)(fullUrl, options || {}).then(function (response) {
	                var normalizedRes = (0, _handleResponse2.default)(response, schema);
	                var finalAction = {
	                    response: normalizedRes,
	                    type: successType,
	                    pagination: pagination
	                };
	                return next(function (dispatch) {
	                    dispatch(actionWith({ data: finalAction, hasPagination: Boolean(pagination) }));
	                    return {
	                        ok: true,
	                        response: response
	                    };
	                });
	            }, function (error) {
	                return next(function (dispatch) {
	                    dispatch(actionWith({
	                        data: {
	                            type: failureType,
	                            pagination: pagination,
	                            error: error
	                        },
	                        hasPagination: Boolean(pagination)
	                    }));
	                    return {
	                        ok: false,
	                        error: error
	                    };
	                });
	            });
	        };
	    };
	};

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            if (action.type === ACTION_TYPES.DOUBAN_BOOKS.SUCCESS) {
	                action.response.result = action.response.result.books;
	            }
	            return next(action);
	        };
	    };
	};

/***/ },
/* 389 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            if (typeof action.SERVER_STORE === 'undefined') {
	                return next(action);
	            }
	            var actionBody = new Promise(function (resolve) {
	                resolve(action.SERVER_STORE.body);
	            });
	            return actionBody.then(function (body) {
	                return next(function (dispatch) {
	                    dispatch(body);
	                    return {
	                        ok: true,
	                        response: action.body.response
	                    };
	                });
	            });
	        };
	    };
	};

/***/ },
/* 390 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleInitialState;
	
	var _common = __webpack_require__(52);
	
	function handleInitialState() {
	    if (typeof window === 'undefined') {
	        return {};
	    }
	    return window[_common.INITIAL_STATE] || {};
	}

/***/ },
/* 391 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            console.info(action.type);
	            next(action);
	        };
	    };
	};

/***/ },
/* 392 */
/***/ function(module, exports) {

	module.exports = require("redux-logger");

/***/ },
/* 393 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _api = __webpack_require__(387);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _modifyResponse = __webpack_require__(388);
	
	var _modifyResponse2 = _interopRequireDefault(_modifyResponse);
	
	var _handleServerStore = __webpack_require__(389);
	
	var _handleServerStore2 = _interopRequireDefault(_handleServerStore);
	
	var _logActionTypes = __webpack_require__(391);
	
	var _logActionTypes2 = _interopRequireDefault(_logActionTypes);
	
	var _cache = __webpack_require__(394);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    api: _api2.default,
	    modifyResponse: _modifyResponse2.default,
	    handleServerStore: _handleServerStore2.default,
	    logActionTypes: _logActionTypes2.default,
	    cache: _cache2.default
	};

/***/ },
/* 394 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var SUCCESS = 'SUCCESS';
	var isSuccessAction = function isSuccessAction(action) {
	    // console.log(action)
	    // return true
	    // return _.last(action.type.split('/')) === SUCCESS
	};
	var cacheResponseAction = function cacheResponseAction(action) {
	    // console.log('cached')
	};
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            // if (action.cacheKey) {
	            //   // function* gen() {
	            //   //   yield 1
	            //   // }
	            //   // const fuck = gen()
	            //   // console.log(fuck.next())
	            //   next({
	            //     type: 'cache'
	            //   })
	            //   // return false
	            // }
	            // if (action.cacheKey && isSuccessAction(action)) {
	            //   cacheResponseAction(action)
	            //   next(action)
	            //   return false
	            // }
	            return next(action);
	        };
	    };
	};

/***/ },
/* 395 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = render500;
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ErrorPage = __webpack_require__(396);
	
	var _ErrorPage2 = _interopRequireDefault(_ErrorPage);
	
	var _server = __webpack_require__(373);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ERROR_DOC_TITLE = '服务器错误';
	var ERROR_PAGE_TITLE = '额，似乎出了点状况';
	function render500(message, isProd) {
	    return (0, _server.renderToStaticMarkup)(_react2.default.createElement(_ErrorPage2.default, { isProd: isProd, message: message, title: ERROR_PAGE_TITLE, docTitle: ERROR_DOC_TITLE }));
	}

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _Page = __webpack_require__(375);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _server = __webpack_require__(373);
	
	var _AppError = __webpack_require__(354);
	
	var _AppError2 = _interopRequireDefault(_AppError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ErrorPage(props) {
	    var isProd = props.isProd;
	    var message = props.message;
	    var docTitle = props.docTitle;
	    var title = props.title;
	
	    return _react2.default.createElement(_Page2.default, { isProd: isProd, title: docTitle, noScript: true, appMarkup: (0, _server.renderToString)(_react2.default.createElement(_AppError2.default, { title: title, message: message })) });
	}
	exports.default = ErrorPage;

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = bootstrap;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var http = __webpack_require__(398);
	var port = _app2.default.port;
	function bootstrap(app, _ref) {
	    var production = _ref.production;
	    var render = _ref.render;
	    var hot = _ref.hot;
	    var route = _ref.route;
	
	    var features = [];
	    if (hot) {
	        features.push('hot');
	    }
	    if (render) {
	        features.push('server rendering');
	    } else if (route) {
	        features.push('server routing');
	    } else {
	        features.push('hash routing');
	    }
	    app.set('port', port);
	    var server = http.createServer(app);
	    server.listen(port);
	    features = features.map(function (feature) {
	        return '[' + feature + ']';
	    }).join(' ');
	    _print2.default.info('Server running in ' + (production ? 'production' : 'development') + ' (' + port + ') ' + features);
	    if (hot) {
	        console.info('webpack building...');
	    }
	    return app;
	}

/***/ },
/* 398 */
/***/ function(module, exports) {

	module.exports = require("http");

/***/ },
/* 399 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = hotModuleReplacement;
	
	var _webpack = __webpack_require__(400);
	
	var _webpack2 = _interopRequireDefault(_webpack);
	
	var _webpackHot = __webpack_require__(401);
	
	var _webpackHot2 = _interopRequireDefault(_webpackHot);
	
	var _combineMiddleware = __webpack_require__(411);
	
	var _combineMiddleware2 = _interopRequireDefault(_combineMiddleware);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var webpackDevMiddleware = __webpack_require__(412);
	var webpackHotMiddleware = __webpack_require__(413);
	function hotModuleReplacement() {
	    var compiler = (0, _webpack2.default)(_webpackHot2.default);
	    return (0, _combineMiddleware2.default)([webpackDevMiddleware(compiler, { noInfo: true, publicPath: _webpackHot2.default.output.publicPath }), webpackHotMiddleware(compiler)]);
	}

/***/ },
/* 400 */
/***/ function(module, exports) {

	module.exports = require("webpack");

/***/ },
/* 401 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _webpack = __webpack_require__(400);
	
	var _webpack2 = _interopRequireDefault(_webpack);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var base = __webpack_require__(402);
	var paths = base.vars.paths;
	var ExtractTextPlugin = __webpack_require__(406);
	var config = {
	    entry: {
	        app: [
	        // 需要放在第一个
	        'react-hot-loader/patch', 'webpack-hot-middleware/client', 'babel-polyfill', paths.isomorphic]
	    },
	    output: {
	        path: paths.built,
	        filename: '[name].js',
	        publicPath: 'http://localhost:3000/built/'
	    },
	    plugins: [base.plugins.devEnv()].concat(_toConsumableArray(base.plugins.dllReferences()), [new _webpack2.default.HotModuleReplacementPlugin(), new _webpack2.default.NoErrorsPlugin(), new ExtractTextPlugin('[name].css', {
	        allChunks: true
	    })]),
	    devtool: 'inline-source-map',
	    module: {
	        loaders: [base.loaders.image(), base.loaders.sass({
	            sourceMap: true,
	            extract: true
	        }), base.loaders.postcss({
	            sourceMap: true,
	            extract: true
	        }), base.loaders.babel(), base.loaders.typescript({
	            officialLoader: false,
	            isHot: true
	        }), base.loaders.json()]
	    },
	    sassLoader: base.loaders.loaderConfig.sassLoader(),
	    postcss: base.loaders.loaderConfig.postcss(),
	    resolve: base.common.resolve
	};
	exports.default = config;

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(403);
	var loaders = __webpack_require__(405);
	var plugins = __webpack_require__(409);
	var common = __webpack_require__(410);
	
	module.exports = {
	  vars: vars,
	  loaders: loaders,
	  plugins: plugins,
	  common: common
	};

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var path = __webpack_require__(404);
	
	var pathPrefix = process.cwd();
	
	var paths = {
	  root: pathPrefix,
	  src: path.join(pathPrefix, 'src'),
	  built: path.join(pathPrefix, 'public/built'),
	  builtProd: path.join(pathPrefix, 'public/built_prod'),
	  assets: path.join(pathPrefix, 'src/assets'),
	  isomorphic: path.join(pathPrefix, 'src/isomorphic'),
	  server: path.join(pathPrefix, 'src/server')
	};
	
	var cssLocalIdentName = '[local]_[hash:base64:5]';
	
	var imageName = 'img/[name].[hash:10].[ext]';
	
	// 暴露到全局变量的名称
	var vendorLibName = '_[name]_dll';
	
	// HMR entry 里面的一个标记，具体不懂。。
	var hot = 'webpack-hot-middleware/client';
	
	// webpack 会使用文件名作为变量，所以不能使用带有 - 的名字
	// 这边的配置会同时影响生成和引用，所以只需在这边修改就行了
	var dllNames = {
	  reactKit: 'react_kit',
	  utils: 'utils'
	};
	
	// code splitting
	var libs = {
	  reactKit: ['react', 'react-dom', 'react-addons-css-transition-group', 'redux', 'react-redux', 'react-router', 'redux-thunk', 'react-css-modules', 'react-side-effect', 'react-router-redux', 'immutable', 'react-motion', 'reselect', 'redux-saga'],
	
	  reactDevKit: ['redux-devtools-log-monitor', 'redux-devtools-dock-monitor'],
	
	  utils: ['lodash', 'jquery', 'normalizr', 'humps', 'isomorphic-fetch', 'classnames', 'marked', 'moment']
	};
	
	module.exports = {
	  pathPrefix: pathPrefix,
	  paths: paths,
	  cssLocalIdentName: cssLocalIdentName,
	  imageName: imageName,
	  vendorLibName: vendorLibName,
	  hot: hot,
	  dllNames: dllNames,
	  libs: libs
	};

/***/ },
/* 404 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 405 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(403);
	var ExtractTextPlugin = __webpack_require__(406);
	
	var parseLoadersForExtractTextPlugin = function parseLoadersForExtractTextPlugin(loaders) {
	  return [loaders[0], loaders.slice(1, loaders.length).join('!')];
	};
	
	module.exports = {
	  loaderConfig: {
	    sassLoader: function sassLoader() {
	      return {
	        // 用于 scss 文件里 import 其它文件
	        includePaths: [vars.paths.isomorphic, vars.paths.static]
	      };
	    },
	    postcss: function postcss() {
	      return [__webpack_require__(407)({
	        path: [vars.paths.isomorphic]
	      }), __webpack_require__(408)];
	    }
	  },
	
	  json: function json() {
	    return {
	      test: /\.json$/,
	      loader: 'json'
	    };
	  },
	  babel: function babel() {
	    return {
	      test: /\.jsx?$/,
	      exclude: /(node_modules|bower_components)/,
	      loader: 'babel'
	    };
	  },
	  image: function image() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { emitFile: true };
	
	    var emitFile = _ref.emitFile;
	
	    var emitFileConfig = emitFile ? 'emitFile=true' : 'emitFile=false';
	
	    return {
	      test: /\.(jpe?g|png|gif|svg)$/i,
	      loaders: ['file?name=' + vars.imageName + '&' + emitFileConfig, 'image-webpack?bypassOnDebug&optimizationLevel=7&interlaced=false']
	    };
	  },
	  typescript: function typescript() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var officialLoader = _ref2.officialLoader;
	    var isHot = _ref2.isHot;
	
	    var tsLoader = officialLoader ? 'ts' : 'awesome-typescript';
	    var babel = isHot ? 'babel?plugins=react-hot-loader/babel' : 'babel';
	
	    return {
	      test: /\.tsx?$/,
	      loaders: [babel, '' + tsLoader]
	    };
	  },
	  sass: function sass() {
	    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var isomorphic = _ref3.isomorphic;
	    var global = _ref3.global;
	    var extract = _ref3.extract;
	    var sourceMap = _ref3.sourceMap;
	
	    var styleLoader = isomorphic ? 'isomorphic-style' : 'style';
	    var sourceMapConfig = sourceMap ? 'sourceMap=true' : 'sourceMap=false';
	    var localIdentName = global ? '[local]' : vars.cssLocalIdentName;
	
	    var loaders = [styleLoader + '?' + sourceMapConfig, 'css?' + sourceMapConfig + '&modules&importLoaders=1&localIdentName=' + localIdentName, 'sass?' + sourceMapConfig];
	
	    return {
	      test: /\.scss$/,
	      loader: extract ? ExtractTextPlugin.extract.apply(null, parseLoadersForExtractTextPlugin(loaders)) : loaders.join('!')
	    };
	  },
	  postcss: function postcss() {
	    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var global = _ref4.global;
	    var extract = _ref4.extract;
	    var sourceMap = _ref4.sourceMap;
	    var isomorphic = _ref4.isomorphic;
	
	    var styleLoader = isomorphic ? 'isomorphic-style' : 'style';
	    var localIdentName = global ? '[local]' : vars.cssLocalIdentName;
	    var sourceMapConfig = sourceMap ? 'sourceMap=true' : 'sourceMap=false';
	
	    var loaders = [styleLoader + '?' + sourceMapConfig, 'css?' + sourceMapConfig + '&modules&importLoaders=1&localIdentName=' + localIdentName, 'postcss?' + sourceMapConfig];
	
	    return {
	      test: /\.css$/,
	      loader: extract ? ExtractTextPlugin.extract.apply(null, parseLoadersForExtractTextPlugin(loaders)) : loaders.join('!')
	    };
	  },
	
	
	  // 未经测试
	  css: function css() {
	    return {
	      test: /\.css$/,
	      loaders: ['style', 'css?modules&importLoaders=1&localIdentName=[local]', 'resolve-url']
	    };
	  }
	};

/***/ },
/* 406 */
/***/ function(module, exports) {

	module.exports = require("extract-text-webpack-plugin");

/***/ },
/* 407 */
/***/ function(module, exports) {

	module.exports = require("postcss-import");

/***/ },
/* 408 */
/***/ function(module, exports) {

	module.exports = require("postcss-cssnext");

/***/ },
/* 409 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var webpack = __webpack_require__(400);
	var fs = __webpack_require__(377);
	var vars = __webpack_require__(403);
	var _ = __webpack_require__(10);
	
	/**
	 * @param names
	 * {
	 *   [name: string]: string
	 * }
	 */
	var createDllReferences = function createDllReferences(names) {
	  try {
	    return _.map(names, function (name) {
	      return new webpack.DllReferencePlugin({
	        context: '.',
	        manifest: JSON.parse(fs.readFileSync(vars.paths.built + '/' + name + '.dll.manifest.json', 'utf8'))
	      });
	    });
	  } catch (error) {
	    console.warn('WARNING: ', error.message);
	    return [];
	  }
	};
	
	module.exports = {
	  prodEnv: function prodEnv() {
	    return new webpack.DefinePlugin({
	      'process.env.NODE_ENV': '"production"'
	    });
	  },
	  devEnv: function devEnv() {
	    return new webpack.DefinePlugin({
	      'process.env.NODE_ENV': '"development"'
	    });
	  },
	  nodeSourceMapSupport: function nodeSourceMapSupport() {
	    return new webpack.BannerPlugin('require(\'source-map-support\').install()', {
	      raw: true,
	      entryOnly: true
	    });
	  },
	  occurenceOrder: function occurenceOrder() {
	    return new webpack.optimize.OccurenceOrderPlugin();
	  },
	  dllReferences: function dllReferences() {
	    return createDllReferences(vars.dllNames);
	  },
	  dll: function dll() {
	    return new webpack.DllPlugin({
	      path: vars.paths.built + '/[name].dll.manifest.json',
	      name: vars.vendorLibName
	    });
	  },
	  uglify: function uglify() {
	    return new webpack.optimize.UglifyJsPlugin({
	      compress: {
	        warnings: false
	      }
	    });
	  }
	};

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(403);
	
	module.exports = {
	  resolve: {
	    // 这边定义的 root 暂时没用，因为 vs code 里面目前配置的是只使用相对路径
	    root: vars.paths.src,
	    alias: {
	      // 方便在组建里面引用通用的 scss 文件（可能不会太常用）
	      // composes 使用的是 webpack resolve 里面的规则
	      styles: vars.paths.isomorphic + '/styles'
	    },
	    extensions: ['', '.js', '.jsx', '.ts', '.tsx']
	  }
	};

/***/ },
/* 411 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = combineMiddleware;
	/**
	 * Combine multiple middleware together
	 * Source: http://stackoverflow.com/questions/20274483/how-do-i-combine-connect-middleware-into-one-middleware
	 *
	 * @param {Function[]} mids functions of form:
	 *   function(req, res, next) { ... }
	 * @return {Function} single combined middleware
	 */
	/**
	 * Combine multiple middleware together
	 * Source: http://stackoverflow.com/questions/20274483/how-do-i-combine-connect-middleware-into-one-middleware
	 *
	 * @param {Function[]} mids functions of form:
	 *   function(req, res, next) { ... }
	 * @return {Function} single combined middleware
	 */function combineMiddleware(mids) {
	    return mids.reduce(function (a, b) {
	        return function (req, res, next) {
	            a(req, res, function (err) {
	                if (err) {
	                    return next(err);
	                }
	                return b(req, res, next);
	            });
	        };
	    });
	}

/***/ },
/* 412 */
/***/ function(module, exports) {

	module.exports = require("webpack-dev-middleware");

/***/ },
/* 413 */
/***/ function(module, exports) {

	module.exports = require("webpack-hot-middleware");

/***/ },
/* 414 */
/***/ function(module, exports) {

	module.exports = require("morgan");

/***/ },
/* 415 */
/***/ function(module, exports) {

	module.exports = require("cookie-parser");

/***/ },
/* 416 */
/***/ function(module, exports) {

	module.exports = require("body-parser");

/***/ },
/* 417 */
/***/ function(module, exports) {

	module.exports = require("connect-mongo");

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,