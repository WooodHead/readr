require('source-map-support').install()
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "1" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		0:1
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "1" is the signal for "already loaded"
/******/ 		if(!installedChunks[chunkId]) {
/******/ 			var chunk = require("./" + chunkId + "." + ({}[chunkId]||chunkId) + ".js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 1;
/******/ 		}
/******/ 		callback.call(null, __webpack_require__);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("babel-polyfill");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _initialize = __webpack_require__(3);
	
	var _initialize2 = _interopRequireDefault(_initialize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var baseDir = process.cwd();
	var app = (0, _initialize2.default)(baseDir);
	exports.default = app;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = initialize;
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	var _expressSession = __webpack_require__(5);
	
	var _expressSession2 = _interopRequireDefault(_expressSession);
	
	var _routes = __webpack_require__(6);
	
	var _routes2 = _interopRequireDefault(_routes);
	
	var _bootstrap = __webpack_require__(398);
	
	var _bootstrap2 = _interopRequireDefault(_bootstrap);
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _hotModuleReplacement = __webpack_require__(400);
	
	var _hotModuleReplacement2 = _interopRequireDefault(_hotModuleReplacement);
	
	var _options = __webpack_require__(83);
	
	var _options2 = _interopRequireDefault(_options);
	
	var _path = __webpack_require__(405);
	
	var _path2 = _interopRequireDefault(_path);
	
	var _middleware = __webpack_require__(8);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _morgan = __webpack_require__(415);
	
	var _morgan2 = _interopRequireDefault(_morgan);
	
	var _cookieParser = __webpack_require__(416);
	
	var _cookieParser2 = _interopRequireDefault(_cookieParser);
	
	var _bodyParser = __webpack_require__(417);
	
	var _bodyParser2 = _interopRequireDefault(_bodyParser);
	
	var _connectMongo = __webpack_require__(418);
	
	var _connectMongo2 = _interopRequireDefault(_connectMongo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MongoStore = (0, _connectMongo2.default)(_expressSession2.default);
	var app = (0, _express2.default)();
	var PUBLIC_PATH_NAME = 'public';
	var SESSION_SECRET = 'key';
	// TODO: what happens when max age exceeds
	var SESSION_MAX_AGE = 70 * 24 * 60 * 60 * 1000; // 70 days
	var REQ_SIZE_LIMIT = '5mb';
	var MONGO_STORE_URL = _app2.default.database.host + '/' + _app2.default.database.mongoStoreName;
	var REQ_BASE_PATH = '__basePath';
	function initialize(basePath) {
	    app.use((0, _expressSession2.default)({
	        secret: SESSION_SECRET,
	        cookie: {
	            maxAge: SESSION_MAX_AGE,
	            expires: new Date(Date.now() + SESSION_MAX_AGE)
	        },
	        resave: true,
	        saveUninitialized: true,
	        store: new MongoStore({ url: MONGO_STORE_URL })
	    }));
	    // 需要放在开始的位置
	    if (_options2.default.hot) {
	        app.use((0, _hotModuleReplacement2.default)());
	    }
	    app.use(_bodyParser2.default.urlencoded({ limit: REQ_SIZE_LIMIT, extended: false }));
	    app.use(_bodyParser2.default.json({ limit: REQ_SIZE_LIMIT }));
	    app.use((0, _cookieParser2.default)());
	    app.use(_express2.default.static(_path2.default.join(basePath, PUBLIC_PATH_NAME)));
	    // set basePath
	    app.use(function (req, res, next) {
	        req[REQ_BASE_PATH] = basePath;
	        next();
	    });
	    // log error info
	    app.use((0, _morgan2.default)('dev', {
	        skip: function skip(req, res) {
	            return res.statusCode < 400;
	        }
	    }));
	    // api routing
	    app.use('/' + _app2.default.api.prefix, _routes2.default.api());
	    // frontend routing
	    app.use(_middleware2.default.parseContext, _routes2.default.pages);
	    return (0, _bootstrap2.default)(app, _options2.default);
	}

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("express");

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("express-session");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _apiRoutes = __webpack_require__(7);
	
	var _apiRoutes2 = _interopRequireDefault(_apiRoutes);
	
	var _pages = __webpack_require__(82);
	
	var _pages2 = _interopRequireDefault(_pages);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    api: _apiRoutes2.default,
	    pages: _pages2.default
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = setupApiApp;
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	var _middleware = __webpack_require__(8);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _endpoints = __webpack_require__(69);
	
	var endpoints = _interopRequireWildcard(_endpoints);
	
	var _common = __webpack_require__(52);
	
	var _multer = __webpack_require__(81);
	
	var _multer2 = _interopRequireDefault(_multer);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FORM_DATA_FILE_KEY = 'file';
	// const UPLOADS_DIR = '__uploads__'
	// const upload = multer({ dest: UPLOADS_DIR })
	var upload = (0, _multer2.default)();
	var authenticatePublic = [_middleware2.default.prepareApi, _middleware2.default.parseContext];
	var authenticatePrivate = [_middleware2.default.prepareApi, _middleware2.default.parseContext, _middleware2.default.requirePermissionsOf(_common.ROLES.USER)];
	var authenticateAdmin = [_middleware2.default.prepareApi, _middleware2.default.parseContext, _middleware2.default.requirePermissionsOf(_common.ROLES.ADMIN)];
	function apiRoutes() {
	    var router = _express2.default.Router();
	    // authors
	    router.get('/authors/:id', authenticatePublic, endpoints.author.findOne); // basic
	    router.get('/authors', authenticatePublic, endpoints.author.list); // basic
	    router.post('/authors', authenticatePublic, endpoints.author.add); // basic
	    router.put('/authors/:id', authenticatePublic, endpoints.author.update); // basic
	    router.delete('/authors/:id', authenticatePublic, endpoints.author.remove); // basic
	    // collections
	    router.get('/collections/:id', authenticatePublic, endpoints.collection.findOne); // basic
	    router.get('/collections', authenticatePublic, endpoints.listCollections);
	    router.post('/collections', authenticatePublic, endpoints.collection.add); // basic
	    router.put('/collections/:id', authenticatePublic, endpoints.collection.update); // basic
	    router.delete('/collections/:id', authenticatePublic, endpoints.collection.remove); // basic
	    // books
	    router.get('/books/:book', authenticatePublic, endpoints.findBook);
	    router.get('/books/:book/content', authenticatePublic, endpoints.resolveBookContent);
	    router.get('/books', authenticatePublic, endpoints.listBooks);
	    // router.post('/books', authenticateAdmin, endpoints.book.add) // basic
	    router.post('/books', authenticateAdmin, upload.single(FORM_DATA_FILE_KEY), _middleware2.default.logFile, endpoints.addBook); // 处理文件
	    router.put('/books/:book', authenticateAdmin, endpoints.editBookMeta);
	    router.delete('/books/:book', authenticateAdmin, endpoints.removeBook);
	    // tags
	    router.get('/tags/:id', authenticatePublic, endpoints.tag.findOne); // basic
	    router.get('/tags', authenticatePublic, endpoints.tag.list); // basic
	    router.post('/tags', authenticatePublic, endpoints.tag.add); // basic
	    router.put('/tags/:id', authenticatePublic, endpoints.tag.update); // basic
	    router.delete('/tags/:id', authenticatePublic, endpoints.tag.remove); // basic
	    // users
	    router.get('/users', authenticateAdmin, endpoints.user.list); // basic
	    router.post('/users', authenticatePublic, endpoints.addUser);
	    // user
	    router.get('/user/profile', authenticatePrivate, endpoints.findUser);
	    router.get('/user/books/shelf', authenticatePrivate, endpoints.listShelfBooks);
	    // progress
	    router.get('/user/books/:book/progress', authenticatePrivate, endpoints.getReadingProgress);
	    router.put('/user/books/:book/progress', authenticatePrivate, endpoints.setReadingProgress);
	    // file
	    router.get('/files/:file', authenticateAdmin, endpoints.readFile);
	    router.delete('/files/:file', authenticateAdmin, endpoints.delFile);
	    // auth
	    router.post('/auth', authenticatePublic, _middleware2.default.auth.basicAuth);
	    router.get('/auth', authenticatePublic, _middleware2.default.auth.check);
	    router.put('/auth/revoke', authenticatePublic, _middleware2.default.auth.revoke);
	    return router;
	}
	function setupApiApp() {
	    var apiApp = (0, _express2.default)();
	    apiApp.use(apiRoutes());
	    apiApp.use(_middleware2.default.handleApiNotFound);
	    apiApp.use(_middleware2.default.handleJSONResponse);
	    apiApp.use(_middleware2.default.handleError);
	    return apiApp;
	}

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _parseContext = __webpack_require__(9);
	
	var _parseContext2 = _interopRequireDefault(_parseContext);
	
	var _auth = __webpack_require__(11);
	
	var _auth2 = _interopRequireDefault(_auth);
	
	var _requirePermissionsOf = __webpack_require__(51);
	
	var _requirePermissionsOf2 = _interopRequireDefault(_requirePermissionsOf);
	
	var _handleError = __webpack_require__(53);
	
	var _handleError2 = _interopRequireDefault(_handleError);
	
	var _handleJsonResponse = __webpack_require__(56);
	
	var _handleJsonResponse2 = _interopRequireDefault(_handleJsonResponse);
	
	var _logFile = __webpack_require__(66);
	
	var _logFile2 = _interopRequireDefault(_logFile);
	
	var _prepareApi = __webpack_require__(67);
	
	var _prepareApi2 = _interopRequireDefault(_prepareApi);
	
	var _handleApiNotFound = __webpack_require__(68);
	
	var _handleApiNotFound2 = _interopRequireDefault(_handleApiNotFound);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    parseContext: _parseContext2.default, auth: _auth2.default, requirePermissionsOf: _requirePermissionsOf2.default,
	    handleError: _handleError2.default, handleJSONResponse: _handleJsonResponse2.default, logFile: _logFile2.default, prepareApi: _prepareApi2.default,
	    handleApiNotFound: _handleApiNotFound2.default
	};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = parseContext;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function parseContext(req, res, next) {
	    if (req.session.user) {
	        req.context = {
	            user: _lodash2.default.omit(req.session.user, ['password', 'dateCreated', 'email'])
	        };
	    } else {
	        req.context = {
	            user: {
	                role: 'visitor'
	            }
	        };
	    }
	    next();
	}

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = require("lodash");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.basicAuth = basicAuth;
	exports.check = check;
	exports.revoke = revoke;
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function basicAuth(req, res, next) {
	    var user = new _model2.default(schemas.user);
	    var login = req.body.login ? req.body.login.toLowerCase() : undefined;
	    var password = req.body.password;
	    if (typeof login === 'undefined') {
	        next(new _errors2.default.ValidationError((0, _i18n2.default)('errors.validation.preCheck.missRequiredFields', 'login')));
	    }
	    if (typeof password === 'undefined') {
	        next(new _errors2.default.ValidationError((0, _i18n2.default)('errors.validation.preCheck.missRequiredFields', 'password')));
	    }
	    var query = { $or: [{ username: login, password: password }, { email: login, password: password }] };
	    user.findOne(query).then(function (result) {
	        req.session.user = _humps2.default.camelizeKeys(result);
	        req.apiResults = Promise.resolve({ ok: 1 });
	        next();
	    }, function (error) {
	        next(new _errors2.default.UnauthorizedError((0, _i18n2.default)('errors.middleware.auth.wrongCombination')));
	    });
	}
	function check(req, res) {
	    res.send(_humps2.default.decamelizeKeys(req.context.user));
	}
	function revoke(req, res) {
	    req.session.destroy();
	    res.status(204).send(null);
	}
	exports.default = { basicAuth: basicAuth, check: check, revoke: revoke };

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _notFoundError = __webpack_require__(13);
	
	var _notFoundError2 = _interopRequireDefault(_notFoundError);
	
	var _validationError = __webpack_require__(15);
	
	var _validationError2 = _interopRequireDefault(_validationError);
	
	var _badRequestError = __webpack_require__(16);
	
	var _badRequestError2 = _interopRequireDefault(_badRequestError);
	
	var _internalServerError = __webpack_require__(17);
	
	var _internalServerError2 = _interopRequireDefault(_internalServerError);
	
	var _noPermissionError = __webpack_require__(18);
	
	var _noPermissionError2 = _interopRequireDefault(_noPermissionError);
	
	var _unauthorizedError = __webpack_require__(19);
	
	var _unauthorizedError2 = _interopRequireDefault(_unauthorizedError);
	
	var _requestTooLargeError = __webpack_require__(20);
	
	var _requestTooLargeError2 = _interopRequireDefault(_requestTooLargeError);
	
	var _unsupportedFileTypeError = __webpack_require__(21);
	
	var _unsupportedFileTypeError2 = _interopRequireDefault(_unsupportedFileTypeError);
	
	var _emailError = __webpack_require__(22);
	
	var _emailError2 = _interopRequireDefault(_emailError);
	
	var _methodNotAllowedError = __webpack_require__(23);
	
	var _methodNotAllowedError2 = _interopRequireDefault(_methodNotAllowedError);
	
	var _tooManyRequestsError = __webpack_require__(24);
	
	var _tooManyRequestsError2 = _interopRequireDefault(_tooManyRequestsError);
	
	var _tokenRevocationError = __webpack_require__(25);
	
	var _tokenRevocationError2 = _interopRequireDefault(_tokenRevocationError);
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    NotFoundError: _notFoundError2.default,
	    ValidationError: _validationError2.default,
	    BadRequestError: _badRequestError2.default,
	    InternalServerError: _internalServerError2.default,
	    NoPermissionError: _noPermissionError2.default,
	    UnauthorizedError: _unauthorizedError2.default,
	    RequestEntityTooLargeError: _requestTooLargeError2.default,
	    UnsupportedMediaTypeError: _unsupportedFileTypeError2.default,
	    EmailError: _emailError2.default,
	    MethodNotAllowedError: _methodNotAllowedError2.default,
	    TooManyRequestsError: _tooManyRequestsError2.default,
	    TokenRevocationError: _tokenRevocationError2.default,
	    GenericError: _genericError2.default
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NotFoundError = function (_GenericError) {
	    _inherits(NotFoundError, _GenericError);
	
	    function NotFoundError(message) {
	        _classCallCheck(this, NotFoundError);
	
	        var _this = _possibleConstructorReturn(this, (NotFoundError.__proto__ || Object.getPrototypeOf(NotFoundError)).call(this, message, 'NotFoundError'));
	
	        _this.statusCode = 404;
	        return _this;
	    }
	
	    return NotFoundError;
	}(_genericError2.default);
	
	exports.default = NotFoundError;

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var GenericError = function GenericError(message, name) {
	    _classCallCheck(this, GenericError);
	
	    this.name = name || 'GenericError';
	    this.statusCode = 500;
	    this.message = message;
	    this.stack = new Error().stack;
	    this.type = this.name;
	};
	
	exports.default = GenericError;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ValidationError = function (_GenericError) {
	    _inherits(ValidationError, _GenericError);
	
	    function ValidationError(message, offendingProperty) {
	        _classCallCheck(this, ValidationError);
	
	        var _this = _possibleConstructorReturn(this, (ValidationError.__proto__ || Object.getPrototypeOf(ValidationError)).call(this, message, 'ValidationError'));
	
	        _this.statusCode = 422;
	        if (offendingProperty) {
	            _this.property = offendingProperty;
	        }
	        return _this;
	    }
	
	    return ValidationError;
	}(_genericError2.default);
	
	exports.default = ValidationError;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BadRequestError = function (_GenericError) {
	    _inherits(BadRequestError, _GenericError);
	
	    function BadRequestError(message, code) {
	        _classCallCheck(this, BadRequestError);
	
	        var _this = _possibleConstructorReturn(this, (BadRequestError.__proto__ || Object.getPrototypeOf(BadRequestError)).call(this, message, 'BadRequestError'));
	
	        _this.statusCode = 400;
	        if (code) {
	            _this.code = code;
	        }
	        return _this;
	    }
	
	    return BadRequestError;
	}(_genericError2.default);
	
	exports.default = BadRequestError;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var InternalServerError = function (_GenericError) {
	    _inherits(InternalServerError, _GenericError);
	
	    function InternalServerError(message) {
	        _classCallCheck(this, InternalServerError);
	
	        var _this = _possibleConstructorReturn(this, (InternalServerError.__proto__ || Object.getPrototypeOf(InternalServerError)).call(this, message, 'InternalServerError'));
	
	        _this.statusCode = 500;
	        return _this;
	    }
	
	    return InternalServerError;
	}(_genericError2.default);
	
	exports.default = InternalServerError;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NoPermissionError = function (_GenericError) {
	    _inherits(NoPermissionError, _GenericError);
	
	    function NoPermissionError(message) {
	        _classCallCheck(this, NoPermissionError);
	
	        var _this = _possibleConstructorReturn(this, (NoPermissionError.__proto__ || Object.getPrototypeOf(NoPermissionError)).call(this, message, 'NoPermissionError'));
	
	        _this.statusCode = 403;
	        return _this;
	    }
	
	    return NoPermissionError;
	}(_genericError2.default);
	
	exports.default = NoPermissionError;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UnauthorizedError = function (_GenericError) {
	    _inherits(UnauthorizedError, _GenericError);
	
	    function UnauthorizedError(message) {
	        _classCallCheck(this, UnauthorizedError);
	
	        var _this = _possibleConstructorReturn(this, (UnauthorizedError.__proto__ || Object.getPrototypeOf(UnauthorizedError)).call(this, message, 'UnauthorizedError'));
	
	        _this.statusCode = 401;
	        return _this;
	    }
	
	    return UnauthorizedError;
	}(_genericError2.default);
	
	exports.default = UnauthorizedError;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RequestEntityTooLargeError = function (_GenericError) {
	    _inherits(RequestEntityTooLargeError, _GenericError);
	
	    function RequestEntityTooLargeError(message) {
	        _classCallCheck(this, RequestEntityTooLargeError);
	
	        var _this = _possibleConstructorReturn(this, (RequestEntityTooLargeError.__proto__ || Object.getPrototypeOf(RequestEntityTooLargeError)).call(this, message, 'RequestEntityTooLargeError'));
	
	        _this.statusCode = 413;
	        return _this;
	    }
	
	    return RequestEntityTooLargeError;
	}(_genericError2.default);
	
	exports.default = RequestEntityTooLargeError;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UnsupportedFileTypeError = function (_GenericError) {
	    _inherits(UnsupportedFileTypeError, _GenericError);
	
	    function UnsupportedFileTypeError(message) {
	        _classCallCheck(this, UnsupportedFileTypeError);
	
	        var _this = _possibleConstructorReturn(this, (UnsupportedFileTypeError.__proto__ || Object.getPrototypeOf(UnsupportedFileTypeError)).call(this, message, 'UnsupportedFileTypeError'));
	
	        _this.statusCode = 415;
	        return _this;
	    }
	
	    return UnsupportedFileTypeError;
	}(_genericError2.default);
	
	exports.default = UnsupportedFileTypeError;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var EmailError = function (_GenericError) {
	    _inherits(EmailError, _GenericError);
	
	    function EmailError(message) {
	        _classCallCheck(this, EmailError);
	
	        var _this = _possibleConstructorReturn(this, (EmailError.__proto__ || Object.getPrototypeOf(EmailError)).call(this, message, 'EmailError'));
	
	        _this.statusCode = 500;
	        return _this;
	    }
	
	    return EmailError;
	}(_genericError2.default);
	
	exports.default = EmailError;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MethodNotAllowedError = function (_GenericError) {
	    _inherits(MethodNotAllowedError, _GenericError);
	
	    function MethodNotAllowedError(message) {
	        _classCallCheck(this, MethodNotAllowedError);
	
	        var _this = _possibleConstructorReturn(this, (MethodNotAllowedError.__proto__ || Object.getPrototypeOf(MethodNotAllowedError)).call(this, message, 'MethodNotAllowedError'));
	
	        _this.statusCode = 405;
	        return _this;
	    }
	
	    return MethodNotAllowedError;
	}(_genericError2.default);
	
	exports.default = MethodNotAllowedError;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TooManyRequestsError = function (_GenericError) {
	    _inherits(TooManyRequestsError, _GenericError);
	
	    function TooManyRequestsError(message) {
	        _classCallCheck(this, TooManyRequestsError);
	
	        var _this = _possibleConstructorReturn(this, (TooManyRequestsError.__proto__ || Object.getPrototypeOf(TooManyRequestsError)).call(this, message, 'TooManyRequestsError'));
	
	        _this.statusCode = 429;
	        return _this;
	    }
	
	    return TooManyRequestsError;
	}(_genericError2.default);
	
	exports.default = TooManyRequestsError;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TokenRevocationError = function (_GenericError) {
	    _inherits(TokenRevocationError, _GenericError);
	
	    function TokenRevocationError(message) {
	        _classCallCheck(this, TokenRevocationError);
	
	        var _this = _possibleConstructorReturn(this, (TokenRevocationError.__proto__ || Object.getPrototypeOf(TokenRevocationError)).call(this, message, 'TokenRevocationError'));
	
	        _this.statusCode = 503;
	        return _this;
	    }
	
	    return TokenRevocationError;
	}(_genericError2.default);
	
	exports.default = TokenRevocationError;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = i18n;
	
	var _cn = __webpack_require__(27);
	
	var _cn2 = _interopRequireDefault(_cn);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * referenced ghost i18n.js, it's a simplified version
	 * and I used js to store local translations instead of json
	 */
	function addPadding(str) {
	    if (!str) {
	        return '';
	    }
	    if (escape(str.substr(-1)).indexOf('%u') !== 0) {
	        return ' ' + str + ' ';
	    }
	    return str;
	}
	function getMatchingString(msgPath) {
	    var matchingString = _cn2.default;
	    var path = msgPath.split('.');
	    for (var i = 0; i < path.length; i++) {
	        if (matchingString[path[i]]) {
	            matchingString = matchingString[path[i]];
	        } else {
	            matchingString = null;
	            break;
	        }
	    }
	    return matchingString;
	}
	function addPunc(str, lang) {
	    // todo: lang
	    return str + '\uFF01';
	}
	function i18n(msgPath, value) {
	    var matchingString = getMatchingString(msgPath);
	    if (_lodash2.default.isNull(matchingString)) {
	        console.error('Unable to find matching path [' + msgPath + '] in locale file.\n');
	        matchingString = 'i18n error: path "' + msgPath + '" was not found.';
	    } else {
	        var placeholderIndex = matchingString.indexOf('{value}');
	        if (placeholderIndex !== -1) {
	            var before = matchingString.substring(0, placeholderIndex);
	            var after = matchingString.substr(placeholderIndex + 7);
	            var matchingValue = '';
	            if (typeof value !== 'undefined') {
	                matchingValue = getMatchingString('common.terms.' + value);
	                if (_lodash2.default.isNull(matchingValue)) {
	                    matchingValue = value;
	                }
	                matchingValue = addPadding(matchingValue);
	            }
	            matchingString = addPunc(before + matchingValue + after);
	        } else {
	            matchingString = addPunc(matchingString);
	        }
	    }
	    return matchingString.trim();
	}

/***/ },
/* 27 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    common: {
	        terms: {
	            id: 'ID',
	            username: '用户名',
	            password: '密码',
	            percentage: '进度百分比',
	            email: '邮箱',
	            login: '登录项',
	            description: '描述',
	            name: '名称',
	            creator: '创建者',
	            title: '标题',
	            progress: '进度',
	            user: '用户',
	            admin: '管理员',
	            file: '文件',
	            files: '文件',
	            book: '书籍',
	            books: '书籍'
	        }
	    },
	    errors: {
	        validation: {
	            valueLimit: {
	                notString: '{value}不是字符串',
	                stringOnly: '输入项类型只能为字符串',
	                alphanumeric: '{value}只能为字母或数字',
	                undefined: '{value}未定义',
	                invalidFormat: '{value}格式不对',
	                noPureNumber: '{value}不能为纯数字',
	                onlyStartWithLetters: '{value}只能以字母开头',
	                length: '长度不匹配',
	                minLength: '{value}长度不足',
	                maxLength: '{value}超出最大长度',
	                username: {
	                    allowedChars: '用户名只能包含字母，数字及以下字符 "-","_"'
	                }
	            },
	            preCheck: {
	                emptyObject: '提交数据不能为空',
	                missRequiredFields: '{value}为必填项',
	                unsupportedInput: '发现未知的输入项{value}',
	                inputEmpty: '{value}输入不能为空'
	            }
	        },
	        api: {
	            general: {
	                notFound: '{value}未找到',
	                notFoundIn: '在{value}中未找到',
	                exists: '{value}已存在'
	            },
	            auth: {
	                needPermissionsOf: '需要 {value} 权限',
	                loginRequired: '需要登录'
	            }
	        },
	        schema: {
	            unique: '{value}已存在'
	        },
	        middleware: {
	            auth: {
	                accessDenied: '访问被禁止',
	                wrongPassword: '密码错误',
	                wrongCombination: '用户名或密码错误'
	            },
	            oauth: {
	                tokenExpired: 'token 过期'
	            },
	            spamprevention: {
	                tooManyAttempts: '您的访问过于频繁',
	                noUsername: '无用户名',
	                noPassword: '无密码'
	            }
	        },
	        mail: {
	            failedSendingEmail: '邮件发送失败'
	        },
	        general: {
	            anErrorOccurred: '发生错误',
	            unknownErrorOccurred: '发生未知错误',
	            notFound: '{value}未找到'
	        }
	    }
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _database = __webpack_require__(29);
	
	var _database2 = _interopRequireDefault(_database);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _validate = __webpack_require__(42);
	
	var _validate2 = _interopRequireDefault(_validate);
	
	var _outputEmptyEntity = __webpack_require__(33);
	
	var _outputEmptyEntity2 = _interopRequireDefault(_outputEmptyEntity);
	
	var _paginate = __webpack_require__(43);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _helpers = __webpack_require__(44);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Model = function () {
	    _createClass(Model, null, [{
	        key: 'parseQuery',
	        value: function parseQuery(idOrQuery) {
	            if (typeof idOrQuery === 'undefined') {
	                throw new Error('Param idOrQuery is undefined!');
	            }
	            return typeof idOrQuery === 'string' ? { _id: idOrQuery } : idOrQuery;
	        }
	    }]);
	
	    function Model(schema) {
	        _classCallCheck(this, Model);
	
	        this._schema = schema;
	        this._tableName = schema.name;
	    }
	
	    _createClass(Model, [{
	        key: 'outputEmpty',
	        value: function outputEmpty(id) {
	            return (0, _outputEmptyEntity2.default)(this._schema.fields, id);
	        }
	    }, {
	        key: 'findOne',
	        value: function findOne(idOrQuery, raw) {
	            var _this = this;
	
	            var query = Model.parseQuery(idOrQuery);
	            return this.list({ raw: raw, disablePagination: true, query: query }).then(function (result) {
	                var entity = result[0];
	                if (!entity) {
	                    return Promise.reject((0, _helpers.notFoundIn)(_this._schema._baseTable));
	                }
	                return entity;
	            });
	        }
	    }, {
	        key: 'list',
	        value: function list() {
	            var _this2 = this;
	
	            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	            var raw = options.raw;
	            var page = options.page;
	            var disablePagination = options.disablePagination;
	            var filter = options.filter;
	            var mapping = options.mapping;
	            var query = options.query;
	
	            var doQuery = function doQuery() {
	                var listRaw = function listRaw(listRawQuery) {
	                    return _database2.default.getCollection(_this2._tableName).then(function (collection) {
	                        return collection.find(listRawQuery).toArray();
	                    });
	                };
	                var rawResults = listRaw(query || {});
	                if (raw) {
	                    return rawResults;
	                } else {
	                    return rawResults.then(function (results) {
	                        return (0, _database.embedRef)(results, _this2._schema);
	                    });
	                }
	            };
	            return doQuery().then(function (entities) {
	                var modifiedEntities = entities.filter(filter || function () {
	                    return true;
	                }).map(mapping || function (entity) {
	                    return entity;
	                });
	                if (!disablePagination) {
	                    return (0, _paginate2.default)(modifiedEntities, {
	                        page: page || 1
	                    });
	                }
	                return modifiedEntities;
	            });
	        }
	    }, {
	        key: 'listRaw',
	        value: function listRaw() {
	            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	            var filter = options.filter;
	            var mapping = options.mapping;
	            var query = options.query;
	
	            return this.list({
	                disablePagination: true,
	                raw: true,
	                filter: filter,
	                mapping: mapping,
	                query: query || {}
	            });
	        }
	    }, {
	        key: 'add',
	        value: function add(data) {
	            var _this3 = this;
	
	            var query = function query() {
	                var dataWithID = Object.assign({}, data, {
	                    _id: Math.random().toFixed(8).substr(2),
	                    date_created: new Date().toString()
	                });
	                // 检查是否需要确认唯一性
	                var dataToCheck = _this3._schema.fields.filter(function (field) {
	                    return Boolean(field.unique);
	                }).map(function (field) {
	                    return {
	                        key: field.name,
	                        value: data[field.name]
	                    };
	                }).filter(function (fileld) {
	                    return Boolean(fileld.value);
	                });
	                // 过滤出和数据库中已存在数据相匹配的输入项
	                if (dataToCheck.length !== 0) {
	                    var checkingResult = Promise.all(dataToCheck.map(function (dataItem) {
	                        return _database2.default.getRowByMatch(_defineProperty({}, dataItem.key, dataItem.value), _this3._tableName).then(function (res) {
	                            if (res.length !== 0) {
	                                return dataItem;
	                            }
	                            return false;
	                        });
	                    })).then(function (res) {
	                        return res.filter(function (r) {
	                            return r !== false;
	                        });
	                    });
	                    return checkingResult.then(function (res) {
	                        if (res.length !== 0) {
	                            return Promise.reject(new _errors2.default.BadRequestError((0, _i18n2.default)('errors.schema.unique', res[0].key)));
	                        }
	                        return _database2.default.getCollection(_this3._tableName).then(function (collection) {
	                            return collection.insert([dataWithID]);
	                        });
	                    });
	                }
	                return _database2.default.getCollection(_this3._tableName).then(function (collection) {
	                    return collection.insert([dataWithID]);
	                });
	            };
	            return _utils2.default.reduceTasks([(0, _validate2.default)(data, this._schema), query]);
	        }
	    }, {
	        key: 'update',
	        value: function update(idOrQuery, data) {
	            var _this4 = this;
	
	            var updateConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	            var multi = updateConfig.multi;
	            var upsert = updateConfig.upsert;
	
	            var query = Model.parseQuery(idOrQuery);
	            var doQuery = function doQuery() {
	                var data2 = Object.assign({}, data, {
	                    date_updated: new Date().toString()
	                });
	                var doIt = function doIt() {
	                    return _database2.default.getCollection(_this4._tableName).then(function (collection) {
	                        return collection.update(query, { $set: data2 }, {
	                            upsert: Boolean(upsert),
	                            multi: Boolean(multi)
	                        });
	                    });
	                };
	                if (!upsert) {
	                    return _this4.findOne(idOrQuery, true).then(function (result) {
	                        return doIt();
	                    });
	                }
	                return doIt();
	            };
	            return _utils2.default.reduceTasks([(0, _validate2.default)(data, this._schema, true), doQuery]);
	        }
	    }, {
	        key: 'remove',
	        value: function remove(idOrQuery) {
	            var query = Model.parseQuery(idOrQuery);
	            return _database2.default.getCollection(this._tableName).then(function (collection) {
	                return collection.remove(query);
	            });
	        }
	    }]);
	
	    return Model;
	}();
	
	exports.default = Model;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.getCollection = getCollection;
	exports.getRowByMatch = getRowByMatch;
	exports.getRowById = getRowById;
	exports.embedRef = embedRef;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _outputEmptyEntity = __webpack_require__(33);
	
	var _outputEmptyEntity2 = _interopRequireDefault(_outputEmptyEntity);
	
	var _mongodb = __webpack_require__(34);
	
	var _mongodb2 = _interopRequireDefault(_mongodb);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var MongoClient = _mongodb2.default.MongoClient;
	function getCollection(table) {
	    var dbConnect = MongoClient.connect(_app2.default.database.host + '/' + _app2.default.database.name);
	    return dbConnect.then(function (db) {
	        return Promise.resolve(db.collection(table));
	    });
	}
	function getRowByMatch(match, table) {
	    return getCollection(table).then(function (collection) {
	        return collection.find(match).toArray();
	    });
	}
	function getRowById(id, table) {
	    return getRowByMatch({ _id: id }, table);
	}
	var getRefFieldsWithIds = function getRefFieldsWithIds(rawResult, schema) {
	    return schema.fields.filter(function (field) {
	        return typeof field.ref !== 'undefined';
	    }).map(function (field) {
	        var ids = rawResult[field.name];
	        // 将 ids 通通转换为数组
	        // 这里包括本该传数组却得到字符串被转换的情况
	        if (!Array.isArray(ids)) {
	            ids = [ids];
	        }
	        return Object.assign({}, field, { ids: ids });
	    });
	};
	// 并且添加相应错误信息
	var handleRefResult = function handleRefResult(rawRefResult, refSchema, id) {
	    if ((typeof rawRefResult === 'undefined' ? 'undefined' : _typeof(rawRefResult)) === 'object') {
	        return rawRefResult;
	    }
	    return (0, _outputEmptyEntity2.default)(refSchema.fields, id);
	};
	var doesRefHaveRefInside = function doesRefHaveRefInside(ref) {
	    return _lodash2.default.filter(ref.fields, function (field) {
	        return Boolean(field.ref);
	    }).length !== 0;
	};
	function embedRef(rawResults, schema) {
	    if (rawResults.length === 0) {
	        return Promise.resolve([]);
	    }
	    // 获取 ref 数据，生成由 ref 字段组成的对象
	    var getRefFieldsWithData = function getRefFieldsWithData(fieldsWithRefIds) {
	        var fieldsWithData = fieldsWithRefIds.map(function (field) {
	            // 一个 field 里面的 ids 返回的查询结果
	            return Promise.all(field.ids.map(function (id) {
	                return getRowById(id, field.ref.name).then(function (results) {
	                    var isRefInRef = doesRefHaveRefInside(field.ref);
	                    var refSchema = field.ref;
	                    if (isRefInRef) {
	                        // 递归！！
	                        return embedRef(results, refSchema).then(function (reRefedResult) {
	                            return handleRefResult(reRefedResult[0], refSchema, id);
	                        });
	                    }
	                    return handleRefResult(results[0], refSchema, id);
	                });
	            })).then(function (refResults) {
	                // 处理单个 ref field 数据，都是数组形式，最终是否为数组取决于 ref field 的 type
	                var fieldData = refResults;
	                if (!field.type || !field.type.isArray()) {
	                    fieldData = refResults[0];
	                }
	                return {
	                    name: field.name,
	                    data: fieldData
	                };
	            });
	        });
	        return Promise.all(fieldsWithData).then(function (fields) {
	            return fields.reduce(function (fieldsObj, field) {
	                return Object.assign({}, fieldsObj, _defineProperty({}, field.name, field.data));
	            }, {});
	        });
	    };
	    return Promise.all(rawResults.map(function (rawResult) {
	        var fieldsWithIds = getRefFieldsWithIds(rawResult, schema);
	        return getRefFieldsWithData(fieldsWithIds).then(function (refObj) {
	            return _lodash2.default.assign({}, rawResult, refObj);
	        });
	    }));
	}
	exports.default = {
	    embedRef: embedRef,
	    getCollection: getCollection,
	    getRowByMatch: getRowByMatch,
	    getRowById: getRowById
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _appConfig = __webpack_require__(31);
	
	var _appConfig2 = _interopRequireDefault(_appConfig);
	
	var _appConfig3 = __webpack_require__(32);
	
	var _appConfig4 = _interopRequireDefault(_appConfig3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var appConfig = _appConfig2.default;
	if (process.env.NODE_ENV === 'production') {
	    appConfig = _appConfig4.default;
	}
	exports.default = appConfig;

/***/ },
/* 31 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var appConfig = {
	    api: {
	        prefix: 'api'
	    },
	    database: {
	        host: 'mongodb://localhost:27017',
	        name: 'readr',
	        mongoStoreName: 'readr_session'
	    },
	    siteUrl: 'http://readrweb.com',
	    port: 3000,
	    enableEntityCache: false
	};
	exports.default = appConfig;

/***/ },
/* 32 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var appConfig = {
	    api: {
	        prefix: 'api'
	    },
	    database: {
	        host: 'mongodb://localhost:27017',
	        name: 'readr',
	        mongoStoreName: 'readr_session'
	    },
	    siteUrl: 'http://readrweb.com',
	    port: 3000,
	    enableEntityCache: true
	};
	exports.default = appConfig;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = outputEmptyEntity;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function outputEmptyEntity(fields) {
	    var idObjOrIdString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    // id 可以为对象，此时会直接被扩展到输出结果里面
	    var idObj = idObjOrIdString;
	    if (typeof idObjOrIdString === 'string') {
	        idObj = { _id: idObjOrIdString };
	    }
	    var entity = {};
	    fields.forEach(function (field) {
	        // todo
	        // 添加类型判断
	        entity[field.name] = '';
	    });
	    return _lodash2.default.assign({}, entity, idObj);
	}

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = require("mongodb");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _validator = __webpack_require__(36);
	
	var _validator2 = _interopRequireDefault(_validator);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _pipeline = __webpack_require__(38);
	
	var _pipeline2 = _interopRequireDefault(_pipeline);
	
	var _reduceTasks = __webpack_require__(40);
	
	var _reduceTasks2 = _interopRequireDefault(_reduceTasks);
	
	var _sortByDate = __webpack_require__(41);
	
	var _sortByDate2 = _interopRequireDefault(_sortByDate);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = { validator: _validator2.default, i18n: _i18n2.default, pipeline: _pipeline2.default, reduceTasks: _reduceTasks2.default, sortByDate: _sortByDate2.default };

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var validator = __webpack_require__(37);
	var additionalValidators = {
	    lengthMin: function lengthMin(len) {
	        return function (input) {
	            return input.length >= len;
	        };
	    },
	    lengthMax: function lengthMax(len) {
	        return function (input) {
	            return input.length <= len;
	        };
	    }
	};
	exports.default = Object.assign({}, validator, additionalValidators);

/***/ },
/* 37 */
/***/ function(module, exports) {

	module.exports = require("validator");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _bluebird = __webpack_require__(39);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function pipeline(tasks /* initial arguments */) {
	    var args = Array.prototype.slice.call(arguments, 1);
	    var _runTask = function runTask(task, args) {
	        // Self-optimizing function to run first task with multiple
	        // args using apply, but subsequent tasks via direct invocation
	        _runTask = function runTask(task, arg) {
	            return task(arg);
	        };
	        return task.apply(null, args);
	    };
	    // Resolve any promises for the arguments passed in first
	    return _bluebird2.default.all(args).then(function (args) {
	        // Iterate through the tasks passing args from one into the next
	        return _bluebird2.default.reduce(tasks, function (arg, task) {
	            return _runTask(task, arg);
	        }, args);
	    });
	} /**
	   * # Pipeline Utility (borrowed from Ghost)
	   *
	   * Based on pipeline.js from when.js:
	   * https://github.com/cujojs/when/blob/3.7.4/pipeline.js
	   */
	exports.default = pipeline;

/***/ },
/* 39 */
/***/ function(module, exports) {

	module.exports = require("bluebird");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = reduceTasks;
	
	var _bluebird = __webpack_require__(39);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// tasks 可以是返回 Promise 的 fn
	// 也可以是 Promise
	function reduceTasks(tasks) {
	    var _this = this;
	
	    return _bluebird2.default.reduce(tasks, function (result, task) {
	        if (typeof task === 'function') {
	            return task.call(_this);
	        }
	        // 如果 task 是 Promise blue bird 貌似会自动把 promise resolve 出来，是 reject 直接就终止执行
	        // 所以 写 task()#then 会出错
	        return task;
	    });
	}

/***/ },
/* 41 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = sortByDate;
	// 最新的在前面
	// 最新的在前面
	function sortByDate() {
	    return function (a, b) {
	        return new Date(b.date_updated).valueOf() - new Date(a.date_updated).valueOf();
	    };
	}

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = validate;
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var reduceTasks = _utils2.default.reduceTasks;
	var i18n = _utils2.default.i18n;
	function validate(data, schema, isEditing) {
	    if (typeof data === 'undefined') {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.emptyObject')));
	    }
	    var suppliedFields = Object.keys(data).filter(function (key) {
	        return !_lodash2.default.isUndefined(data[key]);
	    });
	    var suppliedFieldsInSchema = schema.fields.filter(function (field) {
	        return !_lodash2.default.isUndefined(data[field.name]);
	    });
	    var allFields = _lodash2.default.map(schema.fields, 'name');
	    var requiredFields = schema.fields.filter(function (field) {
	        return Boolean(field.required);
	    }).map(function (field) {
	        return field.name;
	    });
	    var unsupportedFields = suppliedFields.filter(function (key) {
	        return allFields.indexOf(key) === -1;
	    });
	    var missedFields = requiredFields.filter(function (key) {
	        return suppliedFields.indexOf(key) === -1;
	    });
	    if (unsupportedFields.length > 0) {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.unsupportedInput', unsupportedFields[0])));
	    }
	    if (missedFields.length > 0 && !isEditing) {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.missRequiredFields', missedFields[0])));
	    }
	    // 验证 fields，因为每个 field 可能有不止一个 validator
	    var validateField = function validateField(val, validators) {
	        return reduceTasks(validators.map(function (validation) {
	            if (validation.fn(val)) {
	                return Promise.resolve(true);
	            }
	            return Promise.reject(new _errors2.default.BadRequestError(validation.errorMsg));
	        }));
	    };
	    // 所有 fields 验证一遍
	    return reduceTasks(suppliedFieldsInSchema.map(function (field) {
	        var validators = field.validators;
	        if (validators) {
	            return validateField(data[field.name], validators);
	        }
	        // 跳过未定义 validation 的 filed
	        return Promise.resolve(true);
	    }));
	}

/***/ },
/* 43 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = paginate;
	var defaultOptions = {
	    page: 1,
	    limit: 10,
	    order: 'new'
	};
	function paginate(results, options) {
	    var _Object$assign = Object.assign({}, defaultOptions, options);
	
	    var page = _Object$assign.page;
	    var limit = _Object$assign.limit;
	    var order = _Object$assign.order;
	    // query 里面传过来的都是 string
	
	    page = parseInt(page, 10);
	    // 如果 page 小于 0 则当做 1 来处理，大于最大页面则不管
	    // 此逻辑参照 GitHub api
	    page = page <= 0 ? 1 : page;
	    limit = parseInt(limit, 10);
	    if (order === 'new') {
	        results.reverse();
	    }
	    var startIndex = (page - 1) * limit;
	    return {
	        entities: results.slice(startIndex, limit + startIndex),
	        _pagination: {
	            current: page,
	            all: Math.ceil(results.length / limit) || 1
	        }
	    };
	}

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.computeHash = undefined;
	exports.notFoundError = notFoundError;
	exports.notFoundIn = notFoundIn;
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _computeHash = __webpack_require__(45);
	
	var _computeHash2 = _interopRequireDefault(_computeHash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function notFoundError(itemName) {
	    return new _errors2.default.NotFoundError((0, _i18n2.default)('errors.api.general.notFound', itemName));
	}
	function notFoundIn(collectionName) {
	    return new _errors2.default.NotFoundError((0, _i18n2.default)('errors.api.general.notFoundIn', collectionName));
	}
	exports.computeHash = _computeHash2.default;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = computeHash;
	
	var _crypto = __webpack_require__(46);
	
	var _crypto2 = _interopRequireDefault(_crypto);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * source:
	 * http://stackoverflow.com/questions/6984139/how-can-i-get-the-sha1-hash-of-a-string-in-node-js
	 */
	function computeHash(buffer) {
	  var shasum = _crypto2.default.createHash('sha1');
	  shasum.update(buffer);
	  return shasum.digest('hex');
	}

/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = require("crypto");

/***/ },
/* 47 */
/***/ function(module, exports) {

	module.exports = require("humps");

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.collection = exports.book = exports.author = exports.tag = exports.progress = exports.file = exports.user = undefined;
	
	var _schema = __webpack_require__(49);
	
	var _schema2 = _interopRequireDefault(_schema);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _validator = __webpack_require__(36);
	
	var _validator2 = _interopRequireDefault(_validator);
	
	var _types = __webpack_require__(50);
	
	var _types2 = _interopRequireDefault(_types);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var user = exports.user = new _schema2.default('users', [{
	    name: 'username',
	    required: true,
	    unique: true,
	    validators: [{
	        fn: _validator2.default.lengthMin(5),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.minLength', 'name')
	    }, {
	        fn: _validator2.default.lengthMax(20),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.maxLength', 'name')
	    }]
	}, {
	    name: 'password',
	    required: true,
	    validators: [{
	        fn: _validator2.default.lengthMin(6),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.minLength', 'password')
	    }, {
	        fn: _validator2.default.lengthMax(20),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.maxLength', 'password')
	    }]
	}, {
	    name: 'email',
	    required: true,
	    unique: true,
	    validators: [{
	        fn: _validator2.default.isEmail,
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.invalidFormat', 'email')
	    }]
	}, {
	    name: 'role',
	    required: true
	}]);
	var file = exports.file = new _schema2.default('files', [{
	    name: 'filename',
	    required: true
	}, {
	    name: 'content',
	    required: true
	}, {
	    name: 'mimetype'
	}, {
	    name: 'size'
	}, {
	    name: 'encoding'
	}, {
	    name: 'hash',
	    unique: true
	}]);
	var progress = exports.progress = new _schema2.default('reading_progress', [{
	    name: 'percentage',
	    required: true,
	    type: _types2.default.Number
	}, {
	    name: 'user_id',
	    type: _types2.default.ID
	}, {
	    name: 'book_id',
	    type: _types2.default.ID
	}]);
	var tag = exports.tag = new _schema2.default('tags', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'slug',
	    unique: true
	}, {
	    name: 'description'
	}]);
	var author = exports.author = new _schema2.default('authors', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'slug',
	    unique: true,
	    validators: [{
	        fn: _validator2.default.isAlphanumeric,
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.alphanumeric', 'slug')
	    }]
	}, {
	    name: 'description'
	}]);
	var book = exports.book = new _schema2.default('books', [{
	    name: 'title',
	    required: true
	}, {
	    name: 'authors',
	    ref: author,
	    type: (0, _types.arrayOf)(_types2.default.ID)
	}, {
	    name: 'description'
	}, {
	    name: 'cover'
	}, {
	    name: 'file',
	    ref: file,
	    required: true
	}]);
	var collection = exports.collection = new _schema2.default('collections', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'items',
	    required: true,
	    ref: book,
	    type: (0, _types.arrayOf)(_types2.default.ID)
	}, {
	    name: 'description'
	}, {
	    name: 'creator',
	    required: true,
	    ref: user
	}]);

/***/ },
/* 49 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Schema = function () {
	    function Schema(baseTable, fieldDefinition) {
	        _classCallCheck(this, Schema);
	
	        this._fieldDefinition = fieldDefinition;
	        this._baseTable = baseTable;
	    }
	
	    _createClass(Schema, [{
	        key: "name",
	        get: function get() {
	            return this._baseTable;
	        }
	    }, {
	        key: "fields",
	        get: function get() {
	            return this._fieldDefinition;
	        }
	    }]);
	
	    return Schema;
	}();
	
	exports.default = Schema;

/***/ },
/* 50 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var DataType = exports.DataType = function () {
	    function DataType(mark, isTypeArray) {
	        _classCallCheck(this, DataType);
	
	        this.mark = mark;
	        this.isTypeArray = typeof isTypeArray === 'undefined' ? false : isTypeArray;
	    }
	
	    _createClass(DataType, [{
	        key: 'isArray',
	        value: function isArray() {
	            if (typeof this.isTypeArray === 'undefined' || !this.isTypeArray) {
	                return false;
	            }
	            return true;
	        }
	    }, {
	        key: 'equals',
	        value: function equals(type) {
	            return type.mark === this.mark && type.isArray() === this.isTypeArray;
	        }
	    }]);
	
	    return DataType;
	}();
	
	var arrayOf = exports.arrayOf = function arrayOf(type) {
	    return new DataType(type.mark, true);
	};
	var DataTypes = {
	    String: new DataType('STRING'),
	    Number: new DataType('NUMBER'),
	    ID: new DataType('ID')
	};
	exports.default = DataTypes;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = requirePermissionsOf;
	
	var _common = __webpack_require__(52);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * 权限等级排序
	 * admin | user | visitor | none
	 */
	function requirePermissionsOf(userRole) {
	    return function (req, res, next) {
	        switch (userRole) {
	            case _common.ROLES.ADMIN:
	                if (req.context.user.role === _common.ROLES.ADMIN) {
	                    next();
	                    break;
	                }
	                next(new _errors2.default.NoPermissionError((0, _i18n2.default)('errors.api.auth.needPermissionsOf', 'admin')));
	                break;
	            case _common.ROLES.USER:
	                if (req.context.user.role === _common.ROLES.USER || req.context.user.role === _common.ROLES.ADMIN) {
	                    next();
	                    break;
	                }
	                next(new _errors2.default.NoPermissionError((0, _i18n2.default)('errors.api.auth.loginRequired')));
	                break;
	            default:
	                if (userRole !== _common.ROLES.VISITOR) {
	                    next(new Error('Undefined role!'));
	                    break;
	                }
	                next();
	        }
	    };
	}

/***/ },
/* 52 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// 全局变量
	// 全局变量
	var ENABLE_SERVER_ROUTING = exports.ENABLE_SERVER_ROUTING = '__ENABLE_SERVER_ROUTING__';
	var INITIAL_STATE = exports.INITIAL_STATE = '__INITIAL_STATE__';
	// 其他常量
	var DOUBAN_API_ROOT = exports.DOUBAN_API_ROOT = 'https://api.douban.com/v2';
	var GITHUB_API_ROOT = exports.GITHUB_API_ROOT = 'https://api.github.com';
	var ROLES = exports.ROLES = {
	    USER: 'user',
	    ADMIN: 'admin',
	    VISITOR: 'visitor'
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleError;
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function handleError(error, req, res, next) {
	    var statusCode = error.statusCode || 500;
	    var errorJson = error;
	    if (Error.prototype.isPrototypeOf(error)) {
	        errorJson = {
	            message: error.message || (0, _i18n2.default)('errors.general.unknownErrorOccurred'),
	            type: error.name
	        };
	    }
	    if (!error.statusCode) {
	        _print2.default.error(error);
	    }
	    res.status(statusCode).send(_lodash2.default.omit(errorJson, ['statusCode', 'name', 'stack']));
	}

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var colors = __webpack_require__(55);
	var print = {
	    info: function info(message) {
	        console.info('\n' + colors.bgGreen.bold.white(' INFO '), colors.green(message));
	    },
	    test: function test(message) {
	        console.info('\n' + colors.bgCyan.bold.black(' INFO '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.cyan(message) : message);
	    },
	    warn: function warn(message) {
	        console.error('\n' + colors.bgYellow.bold.black(' WARNING '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.yellow(message) : message);
	    },
	    error: function error(message) {
	        console.error('\n' + colors.bgRed.bold.white(' ERROR '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.red(message) : message);
	    }
	};
	exports.default = print;

/***/ },
/* 55 */
/***/ function(module, exports) {

	module.exports = require("colors/safe");

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var API_ROOT = _helpers2.default.getApiRoot();
	function parsePagination(_ref, _ref2) {
	    var fullPath = _ref.fullPath;
	    var query = _ref.query;
	    var current = _ref2.current;
	    var all = _ref2.all;
	
	    var getLintByPage = function getLintByPage(page) {
	        return fullPath + '?' + (0, _parseUrlencoded2.default)(_lodash2.default.assign({}, query, { page: page }));
	    };
	    var links = {
	        first: getLintByPage(1),
	        last: getLintByPage(all),
	        prev: getLintByPage(current - 1),
	        next: getLintByPage(current + 1)
	    };
	    if (current > all) {
	        links.prev = links.last;
	    }
	    if (all === 1) {
	        if (current > 1) {
	            return _lodash2.default.omit(links, ['next']);
	        }
	        if (current === 1) {
	            return _lodash2.default.omit(links, ['prev', 'next']);
	        }
	    }
	    if (current <= 1) {
	        return _lodash2.default.omit(links, ['prev']);
	    }
	    if (current >= all) {
	        return _lodash2.default.omit(links, ['next']);
	    }
	    return links;
	}
	var handleSuccess = function handleSuccess(apiResults, req, res) {
	    if (req.method === 'POST') {
	        res.status(201).send(apiResults);
	    } else {
	        if (apiResults._pagination) {
	            var host = API_ROOT;
	            res.links(parsePagination({
	                fullPath: host + req.path,
	                query: req.query
	            }, apiResults._pagination));
	            res.status(200).send(apiResults.entities);
	            return false;
	        }
	        res.status(200).send(apiResults);
	    }
	};
	function handleJSONResponse(req, res, next) {
	    var apiResults = req.apiResults;
	
	    if (!apiResults) {
	        next(new Error('"apiResults" is not present!'));
	    }
	    apiResults.then(function (results) {
	        handleSuccess(results, req, res);
	    }, function (error) {
	        next(error);
	    });
	}
	exports.default = handleJSONResponse;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = parseUrlencoded;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// todo
	function parseUrlencoded(originalObj) {
	    if (_lodash2.default.isEmpty(originalObj)) {
	        return '';
	    }
	    var object = _lodash2.default.cloneDeep(originalObj);
	    var encodedurl = '';
	    for (var prop in object) {
	        if (_typeof(object[prop]) === 'object' && object[prop] !== null) {
	            object[prop] = object[prop].toString();
	        }
	        encodedurl = '' + encodedurl + prop + '=' + encodeURI(object[prop]) + '&';
	    }
	    return encodedurl.substr(0, encodedurl.length - 1);
	}

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _lifecircle = __webpack_require__(59);
	
	var lifecircle = _interopRequireWildcard(_lifecircle);
	
	var _getApiRoot = __webpack_require__(60);
	
	var _getApiRoot2 = _interopRequireDefault(_getApiRoot);
	
	var _isServerRoutingEnabled = __webpack_require__(61);
	
	var _isServerRoutingEnabled2 = _interopRequireDefault(_isServerRoutingEnabled);
	
	var _redirect = __webpack_require__(62);
	
	var _redirect2 = _interopRequireDefault(_redirect);
	
	var _isServerEnv = __webpack_require__(64);
	
	var _isServerEnv2 = _interopRequireDefault(_isServerEnv);
	
	var _print = __webpack_require__(65);
	
	var _print2 = _interopRequireDefault(_print);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = Object.assign({}, lifecircle, {
	    getApiRoot: _getApiRoot2.default,
	    isServerRoutingEnabled: _isServerRoutingEnabled2.default,
	    redirect: _redirect2.default,
	    isServerEnv: _isServerEnv2.default,
	    print: _print2.default
	});

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.onRoutingChange = undefined;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// 检查 store 里面的 routing 是否变化
	var onRoutingChange = exports.onRoutingChange = function onRoutingChange(fn) {
	    return function (nextProps, currentProps) {
	        if (!currentProps.routing) {
	            console.error('routing 需要现在组件 props 里面声明！');
	            return false;
	        }
	        var hasPathParamChanged = !_lodash2.default.isEqual(nextProps.routing, currentProps.routing);
	        if (hasPathParamChanged) {
	            fn(nextProps.routing);
	        }
	    };
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getApiRoot;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getApiRoot() {
	    var host = typeof window !== 'undefined' ? window.location.origin : 'http://localhost:3000';
	    return host + '/' + _app2.default.api.prefix;
	}

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isServerRoutingEnabled;
	
	var _common = __webpack_require__(52);
	
	function isServerRoutingEnabled() {
	    return Boolean(window[_common.ENABLE_SERVER_ROUTING]);
	}

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = redirect;
	
	var _isServerRoutingEnabled = __webpack_require__(61);
	
	var _isServerRoutingEnabled2 = _interopRequireDefault(_isServerRoutingEnabled);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function redirect(url) {
	    if ((0, _isServerRoutingEnabled2.default)()) {
	        _reactRouter.browserHistory.push(url);
	    } else {
	        _reactRouter.hashHistory.push(url);
	    }
	}

/***/ },
/* 63 */
/***/ function(module, exports) {

	module.exports = require("react-router");

/***/ },
/* 64 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isServerEnv;
	function isServerEnv() {
	    return typeof window === 'undefined';
	}

/***/ },
/* 65 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = print;
	function print() {
	    if (process.env.NODE_ENV !== 'production') {
	        var style = 'color: blue;';
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        var mergedArgs = [args.join(' ')];
	        var modArgs = mergedArgs.map(function (arg, index) {
	            if (index === 0) {
	                return '%c [DEV] ' + arg;
	            }
	        });
	        modArgs = modArgs.concat(style);
	        console.trace.apply(null, modArgs);
	    }
	}

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = logFile;
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _helpers = __webpack_require__(44);
	
	var helpers = _interopRequireWildcard(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var fileModel = new _model2.default(schemas.file);
	// @req#loggedFileId
	function logFile(req, res, next) {
	    var file = req.file;
	    var hash = helpers.computeHash(file.buffer);
	    var data = {
	        filename: file.originalname,
	        // 会被转换为 binData 的 BSON type
	        content: file.buffer,
	        mimetype: file.mimetype,
	        size: file.size,
	        encoding: file.encoding,
	        hash: hash
	    };
	    fileModel.findOne({ hash: hash }).then(function (result) {
	        // req.loggedFileId = result._id
	        // TODO: 404 处理
	        var err = new Error('File already exists!');
	        next(err);
	    }, function (notFoundError) {
	        // TODO: 不使用 404
	        // 为了确定是未找到而不是其他错误需要做额外的判断
	        fileModel.add(data).then(function (result) {
	            var loggedFileId = _lodash2.default.get(result, ['ops', 0, '_id']);
	            if (!loggedFileId) {
	                // TODO
	                // throw new Error('File not Found!')
	                var err = new Error('File not Found!');
	                next(err);
	            } else {
	                req.loggedFileId = loggedFileId;
	                next();
	            }
	        }).catch(function (error) {
	            next(error);
	        });
	    });
	}

/***/ },
/* 67 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = prepareApi;
	function prepareApi(req, res, next) {
	    req.__apiTouched = true;
	    next();
	}

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleApiNotFound;
	
	var _helpers = __webpack_require__(44);
	
	function handleApiNotFound(req, res, next) {
	    if (!req.__apiTouched) {
	        next((0, _helpers.notFoundError)('API'));
	    }
	    next();
	}

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.listCollections = exports.delFile = exports.readFile = exports.setReadingProgress = exports.getReadingProgress = exports.listShelfBooks = exports.addUser = exports.findUser = exports.removeBook = exports.editBookMeta = exports.listBooks = exports.resolveBookContent = exports.findBook = exports.addBook = exports.user = exports.tag = exports.book = exports.collection = exports.author = undefined;
	
	var _api = __webpack_require__(70);
	
	var api = _interopRequireWildcard(_api);
	
	var _makeBasicEndpoint = __webpack_require__(80);
	
	var _makeBasicEndpoint2 = _interopRequireDefault(_makeBasicEndpoint);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// basic endpoints
	var author = exports.author = (0, _makeBasicEndpoint2.default)(api.author);
	var collection = exports.collection = (0, _makeBasicEndpoint2.default)(api.collection);
	var book = exports.book = (0, _makeBasicEndpoint2.default)(api.book);
	var tag = exports.tag = (0, _makeBasicEndpoint2.default)(api.tag);
	var user = exports.user = (0, _makeBasicEndpoint2.default)(api.user);
	// common endpoints
	// books
	var addBook = exports.addBook = function addBook(req, res, next) {
	    req.apiResults = api.addBook(req.body, req.loggedFileId);
	    next();
	};
	var findBook = exports.findBook = function findBook(req, res, next) {
	    req.apiResults = api.findBook(req.params.book);
	    next();
	};
	var resolveBookContent = exports.resolveBookContent = function resolveBookContent(req, res, next) {
	    req.apiResults = api.resolveBookContent(req.params.book);
	    next();
	};
	var listBooks = exports.listBooks = function listBooks(req, res, next) {
	    req.apiResults = api.listBooks(req.query.page || 1);
	    next();
	};
	var editBookMeta = exports.editBookMeta = function editBookMeta(req, res, next) {
	    req.apiResults = api.editBookMeta(req.params.book, req.body);
	    next();
	};
	var removeBook = exports.removeBook = function removeBook(req, res, next) {
	    req.apiResults = api.removeBook(req.params.book);
	    next();
	};
	// users
	var findUser = exports.findUser = function findUser(req, res, next) {
	    req.apiResults = api.findUser(req.context.user.id);
	    next();
	};
	var addUser = exports.addUser = function addUser(req, res, next) {
	    req.apiResults = api.addUser(req.body);
	    next();
	};
	// user
	var listShelfBooks = exports.listShelfBooks = function listShelfBooks(req, res, next) {
	    req.apiResults = api.listShelfBooks(req.context.user.id, req.query.page || 1);
	    next();
	};
	var getReadingProgress = exports.getReadingProgress = function getReadingProgress(req, res, next) {
	    req.apiResults = api.getReadingProgress(req.context.user.id, req.params.book);
	    next();
	};
	var setReadingProgress = exports.setReadingProgress = function setReadingProgress(req, res, next) {
	    req.apiResults = api.setReadingProgress(req.context.user.id, req.params.book, req.body);
	    next();
	};
	// file
	var readFile = exports.readFile = function readFile(req, res, next) {
	    req.apiResults = api.readFile(req.params.file);
	    next();
	};
	var delFile = exports.delFile = function delFile(req, res, next) {
	    req.apiResults = api.delFile(req.params.file);
	    next();
	};
	// other
	var listCollections = exports.listCollections = function listCollections(req, res, next) {
	    req.apiResults = api.listCollection(req.query.page || 1);
	    next();
	};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.user = exports.tag = exports.book = exports.collection = exports.author = undefined;
	
	var _file = __webpack_require__(71);
	
	Object.keys(_file).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _file[key];
	    }
	  });
	});
	
	var _books = __webpack_require__(72);
	
	Object.keys(_books).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _books[key];
	    }
	  });
	});
	
	var _user = __webpack_require__(76);
	
	Object.keys(_user).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _user[key];
	    }
	  });
	});
	
	var _users = __webpack_require__(77);
	
	Object.keys(_users).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _users[key];
	    }
	  });
	});
	
	var _collections = __webpack_require__(78);
	
	Object.keys(_collections).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _collections[key];
	    }
	  });
	});
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _basicApi = __webpack_require__(79);
	
	var _basicApi2 = _interopRequireDefault(_basicApi);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var author = exports.author = new _basicApi2.default(schemas.author);
	var collection = exports.collection = new _basicApi2.default(schemas.collection);
	var book = exports.book = new _basicApi2.default(schemas.book);
	var tag = exports.tag = new _basicApi2.default(schemas.tag);
	var user = exports.user = new _basicApi2.default(schemas.user);

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.readFile = readFile;
	exports.delFile = delFile;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var fileModel = new _model2.default(schemas.file);
	function readFile(fileId, parser) {
	    return fileModel.findOne(fileId).then(function (fileResult) {
	        if (parser && typeof parser === 'function') {
	            var binaryFile = fileResult.content.buffer;
	            return parser(binaryFile).then(function (content) {
	                return _lodash2.default.assign({}, fileResult, {
	                    content: content
	                });
	            });
	        }
	        return fileResult;
	    });
	}
	// TODO
	function delFile(fileId) {
	    return fileModel.findOne(fileId).then(function (resultFile) {
	        return fileModel.remove(fileId);
	    }, function (error) {
	        if (error.type === 'NotFoundError') {
	            return {
	                message: 'File record not found, probably because it doesn\'t exist, or hasn\'t been created in the first place!'
	            };
	        }
	        return Promise.reject(error);
	    });
	}

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.findBook = findBook;
	exports.addBook = addBook;
	exports.editBookMeta = editBookMeta;
	exports.resolveBookContent = resolveBookContent;
	exports.listBooks = listBooks;
	exports.listShelfBooks = listShelfBooks;
	exports.removeBook = removeBook;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _paginate = __webpack_require__(43);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _helpers = __webpack_require__(44);
	
	var _file2 = __webpack_require__(71);
	
	var _parsers = __webpack_require__(73);
	
	var _parsers2 = _interopRequireDefault(_parsers);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) {
	            try {
	                step(generator.next(value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function rejected(value) {
	            try {
	                step(generator["throw"](value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function step(result) {
	            result.done ? resolve(result.value) : new P(function (resolve) {
	                resolve(result.value);
	            }).then(fulfilled, rejected);
	        }
	        step((generator = generator.apply(thisArg, _arguments)).next());
	    });
	};
	
	var bookModel = new _model2.default(schemas.book);
	var progressModel = new _model2.default(schemas.progress);
	var authorModel = new _model2.default(schemas.author);
	/**
	 * helpers
	 */
	function getAuthorId(authorName) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
	        var authorEntity, result;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	            while (1) {
	                switch (_context.prev = _context.next) {
	                    case 0:
	                        _context.prev = 0;
	                        _context.next = 3;
	                        return authorModel.findOne({ name: authorName });
	
	                    case 3:
	                        authorEntity = _context.sent;
	                        return _context.abrupt('return', authorEntity._id);
	
	                    case 7:
	                        _context.prev = 7;
	                        _context.t0 = _context['catch'](0);
	                        _context.next = 11;
	                        return authorModel.add({
	                            name: authorName
	                        });
	
	                    case 11:
	                        result = _context.sent;
	                        return _context.abrupt('return', result.ops[0]._id);
	
	                    case 13:
	                    case 'end':
	                        return _context.stop();
	                }
	            }
	        }, _callee, this, [[0, 7]]);
	    }));
	}
	/**
	 * apis
	 */
	function findBook(id) {
	    return bookModel.findOne(id).then(function (result) {
	        var data = _lodash2.default.omit(result, ['file']);
	        var contentType = 'txt';
	        if (!result.file) {
	            contentType = '';
	        } else if (result.file.mimetype === 'application/epub+zip') {
	            contentType = 'epub';
	        }
	        return _lodash2.default.assign({}, data, {
	            content_type: contentType
	        });
	    });
	}
	function addBook(meta, fileId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee3() {
	        var mergeBookMeta, doSave, fileResult, file, parsedContent, authorName, _file, fileContentArray, title, _authorName;
	
	        return regeneratorRuntime.wrap(function _callee3$(_context3) {
	            while (1) {
	                switch (_context3.prev = _context3.next) {
	                    case 0:
	                        doSave = function doSave(title, authorName) {
	                            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee2() {
	                                var authorId, bookData;
	                                return regeneratorRuntime.wrap(function _callee2$(_context2) {
	                                    while (1) {
	                                        switch (_context2.prev = _context2.next) {
	                                            case 0:
	                                                _context2.next = 2;
	                                                return getAuthorId(authorName);
	
	                                            case 2:
	                                                authorId = _context2.sent;
	                                                bookData = mergeBookMeta(title, authorId);
	                                                return _context2.abrupt('return', bookModel.add(bookData));
	
	                                            case 5:
	                                            case 'end':
	                                                return _context2.stop();
	                                        }
	                                    }
	                                }, _callee2, this);
	                            }));
	                        };
	
	                        mergeBookMeta = function mergeBookMeta(title, authorId) {
	                            return _lodash2.default.assign({}, {
	                                title: title,
	                                authors: [authorId],
	                                file: fileId
	                            }, meta);
	                        };
	
	                        if (!fileId) {
	                            _context3.next = 26;
	                            break;
	                        }
	
	                        _context3.next = 5;
	                        return (0, _file2.readFile)(fileId);
	
	                    case 5:
	                        fileResult = _context3.sent;
	
	                        if (!(fileResult.mimetype === 'application/epub+zip')) {
	                            _context3.next = 15;
	                            break;
	                        }
	
	                        _context3.next = 9;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.epub);
	
	                    case 9:
	                        file = _context3.sent;
	                        parsedContent = file.content;
	                        authorName = parsedContent.meta.author;
	                        return _context3.abrupt('return', doSave(parsedContent.meta.title, authorName));
	
	                    case 15:
	                        if (!(fileResult.mimetype === 'text/plain')) {
	                            _context3.next = 25;
	                            break;
	                        }
	
	                        _context3.next = 18;
	                        return (0, _file2.readFile)(fileId);
	
	                    case 18:
	                        _file = _context3.sent;
	                        fileContentArray = _file.content.buffer.toString('utf-8').split('\n');
	                        title = fileContentArray[0];
	                        _authorName = fileContentArray[1];
	                        return _context3.abrupt('return', doSave(title, _authorName));
	
	                    case 25:
	                        return _context3.abrupt('return', Promise.reject(new Error('Unsupported file type!')));
	
	                    case 26:
	                        return _context3.abrupt('return', bookModel.add(meta));
	
	                    case 27:
	                    case 'end':
	                        return _context3.stop();
	                }
	            }
	        }, _callee3, this);
	    }));
	}
	function editBookMeta(bookId, meta) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee4() {
	        var authorId, bookMeta;
	        return regeneratorRuntime.wrap(function _callee4$(_context4) {
	            while (1) {
	                switch (_context4.prev = _context4.next) {
	                    case 0:
	                        _context4.next = 2;
	                        return bookModel.findOne(bookId, true);
	
	                    case 2:
	                        _context4.next = 4;
	                        return getAuthorId(meta.authors);
	
	                    case 4:
	                        authorId = _context4.sent;
	                        bookMeta = __assign({}, meta, {
	                            authors: [authorId]
	                        });
	                        return _context4.abrupt('return', bookModel.update(bookId, bookMeta, {
	                            upsert: false
	                        }));
	
	                    case 7:
	                    case 'end':
	                        return _context4.stop();
	                }
	            }
	        }, _callee4, this);
	    }));
	}
	function resolveBookContent(bookId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee5() {
	        var bookEntity, fileId, bookContent, fileResult, _fileResult;
	
	        return regeneratorRuntime.wrap(function _callee5$(_context5) {
	            while (1) {
	                switch (_context5.prev = _context5.next) {
	                    case 0:
	                        _context5.next = 2;
	                        return bookModel.findOne(bookId);
	
	                    case 2:
	                        bookEntity = _context5.sent;
	                        fileId = bookEntity.file._id;
	                        bookContent = void 0;
	
	                        if (fileId) {
	                            _context5.next = 7;
	                            break;
	                        }
	
	                        return _context5.abrupt('return', Promise.reject((0, _helpers.notFoundError)('book')));
	
	                    case 7:
	                        if (!(bookEntity.file.mimetype === 'application/epub+zip')) {
	                            _context5.next = 14;
	                            break;
	                        }
	
	                        _context5.next = 10;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.epub);
	
	                    case 10:
	                        fileResult = _context5.sent;
	
	                        bookContent = _lodash2.default.omit(fileResult.content, ['meta']);
	                        _context5.next = 22;
	                        break;
	
	                    case 14:
	                        if (!(bookEntity.file.mimetype === 'text/plain')) {
	                            _context5.next = 21;
	                            break;
	                        }
	
	                        _context5.next = 17;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.txtContent);
	
	                    case 17:
	                        _fileResult = _context5.sent;
	
	                        bookContent = _fileResult.content;
	                        _context5.next = 22;
	                        break;
	
	                    case 21:
	                        return _context5.abrupt('return', Promise.reject(new Error('Unsupported file type!')));
	
	                    case 22:
	                        return _context5.abrupt('return', _lodash2.default.assign({}, bookContent, { _id: bookId, content_id: fileId }));
	
	                    case 23:
	                    case 'end':
	                        return _context5.stop();
	                }
	            }
	        }, _callee5, this);
	    }));
	}
	function listBooks(page) {
	    return bookModel.list({
	        page: page,
	        disablePagination: _lodash2.default.isNil(page),
	        mapping: function mapping(entity) {
	            return _lodash2.default.omit(entity, ['content', 'file']);
	        }
	    });
	}
	function listShelfBooks(userId, page) {
	    return progressModel.listRaw({ query: { user_id: userId } }).then(function (results) {
	        if (results.length === 0) {
	            return results;
	        }
	        return Promise.all(results.sort(_utils2.default.sortByDate()).map(function (result) {
	            return bookModel.findOne(result.book_id, true).then(function (res) {
	                return res;
	            }, function (error) {
	                // 如果错误不是 404 也输出空的 entity
	                return bookModel.outputEmpty(result.book_id);
	            });
	        })).then(function (res) {
	            return (0, _paginate2.default)(res.map(function (entity) {
	                return _lodash2.default.omit(entity, ['content']);
	            }), {
	                page: page
	            });
	        });
	    });
	}
	function removeBook(bookId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee6() {
	        var book, fileId;
	        return regeneratorRuntime.wrap(function _callee6$(_context6) {
	            while (1) {
	                switch (_context6.prev = _context6.next) {
	                    case 0:
	                        _context6.next = 2;
	                        return bookModel.findOne(bookId, true);
	
	                    case 2:
	                        book = _context6.sent;
	                        fileId = book.file;
	                        _context6.next = 6;
	                        return bookModel.remove(bookId);
	
	                    case 6:
	                        return _context6.abrupt('return', (0, _file2.delFile)(fileId));
	
	                    case 7:
	                    case 'end':
	                        return _context6.stop();
	                }
	            }
	        }, _callee6, this);
	    }));
	}

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _simpleEpubParser = __webpack_require__(74);
	
	var _simpleEpubParser2 = _interopRequireDefault(_simpleEpubParser);
	
	var _txtContent = __webpack_require__(75);
	
	var _txtContent2 = _interopRequireDefault(_txtContent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = { epub: _simpleEpubParser2.default, txtContent: _txtContent2.default };

/***/ },
/* 74 */
/***/ function(module, exports) {

	module.exports = require("simple-epub-parser");

/***/ },
/* 75 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = txtContent;
	var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) {
	            try {
	                step(generator.next(value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function rejected(value) {
	            try {
	                step(generator["throw"](value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function step(result) {
	            result.done ? resolve(result.value) : new P(function (resolve) {
	                resolve(result.value);
	            }).then(fulfilled, rejected);
	        }
	        step((generator = generator.apply(thisArg, _arguments)).next());
	    });
	};
	function txtContent(target) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
	        var nav, content, buffer, flesh;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	            while (1) {
	                switch (_context.prev = _context.next) {
	                    case 0:
	                        nav = [{
	                            ref: 'part01',
	                            label: '第一章节',
	                            index: 0
	                        }];
	                        content = void 0;
	
	                        if (!(typeof target === 'string')) {
	                            _context.next = 7;
	                            break;
	                        }
	
	                        buffer = new Buffer(target, 'binary');
	
	                        content = buffer.toString();
	                        _context.next = 12;
	                        break;
	
	                    case 7:
	                        if (!Buffer.isBuffer(target)) {
	                            _context.next = 11;
	                            break;
	                        }
	
	                        content = target.toString();
	                        _context.next = 12;
	                        break;
	
	                    case 11:
	                        throw new Error('Only string or buffer is supported!');
	
	                    case 12:
	                        flesh = [{
	                            src: 'part01',
	                            markdown: content
	                        }];
	                        return _context.abrupt('return', { nav: nav, flesh: flesh });
	
	                    case 14:
	                    case 'end':
	                        return _context.stop();
	                }
	            }
	        }, _callee, this);
	    }));
	}

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getReadingProgress = getReadingProgress;
	exports.setReadingProgress = setReadingProgress;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var progressModel = new _model2.default(schemas.progress);
	function getReadingProgress(userId, bookId) {
	    var query = _humps2.default.decamelizeKeys({ userId: userId, bookId: bookId });
	    return progressModel.list({ disablePagination: true, raw: true, query: query }).then(function (res) {
	        if (res.length === 0) {
	            return progressModel.outputEmpty({
	                user_id: userId,
	                book_id: bookId
	            });
	        }
	        return res[0];
	    });
	}
	function setReadingProgress(userId, bookId, data) {
	    var query = _humps2.default.decamelizeKeys({ userId: userId, bookId: bookId });
	    return progressModel.update(query, data, {
	        upsert: true
	    });
	}

/***/ },
/* 77 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.findUser = findUser;
	exports.addUser = addUser;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var userModel = new _model2.default(schemas.user);
	function findUser(id) {
	    return userModel.findOne(id).then(function (entity) {
	        return _lodash2.default.omit(entity, ['password']);
	    });
	}
	function addUser(userInfo) {
	    return userModel.add(_lodash2.default.assign({}, userInfo, {
	        role: _common.ROLES.USER
	    }));
	}

/***/ },
/* 78 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.listCollection = listCollection;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var collectionModel = new _model2.default(schemas.collection);
	function listCollection(page) {
	    return collectionModel.list({
	        page: page,
	        disablePagination: _lodash2.default.isNil(page),
	        mapping: function mapping(entity) {
	            return _lodash2.default.assign({}, entity, {
	                items: entity['items'].map(function (item) {
	                    return _lodash2.default.omit(item, 'content');
	                })
	            });
	        }
	    });
	}

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BasicApi = function () {
	    function BasicApi(schema) {
	        _classCallCheck(this, BasicApi);
	
	        this._schema = schema;
	        this._model = new _model2.default(schema);
	    }
	
	    _createClass(BasicApi, [{
	        key: 'findOne',
	        value: function findOne(id) {
	            return this._model.findOne(id);
	        }
	    }, {
	        key: 'list',
	        value: function list(page, keyword) {
	            return this._model.list({
	                page: page,
	                disablePagination: _lodash2.default.isNil(page),
	                // TODO
	                filter: function filter(entity) {
	                    return true;
	                }
	            });
	        }
	    }, {
	        key: 'add',
	        value: function add(data) {
	            return this._model.add(data);
	        }
	    }, {
	        key: 'update',
	        value: function update(id, data) {
	            // todo
	            // 无法提前知道是否为 upsert，所以无法预先决定是否验证 fields
	            // 可能会造成 upsert 的数据 fields 不全的问题
	            return this._model.update(id, data);
	        }
	    }, {
	        key: 'remove',
	        value: function remove(id) {
	            return this._model.remove(id);
	        }
	    }]);
	
	    return BasicApi;
	}();
	
	exports.default = BasicApi;

/***/ },
/* 80 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var makeBasicEndpoint = function makeBasicEndpoint(apiFns) {
	    var findOne = function findOne(req, res, next) {
	        req.apiResults = apiFns.findOne(req.params.id);
	        next();
	    };
	    var list = function list(req, res, next) {
	        req.apiResults = apiFns.list(req.query.page || 1);
	        next();
	    };
	    var add = function add(req, res, next) {
	        req.apiResults = apiFns.add(req.body);
	        next();
	    };
	    var update = function update(req, res, next) {
	        req.apiResults = apiFns.update(req.params.id, req.body);
	        next();
	    };
	    var remove = function remove(req, res, next) {
	        req.apiResults = apiFns.remove(req.params.id);
	        next();
	    };
	    return { findOne: findOne, list: list, add: add, update: update, remove: remove };
	};
	exports.default = makeBasicEndpoint;

/***/ },
/* 81 */
/***/ function(module, exports) {

	module.exports = require("multer");

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _options = __webpack_require__(83);
	
	var _options2 = _interopRequireDefault(_options);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _createRoutes = __webpack_require__(86);
	
	var _createRoutes2 = _interopRequireDefault(_createRoutes);
	
	var _render = __webpack_require__(359);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PROD_ERROR_MSG = '稍安勿躁，工程师正在解决问题 ...';
	var isRoot = function isRoot(url) {
	    var urlParts = url.split('?')[0].split('/');
	    if (urlParts.length !== 2) {
	        return false;
	    }
	    if (_lodash2.default.last(urlParts) !== '') {
	        return false;
	    }
	    return true;
	};
	function pages(req, res) {
	    // 服务端路由关闭（仅限开发模式）
	    if (_options2.default.route === false) {
	        if (!isRoot(req.url)) {
	            res.status(404).send('\n        <div style="margin: 60px auto; width: 600px; padding: 5px 20px; border: 1px solid #222;">\n          <h1 style="font-weight: bold; font-size: 22px; margin: 10px 0;">404 Not Found</h1>\n          <p style="margin: 10px 0;">Dev mode with server routing disabled</p>\n        </div>\n      ');
	            return false;
	        }
	        (0, _render2.default)().then(function (result) {
	            res.send(result);
	        });
	        return false;
	    }
	    var isProd = _options2.default.production;
	    try {
	        (0, _render2.default)({
	            reqUrl: req.url,
	            routes: (0, _createRoutes2.default)({ request: req, response: res }),
	            isProd: isProd,
	            fetchData: _options2.default.render,
	            isHot: _options2.default.hot,
	            userSession: req.context.user
	        }).then(function (_ref) {
	            var html = _ref.html;
	            var redirectLocation = _ref.redirectLocation;
	            var statusCode = _ref.statusCode;
	
	            if (redirectLocation) {
	                res.redirect(302, redirectLocation.pathname + redirectLocation.search);
	            }
	            res.status(statusCode).send(html);
	        });
	    } catch (error) {
	        var errorMsg = isProd ? PROD_ERROR_MSG : error.message;
	        var htmlString = (0, _render.render500)(errorMsg, isProd);
	        res.status(500).send(htmlString);
	    }
	}
	exports.default = pages;

/***/ },
/* 83 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _parsedArgv = __webpack_require__(84);
	
	var _parsedArgv2 = _interopRequireDefault(_parsedArgv);
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Server 支持的选项
	 * --hot 热重载
	 * --production 生产环境
	 * --noRender 服务端渲染
	 * --noRoute 服务端路由
	 */
	var app = (0, _express2.default)();
	var appEnv = app.get('env');
	var render = !Boolean(_parsedArgv2.default['noRender']);
	var hot = Boolean(_parsedArgv2.default['hot']);
	var route = !Boolean(_parsedArgv2.default['noRoute']);
	if (route === false) {
	    render = false;
	}
	var production = Boolean(_parsedArgv2.default['production']);
	if (appEnv === 'production') {
	    production = true;
	}
	var options = {
	    hot: hot,
	    render: render,
	    route: route,
	    production: production
	};
	exports.default = options;

/***/ },
/* 84 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _minimist = __webpack_require__(85);
	
	var _minimist2 = _interopRequireDefault(_minimist);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var argv = (0, _minimist2.default)(process.argv.slice(2));
	exports.default = argv;

/***/ },
/* 85 */
/***/ function(module, exports) {

	module.exports = require("minimist");

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Master = __webpack_require__(88);
	
	var _Master2 = _interopRequireDefault(_Master);
	
	var _App = __webpack_require__(167);
	
	var _App2 = _interopRequireDefault(_App);
	
	var _Console = __webpack_require__(191);
	
	var _Console2 = _interopRequireDefault(_Console);
	
	var _reactRouter = __webpack_require__(63);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	var createRoutes = function createRoutes() {
	    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var request = context.request;
	    var response = context.response;
	
	    var handleConsoleEnter = function handleConsoleEnter(nextState, replace, callback) {
	        if (request) {
	            // 服务端校验方式
	            var role = request.context.user.role;
	
	            if (role !== _common.ROLES.ADMIN) {
	                response.redirect('/');
	            }
	            callback();
	        } else {
	            // 客户端校验方式
	            try {
	                _api2.default.auth().then(function (res) {
	                    if (res.json.role !== _common.ROLES.ADMIN) {
	                        replace('/');
	                    }
	                    callback();
	                });
	            } catch (error) {
	                alert('服务器异常，请稍后再试！');
	                console.error(error);
	            }
	        }
	    };
	    return _react2.default.createElement(_reactRouter.Route, { path: "/", component: _Master2.default }, _react2.default.createElement(_reactRouter.Route, __assign({ path: "viewer/book/:id" }, __webpack_require__(210))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "test" }, __webpack_require__(262))), _react2.default.createElement(_reactRouter.Route, { component: _App2.default }, _react2.default.createElement(_reactRouter.IndexRoute, __assign({}, __webpack_require__(264))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "browse" }, __webpack_require__(285))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "book/:id" }, __webpack_require__(289))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections" }, __webpack_require__(293))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections/:id" }, __webpack_require__(301))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "signin" }, __webpack_require__(305))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "signup" }, __webpack_require__(309))), _react2.default.createElement(_reactRouter.Route, { path: "user" }, _react2.default.createElement(_reactRouter.IndexRedirect, { to: "/user/profile" }), _react2.default.createElement(_reactRouter.Route, __assign({ path: "shelf" }, __webpack_require__(312))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "preference" }, __webpack_require__(319))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "profile" }, __webpack_require__(324))))), _react2.default.createElement(_reactRouter.Route, { onEnter: handleConsoleEnter, path: "console", component: _Console2.default }, _react2.default.createElement(_reactRouter.IndexRedirect, { to: "/console/books" }), _react2.default.createElement(_reactRouter.Route, __assign({ path: "books" }, __webpack_require__(328))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "users" }, __webpack_require__(344))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "books/new" }, __webpack_require__(346))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections/new" }, __webpack_require__(350)))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "*" }, __webpack_require__(353))));
	};
	exports.default = createRoutes;

/***/ },
/* 87 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 88 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _actions = __webpack_require__(90);
	
	var _Alert = __webpack_require__(116);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _Modal = __webpack_require__(134);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Master = function (_Component) {
	    _inherits(Master, _Component);
	
	    _createClass(Master, null, [{
	        key: 'fetchData',
	        value: function fetchData(_ref) {
	            var store = _ref.store;
	            var userSession = _ref.userSession;
	
	            return store.dispatch((0, _actions.userAuth)(userSession));
	        }
	    }]);
	
	    function Master(props) {
	        _classCallCheck(this, Master);
	
	        return _possibleConstructorReturn(this, (Master.__proto__ || Object.getPrototypeOf(Master)).call(this, props));
	    }
	
	    _createClass(Master, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var hasNewErrorMsg = this.props.errorMessage.length !== nextProps.errorMessage.length;
	            var routerChanged = nextProps.routing.locationBeforeTransitions.pathname !== this.props.routing.locationBeforeTransitions.pathname;
	            if (hasNewErrorMsg) {
	                this.props.sendNotification(_lodash2.default.last(nextProps.errorMessage).toString(), 'error', 0);
	            }
	            if (routerChanged) {
	                // 返回顶部
	                window.document.body.scrollTop = 0;
	            }
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.props.userAuth();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props;
	            var confirmModal = _props.confirmModal;
	            var closeConfirmModal = _props.closeConfirmModal;
	            var modal = _props.modal;
	            var closeModal = _props.closeModal;
	
	            return _react2.default.createElement("div", { className: "app-root" }, _react2.default.createElement(_Modal.ConfirmModal, { open: confirmModal.open, title: confirmModal.title, onConfirm: confirmModal.onConfirm, onRequestClose: closeConfirmModal, width: 500 }, confirmModal.content), _react2.default.createElement(_Modal.ModalPlus, { open: modal.open, width: 500, onRequestClose: closeModal, title: modal.title }, modal.content), this.props.notifications.filter(function (noti) {
	                return noti.visible;
	            }).length > 0 && _react2.default.createElement(_Alert.Alerts, { onRequestClose: this.props.hideNotification, messages: this.props.notifications.map(function (noti) {
	                    return {
	                        content: noti.message || '发生错误！',
	                        type: noti.type,
	                        visible: noti.visible,
	                        id: noti.id
	                    };
	                }) }), this.props.children);
	        }
	    }]);
	
	    return Master;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notifications: state.components.notifications,
	        errorMessage: state.errorMessage,
	        confirmModal: state.components.confirmModal,
	        modal: state.components.modal,
	        routing: state.routing,
	        session: state.session
	    };
	}, { sendNotification: _actions.sendNotification, hideNotification: _actions.hideNotification, closeConfirmModal: _actions.closeConfirmModal, userAuth: _actions.userAuth, closeModal: _actions.closeModal })(Master);

/***/ },
/* 89 */
/***/ function(module, exports) {

	module.exports = require("react-redux");

/***/ },
/* 90 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.resetForm = exports.initializeForm = undefined;
	
	var _api = __webpack_require__(91);
	
	Object.keys(_api).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _api[key];
	    }
	  });
	});
	
	var _common = __webpack_require__(107);
	
	Object.keys(_common).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _common[key];
	    }
	  });
	});
	
	var _test = __webpack_require__(108);
	
	Object.keys(_test).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _test[key];
	    }
	  });
	});
	
	var _viewer = __webpack_require__(109);
	
	Object.keys(_viewer).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _viewer[key];
	    }
	  });
	});
	
	var _betterReduxForm = __webpack_require__(114);
	
	// form
	var initializeForm = exports.initializeForm = _betterReduxForm.actions.initialize;
	var resetForm = exports.resetForm = _betterReduxForm.actions.reset;

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOAD_ACTIONS = exports.loadBookProgress = exports.progress = exports.userLogout = exports.logout = exports.loadUsers = exports.users = exports.loadBooks = exports.books = exports.loadBookContent = exports.bookContent = exports.loadBook = exports.book = exports.removeEntity = undefined;
	exports.fetchAuthors = fetchAuthors;
	exports.fetchCollections = fetchCollections;
	exports.fetchCollection = fetchCollection;
	exports.searchDoubanBooks = searchDoubanBooks;
	exports.fetchProfile = fetchProfile;
	exports.userAuth = userAuth;
	exports.fetchShelf = fetchShelf;
	
	var _utils = __webpack_require__(92);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _schemas = __webpack_require__(103);
	
	var _schemas2 = _interopRequireDefault(_schemas);
	
	var _common = __webpack_require__(52);
	
	var _utils3 = __webpack_require__(105);
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var removeEntity = exports.removeEntity = function removeEntity(name, id) {
	    return { type: ActionTypes.REMOVE_ENTITY, name: name, id: id };
	};
	var book = exports.book = (0, _utils3.createActionEntity)(ActionTypes.BOOK);
	var loadBook = exports.loadBook = function loadBook(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK, { id: id });
	};
	var bookContent = exports.bookContent = (0, _utils3.createActionEntity)(ActionTypes.BOOK_CONTENT);
	var loadBookContent = exports.loadBookContent = function loadBookContent(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK_CONTENT, { id: id });
	};
	var books = exports.books = (0, _utils3.createActionEntity)(ActionTypes.BOOKS);
	var loadBooks = exports.loadBooks = function loadBooks(options, key) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOKS, { options: options, key: key });
	};
	var users = exports.users = (0, _utils3.createActionEntity)(ActionTypes.USERS);
	var loadUsers = exports.loadUsers = function loadUsers(options) {
	    return (0, _utils3.action)(ActionTypes.LOAD_USERS, { options: options });
	};
	var logout = exports.logout = (0, _utils3.createActionEntity)(ActionTypes.LOGOUT);
	var userLogout = exports.userLogout = function userLogout() {
	    return (0, _utils3.action)(ActionTypes.USER_LOGOUT);
	};
	var progress = exports.progress = (0, _utils3.createActionEntity)(ActionTypes.BOOK_PROGRESS);
	var loadBookProgress = exports.loadBookProgress = function loadBookProgress(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK_PROGRESS, { id: id });
	};
	// define load actions handled in sagas
	var LOAD_ACTIONS = exports.LOAD_ACTIONS = [ActionTypes.LOAD_BOOK, ActionTypes.LOAD_BOOK_CONTENT, ActionTypes.LOAD_BOOKS, ActionTypes.LOAD_USERS];
	/**
	 * legacy call api actions
	 */
	function fetchAuthors(options) {
	    var CALL_API = {
	        types: [ActionTypes.AUTHORS.REQUEST, ActionTypes.AUTHORS.SUCCESS, ActionTypes.AUTHORS.FAILURE],
	        endpoint: 'authors?' + _utils2.default.parseUrlencoded(options),
	        schema: _schemas2.default.AUTHOR_ARRAY,
	        pagination: {
	            name: 'authors',
	            q: options.q
	        }
	    };
	    return { CALL_API: CALL_API };
	}
	function fetchCollections() {
	    var flowType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'newest';
	
	    return {
	        flowType: flowType,
	        CALL_API: {
	            types: [ActionTypes.COLLECTIONS.REQUEST, ActionTypes.COLLECTIONS.SUCCESS, ActionTypes.COLLECTIONS.FAILURE],
	            endpoint: 'collections',
	            schema: _schemas2.default.COLLECTION_ARRAY
	        }
	    };
	}
	function fetchCollection(collectionId) {
	    return {
	        collectionId: collectionId,
	        CALL_API: {
	            types: [ActionTypes.COLLECTION.REQUEST, ActionTypes.COLLECTION.SUCCESS, ActionTypes.COLLECTION.FAILURE],
	            endpoint: 'collections/' + collectionId,
	            schema: _schemas2.default.COLLECTION
	        }
	    };
	}
	function searchDoubanBooks(q) {
	    var CALL_API = {
	        types: [ActionTypes.DOUBAN_BOOKS.REQUEST, ActionTypes.DOUBAN_BOOKS.SUCCESS, ActionTypes.DOUBAN_BOOKS.FAILURE],
	        endpoint: 'book/search?count=10&q=' + q,
	        apiUrl: _common.DOUBAN_API_ROOT,
	        schema: _schemas2.default.DOUBAN_BOOK_SEARCH_RESULTS,
	        options: { useJsonp: true },
	        pagination: {
	            name: 'doubanBooks',
	            q: q
	        }
	    };
	    return { q: q, CALL_API: CALL_API };
	}
	function fetchProfile() {
	    var CALL_API = {
	        types: [ActionTypes.PROFILE.REQUEST, ActionTypes.PROFILE.SUCCESS, ActionTypes.PROFILE.FAILURE],
	        endpoint: 'user/profile',
	        schema: _schemas2.default.PROFILE
	    };
	    return { CALL_API: CALL_API };
	}
	function userAuth(userSession) {
	    // 服务端渲染 session
	    if (userSession) {
	        return {
	            SERVER_STORE: {
	                body: {
	                    response: userSession,
	                    type: ActionTypes.AUTH.SUCCESS
	                }
	            }
	        };
	    }
	    return {
	        CALL_API: {
	            types: [ActionTypes.AUTH.REQUEST, ActionTypes.AUTH.SUCCESS, ActionTypes.AUTH.FAILURE],
	            endpoint: 'auth'
	        }
	    };
	}
	function fetchShelf() {
	    var CALL_API = {
	        types: [ActionTypes.SHELF.REQUEST, ActionTypes.SHELF.SUCCESS, ActionTypes.SHELF.FAILURE],
	        endpoint: 'user/books/shelf',
	        schema: _schemas2.default.SHELF_BOOK_ARRAY,
	        pagination: {
	            name: 'bookShelves'
	        }
	    };
	    return { CALL_API: CALL_API };
	}

/***/ },
/* 92 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getCurrentTime = __webpack_require__(93);
	
	var _getCurrentTime2 = _interopRequireDefault(_getCurrentTime);
	
	var _padNumberWithZero = __webpack_require__(94);
	
	var _padNumberWithZero2 = _interopRequireDefault(_padNumberWithZero);
	
	var _parseQuery = __webpack_require__(95);
	
	var _parseQuery2 = _interopRequireDefault(_parseQuery);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _dom = __webpack_require__(96);
	
	var _dom2 = _interopRequireDefault(_dom);
	
	var _browser = __webpack_require__(98);
	
	var _browser2 = _interopRequireDefault(_browser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = Object.assign({
	    getCurrentTime: _getCurrentTime2.default,
	    padNumberWithZero: _padNumberWithZero2.default,
	    parseQuery: _parseQuery2.default,
	    parseUrlencoded: _parseUrlencoded2.default
	}, _dom2.default, _browser2.default);

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getCurrentTime;
	
	var _padNumberWithZero = __webpack_require__(94);
	
	var _padNumberWithZero2 = _interopRequireDefault(_padNumberWithZero);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getCurrentTime() {
	    var d = new Date();
	    var time = [d.getFullYear(), d.getMonth() + 1, d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds()];
	    return time.map(function (t) {
	        return (0, _padNumberWithZero2.default)(t);
	    }).join('');
	}

/***/ },
/* 94 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = padNumberWithZero;
	function padNumberWithZero(num) {
	    var numStrWithZero = void 0;
	    if (num < 10) {
	        numStrWithZero = '0' + num.toString();
	    } else {
	        numStrWithZero = num.toString();
	    }
	    return numStrWithZero;
	}

/***/ },
/* 95 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = parseQuery;
	function parseQuery(queryString) {
	    var params = queryString.split('&');
	    var object = {};
	    params.forEach(function (param) {
	        var key = param.split('=')[0];
	        var val = param.split('=')[1];
	        object[key] = val;
	    });
	    return object;
	}

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _isDescendant = __webpack_require__(97);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    isDescendant: _isDescendant2.default
	};

/***/ },
/* 97 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isDescendant;
	function isDescendant(parent, child) {
	    var node = child.parentNode;
	    while (node != null) {
	        if (node === parent) {
	            return true;
	        }
	        node = node.parentNode;
	    }
	    return false;
	}

/***/ },
/* 98 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getScreenInfo = __webpack_require__(99);
	
	var _getScreenInfo2 = _interopRequireDefault(_getScreenInfo);
	
	var _isIE = __webpack_require__(100);
	
	var _isIE2 = _interopRequireDefault(_isIE);
	
	var _lockScroll = __webpack_require__(101);
	
	var _lockScroll2 = _interopRequireDefault(_lockScroll);
	
	var _unlockScroll = __webpack_require__(102);
	
	var _unlockScroll2 = _interopRequireDefault(_unlockScroll);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    getScreenInfo: _getScreenInfo2.default,
	    isIE: _isIE2.default,
	    lockScroll: _lockScroll2.default,
	    unlockScroll: _unlockScroll2.default
	};

/***/ },
/* 99 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getScreenInfo;
	function getScreenInfo() {
	    if (typeof window === 'undefined') {
	        console.error('window is undefined, empty info object will be returned!');
	        return {
	            view: {},
	            screen: {}
	        };
	    }
	    return {
	        view: {
	            width: window.innerWidth,
	            height: window.innerHeight,
	            aspectRatio: window.innerWidth / window.innerHeight
	        },
	        screen: window.screen
	    };
	}

/***/ },
/* 100 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.isIE = isIE;
	function isIE(ver) {
	    if (typeof ver === 'undefined') {
	        ver = null;
	    }
	    var b = document.createElement('b');
	    b.innerHTML = '<!--[if IE ' + ver + ']><i></i><![endif]-->';
	    return b.getElementsByTagName('i').length === 1;
	}

/***/ },
/* 101 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = lockScroll;
	function lockScroll() {
	    document.body.style.overflow = 'hidden';
	}

/***/ },
/* 102 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = unlockScroll;
	function unlockScroll() {
	    document.body.style.overflow = 'visible';
	}

/***/ },
/* 103 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _normalizr = __webpack_require__(104);
	
	var book = new _normalizr.Schema('books', {
	    idAttribute: 'id'
	});
	var bookContent = new _normalizr.Schema('bookContents', {
	    idAttribute: 'id'
	});
	var author = new _normalizr.Schema('authors', {
	    idAttribute: 'id'
	});
	var collection = new _normalizr.Schema('bookCollections', {
	    idAttribute: 'id'
	});
	collection.define({
	    items: (0, _normalizr.arrayOf)(book)
	});
	var profile = new _normalizr.Schema('profiles', {
	    idAttribute: 'id'
	});
	var user = new _normalizr.Schema('users', {
	    idAttribute: 'id'
	});
	var doubanBook = new _normalizr.Schema('doubanBooks', {
	    idAttribute: 'id'
	});
	var shelfBook = new _normalizr.Schema('shelfBooks', {
	    idAttribute: 'id'
	});
	var bookProgress = new _normalizr.Schema('bookProgress', {
	    idAttribute: 'bookId'
	});
	var matchedBooks = new _normalizr.Schema('books', {
	    idAttribute: 'bookId'
	});
	exports.default = {
	    BOOK: book,
	    BOOK_CONTENT: bookContent,
	    BOOK_PROGRESS: bookProgress,
	    BOOK_ARRAY: (0, _normalizr.arrayOf)(book),
	    DOUBAN_BOOK_SEARCH_RESULTS: { books: (0, _normalizr.arrayOf)(doubanBook) },
	    USER_ARRAY: (0, _normalizr.arrayOf)(user),
	    MATCHED_BOOK_ARRAY: (0, _normalizr.arrayOf)(matchedBooks),
	    COLLECTION: collection,
	    COLLECTION_ARRAY: (0, _normalizr.arrayOf)(collection),
	    PROFILE: profile,
	    AUTHOR: author,
	    AUTHOR_ARRAY: (0, _normalizr.arrayOf)(author),
	    SHELF_BOOK_ARRAY: (0, _normalizr.arrayOf)(shelfBook)
	};

/***/ },
/* 104 */
/***/ function(module, exports) {

	module.exports = require("normalizr");

/***/ },
/* 105 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var REQUEST = 'REQUEST';
	var SUCCESS = 'SUCCESS';
	var FAILURE = 'FAILURE';
	var LOAD_CACHE = 'LOAD_CACHE';
	var action = exports.action = function action(type) {
	    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    return Object.assign({}, {
	        type: type
	    }, payload);
	};
	var createRequestTypes = exports.createRequestTypes = function createRequestTypes(base) {
	    return [REQUEST, SUCCESS, FAILURE, LOAD_CACHE].reduce(function (acc, type) {
	        acc[type] = 'api/' + base + '/' + type;
	        return acc;
	    }, {});
	};
	var createComponentActionType = exports.createComponentActionType = function createComponentActionType(name, operation) {
	    return 'components/' + name + '/' + operation;
	};
	var createSagaTriggerActionType = exports.createSagaTriggerActionType = function createSagaTriggerActionType(operation) {
	    return 'saga-triggers/' + operation;
	};
	var createActionEntity = exports.createActionEntity = function createActionEntity(requestTypes) {
	    return {
	        request: function request(payload) {
	            return action(requestTypes.REQUEST, payload);
	        },
	        success: function success(response, payload) {
	            return action(requestTypes.SUCCESS, Object.assign({}, { response: response }, payload));
	        },
	        // TODO
	        loadCache: function loadCache(response, payload) {
	            return action(requestTypes.SUCCESS, Object.assign({}, { response: response }, payload, { loadedFromCache: true }));
	        },
	        failure: function failure(error, payload) {
	            return action(requestTypes.FAILURE, Object.assign({}, { error: error }, payload));
	        }
	    };
	};

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.VIEWER = exports.MODAL = exports.CLOSE_CONFIRM_MODAL = exports.OPEN_CONFIRM_MODAL = exports.NOTIFICATION = exports.SHELF = exports.AUTH = exports.PROFILE = exports.DOUBAN_BOOKS = exports.COLLECTION = exports.COLLECTIONS = exports.AUTHORS = exports.LOAD_BOOK_PROGRESS = exports.BOOK_PROGRESS = exports.USER_LOGOUT = exports.LOGOUT = exports.LOAD_USERS = exports.USERS = exports.LOAD_BOOKS = exports.BOOKS = exports.LOAD_BOOK_CONTENT = exports.BOOK_CONTENT = exports.LOAD_BOOK = exports.BOOK = exports.REMOVE_ENTITY = undefined;
	
	var _utils = __webpack_require__(105);
	
	/**
	 * api
	 */
	var REMOVE_ENTITY = exports.REMOVE_ENTITY = 'REMOVE_ENTITY';
	var BOOK = exports.BOOK = (0, _utils.createRequestTypes)('book');
	var LOAD_BOOK = exports.LOAD_BOOK = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK');
	var BOOK_CONTENT = exports.BOOK_CONTENT = (0, _utils.createRequestTypes)('book-content');
	var LOAD_BOOK_CONTENT = exports.LOAD_BOOK_CONTENT = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK_CONTENT');
	var BOOKS = exports.BOOKS = (0, _utils.createRequestTypes)('books');
	var LOAD_BOOKS = exports.LOAD_BOOKS = (0, _utils.createSagaTriggerActionType)('LOAD_BOOKS');
	var USERS = exports.USERS = (0, _utils.createRequestTypes)('users');
	var LOAD_USERS = exports.LOAD_USERS = (0, _utils.createSagaTriggerActionType)('LOAD_USERS');
	var LOGOUT = exports.LOGOUT = (0, _utils.createRequestTypes)('revoke');
	var USER_LOGOUT = exports.USER_LOGOUT = (0, _utils.createSagaTriggerActionType)('USER_LOGOUT');
	var BOOK_PROGRESS = exports.BOOK_PROGRESS = (0, _utils.createRequestTypes)('book-progress');
	var LOAD_BOOK_PROGRESS = exports.LOAD_BOOK_PROGRESS = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK_PROGRESS');
	var AUTHORS = exports.AUTHORS = (0, _utils.createRequestTypes)('authors');
	var COLLECTIONS = exports.COLLECTIONS = (0, _utils.createRequestTypes)('collections');
	var COLLECTION = exports.COLLECTION = (0, _utils.createRequestTypes)('collection');
	var DOUBAN_BOOKS = exports.DOUBAN_BOOKS = (0, _utils.createRequestTypes)('douban-books');
	var PROFILE = exports.PROFILE = (0, _utils.createRequestTypes)('profile');
	var AUTH = exports.AUTH = (0, _utils.createRequestTypes)('auth');
	var SHELF = exports.SHELF = (0, _utils.createRequestTypes)('shelf');
	/**
	 * components
	 */
	// general
	var NOTIFICATION = exports.NOTIFICATION = {
	    SHOW: (0, _utils.createComponentActionType)('notification', 'SHOW'),
	    HIDE: (0, _utils.createComponentActionType)('notification', 'HIDE')
	};
	var OPEN_CONFIRM_MODAL = exports.OPEN_CONFIRM_MODAL = (0, _utils.createComponentActionType)('confirm-modal', 'OPEN');
	var CLOSE_CONFIRM_MODAL = exports.CLOSE_CONFIRM_MODAL = (0, _utils.createComponentActionType)('confirm-modal', 'CLOSE');
	var MODAL = exports.MODAL = {
	    OPEN: (0, _utils.createComponentActionType)('modal', 'SHOW'),
	    CLOSE: (0, _utils.createComponentActionType)('modal', 'HIDE')
	};
	// viewer
	var VIEWER = exports.VIEWER = {
	    INITIALIZE: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'INITIALIZE')),
	    INITIALIZE_CONFIG: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'INITIALIZE_CONFIG')),
	    CONFIG: (0, _utils.createComponentActionType)('viewer', 'CONFIG'),
	    CALC_START: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'CALC_START')),
	    CALC_SUCCESS: (0, _utils.createComponentActionType)('viewer', 'CALC_SUCCESS'),
	    CALC_FAILURE: (0, _utils.createComponentActionType)('viewer', 'CALC_FAILURE'),
	    BOOK_PROGRESS_UPDATE: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer/progress', 'UPDATE')),
	    // TODO: 这个好像没用
	    BOOK_PROGRESS_INITIALIZE: (0, _utils.createComponentActionType)('viewer/progress', 'INITIALIZE'),
	    // TODO: 这个好像也没用
	    BOOK_PROGRESS_DESTROY: (0, _utils.createComponentActionType)('viewer/progress', 'DESTROY'),
	    JUMP: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'JUMP')),
	    FONT_CHANGE: (0, _utils.createComponentActionType)('viewer/preference', 'CHANGE_FONT_SIZE'),
	    PANEL_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/panel', 'TOGGLE'),
	    PREFERENCE_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/preference', 'TOGGLE'),
	    NAVIGATION_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/navigation', 'TOGGLE'),
	    THEME_CHANGE: (0, _utils.createComponentActionType)('viewer/theme', 'CHANGE'),
	    SCROLL_MODE_TOGGLE: (0, _utils.createComponentActionType)('viewer/scroll-mode', 'TOGGLE')
	};

/***/ },
/* 107 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.sendNotification = undefined;
	exports.showNotification = showNotification;
	exports.hideNotification = hideNotification;
	exports.openConfirmModal = openConfirmModal;
	exports.closeConfirmModal = closeConfirmModal;
	exports.openModal = openModal;
	exports.closeModal = closeModal;
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var sendNotification = exports.sendNotification = function sendNotification(message) {
	    var msgType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'success';
	    var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2000;
	
	    return function (dispatch, getState) {
	        var id = Math.random().toFixed(8).substr(2);
	        dispatch(showNotification(id, message, msgType));
	        if (t !== 0) {
	            setTimeout(function () {
	                dispatch(hideNotification(id));
	            }, t);
	        }
	    };
	};
	function showNotification(id, message) {
	    var msgType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'success';
	
	    return {
	        type: ActionTypes.NOTIFICATION.SHOW,
	        message: message,
	        msgType: msgType,
	        id: id
	    };
	}
	function hideNotification(id) {
	    return {
	        type: ActionTypes.NOTIFICATION.HIDE,
	        id: id
	    };
	}
	function openConfirmModal(data) {
	    return {
	        type: ActionTypes.OPEN_CONFIRM_MODAL,
	        data: data
	    };
	}
	function closeConfirmModal() {
	    return {
	        type: ActionTypes.CLOSE_CONFIRM_MODAL
	    };
	}
	function openModal(data) {
	    return {
	        type: ActionTypes.MODAL.OPEN,
	        data: data
	    };
	}
	function closeModal() {
	    return {
	        type: ActionTypes.MODAL.CLOSE
	    };
	}

/***/ },
/* 108 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var loadSomething = exports.loadSomething = function loadSomething() {
	    return {
	        type: 'LOAD'
	    };
	};
	var saveSomething = exports.saveSomething = function saveSomething() {
	    return {
	        type: 'SAVE'
	    };
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.toggleViewerScrollMode = exports.changeViewerTheme = exports.changeViewerFontSize = exports.toggleViewerNavigation = exports.toggleViewerPreference = exports.toggleViewerPanel = exports.viewerJumpTo = exports.destroyBookProgress = exports.updateBookProgress = exports.initializeBookProgress = exports.calcBookFailure = exports.calcBookSuccess = exports.calcBook = exports.configViewer = exports.initializeViewer = exports.initializeViewerConfig = undefined;
	
	var _selectors = __webpack_require__(110);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// viewer
	var initializeViewerConfig = exports.initializeViewerConfig = function initializeViewerConfig(bookId) {
	    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    return { bookId: bookId, config: config, type: ACTION_TYPES.VIEWER.INITIALIZE_CONFIG };
	};
	var initializeViewer = exports.initializeViewer = function initializeViewer(bookId) {
	    return { bookId: bookId, type: ACTION_TYPES.VIEWER.INITIALIZE };
	};
	var configViewer = exports.configViewer = function configViewer(bookId, payload) {
	    return {
	        bookId: bookId,
	        payload: payload,
	        type: ACTION_TYPES.VIEWER.CONFIG
	    };
	};
	// book
	var calcBook = exports.calcBook = function calcBook(bookId, wrap) {
	    return {
	        bookId: bookId,
	        wrap: wrap,
	        type: ACTION_TYPES.VIEWER.CALC_START
	    };
	};
	var calcBookSuccess = exports.calcBookSuccess = function calcBookSuccess(bookId, computed) {
	    return {
	        bookId: bookId,
	        computed: computed,
	        type: ACTION_TYPES.VIEWER.CALC_SUCCESS
	    };
	};
	var calcBookFailure = exports.calcBookFailure = function calcBookFailure(bookId, error) {
	    return {
	        bookId: bookId,
	        error: error,
	        type: ACTION_TYPES.VIEWER.CALC_FAILURE
	    };
	};
	var initializeBookProgress = exports.initializeBookProgress = function initializeBookProgress() {
	    return { type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_INITIALIZE };
	};
	// progress
	var updateBookProgress = exports.updateBookProgress = function updateBookProgress(percentage) {
	    return function (dispatch, getState) {
	        _helpers2.default.print('Action updateBookProgress');
	        var state = getState();
	
	        var _selectors$viewer$con = selectors.viewer.config(state);
	
	        var bookId = _selectors$viewer$con.bookId;
	
	        var computed = selectors.viewer.computed(bookId)(state);
	        var pageNo = Math.floor(computed.length * percentage) + 1;
	        return dispatch({
	            id: bookId,
	            percentage: percentage,
	            pageNo: pageNo,
	            type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE
	        });
	    };
	};
	var destroyBookProgress = exports.destroyBookProgress = function destroyBookProgress() {
	    return {
	        type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_DESTROY
	    };
	};
	var viewerJumpTo = exports.viewerJumpTo = function viewerJumpTo(percentage) {
	    return { type: ACTION_TYPES.VIEWER.JUMP, percentage: percentage };
	};
	// sub components
	var toggleViewerPanel = exports.toggleViewerPanel = function toggleViewerPanel(reset) {
	    return { type: ACTION_TYPES.VIEWER.PANEL_TOGGLE, reset: reset };
	};
	var toggleViewerPreference = exports.toggleViewerPreference = function toggleViewerPreference(reset) {
	    return { type: ACTION_TYPES.VIEWER.PREFERENCE_TOGGLE, reset: reset };
	};
	var toggleViewerNavigation = exports.toggleViewerNavigation = function toggleViewerNavigation(reset) {
	    return { type: ACTION_TYPES.VIEWER.NAVIGATION_TOGGLE, reset: reset };
	};
	// config
	var changeViewerFontSize = exports.changeViewerFontSize = function changeViewerFontSize(fontSizeInPixel) {
	    return { type: ACTION_TYPES.VIEWER.FONT_CHANGE, fontSize: fontSizeInPixel };
	};
	var changeViewerTheme = exports.changeViewerTheme = function changeViewerTheme(themeName) {
	    return { type: ACTION_TYPES.VIEWER.THEME_CHANGE, theme: themeName };
	};
	var toggleViewerScrollMode = exports.toggleViewerScrollMode = function toggleViewerScrollMode(reset) {
	    return { type: ACTION_TYPES.VIEWER.SCROLL_MODE_TOGGLE, reset: reset };
	};

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.viewer = exports.form = exports.common = undefined;
	
	var _entities = __webpack_require__(111);
	
	Object.keys(_entities).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _entities[key];
	    }
	  });
	});
	
	var _common = __webpack_require__(113);
	
	var common = _interopRequireWildcard(_common);
	
	var _betterReduxForm = __webpack_require__(114);
	
	var _viewer = __webpack_require__(115);
	
	var viewer = _interopRequireWildcard(_viewer);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.common = common;
	exports.form = _betterReduxForm.selectors;
	exports.viewer = viewer;

/***/ },
/* 111 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.sessionUserId = exports.users = exports.booksAsOptions = exports.authorsAsOptions = exports.doubanBooksAsOptions = exports.books = exports.shelfBooks = exports.authors = exports.doubanBooks = undefined;
	
	var _reselect = __webpack_require__(112);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(113);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var doubanBooks = exports.doubanBooks = function doubanBooks(key) {
	    return (0, _reselect.createSelector)((0, _common.pagedEntities)({
	        entitiesName: 'doubanBooks',
	        paginationName: 'doubanBooks',
	        paginationKey: key
	    }), function (books) {
	        return books;
	    });
	};
	var authors = exports.authors = function authors(key) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'authors',
	        paginationName: 'authors',
	        paginationKey: key
	    });
	};
	var shelfBooks = exports.shelfBooks = function shelfBooks(key) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'shelfBooks',
	        paginationName: 'bookShelves',
	        paginationKey: key
	    });
	};
	var books = exports.books = function books(key, page) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'books',
	        paginationName: 'books',
	        paginationKey: key,
	        page: page
	    });
	};
	var doubanBooksAsOptions = exports.doubanBooksAsOptions = function doubanBooksAsOptions(key) {
	    return (0, _reselect.createSelector)(doubanBooks(key), function (selectedBooks) {
	        return selectedBooks.map(function (book) {
	            return {
	                name: book.title,
	                value: book.id,
	                additional: {
	                    description: book.summary,
	                    cover: book.images.large,
	                    author: book.author.join(', ')
	                }
	            };
	        });
	    });
	};
	var authorsAsOptions = exports.authorsAsOptions = function authorsAsOptions(key) {
	    return (0, _reselect.createSelector)(authors(key), function (items) {
	        return items.map(function (item) {
	            return {
	                name: item.name,
	                value: item.id
	            };
	        });
	    });
	};
	var booksAsOptions = exports.booksAsOptions = function booksAsOptions(key) {
	    return (0, _reselect.createSelector)(books(key), function (items) {
	        return items.map(function (item) {
	            return {
	                name: item.title,
	                value: item.id
	            };
	        });
	    });
	};
	var users = exports.users = (0, _common.pagedEntities)({
	    entitiesName: 'users',
	    paginationName: 'users'
	});
	var sessionUserId = exports.sessionUserId = function sessionUserId(state) {
	    return _lodash2.default.get(state, ['session', 'user', 'id']);
	};

/***/ },
/* 112 */
/***/ function(module, exports) {

	module.exports = require("reselect");

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.pagedEntities = exports.entityPages = exports.currentPage = exports.nextPage = exports.paginationLinks = exports.paginationPages = exports.isPaginationFetching = exports.entity = exports.entities = exports.session = undefined;
	
	var _reselect = __webpack_require__(112);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DEFAULT_KEY = 'default';
	var session = exports.session = function session(state) {
	    return _lodash2.default.get(state, ['session'], {});
	};
	var entities = exports.entities = function entities(name) {
	    return function (state) {
	        return state.entities[name] || {};
	    };
	};
	var entity = exports.entity = function entity(name, id) {
	    return function (state) {
	        return _lodash2.default.get(state, ['entities', name, id], {});
	    };
	};
	var isPaginationFetching = exports.isPaginationFetching = function isPaginationFetching(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.get(state, ['pagination', name, key, 'isFetching'], true);
	    };
	};
	var paginationPages = exports.paginationPages = function paginationPages(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.get(state, ['pagination', name, key, 'pages'], {});
	    };
	};
	var paginationLinks = exports.paginationLinks = function paginationLinks(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.pick(_lodash2.default.get(state.pagination, name + '.' + key, {}), ['next', 'last']);
	    };
	};
	var nextPage = exports.nextPage = function nextPage(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return (0, _reselect.createSelector)(paginationLinks(name, key), function (selectedPaginationLinks) {
	        return _lodash2.default.get(selectedPaginationLinks, 'next.page', 0);
	    });
	};
	var currentPage = exports.currentPage = function currentPage(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return (0, _reselect.createSelector)(paginationLinks(name, key), function (selectedPaginationLinks) {
	        var next = _lodash2.default.get(selectedPaginationLinks, 'next.page');
	        var last = _lodash2.default.get(selectedPaginationLinks, 'last.page');
	        return next ? next - 1 : last;
	    });
	};
	var entityPages = exports.entityPages = function entityPages(options) {
	    var entitiesName = options.entitiesName;
	    var paginationName = options.paginationName;
	    var paginationKey = options.paginationKey;
	
	    return (0, _reselect.createSelector)(entities(entitiesName), paginationPages(paginationName, paginationKey), function (selectedEntities, pages) {
	        return _lodash2.default.mapValues(pages, function (ids) {
	            return ids.map(function (id) {
	                return selectedEntities[id];
	            }).filter(function (item) {
	                return Boolean(item);
	            });
	        });
	    });
	};
	var pagedEntities = exports.pagedEntities = function pagedEntities(options) {
	    var page = options.page;
	
	    return (0, _reselect.createSelector)(entityPages(options), function (pages) {
	        if (page) {
	            return _lodash2.default.get(pages, [page], []);
	        }
	        var allEntities = [];
	        _lodash2.default.keys(pages).forEach(function (p) {
	            allEntities = allEntities.concat(pages[p]);
	        });
	        return allEntities;
	    });
	};

/***/ },
/* 114 */
/***/ function(module, exports) {

	module.exports = require("better-redux-form");

/***/ },
/* 115 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.navigation = exports.preference = exports.panel = exports.progress = exports.navData = exports.computed = exports.config = exports.self = undefined;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(113);
	
	var common = _interopRequireWildcard(_common);
	
	var _reselect = __webpack_require__(112);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var self = exports.self = function self(state) {
	    return _lodash2.default.get(state, ['components', 'viewer'], {});
	};
	var config = exports.config = function config(state) {
	    return _lodash2.default.get(state, ['components', 'viewer', 'config'], {});
	};
	var computed = exports.computed = function computed(bookId) {
	    return function (state) {
	        return _lodash2.default.get(state, ['components', 'viewer', 'contents', bookId, 'computed'], []);
	    };
	};
	var navData = exports.navData = function navData(bookId) {
	    return function (state) {
	        var bookContent = common.entity('bookContents', bookId)(state);
	        return _lodash2.default.get(bookContent, 'nav', []);
	    };
	};
	var progress = exports.progress = function progress(bookId) {
	    return function (state) {
	        return _lodash2.default.get(state, ['components', 'viewer', 'progress', bookId], {});
	    };
	};
	// sub components
	var panel = exports.panel = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'panel'], {});
	});
	var preference = exports.preference = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'preference'], {});
	});
	var navigation = exports.navigation = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'navigation'], {});
	});

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Alert = exports.Alerts = undefined;
	
	var _Alert = __webpack_require__(117);
	
	var _Alert2 = _interopRequireDefault(_Alert);
	
	var _Alerts = __webpack_require__(133);
	
	var _Alerts2 = _interopRequireDefault(_Alerts);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Alerts = _Alerts2.default;
	exports.Alert = _Alert2.default;
	exports.default = _Alert2.default;

/***/ },
/* 117 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Icon = __webpack_require__(118);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(131);
	var Alert = function (_Component) {
	    _inherits(Alert, _Component);
	
	    function Alert() {
	        _classCallCheck(this, Alert);
	
	        return _possibleConstructorReturn(this, (Alert.__proto__ || Object.getPrototypeOf(Alert)).apply(this, arguments));
	    }
	
	    _createClass(Alert, [{
	        key: "render",
	        value: function render() {
	            var type = this.props.type ? this.props.type : 'success';
	            return _react2.default.createElement("div", null, this.props.visible && _react2.default.createElement("div", { styleName: "alert--" + type }, _react2.default.createElement("div", { styleName: "alert-close" }, _react2.default.createElement(_Icon2.default, { onClick: this.props.onRequestClose, name: "close", size: 15 })), _react2.default.createElement("div", { styleName: "content" }, this.props.message)));
	        }
	    }]);
	
	    return Alert;
	}(_react.Component);
	Alert = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Alert);
	exports.default = Alert;

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Icon = __webpack_require__(119);
	
	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Icon2.default;

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(120);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _svgIcons = __webpack_require__(121);
	
	var _svgIcons2 = _interopRequireDefault(_svgIcons);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(123);
	var Icon = function (_Component) {
	    _inherits(Icon, _Component);
	
	    function Icon(props) {
	        _classCallCheck(this, Icon);
	
	        return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).call(this, props));
	    }
	
	    _createClass(Icon, [{
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var name = _props.name;
	            var onClick = _props.onClick;
	            var size = _props.size;
	
	            var className = (0, _classnames2.default)('icon', "icon-" + name, this.props.className);
	            if (typeof _svgIcons2.default[name] === 'undefined') {
	                console.error('Icon name (%s) not found! ', name);
	            }
	            size = size || 30;
	            var svgWrapStyle = {
	                position: 'absolute',
	                top: '50%',
	                marginTop: -size / 2
	            };
	            return _react2.default.createElement("span", { styleName: "icon", style: { minWidth: size, minHeight: size }, className: className, onClick: onClick }, _react2.default.createElement("div", { style: svgWrapStyle }, _react2.default.createElement("svg", __assign({}, _svgIcons2.default[name].viewBox && { viewBox: _svgIcons2.default[name].viewBox }, { width: size, height: size, styleName: "svg-shape" }), _react2.default.createElement("path", { d: _svgIcons2.default[name].path }))));
	        }
	    }]);
	
	    return Icon;
	}(_react.Component);
	Icon = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Icon);
	exports.default = Icon;

/***/ },
/* 120 */
/***/ function(module, exports) {

	module.exports = require("classnames");

/***/ },
/* 121 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    close: {
	        path: 'M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z',
	        viewBox: '0 0 12 16'
	    },
	    star: {
	        path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z'
	    },
	    users: {
	        path: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z'
	    },
	    folder: {
	        path: 'M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z'
	    },
	    database: {
	        path: 'M20.2 5.9l.8-.8C19.6 3.7 17.8 3 16 3s-3.6.7-5 2.1l.8.8C13 4.8 14.5 4.2 16 4.2s3 .6 4.2 1.7zm-.9.8c-.9-.9-2.1-1.4-3.3-1.4s-2.4.5-3.3 1.4l.8.8c.7-.7 1.6-1 2.5-1 .9 0 1.8.3 2.5 1l.8-.8zM19 13h-2V9h-2v4H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zM8 18H6v-2h2v2zm3.5 0h-2v-2h2v2zm3.5 0h-2v-2h2v2z'
	    },
	    statistics: {
	        path: 'M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z'
	    },
	    books: {
	        path: 'M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z'
	    },
	    back: {
	        // path: 'M732 832l-55 55l-505 -505l505 -505l55 54l-451 451z'
	        // path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z',
	        path: 'm 26,25 c -0.467574,0 -0.909434,0.16865 -1.25,0.4375 C 24.555279,25.591215 6.6130516,42.546285 6.46875,42.71875 6.1782332,43.06596 6,43.51187 6,44 6,44.51946 6.2065566,44.98818 6.53125,45.34375 6.6683992,45.493941 24.625,62.4375 24.625,62.4375 c 0.759842,0.725152 2.121842,0.700421 2.84375,-0.0625 0.721908,-0.76293 0.672244,-2.125099 -0.09375,-2.84375 L 13.03125,46 64,46 c 13.888871,0 25.660392,11.63955 26,26.03125 0.0035,0.140557 0,0.77485 0,0.96875 0,1.108 0.892,2 2,2 1.108,0 2,-0.892 2,-2 l 0,-1.0625 C 93.610208,55.4194 80.118529,42 64,42 L 13.03125,42 C 13.03125,42 27.362732,28.495959 27.5,28.34375 27.81971,27.98925 28,27.51497 28,27 28,25.89543 27.104569,25 26,25 z',
	        viewBox: '0 0 100 125'
	    },
	    preference: {
	        path: 'M 17.78125 8.96875 A 2.0002 2.0002 0 0 0 16 11 L 16 56.25 C 12.008188 57.168302 9 60.741406 9 65 C 9 69.259224 12.007427 72.863534 16 73.78125 L 16 89 A 2.0002 2.0002 0 1 0 20 89 L 20 73.78125 C 23.992573 72.863534 27 69.259224 27 65 C 27 60.741406 23.991812 57.168302 20 56.25 L 20 11 A 2.0002 2.0002 0 0 0 17.78125 8.96875 z M 49.78125 8.96875 A 2.0002 2.0002 0 0 0 48 11 L 48 26.25 C 44.008188 27.168305 41 30.741423 41 35 C 41 39.25912 44.007427 42.863511 48 43.78125 L 48 89 A 2.0002 2.0002 0 1 0 52 89 L 52 43.78125 C 55.992573 42.863511 59 39.25912 59 35 C 59 30.741423 55.991812 27.168305 52 26.25 L 52 11 A 2.0002 2.0002 0 0 0 49.78125 8.96875 z M 81.78125 8.96875 A 2.0002 2.0002 0 0 0 80 11 L 80 56.25 C 76.008188 57.168302 73 60.741406 73 65 C 73 69.259224 76.007427 72.863534 80 73.78125 L 80 89 A 2.0002 2.0002 0 1 0 84 89 L 84 73.78125 C 87.992573 72.863534 91 69.259224 91 65 C 91 60.741406 87.991812 57.168302 84 56.25 L 84 11 A 2.0002 2.0002 0 0 0 81.78125 8.96875 z M 50 30 C 52.785116 30 55 32.21488 55 35 C 55 37.78512 52.785116 40 50 40 C 47.214884 40 45 37.78512 45 35 C 45 32.21488 47.214884 30 50 30 z M 18 60 C 20.785116 60 23 62.2149 23 65 C 23 67.7852 20.785116 70 18 70 C 15.214884 70 13 67.7852 13 65 C 13 62.2149 15.214884 60 18 60 z M 82 60 C 84.785116 60 87 62.2149 87 65 C 87 67.7852 84.785116 70 82 70 C 79.214884 70 77 67.7852 77 65 C 77 62.2149 79.214884 60 82 60 z ',
	        viewBox: '0 0 100 125'
	    },
	    font: {
	        // path: 'M14 8.77v-1.6l-1.94-.64-.45-1.09.88-1.84-1.13-1.13-1.81.91-1.09-.45-.69-1.92h-1.6l-.63 1.94-1.11.45-1.84-.88-1.13 1.13.91 1.81-.45 1.09L0 7.23v1.59l1.94.64.45 1.09-.88 1.84 1.13 1.13 1.81-.91 1.09.45.69 1.92h1.59l.63-1.94 1.11-.45 1.84.88 1.13-1.13-.92-1.81.47-1.09L14 8.75v.02zM7 11c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z'
	        path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z'
	    },
	    arrowRight: {
	        path: 'M-290.9,430.1l-0.7-0.7l8.2-8.6l-8.2-8.2l0.7-0.7l8.9,8.9L-290.9,430.1z',
	        viewBox: '-292 411.9 11 18'
	    }
	};

/***/ },
/* 122 */
/***/ function(module, exports) {

	module.exports = require("react-css-modules");

/***/ },
/* 123 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(124);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 124 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".svg-shape_423Wb {\n  fill: currentColor;\n  overflow: hidden; }\n\n.icon_2s6T3 {\n  display: inline-block;\n  position: relative; }\n", ""]);
	
	// exports
	exports.locals = {
		"svg-shape": "svg-shape_423Wb",
		"icon": "icon_2s6T3"
	};

/***/ },
/* 125 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _assign = __webpack_require__(127);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _stringify = __webpack_require__(128);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _slicedToArray2 = __webpack_require__(129);
	
	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);
	
	var _getIterator2 = __webpack_require__(130);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Isomorphic CSS style loader for Webpack
	 *
	 * Copyright © 2015-2016 Kriasoft, LLC. All rights reserved.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE.txt file in the root directory of this source tree.
	 */
	
	var prefix = 's';
	var inserted = {};
	
	// Base64 encoding and decoding - The "Unicode Problem"
	// https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem
	function b64EncodeUnicode(str) {
	  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {
	    return String.fromCharCode('0x' + p1);
	  }));
	}
	
	/**
	 * Remove style/link elements for specified node IDs
	 * if they are no longer referenced by UI components.
	 */
	function removeCss(ids) {
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = (0, _getIterator3.default)(ids), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var id = _step.value;
	
	      if (--inserted[id] <= 0) {
	        var elem = document.getElementById(prefix + id);
	        if (elem) {
	          elem.parentNode.removeChild(elem);
	        }
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	}
	
	/**
	 * Example:
	 *   // Insert CSS styles object generated by `css-loader` into DOM
	 *   var removeCss = insertCss([[1, 'body { color: red; }']]);
	 *
	 *   // Remove it from the DOM
	 *   removeCss();
	 */
	function insertCss(styles, options) {
	  var _Object$assign = (0, _assign2.default)({
	    replace: false,
	    prepend: false
	  }, options);
	
	  var replace = _Object$assign.replace;
	  var prepend = _Object$assign.prepend;
	
	
	  var ids = [];
	  for (var i = 0; i < styles.length; i++) {
	    var _styles$i = (0, _slicedToArray3.default)(styles[i], 4);
	
	    var moduleId = _styles$i[0];
	    var css = _styles$i[1];
	    var media = _styles$i[2];
	    var sourceMap = _styles$i[3];
	
	    var id = moduleId + '-' + i;
	
	    ids.push(id);
	
	    if (inserted[id]) {
	      if (!replace) {
	        inserted[id]++;
	        continue;
	      }
	    }
	
	    inserted[id] = 1;
	
	    var elem = document.getElementById(prefix + id);
	    var create = false;
	
	    if (!elem) {
	      create = true;
	
	      elem = document.createElement('style');
	      elem.setAttribute('type', 'text/css');
	      elem.id = prefix + id;
	
	      if (media) {
	        elem.setAttribute('media', media);
	      }
	    }
	
	    var cssText = css;
	    if (sourceMap) {
	      cssText += '\n/*# sourceMappingURL=data:application/json;base64,' + b64EncodeUnicode((0, _stringify2.default)(sourceMap)) + '*/';
	      cssText += '\n/*# sourceURL=' + sourceMap.file + '*/';
	    }
	
	    if ('textContent' in elem) {
	      elem.textContent = cssText;
	    } else {
	      elem.styleSheet.cssText = cssText;
	    }
	
	    if (create) {
	      if (prepend) {
	        document.head.insertBefore(elem, document.head.childNodes[0]);
	      } else {
	        document.head.appendChild(elem);
	      }
	    }
	  }
	
	  return removeCss.bind(null, ids);
	}
	
	module.exports = insertCss;

/***/ },
/* 127 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/object/assign");

/***/ },
/* 128 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/json/stringify");

/***/ },
/* 129 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/slicedToArray");

/***/ },
/* 130 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/get-iterator");

/***/ },
/* 131 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(132);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 132 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".alerts_lNYyS {\n  position: fixed;\n  width: 100%;\n  padding: 0 20px;\n  top: 10px;\n  left: 0;\n  z-index: 9999; }\n\n.alert_Tg6AL, .alert--success_ibIol, .alert--error_36iOd, .alert--warning_6_19X {\n  padding: 10px 0;\n  font-size: 16px;\n  text-align: center;\n  background: #fff;\n  position: relative;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.32);\n  font-size: 1rem;\n  font-weight: bold;\n  border-radius: 3px;\n  width: 700px;\n  margin: 0 auto 10px; }\n  @media (max-width: 540px) {\n    .alert_Tg6AL, .alert--success_ibIol, .alert--error_36iOd, .alert--warning_6_19X {\n      max-width: 100%; } }\n\n.content_2CILg {\n  overflow: hidden;\n  padding: 0 30px; }\n\n.alert-close_3Ckz- {\n  cursor: pointer;\n  position: absolute;\n  right: 10px;\n  top: 11px;\n  display: inline-block; }\n\n.alert--success_ibIol {\n  background: #72efa8;\n  color: #204d33; }\n\n.alert--error_36iOd {\n  background: #cc0000;\n  color: #fff; }\n\n.alert--warning_6_19X {\n  background: orange;\n  color: black; }\n", ""]);
	
	// exports
	exports.locals = {
		"alerts": "alerts_lNYyS",
		"alert": "alert_Tg6AL",
		"alert--success": "alert--success_ibIol",
		"alert--error": "alert--error_36iOd",
		"alert--warning": "alert--warning_6_19X",
		"content": "content_2CILg",
		"alert-close": "alert-close_3Ckz-"
	};

/***/ },
/* 133 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Alert = __webpack_require__(117);
	
	var _Alert2 = _interopRequireDefault(_Alert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(131);
	function Alerts(props) {
	    return _react2.default.createElement("div", { className: styles.alerts }, props.messages.map(function (msg, index) {
	        return _react2.default.createElement(_Alert2.default, { key: index, type: msg.type, message: msg.content, visible: msg.visible, onRequestClose: function onRequestClose() {
	                props.onRequestClose(msg.id);
	            } });
	    }));
	}
	exports.default = Alerts;

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ConfirmModal = exports.ModalPlus = undefined;
	
	var _Modal = __webpack_require__(135);
	
	Object.keys(_Modal).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Modal[key];
	    }
	  });
	});
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _ModalPlus = __webpack_require__(144);
	
	var _ModalPlus2 = _interopRequireDefault(_ModalPlus);
	
	var _ConfirmModal = __webpack_require__(145);
	
	var _ConfirmModal2 = _interopRequireDefault(_ConfirmModal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Modal2.default;
	exports.ModalPlus = _ModalPlus2.default;
	exports.ConfirmModal = _ConfirmModal2.default;

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(136);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _utils = __webpack_require__(92);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _Fade = __webpack_require__(137);
	
	var _Fade2 = _interopRequireDefault(_Fade);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _Modal = __webpack_require__(142);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Modal = function (_Component) {
	    _inherits(Modal, _Component);
	
	    function Modal(props) {
	        _classCallCheck(this, Modal);
	
	        var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));
	
	        _this.state = {
	            modalHeight: 0,
	            isModalHidden: false,
	            isModalVerticalCenter: true,
	            clicks: 0
	        };
	        _this.setView = _this.setView.bind(_this);
	        _this.hideModal = _this.hideModal.bind(_this);
	        return _this;
	    }
	
	    _createClass(Modal, [{
	        key: 'hideModal',
	        value: function hideModal() {
	            this.props.onRequestClose();
	            _utils2.default.unlockScroll();
	        }
	    }, {
	        key: 'setView',
	        value: function setView() {
	            var modalHeight = _reactDom2.default.findDOMNode(this.modal).clientHeight;
	            var isModalVerticalCenter = true;
	            var documentHeight = document.body.clientHeight;
	            if (window.innerHeight < modalHeight) {
	                isModalVerticalCenter = false;
	            }
	            if (window.innerHeight > document.body.clientHeight) {
	                documentHeight = window.innerHeight;
	            }
	            this.setState({
	                modalHeight: modalHeight,
	                isModalVerticalCenter: isModalVerticalCenter,
	                documentHeight: documentHeight
	            });
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {}
	    }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps, nextState) {
	            return !_lodash2.default.isEqual(this.state, nextState) || !_lodash2.default.isEqual(this.props, nextProps);
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            // modal show
	            if (!prevProps.open && this.props.open === true) {
	                this.setView();
	                _utils2.default.lockScroll();
	                window.addEventListener('resize', this.setView);
	            }
	            // modal hide
	            if (prevProps.open === true && this.props.open === false) {
	                window.removeEventListener('resize', this.setView);
	                _utils2.default.unlockScroll();
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            window.removeEventListener('resize', this.setView);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;
	
	            var open = this.props.open;
	
	            var defaultClass = 'modal';
	            var modalId = 'modal-' + new Date().valueOf();
	            var className = this.props.className ? defaultClass + ' ' + this.props.className : defaultClass;
	            var width = this.props.width ? this.props.width : 500;
	            var height = this.state.modalHeight;
	            var style = {
	                backdrop: {},
	                verticalCenter: {},
	                scroll: {},
	                modal: {}
	            };
	            style.backdrop = {
	                position: 'fixed',
	                height: '100%',
	                width: '100%',
	                left: 0,
	                top: 0,
	                background: 'rgba(0, 0, 0, 0.23)',
	                overflow: 'scroll'
	            };
	            style.verticalCenter = {
	                width: width,
	                marginTop: -height / 2,
	                marginLeft: -width / 2,
	                position: 'absolute',
	                left: '50%',
	                top: '50%'
	            };
	            style.scroll = {
	                width: width,
	                margin: '50px auto'
	            };
	            style.modal = {};
	            if (this.state.isModalVerticalCenter) {
	                style.modal = Object.assign({}, style.modal, style.verticalCenter);
	            } else {
	                style.modal = Object.assign({}, style.modal, style.scroll);
	            }
	            return _react2.default.createElement(_Fade2.default, null, open === true && _react2.default.createElement("div", { onClick: function onClick(e) {
	                    // 使用阻止冒泡会造成问题
	                    if (e.target.querySelector('#' + modalId)) {
	                        _this2.hideModal();
	                    }
	                }, className: _Modal2.default['modal-backdrop'], style: style.backdrop }, _react2.default.createElement("div", { id: modalId, style: style.modal, className: _Modal2.default['modal'] + ' ' + className, ref: function ref(_ref) {
	                    _this2.modal = _ref;
	                } }, this.props.children)));
	        }
	    }]);
	
	    return Modal;
	}(_react.Component);
	
	exports.default = Modal;

/***/ },
/* 136 */
/***/ function(module, exports) {

	module.exports = require("react-dom");

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Fade = __webpack_require__(138);
	
	var _Fade2 = _interopRequireDefault(_Fade);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Fade2.default;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(139);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(140);
	
	exports.default = function (props) {
	    return _react2.default.createElement(_reactAddonsCssTransitionGroup2.default, { component: "div", transitionName: styles, transitionEnterTimeout: 300, transitionLeaveTimeout: 300 }, props.children);
	};

/***/ },
/* 139 */
/***/ function(module, exports) {

	module.exports = require("react-addons-css-transition-group");

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(141);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  --time: .3s; }\n\n.enter_b08lF {\n  opacity: 0.01;\n  transition: opacity var(--time) ease-in; }\n\n.enterActive_2lPGz {\n  opacity: 1; }\n\n.leave_3S2Q- {\n  opacity: 1;\n  transition: opacity var(--time) ease-in; }\n\n.leaveActive_2i4qH {\n  opacity: 0; }\n", ""]);
	
	// exports
	exports.locals = {
		"enter": "enter_b08lF",
		"enterActive": "enterActive_2lPGz",
		"leave": "leave_3S2Q-",
		"leaveActive": "leaveActive_2i4qH"
	};

/***/ },
/* 142 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(143);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".modal_20AZ1 {\n  background: #fff;\n  padding: 0;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);\n  border-radius: 3px; }\n  .modal_20AZ1 .icon-close_5uuLa {\n    cursor: pointer; }\n\n.modal-backdrop_3rq0k {\n  z-index: 900; }\n\n.modal-body_2gT23 {\n  margin: 10px 0 0; }\n\n.modal-header_2dz68 {\n  margin: 10px 0; }\n\n.modal-title_8pOfE {\n  font-size: 1.4rem;\n  font-weight: normal;\n  color: #333;\n  margin: 5px 0; }\n\n.modal-footer_fyZtS {\n  border-top: 3px solid #e9ebf2;\n  text-align: right;\n  overflow: hidden; }\n  .modal-footer_fyZtS .btn-red_3zomi {\n    float: left;\n    margin-left: 0; }\n  .modal-footer_fyZtS button {\n    margin: 5px 0 5px 10px; }\n\n.modal-content_3ZIHb {\n  margin: 15px 0;\n  line-height: 1.5; }\n\n.confirm-modal_k5GF0 {\n  background: #fff;\n  padding: 20px 30px; }\n  .confirm-modal_k5GF0 p {\n    font-size: 1.2rem; }\n\n.modal-plus_1_TST {\n  padding: 20px 30px; }\n", ""]);
	
	// exports
	exports.locals = {
		"modal": "modal_20AZ1",
		"icon-close": "icon-close_5uuLa",
		"modal-backdrop": "modal-backdrop_3rq0k",
		"modal-body": "modal-body_2gT23",
		"modal-header": "modal-header_2dz68",
		"modal-title": "modal-title_8pOfE",
		"modal-footer": "modal-footer_fyZtS",
		"btn-red": "btn-red_3zomi",
		"modal-content": "modal-content_3ZIHb",
		"confirm-modal": "confirm-modal_k5GF0",
		"modal-plus": "modal-plus_1_TST"
	};

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Modal = __webpack_require__(135);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _Modal3 = __webpack_require__(142);
	
	var _Modal4 = _interopRequireDefault(_Modal3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ModalPlus = function (_Component) {
	    _inherits(ModalPlus, _Component);
	
	    function ModalPlus() {
	        _classCallCheck(this, ModalPlus);
	
	        return _possibleConstructorReturn(this, (ModalPlus.__proto__ || Object.getPrototypeOf(ModalPlus)).apply(this, arguments));
	    }
	
	    _createClass(ModalPlus, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props;
	            var title = _props.title;
	            var open = _props.open;
	            var onRequestClose = _props.onRequestClose;
	            var width = _props.width;
	            var actions = _props.actions;
	
	            return _react2.default.createElement(_Modal2.default, { open: open, onRequestClose: onRequestClose, width: width || 600 }, _react2.default.createElement("div", { className: _Modal4.default['modal-plus'] }, title && _react2.default.createElement("div", { className: _Modal4.default['modal-header'] }, _react2.default.createElement("h1", { className: _Modal4.default['modal-title'] }, title)), _react2.default.createElement("div", { className: _Modal4.default['modal-body'] }, this.props.children), actions && actions.map(function (action, index) {
	                return _react2.default.cloneElement(action, {
	                    key: index
	                });
	            })));
	        }
	    }]);
	
	    return ModalPlus;
	}(_react.Component);
	
	exports.default = ModalPlus;

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Modal = __webpack_require__(134);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _ModalFooter = __webpack_require__(146);
	
	var _ModalFooter2 = _interopRequireDefault(_ModalFooter);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(142);
	var Dialog = function (_Component) {
	    _inherits(Dialog, _Component);
	
	    function Dialog(props) {
	        _classCallCheck(this, Dialog);
	
	        return _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).call(this, props));
	    }
	
	    _createClass(Dialog, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var onConfirm = _props.onConfirm;
	            var onRequestClose = _props.onRequestClose;
	            var open = _props.open;
	
	            return _react2.default.createElement(_Modal2.default, { open: open, onRequestClose: onRequestClose, width: this.props.width }, _react2.default.createElement("div", { styleName: "confirm-modal" }, this.props.title && _react2.default.createElement("div", { styleName: "modal-header" }, _react2.default.createElement("h1", { styleName: "modal-title" }, this.props.title)), _react2.default.createElement("div", { styleName: "modal-content" }, this.props.children), _react2.default.createElement(_ModalFooter2.default, { onConfirm: onConfirm, onCancel: onRequestClose })));
	        }
	    }]);
	
	    return Dialog;
	}(_react.Component);
	Dialog = __decorate([(0, _reactCssModules2.default)(styles)], Dialog);
	exports.default = Dialog;

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _form = __webpack_require__(147);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(165);
	function ModalFooter(props) {
	    var onConfirm = props.onConfirm;
	    var onCancel = props.onCancel;
	
	    return _react2.default.createElement("div", { className: styles['modal-footer'] }, _react2.default.createElement(_form.Button, { color: "blue", onClick: onConfirm }, '\u786E\u8BA4'), onCancel && _react2.default.createElement(_form.Button, { color: "white", onClick: onCancel }, '\u53D6\u6D88'));
	}
	exports.default = ModalFooter;

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Textarea = exports.SelectizeInput = exports.Input = exports.Button = undefined;
	
	var _Button = __webpack_require__(148);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Input = __webpack_require__(152);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _SelectizeInput = __webpack_require__(156);
	
	var _SelectizeInput2 = _interopRequireDefault(_SelectizeInput);
	
	var _Textarea = __webpack_require__(160);
	
	var _Textarea2 = _interopRequireDefault(_Textarea);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Button = _Button2.default;
	exports.Input = _Input2.default;
	exports.SelectizeInput = _SelectizeInput2.default;
	exports.Textarea = _Textarea2.default;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Button = __webpack_require__(149);
	
	var _Button2 = _interopRequireDefault(_Button);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Button2.default;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _classnames2 = __webpack_require__(120);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(150);
	var Button = function (_Component) {
	    _inherits(Button, _Component);
	
	    function Button(props) {
	        _classCallCheck(this, Button);
	
	        var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));
	
	        _this.state = {
	            isMouseOver: false
	        };
	        return _this;
	    }
	
	    _createClass(Button, [{
	        key: "render",
	        value: function render() {
	            var _classnames,
	                _this2 = this;
	
	            var _props = this.props;
	            var onClick = _props.onClick;
	            var className = _props.className;
	            var color = _props.color;
	            var size = _props.size;
	            var isFluid = _props.isFluid;
	            var width = _props.width;
	            var to = _props.to;
	
	            var style = {};
	            var styleName = (0, _classnames3.default)((_classnames = {
	                'btn': true,
	                'btn--hover': this.state.isMouseOver,
	                'btn--fluid': isFluid
	            }, _defineProperty(_classnames, "btn--" + color, Boolean(color)), _defineProperty(_classnames, "btn--" + size, Boolean(size)), _classnames));
	            if (this.props.to) {
	                onClick = function onClick(e) {
	                    e.preventDefault();
	                    _helpers2.default.redirect(to);
	                };
	            } else {
	                onClick = function onClick(e) {
	                    e.preventDefault();
	                    if (_this2.props.onClick) {
	                        _this2.props.onClick(e);
	                    }
	                };
	            }
	            if (typeof width !== 'undefined') {
	                style = {
	                    width: width
	                };
	            }
	            var props = (0, _lodash2.default)(this.props).omit(['to', 'color', 'size', 'isFluid', 'width', 'styles']).assign({}, {
	                className: className || '',
	                onClick: onClick,
	                style: style
	            }).value();
	            return _react2.default.createElement("button", __assign({}, props, { styleName: styleName, onMouseOver: function onMouseOver() {
	                    _this2.setState({
	                        isMouseOver: true
	                    });
	                }, onMouseOut: function onMouseOut() {
	                    _this2.setState({
	                        isMouseOver: false
	                    });
	                } }), this.props.children);
	        }
	    }]);
	
	    return Button;
	}(_react.Component);
	Button = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Button);
	Button.defaultProps = {
	    color: 'blue'
	};
	exports.default = Button;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(151);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".btn_M2NhQ {\n  color: #fff;\n  background-color: #1B267F;\n  border-color: #1B267F;\n  padding: 3px 12px;\n  font-size: 1rem;\n  border-radius: 3px;\n  transition: all 0.2s 0s;\n  outline: none;\n  border: 1px solid transparent;\n  display: inline-block;\n  margin: 5px 0;\n  cursor: pointer; }\n  .btn_M2NhQ:hover {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d; }\n  .btn_M2NhQ:focus, .btn_M2NhQ.focus_ptKD_ {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n  .btn_M2NhQ:active, .btn_M2NhQ.active_156lK {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n    .btn_M2NhQ:active:hover, .btn_M2NhQ:active:focus, .btn_M2NhQ:active.focus_ptKD_, .btn_M2NhQ.active_156lK:hover, .btn_M2NhQ.active_156lK:focus, .btn_M2NhQ.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #0c1138;\n      border-color: #050716;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9 !important; }\n  .btn_M2NhQ.disabled_2GlXh:focus, .btn_M2NhQ.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ:disabled:focus, .btn_M2NhQ:disabled.focus_ptKD_ {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.disabled_2GlXh:hover, .btn_M2NhQ:disabled:hover {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.disabled_2GlXh, .btn_M2NhQ:disabled {\n    cursor: not-allowed;\n    opacity: .65; }\n  .btn_M2NhQ:active:hover {\n    box-shadow: none; }\n\n.btn--hover_2KwUv {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); }\n\n.btn_M2NhQ.btn--blue_20YQo {\n  color: #fff;\n  background-color: #1B267F;\n  border-color: #1B267F; }\n  .btn_M2NhQ.btn--blue_20YQo:hover {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d; }\n  .btn_M2NhQ.btn--blue_20YQo:focus, .btn_M2NhQ.btn--blue_20YQo.focus_ptKD_ {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n  .btn_M2NhQ.btn--blue_20YQo:active, .btn_M2NhQ.btn--blue_20YQo.active_156lK {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n    .btn_M2NhQ.btn--blue_20YQo:active:hover, .btn_M2NhQ.btn--blue_20YQo:active:focus, .btn_M2NhQ.btn--blue_20YQo:active.focus_ptKD_, .btn_M2NhQ.btn--blue_20YQo.active_156lK:hover, .btn_M2NhQ.btn--blue_20YQo.active_156lK:focus, .btn_M2NhQ.btn--blue_20YQo.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #0c1138;\n      border-color: #050716;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9 !important; }\n  .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh:focus, .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--blue_20YQo:disabled:focus, .btn_M2NhQ.btn--blue_20YQo:disabled.focus_ptKD_ {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh:hover, .btn_M2NhQ.btn--blue_20YQo:disabled:hover {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n\n.btn_M2NhQ.btn--orange_Ecn3s {\n  color: #fff;\n  background-color: #ee9333;\n  border-color: #ee9333; }\n  .btn_M2NhQ.btn--orange_Ecn3s:hover {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412; }\n  .btn_M2NhQ.btn--orange_Ecn3s:focus, .btn_M2NhQ.btn--orange_Ecn3s.focus_ptKD_ {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62; }\n  .btn_M2NhQ.btn--orange_Ecn3s:active, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62; }\n    .btn_M2NhQ.btn--orange_Ecn3s:active:hover, .btn_M2NhQ.btn--orange_Ecn3s:active:focus, .btn_M2NhQ.btn--orange_Ecn3s:active.focus_ptKD_, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK:hover, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK:focus, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #bb6710;\n      border-color: #95530c;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62 !important; }\n  .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh:focus, .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--orange_Ecn3s:disabled:focus, .btn_M2NhQ.btn--orange_Ecn3s:disabled.focus_ptKD_ {\n    background-color: #ee9333;\n    border-color: #ee9333; }\n  .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh:hover, .btn_M2NhQ.btn--orange_Ecn3s:disabled:hover {\n    background-color: #ee9333;\n    border-color: #ee9333; }\n\n.btn_M2NhQ.btn--red_3EKC3 {\n  color: #fff;\n  background-color: #d42020;\n  border-color: #d42020; }\n  .btn_M2NhQ.btn--red_3EKC3:hover {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818; }\n  .btn_M2NhQ.btn--red_3EKC3:focus, .btn_M2NhQ.btn--red_3EKC3.focus_ptKD_ {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444; }\n  .btn_M2NhQ.btn--red_3EKC3:active, .btn_M2NhQ.btn--red_3EKC3.active_156lK {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444; }\n    .btn_M2NhQ.btn--red_3EKC3:active:hover, .btn_M2NhQ.btn--red_3EKC3:active:focus, .btn_M2NhQ.btn--red_3EKC3:active.focus_ptKD_, .btn_M2NhQ.btn--red_3EKC3.active_156lK:hover, .btn_M2NhQ.btn--red_3EKC3.active_156lK:focus, .btn_M2NhQ.btn--red_3EKC3.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #891515;\n      border-color: #650f0f;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444 !important; }\n  .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh:focus, .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--red_3EKC3:disabled:focus, .btn_M2NhQ.btn--red_3EKC3:disabled.focus_ptKD_ {\n    background-color: #d42020;\n    border-color: #d42020; }\n  .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh:hover, .btn_M2NhQ.btn--red_3EKC3:disabled:hover {\n    background-color: #d42020;\n    border-color: #d42020; }\n\n.btn_M2NhQ.btn--white_3Rv2J {\n  color: #333;\n  background-color: #fff;\n  border-color: #fff; }\n  .btn_M2NhQ.btn--white_3Rv2J:hover {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0; }\n  .btn_M2NhQ.btn--white_3Rv2J:focus, .btn_M2NhQ.btn--white_3Rv2J.focus_ptKD_ {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px white; }\n  .btn_M2NhQ.btn--white_3Rv2J:active, .btn_M2NhQ.btn--white_3Rv2J.active_156lK {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px white; }\n    .btn_M2NhQ.btn--white_3Rv2J:active:hover, .btn_M2NhQ.btn--white_3Rv2J:active:focus, .btn_M2NhQ.btn--white_3Rv2J:active.focus_ptKD_, .btn_M2NhQ.btn--white_3Rv2J.active_156lK:hover, .btn_M2NhQ.btn--white_3Rv2J.active_156lK:focus, .btn_M2NhQ.btn--white_3Rv2J.active_156lK.focus_ptKD_ {\n      color: #333;\n      background-color: #d4d4d4;\n      border-color: #bfbfbf;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px white !important; }\n  .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh:focus, .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--white_3Rv2J:disabled:focus, .btn_M2NhQ.btn--white_3Rv2J:disabled.focus_ptKD_ {\n    background-color: #fff;\n    border-color: #fff; }\n  .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh:hover, .btn_M2NhQ.btn--white_3Rv2J:disabled:hover {\n    background-color: #fff;\n    border-color: #fff; }\n", ""]);
	
	// exports
	exports.locals = {
		"btn": "btn_M2NhQ",
		"focus": "focus_ptKD_",
		"active": "active_156lK",
		"disabled": "disabled_2GlXh",
		"btn--hover": "btn--hover_2KwUv",
		"btn--blue": "btn--blue_20YQo",
		"btn--orange": "btn--orange_Ecn3s",
		"btn--red": "btn--red_3EKC3",
		"btn--white": "btn--white_3Rv2J"
	};

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Input = __webpack_require__(153);
	
	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Input2.default;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _classnames = __webpack_require__(120);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(154);
	var Input = function (_Component) {
	    _inherits(Input, _Component);
	
	    function Input(props) {
	        _classCallCheck(this, Input);
	
	        return _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));
	    }
	
	    _createClass(Input, [{
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var props = Object.assign({}, this.props);
	            delete props.className;
	            var _props = this.props;
	            var error = _props.error;
	            var touched = _props.touched;
	
	            var showError = error && touched;
	            return _react2.default.createElement("div", { styleName: (0, _classnames2.default)({ 'input-wrap': !showError, 'input-wrap--error': showError }), className: this.props.className || '' }, _react2.default.createElement("input", { styleName: "input", placeholder: this.props.placeholder, value: this.props.value, onChange: function onChange(e) {
	                    _this2.props.onChange(e);
	                }, type: this.props.type ? this.props.type : 'text', name: this.props.name ? this.props.name : null }), showError && _react2.default.createElement("div", { styleName: "error-msg" }, error));
	        }
	    }]);
	
	    return Input;
	}(_react.Component);
	Input = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Input);
	exports.default = Input;

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(155);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".input-wrap_1uL9i, .input-wrap--error_oOHxx {\n  margin: 10px 0;\n  position: relative; }\n\n.input_c1thg {\n  width: 100%;\n  padding: 5px 5px;\n  border: 1px solid #ddd;\n  transition: border-color .3s;\n  line-height: 25px;\n  outline: none; }\n\n.input_c1thg:focus {\n  border-color: #1B267F; }\n\n.input-wrap--error_oOHxx .input_c1thg {\n  border-color: #cc0000; }\n\n.error-msg_1VjPs {\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  line-height: 25px;\n  color: #cc0000; }\n", ""]);
	
	// exports
	exports.locals = {
		"input-wrap": "input-wrap_1uL9i",
		"input-wrap--error": "input-wrap--error_oOHxx",
		"input": "input_c1thg",
		"error-msg": "error-msg_1VjPs"
	};

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SelectizeInput = __webpack_require__(157);
	
	var _SelectizeInput2 = _interopRequireDefault(_SelectizeInput);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SelectizeInput2.default;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Icon = __webpack_require__(118);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _classnames = __webpack_require__(120);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _isDescendant = __webpack_require__(97);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(158);
	var SelectizeInput = function (_Component) {
	    _inherits(SelectizeInput, _Component);
	
	    function SelectizeInput(props) {
	        _classCallCheck(this, SelectizeInput);
	
	        var _this = _possibleConstructorReturn(this, (SelectizeInput.__proto__ || Object.getPrototypeOf(SelectizeInput)).call(this, props));
	
	        _this.state = {
	            showOptions: false,
	            focus: false,
	            value: '',
	            expendedOptionIndex: 0
	        };
	        _this.handleOutsideClick = _this.handleOutsideClick.bind(_this);
	        _this.focusInput = _this.focusInput.bind(_this);
	        _this.handleInputChange = _this.handleInputChange.bind(_this);
	        return _this;
	    }
	
	    _createClass(SelectizeInput, [{
	        key: "addValue",
	        value: function addValue(newValue) {
	            var _this2 = this;
	
	            if (!this.props.useValue) {
	                this.props.onValuesChange(this.props.values.concat(newValue));
	                if (this.props.onOptionsChange) {
	                    this.props.onOptionsChange(this.props.options.map(function (option) {
	                        return option.value === newValue.value ? Object.assign({}, option, { disabled: true }) : option;
	                    }));
	                }
	                // React setState 是异步的，如果都是用 state 管理则会出现同时调用 setState 的情况，从而造成问题
	                setTimeout(function () {
	                    _this2.clearInputValue();
	                }, 1);
	                if (typeof this.props.stayFocused === 'undefined' || this.props.stayFocused !== false) {
	                    this.focusInput();
	                }
	                this.hideOptions();
	            } else {
	                this.props.onInputChange(newValue.name);
	                this.hideOptions();
	            }
	        }
	    }, {
	        key: "showOptions",
	        value: function showOptions() {
	            this.setState({
	                showOptions: true
	            });
	        }
	    }, {
	        key: "hideOptions",
	        value: function hideOptions() {
	            this.setState({
	                showOptions: false
	            });
	        }
	    }, {
	        key: "removeValue",
	        value: function removeValue(index) {
	            var newValues = [];
	            var removedValue = void 0;
	            if (index === -1) {
	                newValues = this.props.values.slice(0, this.props.values.length - 1);
	                removedValue = this.props.values[this.props.values.length - 1].value;
	            } else {
	                newValues = this.props.values.filter(function (v, i) {
	                    removedValue = v.value;
	                    return i !== index;
	                });
	            }
	            if (this.props.onOptionsChange) {
	                this.props.onOptionsChange(this.props.options.map(function (option) {
	                    return option.value === removedValue ? Object.assign({}, option, { disabled: false }) : option;
	                }));
	            }
	            this.props.onValuesChange(newValues);
	        }
	    }, {
	        key: "clearInputValue",
	        value: function clearInputValue() {
	            this.props.onInputChange('');
	        }
	    }, {
	        key: "handleKeyPress",
	        value: function handleKeyPress(e) {
	            if (e.keyCode === 8 && !this.props.value && this.props.values.length !== 0) {
	                this.removeValue(-1);
	            }
	        }
	    }, {
	        key: "handleInputChange",
	        value: function handleInputChange(e) {
	            this.props.onInputChange(e.target.value);
	            if ((this.props.options || []).length !== 0) {
	                this.showOptions();
	            }
	        }
	    }, {
	        key: "focusInput",
	        value: function focusInput() {
	            this.input.focus();
	        }
	    }, {
	        key: "handleOutsideClick",
	        value: function handleOutsideClick(e) {
	            if ((0, _isDescendant2.default)(this.inputWrap, e.target) || this.inputWrap === e.target) {
	                this.focusInput();
	                this.showOptions();
	            } else {
	                this.hideOptions();
	            }
	        }
	    }, {
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {
	            var optionsLoaded = (nextProps.options || []).length !== 0 && (this.props.options || []).length === 0;
	            if (optionsLoaded && this.state.focus) {
	                this.showOptions();
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            window.addEventListener('click', this.handleOutsideClick);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            window.removeEventListener('click', this.handleOutsideClick);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this3 = this;
	
	            var _props = this.props;
	            var label = _props.label;
	            var values = _props.values;
	            var onAddNewValue = _props.onAddNewValue;
	            var omitSelectedValuesFromOptions = _props.omitSelectedValuesFromOptions;
	
	            var value = this.props.value || '';
	            var options = this.props.options || [];
	            var inputWidth = values.length > 0 ? value.length === 0 ? 16 : value.length * 16 : '100%';
	            var placeholder = values.length > 0 ? '' : this.props.placeholder;
	            var filteredOptions = options.filter(function (option) {
	                if (omitSelectedValuesFromOptions) {
	                    var valueOfValues = _lodash2.default.map(values, 'value');
	                    return valueOfValues.indexOf(option.value) === -1;
	                }
	                return true;
	            });
	            var selectizeInputStyleName = (0, _classnames2.default)({
	                'selectize-input': true,
	                'selectize-input--focus': this.state.focus,
	                'selectize-input--empty': values.length === 0
	            });
	            return _react2.default.createElement("div", { styleName: "selectize-wrap", className: this.props.className || '' }, label ? _react2.default.createElement("label", { className: "form-label" }, label) : null, _react2.default.createElement("div", { styleName: selectizeInputStyleName, ref: function ref(_ref) {
	                    _this3.inputWrap = _ref;
	                } }, values.map(function (v, index) {
	                return _react2.default.createElement("span", { key: index, styleName: "selectize-tag" }, v.name, _react2.default.createElement(_Icon2.default, { styleName: "icon-remove", size: 20, name: "close", onClick: function onClick(e) {
	                        _this3.removeValue(index);
	                    } }));
	            }), _react2.default.createElement("input", { style: { width: inputWidth }, ref: function ref(_ref2) {
	                    _this3.input = _ref2;
	                }, value: value, placeholder: placeholder, onBlur: function onBlur(e) {
	                    _this3.setState({ focus: false });
	                }, onFocus: function onFocus(e) {
	                    _this3.setState({ focus: true });
	                }, onChange: this.handleInputChange, onKeyDown: function onKeyDown(e) {
	                    _this3.handleKeyPress(e);
	                } })), this.state.showOptions && (filteredOptions.length !== 0 || onAddNewValue) ? _react2.default.createElement("ul", { styleName: "query-results" }, filteredOptions.map(function (option, index) {
	                if (option.disabled) {
	                    return _react2.default.createElement("li", { key: index, className: "disabled" }, option.name);
	                }
	                return _react2.default.createElement("li", { key: index, onClick: function onClick(e) {
	                        _this3.addValue(option);
	                        if (_this3.props.onOptionClick) {
	                            _this3.props.onOptionClick(option);
	                        }
	                    } }, _react2.default.createElement("span", null, option.name));
	            }), onAddNewValue ? _react2.default.createElement("li", { onClick: function onClick(e) {
	                    onAddNewValue(_this3.props.value);
	                }, className: "add" }, "\u6DFB\u52A0 ", _react2.default.createElement("strong", null, this.props.value)) : null) : null);
	        }
	    }]);
	
	    return SelectizeInput;
	}(_react.Component);
	SelectizeInput = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], SelectizeInput);
	SelectizeInput['defaultProps'] = {
	    omitSelectedValuesFromOptions: true
	};
	exports.default = SelectizeInput;

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(159);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".selectize-wrap_P-y2- {\n  margin: 10px 0;\n  position: relative; }\n\n.selectize-input_36ULe {\n  min-width: 300px;\n  border: 1px solid #ddd;\n  margin: 10px 0;\n  box-sizing: border-box;\n  transition: all 0s;\n  cursor: text;\n  background: #fff; }\n  .selectize-input_36ULe input {\n    background: transparent;\n    line-height: 22px; }\n\n.selectize-input--focus_30LU5 {\n  border-color: #1B267F; }\n\n.selectize-input--empty_3eAmI {\n  background: #fff;\n  padding: 5px 5px 0; }\n\n.selectize-input_36ULe input {\n  border: none;\n  outline: none;\n  margin-bottom: 5px; }\n\n.query-results_3Ph-Z {\n  margin-top: -3px;\n  margin-bottom: 5px;\n  padding: 5px;\n  border-radius: 3px;\n  position: absolute;\n  left: 0;\n  width: 100%;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.32);\n  background: #fff;\n  z-index: 900; }\n\n.query-results_3Ph-Z li {\n  padding: 0 7px;\n  line-height: 2;\n  cursor: pointer;\n  border-radius: 3px; }\n  .query-results_3Ph-Z li:hover {\n    background: #1B267F;\n    color: #fff; }\n\n.selectize-tag_1PWDE {\n  background: #1B267F;\n  cursor: pointer;\n  border-radius: 3px;\n  padding: 3px 25px 3px 5px;\n  margin: 5px;\n  color: #fff;\n  display: inline-block;\n  position: relative; }\n\n.icon-remove_2BuSV {\n  font-size: 0.8rem;\n  margin-left: 5px;\n  position: absolute;\n  right: 5px;\n  top: 2px; }\n", ""]);
	
	// exports
	exports.locals = {
		"selectize-wrap": "selectize-wrap_P-y2-",
		"selectize-input": "selectize-input_36ULe",
		"selectize-input--focus": "selectize-input--focus_30LU5",
		"selectize-input--empty": "selectize-input--empty_3eAmI",
		"query-results": "query-results_3Ph-Z",
		"selectize-tag": "selectize-tag_1PWDE",
		"icon-remove": "icon-remove_2BuSV"
	};

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Textarea = __webpack_require__(161);
	
	var _Textarea2 = _interopRequireDefault(_Textarea);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Textarea2.default;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(162);
	var Textarea = function (_Component) {
	    _inherits(Textarea, _Component);
	
	    function Textarea(props) {
	        _classCallCheck(this, Textarea);
	
	        return _possibleConstructorReturn(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).call(this, props));
	    }
	
	    _createClass(Textarea, [{
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            return _react2.default.createElement("div", { styleName: "textarea-wrap", className: this.props.className || '' }, _react2.default.createElement("textarea", { placeholder: this.props.placeholder, value: this.props.value, onChange: function onChange(e) {
	                    _this2.props.onChange(e);
	                }, styleName: "textarea", type: this.props.type ? this.props.type : 'text', name: this.props.name ? this.props.name : null }));
	        }
	    }]);
	
	    return Textarea;
	}(_react.Component);
	Textarea = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Textarea);
	exports.default = Textarea;

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(163);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	exports.i(__webpack_require__(164), "");
	
	// module
	exports.push([module.id, ".textarea-wrap_1BTJU {\n  margin: 10px 0;\n  position: relative;\n}\n\n.textarea_2xSxv {\n  width: 100%;\n  padding: 5px;\n  border: 1px solid var(--gray);\n  outline: none;\n  height: 100px;\n  transition: border-color .3s;\n}\n\n.textarea_2xSxv:focus {\n  border-color: var(--blue);\n}\n", ""]);
	
	// exports
	exports.locals = {
		"textarea-wrap": "textarea-wrap_1BTJU",
		"textarea": "textarea_2xSxv"
	};

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  /* colors */\n  --text: #666;\n  --text-dark: #333;\n  --text-light: #999;\n  --blue: #1B267F;\n  --shiny-blue: #1B267F;\n  --dark-blue: #04082E;\n  --gray: #ddd;\n\n  --branding-height: 60px;\n  --sidebar-width: 300px;\n  --input-line-height: 25px;\n  --input-padding: 5px;\n  --reading-width: 700px;\n\n  /* style values */\n  --font-size-root: 16px;\n  --border-radius: 3px;\n  --font-family: Helvetica, Arial, \"Hiragino Sans GB\", \"Hiragino Sans GB W3\", \"Microsoft Yahei\", sans-serif;\n  --font-family-mono: Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n\n  --shadow-z1: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  --shadow-z2: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  --shadow-z3: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  --shadow-z4: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  --shadow-z5: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n\n  --shadow-y1: 0 2px 12px rgba(0, 0, 0, 0.32);\n\n  \\--page-title: {\n    margin: 35px 0;\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: #333;\n  };\n\n  /* z-index */\n  --z-selectize-options: 900;\n  --z-dropdown-menu: 900;\n}\n", ""]);
	
	// exports


/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(166);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".modal-footer_FaHiU button {\n  margin-right: 10px; }\n", ""]);
	
	// exports
	exports.locals = {
		"modal-footer": "modal-footer_FaHiU"
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _Branding = __webpack_require__(168);
	
	var _Branding2 = _interopRequireDefault(_Branding);
	
	var _Colophon = __webpack_require__(187);
	
	var _Colophon2 = _interopRequireDefault(_Colophon);
	
	var _actions = __webpack_require__(90);
	
	var _selectors = __webpack_require__(110);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var App = function (_Component) {
	    _inherits(App, _Component);
	
	    function App(props) {
	        _classCallCheck(this, App);
	
	        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));
	
	        _this.handleLogout = _this.handleLogout.bind(_this);
	        return _this;
	    }
	
	    _createClass(App, [{
	        key: 'handleLogout',
	        value: function handleLogout() {
	            this.props.userLogout();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (this.props.session.user.role !== 'visitor') {
	                this.props.fetchShelf();
	            }
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var userLoggedIn = this.props.session.user.role === 'visitor' && nextProps.session.user.role !== 'visitor';
	            if (userLoggedIn) {
	                this.props.fetchShelf();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var isAdmin = false;
	            var username = null;
	            if (this.props.session.user.role !== 'visitor') {
	                isAdmin = this.props.session.user.role === 'admin';
	                username = this.props.session.user.username;
	            }
	            var bookShelf = this.props.bookShelf;
	
	            var bookShelfList = bookShelf.map(function (book) {
	                return {
	                    title: book.title,
	                    id: book.id
	                };
	            });
	            return _react2.default.createElement("div", null, _react2.default.createElement(_Branding2.default, { recentReading: bookShelfList, isAdmin: isAdmin, username: username, onLogout: this.handleLogout }), this.props.children, _react2.default.createElement(_Colophon2.default, null));
	        }
	    }]);
	
	    return App;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notification: state.components.notification,
	        session: state.session,
	        bookShelf: selectors.shelfBooks()(state)
	    };
	}, { fetchShelf: _actions.fetchShelf, userLogout: _actions.userLogout })(App);

/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Branding = __webpack_require__(169);
	
	var _Branding2 = _interopRequireDefault(_Branding);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Branding2.default;

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _layout = __webpack_require__(170);
	
	var _Dropdown = __webpack_require__(173);
	
	var _Logo = __webpack_require__(179);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(185);
	var Branding = function (_Component) {
	    _inherits(Branding, _Component);
	
	    function Branding(props) {
	        _classCallCheck(this, Branding);
	
	        var _this = _possibleConstructorReturn(this, (Branding.__proto__ || Object.getPrototypeOf(Branding)).call(this, props));
	
	        _this.state = {
	            isDropdownMenuVisible: false
	        };
	        _this.handleLogoutClick = _this.handleLogoutClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(Branding, [{
	        key: "toggleDropdownMenu",
	        value: function toggleDropdownMenu() {
	            this.setState({
	                isDropdownMenuVisible: !this.state.isDropdownMenuVisible
	            });
	        }
	    }, {
	        key: "handleLogoutClick",
	        value: function handleLogoutClick(e) {
	            this.props.onLogout();
	            e.preventDefault();
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var isAdmin = this.props.isAdmin ? this.props.isAdmin : false;
	            var _props = this.props;
	            var username = _props.username;
	            var recentReading = _props.recentReading;
	
	            return _react2.default.createElement("div", { styleName: "branding " + (this.props.className ? this.props.className : '') }, _react2.default.createElement(_layout.Container, { className: "clearfix" }, _react2.default.createElement("div", null, _react2.default.createElement("div", { className: "left" }, _react2.default.createElement(_Logo2.default, null)), _react2.default.createElement("div", { className: "left", styleName: "nav" }, _react2.default.createElement("ul", { styleName: "nav-links" }, _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/browse" }, "\u6D4F\u89C8")))), username ? _react2.default.createElement("div", { styleName: "nav--user" }, recentReading.length !== 0 && _react2.default.createElement(_Dropdown.Dropdown, { styleName: "dropdown-recent-reading", title: "最近阅读" }, recentReading.slice(0, 5).map(function (book, index) {
	                return _react2.default.createElement(_Dropdown.DropdownItem, { key: index }, _react2.default.createElement(_reactRouter.Link, { to: "/viewer/book/" + book.id }, book.title));
	            }), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/shelf" }, "\u67E5\u770B\u5168\u90E8"))), _react2.default.createElement(_Dropdown.Dropdown, { title: _react2.default.createElement("div", { style: { display: 'inline-block' } }, username, isAdmin && _react2.default.createElement("span", { className: "badge" }, "\u7BA1\u7406\u5458")) }, isAdmin === true && _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/console" }, "\u63A7\u5236\u53F0")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/shelf" }, "\u4E66\u67B6")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/profile" }, "\u4E2A\u4EBA\u4E3B\u9875")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/preference" }, "\u8BBE\u7F6E")), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement("a", { onClick: this.handleLogoutClick, href: "#" }, "\u9000\u51FA")))) : _react2.default.createElement("div", { styleName: "nav--user" }, _react2.default.createElement("ul", { styleName: "nav-links" }, _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/signin" }, "\u767B\u5F55")), _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/signup" }, "\u6CE8\u518C")))))));
	        }
	    }]);
	
	    return Branding;
	}(_react.Component);
	Branding = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Branding);
	exports.default = Branding;

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Container = undefined;
	
	var _Container = __webpack_require__(171);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Container = _Container2.default;

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Container = __webpack_require__(172);
	
	var _Container2 = _interopRequireDefault(_Container);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Container2.default;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Container = function (_Component) {
	    _inherits(Container, _Component);
	
	    function Container() {
	        _classCallCheck(this, Container);
	
	        return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
	    }
	
	    _createClass(Container, [{
	        key: 'render',
	        value: function render() {
	            var className = (this.props.isFluid ? 'container-fluid' : 'container') + (this.props.className ? ' ' + this.props.className : '');
	            return _react2.default.createElement("div", { className: className }, this.props.children);
	        }
	    }]);
	
	    return Container;
	}(_react.Component);
	
	exports.default = Container;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DropdownItemSep = exports.Dropdown = exports.DropdownItem = undefined;
	
	var _Dropdown = __webpack_require__(174);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _DropdownItem = __webpack_require__(177);
	
	var _DropdownItem2 = _interopRequireDefault(_DropdownItem);
	
	var _DropdownItemSep = __webpack_require__(178);
	
	var _DropdownItemSep2 = _interopRequireDefault(_DropdownItemSep);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.DropdownItem = _DropdownItem2.default;
	exports.Dropdown = _Dropdown2.default;
	exports.DropdownItemSep = _DropdownItemSep2.default;
	exports.default = _Dropdown2.default;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _isDescendant = __webpack_require__(97);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(175);
	var Dropdown = function (_Component) {
	    _inherits(Dropdown, _Component);
	
	    function Dropdown(props) {
	        _classCallCheck(this, Dropdown);
	
	        var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));
	
	        _this.state = {
	            showMenu: false
	        };
	        _this.handleGlobalClick = _this.handleGlobalClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(Dropdown, [{
	        key: "handleGlobalClick",
	        value: function handleGlobalClick(e) {
	            // 检查点击的 dom 是否是 dropdown 的子元素
	            // 如果是那么就不做处理，而 toggleDropdown 会响应
	            // 解决了页面上同时用两个 dropdown 时，其中一个展开，点击另一个前者不合上的问题
	            if (!(0, _isDescendant2.default)(this.dropdown, e.target)) {
	                this.setState({
	                    showMenu: false
	                });
	            } else {
	                // 如果使用了原生事件，尽量不要混合使用 synthetic 事件，react 的生产版本似乎会出现相关的 bug
	                this.setState({
	                    showMenu: !this.state.showMenu
	                });
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            window.addEventListener('click', this.handleGlobalClick);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            window.removeEventListener('click', this.handleGlobalClick);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var _props = this.props;
	            var className = _props.className;
	            var style = _props.style;
	
	            return _react2.default.createElement("div", { ref: function ref(_ref) {
	                    _this2.dropdown = _ref;
	                }, styleName: "dropdown", className: className || '' }, _react2.default.createElement("div", { styleName: "dropdown-toggle" }, _react2.default.createElement("span", null, this.props.title), _react2.default.createElement("span", { styleName: "dropdown-caret" })), this.state.showMenu && _react2.default.createElement("div", { styleName: style === 'dark' ? 'dropdown-menu--dark' : 'dropdown-menu' }, _react2.default.createElement("ul", null, this.props.children)));
	        }
	    }]);
	
	    return Dropdown;
	}(_react.Component);
	Dropdown = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Dropdown);
	exports.default = Dropdown;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(176);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".dropdown-item_2C1dz {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden; }\n\n.light-link_2QDeA {\n  color: #ddd; }\n  .light-link_2QDeA:hover {\n    color: #fff; }\n\n.dropdown_SZfyp {\n  display: inline-block;\n  cursor: pointer;\n  position: relative; }\n\n.dropdown-toggle_34Qfd {\n  display: block;\n  user-select: none;\n  -webkit-user-select: none;\n  max-height: 100%; }\n\n.dropdown-menu_1HgbS {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.22);\n  line-height: 2.2;\n  font-size: 1rem;\n  text-align: left;\n  background: #222;\n  position: absolute;\n  right: 0;\n  width: 150px;\n  overflow: hidden;\n  padding: 5px 0;\n  z-index: 900; }\n\n.dropdown-caret_FcBWI {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  vertical-align: middle;\n  content: \"\";\n  border: 4px solid;\n  border-right-color: transparent;\n  border-bottom-color: transparent;\n  border-left-color: transparent;\n  margin-left: 5px; }\n\n.dropdown-item_2C1dz {\n  display: block;\n  padding: 0 25px;\n  transition: all 0s; }\n  .dropdown-item_2C1dz:hover {\n    background: #3c3c3c; }\n  .dropdown-item_2C1dz:active {\n    background: #3c3c3c; }\n\n.sep_10Y0o {\n  margin: 5px 0;\n  height: 1px;\n  background: #3c3c3c; }\n\n.dropdown-menu--dark_6eVPX {\n  background: #1B267F; }\n  .dropdown-menu--dark_6eVPX .sep_10Y0o {\n    background: #1f2c94; }\n  .dropdown-menu--dark_6eVPX .dropdown-item_2C1dz:hover {\n    background: #1f2c94; }\n", ""]);
	
	// exports
	exports.locals = {
		"dropdown-item": "dropdown-item_2C1dz light-link_2QDeA",
		"light-link": "light-link_2QDeA",
		"dropdown": "dropdown_SZfyp",
		"dropdown-toggle": "dropdown-toggle_34Qfd",
		"dropdown-menu": "dropdown-menu_1HgbS",
		"dropdown-caret": "dropdown-caret_FcBWI",
		"sep": "sep_10Y0o",
		"dropdown-menu--dark": "dropdown-menu--dark_6eVPX dropdown-menu_1HgbS"
	};

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(175);
	function DropdownItem(props) {
	    return _react2.default.createElement("li", null, typeof props.children === 'string' ? _react2.default.createElement("div", { className: styles['dropdown-item'] }, props.children) : _react2.default.cloneElement(props.children, {
	        className: styles['dropdown-item']
	    }));
	}
	exports.default = DropdownItem;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(175);
	function DropdownItemSep(props) {
	    return _react2.default.createElement("li", { className: styles['sep'] });
	}
	exports.default = DropdownItemSep;

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Logo = __webpack_require__(180);
	
	var _Logo2 = _interopRequireDefault(_Logo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Logo2.default;

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(181);
	function Logo(props) {
	    var dark = props.dark;
	    var to = props.to;
	
	    var styleName = dark ? 'logo--dark' : 'logo';
	    return _react2.default.createElement("h1", { className: styles['logo-wrap'] }, _react2.default.createElement(_reactRouter.Link, { className: styles[styleName], to: to }, "readr"));
	}
	Logo['defaultProps'] = {
	    to: '/'
	};
	exports.default = Logo;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(182);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  --branding-height: 60px;\n}\n\n.logo-wrap_CP5P9 {\n  margin: 0;\n  line-height: var(--branding-height);\n  color: #fff;\n  margin-top: -3px;\n  display: inline-block;\n}\n\n.logo_3qcbV {\n  background: url(" + __webpack_require__(183) + ") no-repeat left;\n  width: 70px;\n  height: var(--branding-height);\n  background-size: 70px;\n  text-indent: -999em;\n  display: inline-block;\n}\n\n.logo--dark_38F-H {\n  background: url(" + __webpack_require__(184) + ") no-repeat left;\n  background-size: 70px;\n}\n", ""]);
	
	// exports
	exports.locals = {
		"logo-wrap": "logo-wrap_CP5P9",
		"logo": "logo_3qcbV",
		"logo--dark": "logo--dark_38F-H logo_3qcbV"
	};

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "img/logo.81eb83d7f7.png";

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "img/logo-dark.4754e8aa78.png";

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(186);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".nav-link_3X0T8 {\n  color: #fff; }\n  .nav-link_3X0T8:hover {\n    color: #ddd; }\n\n.branding_8EVAt {\n  min-height: 60px;\n  background: #222; }\n\n.dropdown-menu_5Sc50 {\n  position: absolute;\n  top: 60px;\n  right: 0;\n  z-index: 999; }\n\n.username_3Mm6z,\n.nav-links_2wTYY {\n  line-height: 60px; }\n\n.nav_1oj1z, .nav--user_1L7Lb {\n  position: relative;\n  color: #fff;\n  cursor: pointer;\n  padding: 0 10px;\n  line-height: 60px;\n  display: inline-block; }\n\n.dropdown-recent-reading_2oyjH {\n  margin-right: 15px; }\n\n.nav--user_1L7Lb {\n  float: right; }\n\n.nav-link_3X0T8 {\n  padding: 0 5px; }\n\n.nav-item_f83bh {\n  display: inline-block; }\n\n.recent-reading_1kJKh {\n  margin-right: 15px; }\n", ""]);
	
	// exports
	exports.locals = {
		"nav-link": "nav-link_3X0T8",
		"branding": "branding_8EVAt",
		"dropdown-menu": "dropdown-menu_5Sc50",
		"username": "username_3Mm6z",
		"nav-links": "nav-links_2wTYY",
		"nav": "nav_1oj1z",
		"nav--user": "nav--user_1L7Lb",
		"dropdown-recent-reading": "dropdown-recent-reading_2oyjH",
		"nav-item": "nav-item_f83bh",
		"recent-reading": "recent-reading_1kJKh"
	};

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Colophon = __webpack_require__(188);
	
	var _Colophon2 = _interopRequireDefault(_Colophon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Colophon2.default;

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Container = __webpack_require__(171);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(189);
	var Colophon = function (_Component) {
	    _inherits(Colophon, _Component);
	
	    function Colophon() {
	        _classCallCheck(this, Colophon);
	
	        return _possibleConstructorReturn(this, (Colophon.__proto__ || Object.getPrototypeOf(Colophon)).apply(this, arguments));
	    }
	
	    _createClass(Colophon, [{
	        key: "render",
	        value: function render() {
	            return _react2.default.createElement("div", { className: "colophon", styleName: "colophon" }, _react2.default.createElement(_Container2.default, null, _react2.default.createElement("p", null, "\xA9 2015\uFF0D2016 readrweb.com, all rights reserved")));
	        }
	    }]);
	
	    return Colophon;
	}(_react.Component);
	Colophon = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Colophon);
	exports.default = Colophon;

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(190);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".colophon_3cQJ0 {\n  font-size: 1rem;\n  padding: 20px 0;\n  color: #999; }\n", ""]);
	
	// exports
	exports.locals = {
		"colophon": "colophon_3cQJ0"
	};

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _layout = __webpack_require__(170);
	
	var _ConsoleBranding = __webpack_require__(192);
	
	var _ConsoleBranding2 = _interopRequireDefault(_ConsoleBranding);
	
	var _actions = __webpack_require__(90);
	
	var _ConsoleSidebar = __webpack_require__(196);
	
	var _ConsoleSidebar2 = _interopRequireDefault(_ConsoleSidebar);
	
	var _menus = __webpack_require__(200);
	
	var _menus2 = _interopRequireDefault(_menus);
	
	var _DocContainer = __webpack_require__(201);
	
	var _DocContainer2 = _interopRequireDefault(_DocContainer);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Console = function (_Component) {
	    _inherits(Console, _Component);
	
	    function Console(props) {
	        _classCallCheck(this, Console);
	
	        var _this = _possibleConstructorReturn(this, (Console.__proto__ || Object.getPrototypeOf(Console)).call(this, props));
	
	        _this.handleLogout = _this.handleLogout.bind(_this);
	        return _this;
	    }
	
	    _createClass(Console, [{
	        key: 'redirectIfNotAdmin',
	        value: function redirectIfNotAdmin() {
	            var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
	
	            if (props.session.user.role !== 'admin') {
	                _helpers2.default.redirect('/');
	            }
	        }
	    }, {
	        key: 'handleLogout',
	        value: function handleLogout() {
	            this.props.userLogout();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var userRoleChanged = this.props.session.user.role !== nextProps.session.user.role;
	            if (userRoleChanged) {
	                this.redirectIfNotAdmin(nextProps);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var isAdmin = this.props.session.user.role === 'admin';
	            var username = this.props.session.user.username;
	            var pathname = this.props.routing.locationBeforeTransitions ? this.props.routing.locationBeforeTransitions.pathname : 'console';
	            var contentStyle = {
	                marginLeft: 320,
	                paddingTop: 60
	            };
	            return isAdmin ? _react2.default.createElement(_DocContainer2.default, { bodyClass: "console" }, _react2.default.createElement(_ConsoleBranding2.default, { isAdmin: isAdmin, username: username, onLogout: this.handleLogout }), _react2.default.createElement(_layout.Container, { isFluid: true }, _react2.default.createElement(_ConsoleSidebar2.default, { menuMapping: _menus2.default, currentPath: pathname }), _react2.default.createElement("div", { style: contentStyle }, this.props.children))) : _react2.default.createElement("div", { style: { textAlign: 'center', margin: '20px 0' } }, "ACCESS DENIED!");
	        }
	    }]);
	
	    return Console;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notifications: state.components.notifications,
	        session: state.session,
	        routing: state.routing
	    };
	}, { sendNotification: _actions.sendNotification, userAuth: _actions.userAuth, userLogout: _actions.userLogout })(Console);

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ConsoleBranding = __webpack_require__(193);
	
	var _ConsoleBranding2 = _interopRequireDefault(_ConsoleBranding);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ConsoleBranding2.default;

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	var _Container = __webpack_require__(171);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	var _Dropdown = __webpack_require__(173);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _Logo = __webpack_require__(179);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(194);
	var ConsoleBranding = function (_Component) {
	    _inherits(ConsoleBranding, _Component);
	
	    function ConsoleBranding(props) {
	        _classCallCheck(this, ConsoleBranding);
	
	        var _this = _possibleConstructorReturn(this, (ConsoleBranding.__proto__ || Object.getPrototypeOf(ConsoleBranding)).call(this, props));
	
	        _this.state = {
	            isDropdownMenuVisible: false
	        };
	        _this.handleLogoutClick = _this.handleLogoutClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(ConsoleBranding, [{
	        key: "handleLogoutClick",
	        value: function handleLogoutClick(e) {
	            this.props.onLogout();
	            e.preventDefault();
	        }
	    }, {
	        key: "toggleDropdownMenu",
	        value: function toggleDropdownMenu() {
	            this.setState({
	                isDropdownMenuVisible: !this.state.isDropdownMenuVisible
	            });
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var username = this.props.username;
	            var isAdmin = this.props.isAdmin ? this.props.isAdmin : 'false';
	            return _react2.default.createElement("div", { styleName: "branding" }, _react2.default.createElement(_Container2.default, { isFluid: true, className: "clearfix" }, _react2.default.createElement("div", null, _react2.default.createElement("div", { className: "left" }, _react2.default.createElement(_Logo2.default, { to: "/console" })), _react2.default.createElement("div", { styleName: "sub-name" }, _react2.default.createElement("span", { styleName: "sub" }, "\u63A7\u5236\u53F0")), _react2.default.createElement("div", { styleName: "nav right" }, username && _react2.default.createElement(_Dropdown.Dropdown, { style: "dark", title: _react2.default.createElement("span", null, username, isAdmin && _react2.default.createElement("span", { className: "badge badge--dark" }, "\u7BA1\u7406\u5458")) }, _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/" }, "\u56DE\u5230 Readr")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/profile" }, "\u4E2A\u4EBA\u4E3B\u9875")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/preference" }, "\u8BBE\u7F6E")), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement("a", { onClick: this.handleLogoutClick, href: "#" }, "\u9000\u51FA")))))));
	        }
	    }]);
	
	    return ConsoleBranding;
	}(_react.Component);
	ConsoleBranding = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], ConsoleBranding);
	exports.default = ConsoleBranding;

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(195);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	exports.i(__webpack_require__(186), undefined);
	
	// module
	exports.push([module.id, ".branding_3goRG {\n  background: #1B267F;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 800;\n  height: 60px; }\n\n.sep_AT6Gl {\n  margin: 0 10px;\n  opacity: .6;\n  font-size: 1rem; }\n\n.sub_Iyhms {\n  opacity: .8;\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  margin-top: -3px;\n  display: inline-block; }\n\n.right_1ZAQP {\n  float: right; }\n\n.sub-name_2T8ah {\n  float: left;\n  margin-left: 15px; }\n  .sub-name_2T8ah span {\n    display: inline-block;\n    line-height: 60px;\n    height: 60px;\n    color: #fff; }\n\n.nav_10yn4 {\n  color: #fff;\n  line-height: 60px;\n  height: 60px; }\n", ""]);
	
	// exports
	exports.locals = {
		"branding": "branding_3goRG",
		"sep": "sep_AT6Gl",
		"sub": "sub_Iyhms",
		"right": "right_1ZAQP",
		"sub-name": "sub-name_2T8ah",
		"nav": "nav_10yn4 " + __webpack_require__(186).locals["nav"] + ""
	};

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ConsoleSidebar = __webpack_require__(197);
	
	var _ConsoleSidebar2 = _interopRequireDefault(_ConsoleSidebar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ConsoleSidebar2.default;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	var _Icon = __webpack_require__(118);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(198);
	var ConsoleSidebar = function (_Component) {
	    _inherits(ConsoleSidebar, _Component);
	
	    function ConsoleSidebar(props) {
	        _classCallCheck(this, ConsoleSidebar);
	
	        return _possibleConstructorReturn(this, (ConsoleSidebar.__proto__ || Object.getPrototypeOf(ConsoleSidebar)).call(this, props));
	    }
	
	    _createClass(ConsoleSidebar, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var menuMapping = _props.menuMapping;
	            var currentPath = _props.currentPath;
	
	            var currentMenu = {
	                rootIndex: 0,
	                subIndex: 0
	            };
	            menuMapping.forEach(function (menu, rootIndex) {
	                var subIndex = void 0;
	                var result = menu.subMenu.filter(function (item, index) {
	                    if (item.path === currentPath) {
	                        subIndex = index;
	                        return true;
	                    }
	                });
	                if (result.length > 0) {
	                    currentMenu.rootIndex = rootIndex;
	                    currentMenu.subIndex = subIndex;
	                }
	            });
	            var rootMenu = _react2.default.createElement("ul", { styleName: "nav-side-root" }, menuMapping.map(function (menu, index) {
	                return _react2.default.createElement("li", { key: index, styleName: index !== currentMenu.rootIndex ? 'root-item' : 'root-item--current' }, _react2.default.createElement(_reactRouter.Link, { to: menu.path }, _react2.default.createElement(_Icon2.default, { size: 25, styleName: "icon", name: menu.component })));
	            }));
	            var subMenu = _react2.default.createElement("ul", { styleName: "nav-side-sub" }, menuMapping[currentMenu.rootIndex].subMenu.map(function (menu, index) {
	                return _react2.default.createElement("li", { key: index, styleName: index !== currentMenu.subIndex ? 'sub-item' : 'sub-item--current' }, _react2.default.createElement(_reactRouter.Link, { to: menu.path }, menu.displayName));
	            }));
	            return _react2.default.createElement("div", { styleName: "sidebar-left" }, rootMenu, subMenu);
	        }
	    }]);
	
	    return ConsoleSidebar;
	}(_react.Component);
	ConsoleSidebar = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], ConsoleSidebar);
	exports.default = ConsoleSidebar;

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(199);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	exports.i(__webpack_require__(164), "");
	
	// module
	exports.push([module.id, ":root {\n  --nav-root-width: 80px;\n  --item-line-height: 50px;\n}\n\n.sidebar-left_2Nfva {\n  position: fixed;\n  left: 0;\n  top: var(--branding-height);\n  height: 100%;\n  width: var(--sidebar-width);\n  background: #E4E4E4;\n}\n\n.nav-side_3L8f6 {\n  position: fixed;\n  left: 0;\n  height: 100%;\n}\n\n.nav-side-root_1_PBg {\n  width: var(--nav-root-width);\n  background: #04082E;\n}\n\n.nav-side-root--current_3BV5t {\n  background: red;\n}\n\n.nav-side-sub_5Q_f5 {\n  width: calc(var(--sidebar-width) - var(--nav-root-width));\n  left: var(--nav-root-width);\n}\n\n/* item */\n.nav-item_2r1zn {\n  height: var(--item-line-height);\n  line-height: var(--item-line-height);\n\n  & a {\n    display: block;\n    padding: 0 15px;\n    color: #fff;\n    height: var(--item-line-height);\n  }\n}\n\n.icon_26PwG {\n  margin-top: 12px;\n}\n\n.root-item_VPwuM {\n  text-align: center;\n\n  & a:hover {\n    background: color(var(--dark-blue) l(+ 10%));\n  }\n}\n\n.root-item--current_3LMnD {\n  background: var(--blue);\n}\n\n.sub-item_waA-O {\n\n  & a {\n    color: var(--text);\n  }\n  & a:hover {\n    background: gray(200);\n  }\n}\n\n.sub-item--current_3CzmM {\n\n  & a,\n  & a:hover {\n    color: var(--blue);\n    background: #fff;\n  }\n}\n", ""]);
	
	// exports
	exports.locals = {
		"sidebar-left": "sidebar-left_2Nfva",
		"nav-side": "nav-side_3L8f6",
		"nav-side-root": "nav-side-root_1_PBg nav-side_3L8f6",
		"nav-side-root--current": "nav-side-root--current_3BV5t nav-side-root_1_PBg nav-side_3L8f6",
		"nav-side-sub": "nav-side-sub_5Q_f5 nav-side_3L8f6",
		"nav-item": "nav-item_2r1zn",
		"icon": "icon_26PwG",
		"root-item": "root-item_VPwuM nav-item_2r1zn",
		"root-item--current": "root-item--current_3LMnD root-item_VPwuM nav-item_2r1zn",
		"sub-item": "sub-item_waA-O nav-item_2r1zn",
		"sub-item--current": "sub-item--current_3CzmM sub-item_waA-O nav-item_2r1zn"
	};

/***/ },
/* 200 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var menus = [{
	    component: 'books',
	    displayName: '',
	    path: '/console/books',
	    subMenu: [{
	        component: 'managebooks',
	        displayName: '书籍管理',
	        path: '/console/books'
	    },
	    // {
	    //   component: 'addbook',
	    //   displayName: '添加书籍',
	    //   path: '/console/books/new'
	    // },
	    {
	        component: 'addcollection',
	        displayName: '添加合集',
	        path: '/console/collections/new'
	    }]
	}, {
	    component: 'users',
	    displayName: '',
	    path: '/console/users',
	    subMenu: [{
	        component: 'manageusers',
	        displayName: '用户管理',
	        path: '/console/users'
	    }]
	}];
	exports.default = menus;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSideEffect = __webpack_require__(202);
	
	var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var defaultTitle = 'Readr';
	var DocContainer = function (_Component) {
	    _inherits(DocContainer, _Component);
	
	    function DocContainer() {
	        _classCallCheck(this, DocContainer);
	
	        return _possibleConstructorReturn(this, (DocContainer.__proto__ || Object.getPrototypeOf(DocContainer)).apply(this, arguments));
	    }
	
	    _createClass(DocContainer, [{
	        key: "render",
	        value: function render() {
	            var className = this.props.className;
	
	            return className ? _react2.default.createElement("div", { className: 'gb-doc-container' + className }, this.props.children) : _react2.default.createElement("div", { className: "gb-doc-container" }, this.props.children);
	        }
	    }]);
	
	    return DocContainer;
	}(_react.Component);
	DocContainer = __decorate([(0, _reactSideEffect2.default)(reducePropsToState, handleStateChangeOnClient)], DocContainer);
	function reducePropsToState(propsList) {
	    var innermostProps = propsList[propsList.length - 1];
	    var data = {};
	    if (innermostProps) {
	        data = _lodash2.default.pick(innermostProps, ['title', 'bodyClass']);
	        if (data.title && !innermostProps.useAsMasterTitle) {
	            data.title = data.title + " | " + defaultTitle;
	        } else {
	            data.title = data.title || defaultTitle;
	        }
	    }
	    data.bodyClass = propsList.filter(function (prop) {
	        return prop.bodyClass;
	    }).map(function (prop) {
	        return prop.bodyClass;
	    }).join(' ');
	    return data;
	}
	function handleStateChangeOnClient(propList) {
	    var title = propList.title;
	    var bodyClass = propList.bodyClass;
	
	    if (typeof bodyClass !== 'undefined') {
	        document.body.className = bodyClass;
	    } else {
	        document.body.removeAttribute('class');
	    }
	    if (typeof title !== 'undefined') {
	        document.title = title;
	    } else {
	        document.title = defaultTitle;
	    }
	}
	exports.default = DocContainer;

/***/ },
/* 202 */
/***/ function(module, exports) {

	module.exports = require("react-side-effect");

/***/ },
/* 203 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _api = __webpack_require__(204);
	
	Object.keys(_api).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _api[key];
	    }
	  });
	});
	
	var api = _interopRequireWildcard(_api);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = Object.assign({}, api);

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.logout = exports.auth = exports.userSignup = exports.userLogin = exports.fetchDoubanBooks = exports.fetchUsers = exports.fetchBooks = exports.fetchBookContent = exports.fetchBook = exports.fetchBookProgress = undefined;
	exports.fetchNormalized = fetchNormalized;
	exports.addCollection = addCollection;
	exports.addBook = addBook;
	exports.editBookMeta = editBookMeta;
	exports.addAuthor = addAuthor;
	exports.setProgress = setProgress;
	exports.deleteBook = deleteBook;
	
	var _callApi = __webpack_require__(205);
	
	var _callApi2 = _interopRequireDefault(_callApi);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _normalizeResponse = __webpack_require__(208);
	
	var _normalizeResponse2 = _interopRequireDefault(_normalizeResponse);
	
	var _schemas = __webpack_require__(103);
	
	var _schemas2 = _interopRequireDefault(_schemas);
	
	var _utils = __webpack_require__(92);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var API_ROOT = _helpers2.default.getApiRoot();
	/**
	 * general helper functions
	 */
	var parseEndpointWithOptions = function parseEndpointWithOptions(endpoint, options) {
	    if (typeof options === 'string') {
	        return options;
	    } else {
	        var queryString = _utils2.default.parseUrlencoded(options);
	        return endpoint + '?' + queryString;
	    }
	};
	function fetchNormalized(endpoint, schema) {
	    var fetchOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    if (endpoint.indexOf('http://') !== -1) {
	        return (0, _normalizeResponse2.default)((0, _callApi2.default)(endpoint, fetchOptions), schema);
	    }
	    return (0, _normalizeResponse2.default)((0, _callApi2.default)(API_ROOT + '/' + endpoint, fetchOptions), schema);
	}
	/**
	 * specific api services
	 */
	var fetchBookProgress = exports.fetchBookProgress = function fetchBookProgress(id) {
	    return fetchNormalized('user/books/' + id + '/progress', _schemas2.default.BOOK_PROGRESS);
	};
	var fetchBook = exports.fetchBook = function fetchBook(id) {
	    return fetchNormalized('books/' + id, _schemas2.default.BOOK);
	};
	var fetchBookContent = exports.fetchBookContent = function fetchBookContent(id) {
	    return fetchNormalized('books/' + id + '/content', _schemas2.default.BOOK_CONTENT);
	};
	var fetchBooks = exports.fetchBooks = function fetchBooks() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var withContent = options.withContent;
	
	    var apiOptions = !withContent ? {
	        exclude: 'content'
	    } : {};
	    apiOptions = _lodash2.default.assign({}, _lodash2.default.omit(options, ['withContent']), apiOptions);
	    return fetchNormalized(parseEndpointWithOptions('books', apiOptions), _schemas2.default.BOOK_ARRAY);
	};
	var fetchUsers = exports.fetchUsers = function fetchUsers(options) {
	    return fetchNormalized(parseEndpointWithOptions('users', options), _schemas2.default.USER_ARRAY);
	};
	// external apis
	var fetchDoubanBooks = exports.fetchDoubanBooks = function fetchDoubanBooks(keyword) {
	    return (0, _callApi2.default)(_common.DOUBAN_API_ROOT + '/book/search?count=10&q=' + keyword, {
	        useJsonp: true
	    });
	};
	var userLogin = exports.userLogin = function userLogin(data) {
	    return (0, _callApi2.default)(API_ROOT + '/auth', {
	        method: 'POST',
	        data: data
	    });
	};
	var userSignup = exports.userSignup = function userSignup(data) {
	    return (0, _callApi2.default)(API_ROOT + '/users', {
	        method: 'POST',
	        data: data
	    });
	};
	var auth = exports.auth = function auth() {
	    return (0, _callApi2.default)(API_ROOT + '/auth', {
	        method: 'GET'
	    });
	};
	var logout = exports.logout = function logout() {
	    return (0, _callApi2.default)(API_ROOT + '/auth/revoke', {
	        method: 'PUT'
	    });
	};
	function addCollection(data) {
	    return (0, _callApi2.default)(API_ROOT + '/collections', { method: 'POST', data: data });
	}
	function addBook(data) {
	    return (0, _callApi2.default)(API_ROOT + '/books', { method: 'POST', data: data });
	}
	function editBookMeta(bookId, data) {
	    return (0, _callApi2.default)(API_ROOT + '/books/' + bookId, { method: 'PUT', data: data });
	}
	function addAuthor(data) {
	    return (0, _callApi2.default)(API_ROOT + '/authors', { method: 'POST', data: data });
	}
	function setProgress(bookId, data) {
	    (0, _callApi2.default)(API_ROOT + '/user/books/' + bookId + '/progress', { method: 'PUT', data: data });
	}
	function deleteBook(id) {
	    return (0, _callApi2.default)(API_ROOT + '/books/' + id, {
	        method: 'DELETE'
	    });
	}

/***/ },
/* 205 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.callApi = callApi;
	
	__webpack_require__(206);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _jsonp = __webpack_require__(207);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultOptions = {
	    dataType: 'json',
	    method: 'GET',
	    credentials: 'same-origin'
	};
	// return fetch options
	var parseOptions = function parseOptions(originanOptions) {
	    var _Object$assign = Object.assign({}, defaultOptions, originanOptions);
	
	    var method = _Object$assign.method;
	    var data = _Object$assign.data;
	    var credentials = _Object$assign.credentials;
	    var dataType = _Object$assign.dataType;
	    var useJsonp = _Object$assign.useJsonp;
	
	    var fetchOptions = {};
	    if (useJsonp) {
	        return {
	            useJsonp: true
	        };
	    }
	    if (method) {
	        fetchOptions.method = method;
	    }
	    if (credentials) {
	        fetchOptions.credentials = credentials;
	    }
	    // handle request headers and body
	    if (method === 'POST' || method === 'PUT') {
	        var contentType = void 0;
	        var body = void 0;
	        if (dataType === 'json') {
	            contentType = 'application/json';
	            body = JSON.stringify(data);
	        } else {
	            contentType = 'application/x-www-form-urlencoded';
	            body = (0, _parseUrlencoded2.default)(data);
	            if (dataType !== 'urlencoded') {
	                console.warn('Unsupported dataType used "urlencoded" instead!');
	            }
	        }
	        fetchOptions.headers = {
	            'Content-Type': contentType,
	            'Access-Control-Request-Method': method
	        };
	        fetchOptions.body = body;
	    }
	    if (method === 'DELETE') {
	        fetchOptions.headers = {
	            'Access-Control-Request-Method': 'DELETE'
	        };
	    }
	    return fetchOptions;
	};
	// type Result = {
	//   json: any
	//   response: any
	// }
	function callApi(fullUrl) {
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    if (options.useJsonp) {
	        return (0, _jsonp2.default)(fullUrl);
	    }
	    return fetch(fullUrl, parseOptions(options)).then(function (response) {
	        if (response.status !== 204) {
	            return response.json().then(function (json) {
	                if (!response.ok) {
	                    return Promise.reject(json);
	                }
	                return { json: json, _response: response };
	            });
	        }
	        return { json: {}, _response: response };
	    });
	}
	exports.default = callApi;

/***/ },
/* 206 */
/***/ function(module, exports) {

	module.exports = require("isomorphic-fetch");

/***/ },
/* 207 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = jsonp;
	function jsonp(fullUrl) {
	    if (fullUrl.indexOf('douban') !== -1) {
	        var _ret = function () {
	            var id = new Date().valueOf();
	            var jsonpId = 'jsonp-' + id;
	            var jsonpCallback = 'jsonpCallback' + id;
	            var jsonpCallbackData = '__JSONP_DATA_' + id + '__';
	            window[jsonpCallback] = function (data) {
	                window[jsonpCallbackData] = data;
	            };
	            var script = document.createElement('script');
	            script.setAttribute('src', fullUrl + '&callback=' + jsonpCallback);
	            script.setAttribute('id', jsonpId);
	            document.body.appendChild(script);
	            return {
	                v: new Promise(function (resolve) {
	                    script.onload = function () {
	                        document.body.removeChild(document.getElementById(jsonpId));
	                        resolve({ json: window[jsonpCallbackData] });
	                    };
	                })
	            };
	        }();
	
	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	}

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = normalizeResponse;
	
	var _handleResponse = __webpack_require__(209);
	
	var _handleResponse2 = _interopRequireDefault(_handleResponse);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function normalizeResponse(resultPromise, schema) {
	    return resultPromise.then(function (response) {
	        return { response: (0, _handleResponse2.default)(response, schema) };
	    }, function (error) {
	        return { error: error };
	    });
	}

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _normalizr = __webpack_require__(104);
	
	var _parseQuery = __webpack_require__(95);
	
	var _parseQuery2 = _interopRequireDefault(_parseQuery);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var parseHeaderPageLinkByRel = function parseHeaderPageLinkByRel(links, rel) {
	    var link = links.split(',').find(function (s) {
	        return s.indexOf('rel="' + rel + '"') > -1;
	    });
	    if (!link) {
	        return undefined;
	    }
	    var url = link.split(';')[0].trim().slice(1, -1);
	    return {
	        // todo
	        page: parseInt(_lodash2.default.get((0, _parseQuery2.default)(url.split('?')[1] || ''), 'page', 0), 10),
	        url: url
	    };
	};
	function parseResHeaderToPagination(response) {
	    if (!response) {
	        return {};
	    }
	    var links = response.headers.get('link');
	    if (!links) {
	        return {};
	    }
	    var next = parseHeaderPageLinkByRel(links, 'next');
	    var last = parseHeaderPageLinkByRel(links, 'last');
	    return {
	        next: next,
	        last: last
	    };
	}
	function handleResponse(_ref, schema) {
	    var json = _ref.json;
	    var _response = _ref._response;
	
	    var camelizedJson = _humps2.default.camelizeKeys(json);
	
	    var _parseResHeaderToPagi = parseResHeaderToPagination(_response);
	
	    var next = _parseResHeaderToPagi.next;
	    var last = _parseResHeaderToPagi.last;
	
	    if (typeof schema !== 'undefined') {
	        return _lodash2.default.assign({}, (0, _normalizr.normalize)(camelizedJson, schema), {
	            _next: next,
	            _last: last
	        });
	    }
	    return camelizedJson;
	}
	exports.default = handleResponse;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(1, function (require) {
	            fn(null, __webpack_require__(211).default);
	        });
	    }
	};

/***/ },
/* 211 */,
/* 212 */
/***/ function(module, exports) {

	module.exports = require("redux");

/***/ },
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(223);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".content_deYS4 {\n  margin: 0 auto;\n  width: 550px;\n  position: relative;\n  overflow: hidden;\n  line-height: 1.9; }\n  .content_deYS4 p {\n    margin: 0;\n    min-height: 25px; }\n\n.page_26Jj7 {\n  display: block;\n  width: 100%;\n  overflow: hidden; }\n\n.page--fluid_20eQM { }\n  .page--fluid_20eQM .content_deYS4 {\n    width: 100%;\n    padding: 0 20px; }\n\n.page--init_1VHVM {\n  position: relative;\n  height: auto; }\n  .page--init_1VHVM .content_deYS4 {\n    height: auto; }\n\n.gb-line_3RYqK {\n  overflow: hidden; }\n\n.page-no_2_187 {\n  position: absolute;\n  left: 0;\n  top: 0;\n  border-top: 1px solid #e6e6e6;\n  padding: 0 10px;\n  color: #e6e6e6;\n  font-size: 0.8rem; }\n\n.white_1TVO9 {\n  color: #333; }\n\n.night_3alh8 {\n  color: #eee; }\n  .night_3alh8 a {\n    color: #fff;\n    text-decoration: underline; }\n\n.sepia_1CF69 {\n  color: #503220; }\n", ""]);
	
	// exports
	exports.locals = {
		"content": "content_deYS4",
		"page": "page_26Jj7",
		"page--fluid": "page--fluid_20eQM page_26Jj7",
		"page--init": "page--init_1VHVM",
		"gb-line": "gb-line_3RYqK",
		"page-no": "page-no_2_187",
		"white": "white_1TVO9",
		"night": "night_3alh8",
		"sepia": "sepia_1CF69"
	};

/***/ },
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var THEMES = exports.THEMES = {
	    WHITE: 'WHITE',
	    NIGHT: 'NIGHT',
	    SEPIA: 'SEPIA'
	};

/***/ },
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getNodeHeights = getNodeHeights;
	exports.groupNodesByPage = groupNodesByPage;
	exports.groupPageFromChapters = groupPageFromChapters;
	exports.resolveBookLocation = resolveBookLocation;
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(222);
	// 暂不支持包含图片的计算
	// 计算没有等待图片加载完成，所以结果是不正确的
	function getNodeHeights(nodes) {
	    var nodesHeight = [];
	    Array.prototype.forEach.call(nodes, function (node, index) {
	        if (node.className !== styles['gb-line']) {
	            console.error('Unsupported content found!');
	        }
	        nodesHeight.push(node.clientHeight);
	    });
	    return nodesHeight;
	}
	// long paragraph situation doesn't seem to affect this function
	// offset distance is always negtive or zero
	// the index will be of the paragraph with this offset at the end
	function getPageOffset(_ref) {
	    var pageIndex = _ref.pageIndex;
	    var pageHeight = _ref.pageHeight;
	    var nodeHeights = _ref.nodeHeights;
	
	    var offset = 0;
	    var nodeIndex = 0;
	    var nodeStartIndex = void 0;
	    if (pageIndex !== 0) {
	        var nodeHeightSum = 0;
	        while (nodeHeightSum <= pageHeight * pageIndex) {
	            nodeHeightSum += nodeHeights[nodeIndex];
	            nodeIndex++;
	        }
	        offset = nodeHeightSum - nodeHeights[nodeIndex - 1] - pageIndex * pageHeight;
	        nodeStartIndex = nodeIndex - 1;
	    } else {
	        nodeStartIndex = 0;
	    }
	    return { offset: offset, nodeStartIndex: nodeStartIndex };
	}
	function getNodesOfPage(_ref2) {
	    var pageIndex = _ref2.pageIndex;
	    var nodes = _ref2.nodes;
	    var pageHeight = _ref2.pageHeight;
	    var nodeHeights = _ref2.nodeHeights;
	
	    var _getPageOffset = getPageOffset({ pageIndex: pageIndex, pageHeight: pageHeight, nodeHeights: nodeHeights });
	
	    var offset = _getPageOffset.offset;
	    var nodeStartIndex = _getPageOffset.nodeStartIndex;
	
	    var nodeIndex = nodeStartIndex;
	    var nodeEndIndex = void 0;
	    var pageNodes = [];
	    var nodeHeightSum = offset + nodeHeights[nodeStartIndex];
	    nodeIndex++;
	    if (nodeHeightSum < pageHeight) {
	        while (nodeHeightSum <= pageHeight && nodeIndex !== nodes.length) {
	            nodeHeightSum += nodeHeights[nodeIndex];
	            nodeIndex++;
	        }
	        nodeEndIndex = nodeIndex - 1;
	    } else {
	        nodeEndIndex = nodeStartIndex;
	    }
	    for (var i = nodeStartIndex; i <= nodeEndIndex && i <= nodes.length - 1; i++) {
	        pageNodes.push(nodes[i]);
	    }
	    return { pageNodes: pageNodes, offset: offset };
	}
	function groupNodesByPage(nodes, nodeHeights, pageHeight) {
	    var pageStartFrom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	    var chapterId = arguments[4];
	
	    var pages = [];
	    var pageHeightSum = nodeHeights.reduce(function (a, b) {
	        return a + b;
	    }, 0);
	    var pageSum = Math.ceil(pageHeightSum / pageHeight);
	    if (nodeHeights.length === 0) {
	        return [{
	            nodes: nodes,
	            meta: {
	                pageNo: 1 + pageStartFrom,
	                offset: 0,
	                chapterId: chapterId
	            }
	        }];
	    }
	    // finally
	
	    var _loop = function _loop(i) {
	        var _getNodesOfPage = getNodesOfPage({ pageIndex: i, nodes: nodes, nodeHeights: nodeHeights, pageHeight: pageHeight });
	
	        var pageNodes = _getNodesOfPage.pageNodes;
	        var offset = _getNodesOfPage.offset;
	
	        var findIdOfHTags = function findIdOfHTags(mdNode) {
	            var pattern = /<h\d id="(.*)">(.*)<\/h\d>/;
	            var result = mdNode.match(pattern);
	            if (result) {
	                return result[1];
	            }
	            return null;
	        };
	        var hash = pageNodes.map(function (node) {
	            return findIdOfHTags(node);
	        }).filter(function (id) {
	            return Boolean(id);
	        });
	        pages.push({
	            nodes: pageNodes,
	            meta: {
	                pageNo: pageStartFrom + i + 1,
	                offset: offset,
	                chapterId: chapterId,
	                hash: hash
	            }
	        });
	    };
	
	    for (var i = 0; i < pageSum; i++) {
	        _loop(i);
	    }
	    return pages;
	}
	function groupPageFromChapters(contentOfChapters, nodeHeightsOfChapters, pageHeight) {
	    var pageStartFrom = 0;
	    var allPages = [];
	    var t0 = new Date().valueOf();
	    contentOfChapters.forEach(function (chapter, index) {
	        var pages = groupNodesByPage(chapter.markdown.split('\n\n'), nodeHeightsOfChapters[index].nodeHeights, pageHeight, pageStartFrom, chapter.id);
	        allPages = allPages.concat(pages);
	        pageStartFrom = pageStartFrom + pages.length;
	    });
	    var t1 = new Date().valueOf();
	    _helpers2.default.print('Grouping nodes takes ' + (t1 - t0) + 'ms');
	    return allPages;
	}
	function resolveBookLocation(href, computedPages) {
	    var chapterId = href.split('$')[0];
	    var hash = href.split('$')[1];
	    var i = 0;
	    var foundChapterPage = void 0;
	    while (i < computedPages.length) {
	        var page = computedPages[i];
	        if ('#' + page.meta.chapterId === chapterId) {
	            foundChapterPage = page.meta.pageNo;
	            if (hash) {
	                if (page.meta.hash && page.meta.hash.indexOf(hash) !== -1) {
	                    _helpers2.default.print('with hash', page.meta.pageNo);
	                    return page.meta.pageNo;
	                }
	            } else {
	                _helpers2.default.print('without hash', page.meta.pageNo);
	                return page.meta.pageNo;
	            }
	        }
	        i++;
	    }
	    if (!foundChapterPage) {
	        throw new Error('未找到位置！');
	    }
	    console.warn('所在章节未找到位置，已跳转至章节！');
	    _helpers2.default.print('foundChapterPage', foundChapterPage);
	    return foundChapterPage;
	}

/***/ },
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(2, function (require) {
	            fn(null, __webpack_require__(263).default);
	        });
	    }
	};

/***/ },
/* 263 */,
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(3, function (require) {
	            fn(null, __webpack_require__(265).default);
	        });
	    }
	};

/***/ },
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(4, function (require) {
	            fn(null, __webpack_require__(286).default);
	        });
	    }
	};

/***/ },
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(5, function (require) {
	            fn(null, __webpack_require__(290).default);
	        });
	    }
	};

/***/ },
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(6, function (require) {
	            fn(null, __webpack_require__(294).default);
	        });
	    }
	};

/***/ },
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(7, function (require) {
	            fn(null, __webpack_require__(302).default);
	        });
	    }
	};

/***/ },
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(8, function (require) {
	            fn(null, __webpack_require__(306).default);
	        });
	    }
	};

/***/ },
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(9, function (require) {
	            fn(null, __webpack_require__(310).default);
	        });
	    }
	};

/***/ },
/* 310 */,
/* 311 */,
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(10, function (require) {
	            fn(null, __webpack_require__(313).default);
	        });
	    }
	};

/***/ },
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(11, function (require) {
	            fn(null, __webpack_require__(320).default);
	        });
	    }
	};

/***/ },
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(12, function (require) {
	            fn(null, __webpack_require__(325).default);
	        });
	    }
	};

/***/ },
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(13, function (require) {
	            fn(null, __webpack_require__(329).default);
	        });
	    }
	};

/***/ },
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(14, function (require) {
	            fn(null, __webpack_require__(345).default);
	        });
	    }
	};

/***/ },
/* 345 */,
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(15, function (require) {
	            fn(null, __webpack_require__(347).default);
	        });
	    }
	};

/***/ },
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(16, function (require) {
	            fn(null, __webpack_require__(351).default);
	        });
	    }
	};

/***/ },
/* 351 */,
/* 352 */,
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(17, function (require) {
	            fn(null, __webpack_require__(354).default);
	        });
	    }
	};

/***/ },
/* 354 */,
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _AppError = __webpack_require__(356);
	
	var _AppError2 = _interopRequireDefault(_AppError);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _AppError2.default;

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(122);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _Logo = __webpack_require__(179);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(357);
	var AppError = function (_Component) {
	    _inherits(AppError, _Component);
	
	    function AppError() {
	        _classCallCheck(this, AppError);
	
	        return _possibleConstructorReturn(this, (AppError.__proto__ || Object.getPrototypeOf(AppError)).apply(this, arguments));
	    }
	
	    _createClass(AppError, [{
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var title = _props.title;
	            var message = _props.message;
	
	            return _react2.default.createElement("div", null, _react2.default.createElement("div", { styleName: "header" }, _react2.default.createElement(_Logo2.default, { dark: true })), _react2.default.createElement("div", { styleName: "body" }, _react2.default.createElement("h1", { styleName: "title" }, title), _react2.default.createElement("div", null, message)));
	        }
	    }]);
	
	    return AppError;
	}(_react.Component);
	AppError = __decorate([(0, _reactCssModules2.default)(styles)], AppError);
	exports.default = AppError;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(358);
	    var insertCss = __webpack_require__(126);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(125)();
	// imports
	
	
	// module
	exports.push([module.id, ".header_3jAuQ {\n  text-align: center; }\n\n.title_17FS5 {\n  font-size: 1.6rem;\n  color: #222; }\n\n.body_3v-hj {\n  text-align: center;\n  width: 500px;\n  margin: 0 auto;\n  padding: 150px 0;\n  font-size: 1.1rem; }\n", ""]);
	
	// exports
	exports.locals = {
		"header": "header_3jAuQ",
		"title": "title_17FS5",
		"body": "body_3v-hj"
	};

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.render500 = exports.renderHtml = exports.matchRoute = exports.getStore = undefined;
	
	var _getStore = __webpack_require__(360);
	
	var _getStore2 = _interopRequireDefault(_getStore);
	
	var _matchRoute = __webpack_require__(372);
	
	var _matchRoute2 = _interopRequireDefault(_matchRoute);
	
	var _renderHtml = __webpack_require__(373);
	
	var _renderHtml2 = _interopRequireDefault(_renderHtml);
	
	var _render = __webpack_require__(396);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.getStore = _getStore2.default;
	exports.matchRoute = _matchRoute2.default;
	exports.renderHtml = _renderHtml2.default;
	exports.render500 = _render2.default;
	exports.default = _renderHtml2.default;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _sagas = __webpack_require__(361);
	
	var _sagas2 = _interopRequireDefault(_sagas);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Get Redux store tree with initial fetched data
	 */
	function getStore(renderProps, fetchData, userSession, store) {
	    if (fetchData === true) {
	        var _ret = function () {
	            var params = renderProps.params;
	            var query = renderProps.location.query;
	            var fetchDataFns = renderProps.components.map(function (comp) {
	                return comp.fetchData || null;
	            }).filter(function (comp) {
	                return Boolean(comp);
	            });
	            store.runSaga(_sagas2.default);
	            if (fetchDataFns.length !== 0) {
	                return {
	                    v: Promise.all(fetchDataFns.map(function (fetchDataFn) {
	                        // 这边应该是对 store 做了 mutation
	                        var result = fetchDataFn({ store: store, params: params, query: query, userSession: userSession });
	                        // todo: 遇到请求数组会报错
	                        if (Array.isArray(result)) {
	                            return Promise.all(result).then(function () {
	                                return 0;
	                            }, function (error) {
	                                return error;
	                            });
	                        }
	                        // todo
	                        // 结果不是 Promise, saga 的 action 暂时这么处理
	                        if (!result || !result.then) {
	                            return 0;
	                        }
	                        return result.then(function () {
	                            return 0;
	                        }, function (error) {
	                            return error;
	                        });
	                    })).then(function () {
	                        return store;
	                    }, function (error) {
	                        return error;
	                    })
	                };
	            }
	            return {
	                v: Promise.resolve(store)
	            };
	        }();
	
	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	    return Promise.resolve(store);
	}
	exports.default = getStore;

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = rootSaga;
	
	var _effects = __webpack_require__(362);
	
	var _loadRequests = __webpack_require__(363);
	
	var _loadRequests2 = _interopRequireDefault(_loadRequests);
	
	var _loginFlow = __webpack_require__(368);
	
	var _loginFlow2 = _interopRequireDefault(_loginFlow);
	
	var _viewerTasks = __webpack_require__(369);
	
	var _viewerTasks2 = _interopRequireDefault(_viewerTasks);
	
	var _test = __webpack_require__(371);
	
	var _test2 = _interopRequireDefault(_test);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _marked = [rootSaga].map(regeneratorRuntime.mark);
	
	function rootSaga() {
	    return regeneratorRuntime.wrap(function rootSaga$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    _context.next = 2;
	                    return [(0, _effects.fork)(_loadRequests2.default), (0, _effects.fork)(_loginFlow2.default), (0, _effects.fork)(_viewerTasks2.default), (0, _effects.fork)(_test.watchTest2), (0, _effects.fork)(_test2.default)];
	
	                case 2:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}

/***/ },
/* 362 */
/***/ function(module, exports) {

	module.exports = require("redux-saga/effects");

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RESERVED_ACTION_KYES = exports.API_CONFIG_KEYS = undefined;
	exports.default = watchAllLoadRequests;
	
	var _effects = __webpack_require__(362);
	
	var _actions = __webpack_require__(90);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _utils = __webpack_require__(364);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [handleLoad, watchAllLoadRequests].map(regeneratorRuntime.mark);
	
	var OPTIONS = 'options';
	var ID = 'id';
	var DATA = 'data';
	var TYPE = 'type';
	var API_CONFIG_KEYS = exports.API_CONFIG_KEYS = [OPTIONS, ID, DATA];
	var RESERVED_ACTION_KYES = exports.RESERVED_ACTION_KYES = [TYPE].concat(API_CONFIG_KEYS);
	var fetchBook = _utils.fetchEntity.bind(null, actions.book, _api2.default.fetchBook);
	var fetchBookContent = _utils.fetchEntity.bind(null, actions.bookContent, _api2.default.fetchBookContent);
	var fetchBooks = _utils.fetchEntity.bind(null, actions.books, _api2.default.fetchBooks);
	var fetchUsers = _utils.fetchEntity.bind(null, actions.users, _api2.default.fetchUsers);
	function handleLoad(fetchFn, parsedAction, callApi) {
	    var apiConfig, payload;
	    return regeneratorRuntime.wrap(function handleLoad$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    apiConfig = parsedAction.apiConfig;
	                    payload = parsedAction.payload;
	                    // 在检查是否有数据的算法完成之前默认直接 call api
	
	                    if (!(typeof callApi === 'undefined' || callApi === true)) {
	                        _context.next = 5;
	                        break;
	                    }
	
	                    _context.next = 5;
	                    return (0, _effects.call)(fetchFn, apiConfig, payload);
	
	                case 5:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}
	function watchAllLoadRequests() {
	    var action, apiConfig, payload, parsedAction;
	    return regeneratorRuntime.wrap(function watchAllLoadRequests$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    if (false) {
	                        _context2.next = 24;
	                        break;
	                    }
	
	                    _context2.next = 3;
	                    return (0, _effects.take)(actions.LOAD_ACTIONS);
	
	                case 3:
	                    action = _context2.sent;
	                    apiConfig = _lodash2.default.pick(action, API_CONFIG_KEYS);
	                    // 如果直接使用 payload 可能在 pagination 之类的 reducer 里面会有一些麻烦
	                    // 因为可能比较难判断哪个是 key
	
	                    payload = _lodash2.default.omit(action, RESERVED_ACTION_KYES);
	                    parsedAction = { apiConfig: apiConfig, payload: payload };
	                    _context2.t0 = action.type;
	                    _context2.next = _context2.t0 === ACTION_TYPES.LOAD_USERS ? 10 : _context2.t0 === ACTION_TYPES.LOAD_BOOKS ? 13 : _context2.t0 === ACTION_TYPES.LOAD_BOOK ? 16 : _context2.t0 === ACTION_TYPES.LOAD_BOOK_CONTENT ? 19 : 22;
	                    break;
	
	                case 10:
	                    _context2.next = 12;
	                    return (0, _effects.fork)(handleLoad, fetchUsers, parsedAction);
	
	                case 12:
	                    return _context2.abrupt('break', 22);
	
	                case 13:
	                    _context2.next = 15;
	                    return (0, _effects.fork)(handleLoad, fetchBooks, parsedAction);
	
	                case 15:
	                    return _context2.abrupt('break', 22);
	
	                case 16:
	                    _context2.next = 18;
	                    return (0, _effects.fork)(handleLoad, fetchBook, parsedAction);
	
	                case 18:
	                    return _context2.abrupt('break', 22);
	
	                case 19:
	                    _context2.next = 21;
	                    return (0, _effects.fork)(handleLoad, fetchBookContent, parsedAction);
	
	                case 21:
	                    return _context2.abrupt('break', 22);
	
	                case 22:
	                    _context2.next = 0;
	                    break;
	
	                case 24:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RESERVED_ACTION_KYES = exports.API_CONFIG_KEYS = undefined;
	exports.fetchEntity = fetchEntity;
	
	var _cache = __webpack_require__(365);
	
	var cache = _interopRequireWildcard(_cache);
	
	var _effects = __webpack_require__(362);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [fetchEntity].map(regeneratorRuntime.mark);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var OPTIONS = 'options';
	var ID = 'id';
	var DATA = 'data';
	var TYPE = 'type';
	var API_CONFIG_KEYS = exports.API_CONFIG_KEYS = [OPTIONS, ID, DATA];
	var RESERVED_ACTION_KYES = exports.RESERVED_ACTION_KYES = [TYPE].concat(API_CONFIG_KEYS);
	// TODO
	// 似乎需要优化，缓存的逻辑和获取的耦合太深了
	function fetchEntity(entity, apiFn, apiConfig, payload) {
	    var fullPayload, id, options, apiArgs, hasCache, cacheId, cacheContent, action, _ref, response, error, _action, _action2;
	
	    return regeneratorRuntime.wrap(function fetchEntity$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    fullPayload = _lodash2.default.assign({}, apiConfig, payload);
	                    id = apiConfig[ID];
	                    options = apiConfig[OPTIONS];
	                    apiArgs = [id, options].filter(function (arg) {
	                        return !_lodash2.default.isUndefined(arg);
	                    });
	                    hasCache = void 0;
	                    cacheId = void 0;
	
	                    if (!(id && _app2.default.enableEntityCache)) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    cacheId = cache.createCacheId(apiFn + id + options);
	                    cacheContent = cache.getCache(cacheId);
	
	                    hasCache = Boolean(cacheContent);
	
	                    if (!hasCache) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    action = entity.loadCache(cacheContent, fullPayload);
	                    _context.next = 14;
	                    return (0, _effects.put)(entity.request(fullPayload));
	
	                case 14:
	                    _context.next = 16;
	                    return (0, _effects.put)(action);
	
	                case 16:
	                    return _context.abrupt('return', action);
	
	                case 17:
	                    _context.next = 19;
	                    return (0, _effects.put)(entity.request(fullPayload));
	
	                case 19:
	                    _context.next = 21;
	                    return _effects.call.apply(undefined, [apiFn].concat(_toConsumableArray(apiArgs)));
	
	                case 21:
	                    _ref = _context.sent;
	                    response = _ref.response;
	                    error = _ref.error;
	
	                    if (!response) {
	                        _context.next = 32;
	                        break;
	                    }
	
	                    // 如果是 undefined 也不会有任何处理
	                    if (hasCache === false) {
	                        cache.setCache(cacheId, response);
	                    }
	                    _action = entity.success(response, fullPayload);
	                    _context.next = 29;
	                    return (0, _effects.put)(_action);
	
	                case 29:
	                    return _context.abrupt('return', _action);
	
	                case 32:
	                    _action2 = entity.failure(error, fullPayload);
	                    _context.next = 35;
	                    return (0, _effects.put)(_action2);
	
	                case 35:
	                    return _context.abrupt('return', _action2);
	
	                case 36:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.createCacheId = createCacheId;
	exports.getCache = getCache;
	exports.setCache = setCache;
	
	var _md = __webpack_require__(366);
	
	var _md2 = _interopRequireDefault(_md);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createCacheId(identifier) {
	    if (_lodash2.default.isEmpty(identifier)) {
	        throw new Error('缓存标识符不能为空！');
	    }
	    return (0, _md2.default)(identifier.toString());
	}
	function getCache(key) {
	    if (typeof key !== 'string') {
	        throw new Error('Name should be string!');
	    }
	    var content = localStorage.getItem(key);
	    if (!content) {
	        return undefined;
	    }
	    try {
	        content = JSON.parse(content);
	    } catch (error) {
	        throw error;
	    }
	    return content;
	}
	function setCache(key, content) {
	    if (typeof key !== 'string') {
	        throw new Error('Name should be string!');
	    }
	    if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) !== 'object') {
	        throw new Error('Cache content type should be object!');
	    }
	    var save = function save() {
	        localStorage.setItem(key, JSON.stringify(content));
	    };
	    try {
	        save();
	    } catch (error) {
	        if (error.name === 'QuotaExceededError') {
	            // TODO: 能否只清除最旧的
	            console.warn('本地缓存已满，旧的缓存将被清除！');
	            localStorage.clear();
	            save();
	        } else {
	            console.error(error);
	        }
	    }
	    return true;
	}

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var md5 = __webpack_require__(367);
	exports.default = md5;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/*
	 * JavaScript MD5
	 * https://github.com/blueimp/JavaScript-MD5
	 *
	 * Copyright 2011, Sebastian Tschan
	 * https://blueimp.net
	 *
	 * Licensed under the MIT license:
	 * http://www.opensource.org/licenses/MIT
	 *
	 * Based on
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */
	
	/*global unescape, define, module */
	
	;(function ($) {
	  'use strict';
	
	  /*
	  * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	  * to work around bugs in some JS interpreters.
	  */
	
	  function safe_add(x, y) {
	    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	    return msw << 16 | lsw & 0xFFFF;
	  }
	
	  /*
	  * Bitwise rotate a 32-bit number to the left.
	  */
	  function bit_rol(num, cnt) {
	    return num << cnt | num >>> 32 - cnt;
	  }
	
	  /*
	  * These functions implement the four basic operations the algorithm uses.
	  */
	  function md5_cmn(q, a, b, x, s, t) {
	    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
	  }
	  function md5_ff(a, b, c, d, x, s, t) {
	    return md5_cmn(b & c | ~b & d, a, b, x, s, t);
	  }
	  function md5_gg(a, b, c, d, x, s, t) {
	    return md5_cmn(b & d | c & ~d, a, b, x, s, t);
	  }
	  function md5_hh(a, b, c, d, x, s, t) {
	    return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	  }
	  function md5_ii(a, b, c, d, x, s, t) {
	    return md5_cmn(c ^ (b | ~d), a, b, x, s, t);
	  }
	
	  /*
	  * Calculate the MD5 of an array of little-endian words, and a bit length.
	  */
	  function binl_md5(x, len) {
	    /* append padding */
	    x[len >> 5] |= 0x80 << len % 32;
	    x[(len + 64 >>> 9 << 4) + 14] = len;
	
	    var i;
	    var olda;
	    var oldb;
	    var oldc;
	    var oldd;
	    var a = 1732584193;
	    var b = -271733879;
	    var c = -1732584194;
	    var d = 271733878;
	
	    for (i = 0; i < x.length; i += 16) {
	      olda = a;
	      oldb = b;
	      oldc = c;
	      oldd = d;
	
	      a = md5_ff(a, b, c, d, x[i], 7, -680876936);
	      d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
	      c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
	      b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
	      a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
	      d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
	      c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
	      b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
	      a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
	      d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
	      c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
	      b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
	      a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
	      d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
	      c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
	      b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
	
	      a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
	      d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
	      c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
	      b = md5_gg(b, c, d, a, x[i], 20, -373897302);
	      a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
	      d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
	      c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
	      b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
	      a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
	      d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
	      c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
	      b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
	      a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
	      d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
	      c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
	      b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
	
	      a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
	      d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
	      c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
	      b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
	      a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
	      d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
	      c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
	      b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
	      a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
	      d = md5_hh(d, a, b, c, x[i], 11, -358537222);
	      c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
	      b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
	      a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
	      d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
	      c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
	      b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
	
	      a = md5_ii(a, b, c, d, x[i], 6, -198630844);
	      d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
	      c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
	      b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
	      a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
	      d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
	      c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
	      b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
	      a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
	      d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
	      c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
	      b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
	      a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
	      d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
	      c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
	      b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
	
	      a = safe_add(a, olda);
	      b = safe_add(b, oldb);
	      c = safe_add(c, oldc);
	      d = safe_add(d, oldd);
	    }
	    return [a, b, c, d];
	  }
	
	  /*
	  * Convert an array of little-endian words to a string
	  */
	  function binl2rstr(input) {
	    var i;
	    var output = '';
	    var length32 = input.length * 32;
	    for (i = 0; i < length32; i += 8) {
	      output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xFF);
	    }
	    return output;
	  }
	
	  /*
	  * Convert a raw string to an array of little-endian words
	  * Characters >255 have their high-byte silently ignored.
	  */
	  function rstr2binl(input) {
	    var i;
	    var output = [];
	    output[(input.length >> 2) - 1] = undefined;
	    for (i = 0; i < output.length; i += 1) {
	      output[i] = 0;
	    }
	    var length8 = input.length * 8;
	    for (i = 0; i < length8; i += 8) {
	      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << i % 32;
	    }
	    return output;
	  }
	
	  /*
	  * Calculate the MD5 of a raw string
	  */
	  function rstr_md5(s) {
	    return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));
	  }
	
	  /*
	  * Calculate the HMAC-MD5, of a key and some data (raw strings)
	  */
	  function rstr_hmac_md5(key, data) {
	    var i;
	    var bkey = rstr2binl(key);
	    var ipad = [];
	    var opad = [];
	    var hash;
	    ipad[15] = opad[15] = undefined;
	    if (bkey.length > 16) {
	      bkey = binl_md5(bkey, key.length * 8);
	    }
	    for (i = 0; i < 16; i += 1) {
	      ipad[i] = bkey[i] ^ 0x36363636;
	      opad[i] = bkey[i] ^ 0x5C5C5C5C;
	    }
	    hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
	    return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));
	  }
	
	  /*
	  * Convert a raw string to a hex string
	  */
	  function rstr2hex(input) {
	    var hex_tab = '0123456789abcdef';
	    var output = '';
	    var x;
	    var i;
	    for (i = 0; i < input.length; i += 1) {
	      x = input.charCodeAt(i);
	      output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);
	    }
	    return output;
	  }
	
	  /*
	  * Encode a string as utf-8
	  */
	  function str2rstr_utf8(input) {
	    return unescape(encodeURIComponent(input));
	  }
	
	  /*
	  * Take string arguments and return either raw or hex encoded strings
	  */
	  function raw_md5(s) {
	    return rstr_md5(str2rstr_utf8(s));
	  }
	  function hex_md5(s) {
	    return rstr2hex(raw_md5(s));
	  }
	  function raw_hmac_md5(k, d) {
	    return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));
	  }
	  function hex_hmac_md5(k, d) {
	    return rstr2hex(raw_hmac_md5(k, d));
	  }
	
	  function md5(string, key, raw) {
	    if (!key) {
	      if (!raw) {
	        return hex_md5(string);
	      }
	      return raw_md5(string);
	    }
	    if (!raw) {
	      return hex_hmac_md5(key, string);
	    }
	    return raw_hmac_md5(key, string);
	  }
	
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return md5;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {
	    module.exports = md5;
	  } else {
	    $.md5 = md5;
	  }
	})(undefined);

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchLoginFlow;
	
	var _effects = __webpack_require__(362);
	
	var _actions = __webpack_require__(90);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [watchLoginFlow].map(regeneratorRuntime.mark);
	
	function watchLoginFlow() {
	    return regeneratorRuntime.wrap(function watchLoginFlow$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    if (false) {
	                        _context.next = 18;
	                        break;
	                    }
	
	                    _context.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.USER_LOGOUT);
	
	                case 3:
	                    _context.next = 5;
	                    return (0, _effects.put)(actions.logout.request());
	
	                case 5:
	                    _context.prev = 5;
	                    _context.next = 8;
	                    return (0, _effects.call)(_api2.default.logout);
	
	                case 8:
	                    _context.next = 10;
	                    return (0, _effects.put)(actions.logout.success());
	
	                case 10:
	                    _context.next = 16;
	                    break;
	
	                case 12:
	                    _context.prev = 12;
	                    _context.t0 = _context['catch'](5);
	                    _context.next = 16;
	                    return (0, _effects.put)(actions.logout.failure(_context.t0));
	
	                case 16:
	                    _context.next = 0;
	                    break;
	
	                case 18:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this, [[5, 12]]);
	}

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchViewer;
	
	var _reduxSaga = __webpack_require__(370);
	
	var _effects = __webpack_require__(362);
	
	var _actions = __webpack_require__(90);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _api = __webpack_require__(203);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _selectors = __webpack_require__(110);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	var _common = __webpack_require__(52);
	
	var _utils = __webpack_require__(364);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _Viewer = __webpack_require__(250);
	
	var viewerUtils = _interopRequireWildcard(_Viewer);
	
	var _utils2 = __webpack_require__(92);
	
	var _utils3 = _interopRequireDefault(_utils2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [setViewer, setViewerWithAction, watchInitViewer, updateProgress, watchCalcBook, watchProgressOperations, jumpTo, watchJumpRequest, fetchProgressAndJump, initializeViewer, watchViewer].map(regeneratorRuntime.mark);
	
	var DEFAULT_PAGE_HEIGHT = 900;
	var DEFAULT_FONT_SIZE = 16;
	var fetchBookProgress = _utils.fetchEntity.bind(null, actions.progress, _api2.default.fetchBookProgress);
	function setViewer(bookId) {
	    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var viewerWidth, isSmallScreen, initialized, computed;
	    return regeneratorRuntime.wrap(function setViewer$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    viewerWidth = _utils3.default.getScreenInfo().view.width;
	                    isSmallScreen = viewerWidth < 700;
	                    initialized = {
	                        bookId: bookId,
	                        isCalcMode: true,
	                        fluid: isSmallScreen,
	                        isTouchMode: isSmallScreen,
	                        pageHeight: DEFAULT_PAGE_HEIGHT,
	                        fontSize: DEFAULT_FONT_SIZE,
	                        width: isSmallScreen ? viewerWidth : 'max'
	                    };
	                    _context.next = 5;
	                    return (0, _effects.select)(selectors.viewer.computed(bookId));
	
	                case 5:
	                    computed = _context.sent;
	
	                    if (computed.length > 0) {
	                        initialized.isCalcMode = false;
	                    }
	                    initialized = _lodash2.default.merge({}, initialized, config);
	                    _context.next = 10;
	                    return (0, _effects.put)(actions.configViewer(bookId, initialized));
	
	                case 10:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}
	function setViewerWithAction(action) {
	    var bookId, config;
	    return regeneratorRuntime.wrap(function setViewerWithAction$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    bookId = action.bookId;
	                    config = action.config;
	                    _context2.next = 4;
	                    return setViewer(bookId, config);
	
	                case 4:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}
	function watchInitViewer() {
	    return regeneratorRuntime.wrap(function watchInitViewer$(_context3) {
	        while (1) {
	            switch (_context3.prev = _context3.next) {
	                case 0:
	                    return _context3.delegateYield((0, _reduxSaga.takeEvery)(ACTION_TYPES.VIEWER.INITIALIZE_CONFIG, setViewerWithAction), 't0', 1);
	
	                case 1:
	                case 'end':
	                    return _context3.stop();
	            }
	        }
	    }, _marked[2], this);
	}
	function calcBook(wrap, flesh) {
	    var startCalcHtmlTime = new Date().valueOf();
	    var computedChapters = Array.prototype.map.call(wrap.childNodes, function (child) {
	        var childDiv = child;
	        var id = childDiv.getAttribute('id');
	        var nodeHeights = viewerUtils.getNodeHeights(childDiv.querySelector('.lines').childNodes);
	        return {
	            id: id,
	            nodeHeights: nodeHeights
	        };
	    });
	    var endCalcHtmlTime = new Date().valueOf();
	    _helpers2.default.print('Calculating html takes ' + (endCalcHtmlTime - startCalcHtmlTime) + 'ms');
	    var computedPages = viewerUtils.groupPageFromChapters(flesh, computedChapters, 900);
	    return computedPages;
	}
	function updateProgress(bookId, percentage) {
	    return regeneratorRuntime.wrap(function updateProgress$(_context4) {
	        while (1) {
	            switch (_context4.prev = _context4.next) {
	                case 0:
	                    _context4.prev = 0;
	                    _context4.next = 3;
	                    return (0, _effects.call)(_api2.default.setProgress, bookId, {
	                        percentage: percentage
	                    });
	
	                case 3:
	                    _context4.next = 8;
	                    break;
	
	                case 5:
	                    _context4.prev = 5;
	                    _context4.t0 = _context4['catch'](0);
	
	                    console.error(_context4.t0);
	
	                case 8:
	                    _context4.prev = 8;
	                    _context4.next = 11;
	                    return (0, _effects.cancelled)();
	
	                case 11:
	                    if (!_context4.sent) {
	                        _context4.next = 13;
	                        break;
	                    }
	
	                    _helpers2.default.print('updateProgress canceled');
	
	                case 13:
	                    return _context4.finish(8);
	
	                case 14:
	                case 'end':
	                    return _context4.stop();
	            }
	        }
	    }, _marked[3], this, [[0, 5, 8, 14]]);
	}
	function watchCalcBook() {
	    var _ref, bookId, wrap, bookContent, flesh, computed;
	
	    return regeneratorRuntime.wrap(function watchCalcBook$(_context5) {
	        while (1) {
	            switch (_context5.prev = _context5.next) {
	                case 0:
	                    if (false) {
	                        _context5.next = 24;
	                        break;
	                    }
	
	                    _context5.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.CALC_START);
	
	                case 3:
	                    _ref = _context5.sent;
	                    bookId = _ref.bookId;
	                    wrap = _ref.wrap;
	                    _context5.next = 8;
	                    return (0, _effects.select)(selectors.common.entity('bookContents', bookId));
	
	                case 8:
	                    bookContent = _context5.sent;
	                    flesh = bookContent.flesh || {};
	                    _context5.prev = 10;
	                    computed = calcBook(wrap, flesh);
	                    _context5.next = 14;
	                    return (0, _effects.put)(actions.calcBookSuccess(bookId, computed));
	
	                case 14:
	                    _context5.next = 16;
	                    return (0, _effects.put)(actions.configViewer(bookId, {
	                        isCalcMode: false
	                    }));
	
	                case 16:
	                    _context5.next = 22;
	                    break;
	
	                case 18:
	                    _context5.prev = 18;
	                    _context5.t0 = _context5['catch'](10);
	                    _context5.next = 22;
	                    return (0, _effects.put)(actions.calcBookFailure(bookId, _context5.t0));
	
	                case 22:
	                    _context5.next = 0;
	                    break;
	
	                case 24:
	                case 'end':
	                    return _context5.stop();
	            }
	        }
	    }, _marked[4], this, [[10, 18]]);
	}
	function watchProgressOperations() {
	    var action, session, userRole;
	    return regeneratorRuntime.wrap(function watchProgressOperations$(_context6) {
	        while (1) {
	            switch (_context6.prev = _context6.next) {
	                case 0:
	                    if (false) {
	                        _context6.next = 20;
	                        break;
	                    }
	
	                    _context6.next = 3;
	                    return (0, _effects.take)([ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE, ACTION_TYPES.LOAD_BOOK_PROGRESS]);
	
	                case 3:
	                    action = _context6.sent;
	                    _context6.next = 6;
	                    return (0, _effects.select)(selectors.common.session);
	
	                case 6:
	                    session = _context6.sent;
	                    userRole = _lodash2.default.get(session, 'user.role');
	
	                    if (!(userRole !== _common.ROLES.VISITOR)) {
	                        _context6.next = 17;
	                        break;
	                    }
	
	                    if (!(action.type === ACTION_TYPES.LOAD_BOOK_PROGRESS)) {
	                        _context6.next = 12;
	                        break;
	                    }
	
	                    _context6.next = 12;
	                    return (0, _effects.call)(fetchBookProgress, { id: action.id });
	
	                case 12:
	                    if (!(action.type === ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE)) {
	                        _context6.next = 15;
	                        break;
	                    }
	
	                    _context6.next = 15;
	                    return updateProgress(action.id, action.percentage);
	
	                case 15:
	                    _context6.next = 18;
	                    break;
	
	                case 17:
	                    _helpers2.default.print('Not logged in, progress will not be fetched!');
	
	                case 18:
	                    _context6.next = 0;
	                    break;
	
	                case 20:
	                case 'end':
	                    return _context6.stop();
	            }
	        }
	    }, _marked[5], this);
	}
	function jumpTo(action) {
	    var percentage, _ref2, bookId, pageHeight, isScrollMode, allPages, pageCount, totalHeight;
	
	    return regeneratorRuntime.wrap(function jumpTo$(_context7) {
	        while (1) {
	            switch (_context7.prev = _context7.next) {
	                case 0:
	                    percentage = action.percentage;
	                    _context7.next = 3;
	                    return (0, _effects.select)(selectors.viewer.config);
	
	                case 3:
	                    _ref2 = _context7.sent;
	                    bookId = _ref2.bookId;
	                    pageHeight = _ref2.pageHeight;
	                    isScrollMode = _ref2.isScrollMode;
	                    _context7.next = 9;
	                    return (0, _effects.select)(selectors.viewer.computed(bookId));
	
	                case 9:
	                    allPages = _context7.sent;
	                    pageCount = allPages.length;
	                    totalHeight = pageCount * pageHeight;
	
	                    if (!isScrollMode) {
	                        _context7.next = 16;
	                        break;
	                    }
	
	                    document.body.scrollTop = percentage ? totalHeight * percentage : 0;
	                    _context7.next = 18;
	                    break;
	
	                case 16:
	                    _context7.next = 18;
	                    return (0, _effects.put)(actions.updateBookProgress(percentage));
	
	                case 18:
	                case 'end':
	                    return _context7.stop();
	            }
	        }
	    }, _marked[6], this);
	}
	function watchJumpRequest() {
	    return regeneratorRuntime.wrap(function watchJumpRequest$(_context8) {
	        while (1) {
	            switch (_context8.prev = _context8.next) {
	                case 0:
	                    return _context8.delegateYield((0, _reduxSaga.takeEvery)(ACTION_TYPES.VIEWER.JUMP, jumpTo), 't0', 1);
	
	                case 1:
	                case 'end':
	                    return _context8.stop();
	            }
	        }
	    }, _marked[7], this);
	}
	function fetchProgressAndJump(bookId) {
	    var _ref3, percentage;
	
	    return regeneratorRuntime.wrap(function fetchProgressAndJump$(_context9) {
	        while (1) {
	            switch (_context9.prev = _context9.next) {
	                case 0:
	                    _context9.next = 2;
	                    return (0, _effects.put)(actions.loadBookProgress(bookId));
	
	                case 2:
	                    _context9.next = 4;
	                    return (0, _effects.take)(ACTION_TYPES.BOOK_PROGRESS.SUCCESS);
	
	                case 4:
	                    _context9.next = 6;
	                    return (0, _effects.select)(selectors.common.entity('bookProgress', bookId));
	
	                case 6:
	                    _ref3 = _context9.sent;
	                    percentage = _ref3.percentage;
	                    _context9.next = 10;
	                    return (0, _effects.put)(actions.viewerJumpTo(percentage));
	
	                case 10:
	                case 'end':
	                    return _context9.stop();
	            }
	        }
	    }, _marked[8], this);
	}
	function initializeViewer() {
	    var _ref4, _bookId, computed;
	
	    return regeneratorRuntime.wrap(function initializeViewer$(_context10) {
	        while (1) {
	            switch (_context10.prev = _context10.next) {
	                case 0:
	                    if (false) {
	                        _context10.next = 23;
	                        break;
	                    }
	
	                    _context10.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.INITIALIZE);
	
	                case 3:
	                    _ref4 = _context10.sent;
	                    _bookId = _ref4.bookId;
	                    _context10.next = 7;
	                    return (0, _effects.select)(selectors.viewer.computed(_bookId));
	
	                case 7:
	                    computed = _context10.sent;
	
	                    if (!_lodash2.default.isEmpty(computed)) {
	                        _context10.next = 19;
	                        break;
	                    }
	
	                    _context10.next = 11;
	                    return [(0, _effects.put)(actions.loadBook(_bookId)), (0, _effects.put)(actions.loadBookContent(_bookId))];
	
	                case 11:
	                    _context10.next = 13;
	                    return (0, _effects.put)(actions.initializeViewerConfig(_bookId));
	
	                case 13:
	                    _context10.next = 15;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.CALC_SUCCESS);
	
	                case 15:
	                    _context10.next = 17;
	                    return fetchProgressAndJump(_bookId);
	
	                case 17:
	                    _context10.next = 21;
	                    break;
	
	                case 19:
	                    _context10.next = 21;
	                    return fetchProgressAndJump(_bookId);
	
	                case 21:
	                    _context10.next = 0;
	                    break;
	
	                case 23:
	                case 'end':
	                    return _context10.stop();
	            }
	        }
	    }, _marked[9], this);
	}
	function watchViewer() {
	    return regeneratorRuntime.wrap(function watchViewer$(_context11) {
	        while (1) {
	            switch (_context11.prev = _context11.next) {
	                case 0:
	                    _context11.next = 2;
	                    return [(0, _effects.fork)(watchProgressOperations), (0, _effects.fork)(watchCalcBook), (0, _effects.fork)(watchInitViewer), (0, _effects.fork)(watchJumpRequest), (0, _effects.fork)(initializeViewer)];
	
	                case 2:
	                case 'end':
	                    return _context11.stop();
	            }
	        }
	    }, _marked[10], this);
	}

/***/ },
/* 370 */
/***/ function(module, exports) {

	module.exports = require("redux-saga");

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchTest;
	exports.watchTest2 = watchTest2;
	
	var _effects = __webpack_require__(362);
	
	var _marked = [doLoadWithCancel, watchTest, watchTest2].map(regeneratorRuntime.mark);
	
	function someAsyncTask() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            console.log('loaded');
	            resolve('load done');
	            // yield put({ type: 'LOADED'})
	        }, 1000);
	    });
	}
	function doLoad() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            resolve('load done');
	        }, 3000);
	    });
	}
	function doLoadWithCancel() {
	    var res;
	    return regeneratorRuntime.wrap(function doLoadWithCancel$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    _context.prev = 0;
	                    _context.next = 3;
	                    return someAsyncTask();
	
	                case 3:
	                    res = _context.sent;
	                    _context.next = 6;
	                    return (0, _effects.put)({ type: 'done', res: res });
	
	                case 6:
	                    _context.next = 10;
	                    break;
	
	                case 8:
	                    _context.prev = 8;
	                    _context.t0 = _context['catch'](0);
	
	                case 10:
	                    _context.prev = 10;
	                    _context.next = 13;
	                    return (0, _effects.cancelled)();
	
	                case 13:
	                    if (!_context.sent) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    console.log('canceled');
	                    _context.next = 17;
	                    return (0, _effects.put)({ type: 'CANCEL_LOAD' });
	
	                case 17:
	                    return _context.finish(10);
	
	                case 18:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this, [[0, 8, 10, 18]]);
	}
	function doSave() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            resolve('save done');
	        }, 3000);
	    });
	}
	function watchTest() {
	    var action, res;
	    return regeneratorRuntime.wrap(function watchTest$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    if (false) {
	                        _context2.next = 17;
	                        break;
	                    }
	
	                    _context2.next = 3;
	                    return (0, _effects.take)(['LOAD', 'SAVE']);
	
	                case 3:
	                    action = _context2.sent;
	                    res = void 0;
	
	                    if (!(action.type === 'LOAD')) {
	                        _context2.next = 10;
	                        break;
	                    }
	
	                    _context2.next = 8;
	                    return doLoad();
	
	                case 8:
	                    res = _context2.sent;
	
	                    console.log(res);
	
	                case 10:
	                    if (!(action.type === 'SAVE')) {
	                        _context2.next = 15;
	                        break;
	                    }
	
	                    _context2.next = 13;
	                    return doSave();
	
	                case 13:
	                    res = _context2.sent;
	
	                    console.log(res);
	
	                case 15:
	                    _context2.next = 0;
	                    break;
	
	                case 17:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}
	function watchTest2() {
	    var loadAction, loadTask, saveAction;
	    return regeneratorRuntime.wrap(function watchTest2$(_context3) {
	        while (1) {
	            switch (_context3.prev = _context3.next) {
	                case 0:
	                    if (false) {
	                        _context3.next = 18;
	                        break;
	                    }
	
	                    _context3.next = 3;
	                    return (0, _effects.take)('LOAD');
	
	                case 3:
	                    loadAction = _context3.sent;
	                    _context3.next = 6;
	                    return (0, _effects.fork)(doLoadWithCancel);
	
	                case 6:
	                    loadTask = _context3.sent;
	                    _context3.next = 9;
	                    return (0, _effects.take)('SAVE');
	
	                case 9:
	                    saveAction = _context3.sent;
	
	                    if (!(saveAction.type === 'SAVE')) {
	                        _context3.next = 14;
	                        break;
	                    }
	
	                    console.log('save?');
	                    _context3.next = 14;
	                    return (0, _effects.cancel)(loadTask);
	
	                case 14:
	                    _context3.next = 16;
	                    return (0, _effects.put)({ type: 'then what' });
	
	                case 16:
	                    _context3.next = 0;
	                    break;
	
	                case 18:
	                case 'end':
	                    return _context3.stop();
	            }
	        }
	    }, _marked[2], this);
	}

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRouter = __webpack_require__(63);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function matchRoute(routes, reqUrl, history) {
	    return new Promise(function (resolve, reject) {
	        (0, _reactRouter.match)({ history: history, routes: routes, location: reqUrl }, function (error, redirectLocation, renderProps) {
	            if (error) {
	                reject(error);
	            } else if (redirectLocation) {
	                resolve({ redirectLocation: redirectLocation, statusCode: 302 });
	            } else if (renderProps) {
	                var wrappedComponent = _lodash2.default.last(renderProps.components)['WrappedComponent'];
	                var statusCode = wrappedComponent ? 200 : 404;
	                resolve({ renderProps: renderProps, statusCode: statusCode });
	            } else {
	                reject(new Error('routes 里不存在对 404 的处理'));
	            }
	        });
	    });
	}
	exports.default = matchRoute;

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _server = __webpack_require__(374);
	
	var _reactRouterRedux = __webpack_require__(375);
	
	var _reactRouter = __webpack_require__(63);
	
	var _getStore = __webpack_require__(360);
	
	var _getStore2 = _interopRequireDefault(_getStore);
	
	var _matchRoute = __webpack_require__(372);
	
	var _matchRoute2 = _interopRequireDefault(_matchRoute);
	
	var _Page = __webpack_require__(376);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	var _DocContainer = __webpack_require__(201);
	
	var _DocContainer2 = _interopRequireDefault(_DocContainer);
	
	var _ServerSideAppRoot = __webpack_require__(379);
	
	var _ServerSideAppRoot2 = _interopRequireDefault(_ServerSideAppRoot);
	
	var _configureStore = __webpack_require__(380);
	
	var _configureStore2 = _interopRequireDefault(_configureStore);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function renderHtml(config) {
	    if (!config) {
	        return Promise.resolve((0, _server.renderToStaticMarkup)(_react2.default.createElement(_Page2.default, null)));
	    }
	    var reqUrl = config.reqUrl;
	    var routes = config.routes;
	    var isProd = config.isProd;
	    var fetchData = config.fetchData;
	    var isHot = config.isHot;
	    var userSession = config.userSession;
	
	    var memoryHistory = (0, _reactRouter.createMemoryHistory)(reqUrl);
	    var store = (0, _configureStore2.default)();
	    var history = (0, _reactRouterRedux.syncHistoryWithStore)(memoryHistory, store);
	    return (0, _matchRoute2.default)(routes, reqUrl, history).then(function (result) {
	        var renderProps = result.renderProps;
	        var redirectLocation = result.redirectLocation;
	        var statusCode = result.statusCode;
	
	        if (redirectLocation) {
	            return Promise.resolve({ redirectLocation: redirectLocation });
	        }
	        return (0, _getStore2.default)(renderProps, fetchData, userSession, store).then(function (storeWithFetchedData) {
	            var genPageComp = function genPageComp(bodyClass, title, appMarkup) {
	                return _react2.default.createElement(_Page2.default, { title: title, store: storeWithFetchedData, isProd: isProd, bodyClass: bodyClass, appMarkup: appMarkup, scriptData: _defineProperty({}, _common.ENABLE_SERVER_ROUTING, true) });
	            };
	            var appRoot = _react2.default.createElement(_ServerSideAppRoot2.default, { renderPageContent: fetchData, renderProps: result.renderProps, store: storeWithFetchedData });
	            // rewind 必须在 render 之后调用，所以只能调用两次 render
	            // 没有更好的方法之前先这样
	            (0, _server.renderToStaticMarkup)(appRoot);
	            var data = _DocContainer2.default['rewind']() || {};
	            var appRootMarkup = void 0;
	            if (fetchData) {
	                appRootMarkup = (0, _server.renderToString)(appRoot);
	            } else {
	                appRootMarkup = (0, _server.renderToStaticMarkup)(appRoot);
	            }
	            var html = (0, _server.renderToStaticMarkup)(genPageComp(data.bodyClass, data.title, appRootMarkup));
	            return { html: html, statusCode: statusCode };
	        });
	    });
	}
	exports.default = renderHtml;

/***/ },
/* 374 */
/***/ function(module, exports) {

	module.exports = require("react-dom/server");

/***/ },
/* 375 */
/***/ function(module, exports) {

	module.exports = require("react-router-redux");

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Html = __webpack_require__(377);
	
	var _Html2 = _interopRequireDefault(_Html);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	var _fs = __webpack_require__(378);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DEFAULT_TITLE = 'Readr';
	var SCRIPT_CONTENT_ID = 'script-data';
	var ASSET_PATH = '/built';
	var ASSET_PATH_PROD = '/built_prod';
	var SCRIPTS_PROD = ['react_kit.js', 'utils.js', 'app.js'];
	var SCRIPTS_DEV = ['react_kit.dll.js', 'utils.dll.js', 'app.js'];
	var GLOBAL_STYLES = ['base.global.css', 'vendor.global.css', 'modifiers.global.css'];
	var LOCAL_STYLES = ['app.css'];
	var CSS_MANIFEST_PATH = process.cwd() + '/public/built_prod/css.manifest.json';
	var CHUNKS_MANIFEST_PATH = process.cwd() + '/public/built_prod/chunks.manifest.json';
	var getManifest = function getManifest() {
	    var chunkManifest = {};
	    var cssManifest = {};
	    try {
	        cssManifest = JSON.parse(_fs2.default.readFileSync(CSS_MANIFEST_PATH, 'utf8'));
	        chunkManifest = JSON.parse(_fs2.default.readFileSync(CHUNKS_MANIFEST_PATH, 'utf8'));
	    } catch (error) {
	        _print2.default.error(error.message);
	    }
	    return _lodash2.default.assign({}, chunkManifest, cssManifest);
	};
	var getHashedFilename = function getHashedFilename(manifest) {
	    return function (filename) {
	        if (manifest[filename]) {
	            return manifest[filename];
	        }
	        _print2.default.error('File (' + filename + ') not included in manifest, will use original filename instead!');
	        return filename;
	    };
	};
	function Page(props) {
	    var title = props.title;
	    var store = props.store;
	    var includeLocalStylesheets = props.includeLocalStylesheets;
	    var bodyClass = props.bodyClass;
	    var appMarkup = props.appMarkup;
	    var scriptData = props.scriptData;
	    var isProd = props.isProd;
	    var noScript = props.noScript;
	
	    var manifest = void 0;
	    if (isProd) {
	        manifest = getManifest();
	    }
	    var scripts = isProd ? SCRIPTS_PROD.map(getHashedFilename(manifest)) : SCRIPTS_DEV;
	    var styles = isProd ? GLOBAL_STYLES.concat(LOCAL_STYLES).map(getHashedFilename(manifest)) : includeLocalStylesheets ? GLOBAL_STYLES.concat(LOCAL_STYLES) : GLOBAL_STYLES;
	    var scriptContent = _lodash2.default.map(scriptData, function (val, key) {
	        return 'var ' + key + ' = ' + val + ';';
	    }).join('');
	    if (noScript) {
	        scripts = [];
	        scriptContent = '';
	    }
	    var assetPath = isProd ? ASSET_PATH_PROD : ASSET_PATH;
	    return _react2.default.createElement(_Html2.default, { title: title, styles: styles, scripts: scripts, initialState: store && store.getState(), bodyClass: bodyClass || null, appMarkup: appMarkup, scriptContentId: SCRIPT_CONTENT_ID, scriptContent: scriptContent, assetPath: assetPath });
	}
	Page['defaultProps'] = {
	    title: DEFAULT_TITLE,
	    includeLocalStylesheets: true
	};
	exports.default = Page;

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = Html;
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	function StyleLink(props) {
	    return _react2.default.createElement("link", { rel: "stylesheet", href: (props.assetPath || '') + '/' + props.filename });
	}
	function Script(props) {
	    return _react2.default.createElement("script", { src: (props.assetPath || '') + '/' + props.filename });
	}
	function Html(props) {
	    var title = props.title;
	    var styles = props.styles;
	    var scripts = props.scripts;
	    var initialState = props.initialState;
	    var bodyClass = props.bodyClass;
	    var appMarkup = props.appMarkup;
	    var useFavicon = props.useFavicon;
	    var scriptContent = props.scriptContent;
	    var scriptContentId = props.scriptContentId;
	    var assetPath = props.assetPath;
	
	    return _react2.default.createElement("html", null, _react2.default.createElement("head", null, _react2.default.createElement("meta", { httpEquiv: "X-UA-Compatible", content: "IE=edge,chrome=1" }), _react2.default.createElement("meta", { name: "viewport", content: "width=device-width, initial-scale=1, user-scalable=no" }), _react2.default.createElement("meta", { name: "description", content: "The next generation online reading app." }), _react2.default.createElement("link", { rel: "shortcut icon", type: "image/png", href: "/static/apple-touch-icon-60x60-1.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "60x60", href: "/static/apple-touch-icon-60x60-1.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "120x120", href: "/static/apple-touch-icon-120x120.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "180x180", href: "/static/apple-touch-icon-180x180.png" }), _react2.default.createElement("title", null, title || ''), styles && styles.map(function (stylesheetName, index) {
	        return _react2.default.createElement(StyleLink, { assetPath: assetPath, filename: stylesheetName, key: index });
	    })), _react2.default.createElement("body", __assign({}, bodyClass && { className: bodyClass }), _react2.default.createElement("div", { id: "root", dangerouslySetInnerHTML: { __html: appMarkup || '' } }), scriptContent && _react2.default.createElement("script", { id: scriptContentId, dangerouslySetInnerHTML: { __html: scriptContent } }), initialState && _react2.default.createElement("script", { dangerouslySetInnerHTML: { __html: 'var ' + _common.INITIAL_STATE + ' = ' + JSON.stringify(initialState) } }), scripts && scripts.map(function (scriptName, index) {
	        return _react2.default.createElement(Script, { assetPath: assetPath, filename: scriptName, key: index });
	    })));
	}

/***/ },
/* 378 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(89);
	
	var _reactRouter = __webpack_require__(63);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	function ServerSideAppRoot(props) {
	    var store = props.store;
	    var renderProps = props.renderProps;
	    var renderPageContent = props.renderPageContent;
	
	    return !_lodash2.default.isEmpty(renderProps) && _react2.default.createElement(_reactRedux.Provider, { store: store }, renderPageContent ? _react2.default.createElement(_reactRouter.RouterContext, __assign({}, renderProps)) : _react2.default.createElement("div", { className: "text-loading" }, '\u52A0\u8F7D\u4E2D ...'));
	}
	exports.default = ServerSideAppRoot;

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = configureStore;
	
	var _redux = __webpack_require__(212);
	
	var _reduxThunk = __webpack_require__(381);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _reducers = __webpack_require__(382);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _api = __webpack_require__(388);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _modifyResponse = __webpack_require__(389);
	
	var _modifyResponse2 = _interopRequireDefault(_modifyResponse);
	
	var _handleServerStore = __webpack_require__(390);
	
	var _handleServerStore2 = _interopRequireDefault(_handleServerStore);
	
	var _handleInitialState = __webpack_require__(391);
	
	var _handleInitialState2 = _interopRequireDefault(_handleInitialState);
	
	var _logActionTypes = __webpack_require__(392);
	
	var _logActionTypes2 = _interopRequireDefault(_logActionTypes);
	
	var _reduxLogger = __webpack_require__(393);
	
	var _reduxLogger2 = _interopRequireDefault(_reduxLogger);
	
	var _middleware = __webpack_require__(394);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _reduxSaga = __webpack_require__(370);
	
	var _reduxSaga2 = _interopRequireDefault(_reduxSaga);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var sagaMiddleware = (0, _reduxSaga2.default)();
	var SERVER_MIDDLEWARES_DEV = [_handleServerStore2.default, sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default, _logActionTypes2.default];
	var SERVER_MIDDLEWARES_PROD = [_handleServerStore2.default, sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default];
	var MIDDLEWARES_DEV = [sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default, (0, _reduxLogger2.default)({ collapsed: true })];
	var MIDDLEWARES_PROD = [sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default];
	var handleStore = function handleStore(middlewares) {
	    return (0, _redux.createStore)(_reducers2.default, (0, _handleInitialState2.default)(), _redux.applyMiddleware.apply(null, middlewares));
	};
	function configureStore() {
	    var store = {};
	    if (_helpers2.default.isServerEnv()) {
	        // server side
	        if (process.env.NODE_ENV === 'production') {
	            store = handleStore(SERVER_MIDDLEWARES_PROD);
	        } else {
	            store = handleStore(SERVER_MIDDLEWARES_DEV);
	        }
	    } else {
	        // client side
	        if (process.env.NODE_ENV === 'production') {
	            store = handleStore(MIDDLEWARES_PROD);
	        } else {
	            store = handleStore(MIDDLEWARES_DEV);
	        }
	    }
	    if (false) {
	        module.hot.accept('./reducers', function () {
	            console.info('hot updating reducers');
	            var nextRootReducer = require('./reducers').default;
	            store.replaceReducer(nextRootReducer);
	        });
	    }
	    store['runSaga'] = sagaMiddleware.run;
	    store['close'] = function () {
	        return store.dispatch(_reduxSaga.END);
	    };
	    return store;
	}

/***/ },
/* 381 */
/***/ function(module, exports) {

	module.exports = require("redux-thunk");

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.entities = entities;
	exports.session = session;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _redux = __webpack_require__(212);
	
	var _reactRouterRedux = __webpack_require__(375);
	
	var _components = __webpack_require__(383);
	
	var _components2 = _interopRequireDefault(_components);
	
	var _pagination = __webpack_require__(386);
	
	var _pagination2 = _interopRequireDefault(_pagination);
	
	var _betterReduxForm = __webpack_require__(114);
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function errorMessage() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];
	    var error = action.error;
	
	    if (error) {
	        return [].concat(_toConsumableArray(state), [action.error.message || '发生未知错误！']);
	    }
	    return state;
	}
	function entities() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.response && action.response.entities) {
	        return _lodash2.default.merge({}, state, action.response.entities);
	    }
	    if (action.type === ActionTypes.REMOVE_ENTITY) {
	        var name = action.name;
	        var id = action.id;
	
	        return _lodash2.default.assign({}, state, _defineProperty({}, name, _lodash2.default.omit(state[name], [id])));
	    }
	    return state;
	}
	var DEFAULT_VISTOR_STATE = { user: { role: 'visitor' }, isFetching: false, determined: false };
	function session() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_VISTOR_STATE;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ActionTypes.AUTH.REQUEST:
	            return Object.assign({}, state, {
	                isFetching: true
	            });
	        case ActionTypes.AUTH.SUCCESS:
	            return Object.assign({}, state, {
	                isFetching: false,
	                determined: true,
	                user: action.response
	            });
	        case ActionTypes.AUTH.FAILURE:
	            return Object.assign({}, state, {
	                isFetching: false,
	                determined: true
	            });
	        case ActionTypes.LOGOUT.SUCCESS:
	            return Object.assign({}, DEFAULT_VISTOR_STATE, {
	                determined: true
	            });
	        default:
	            return state;
	    }
	}
	var rootReducer = (0, _redux.combineReducers)({
	    components: _components2.default,
	    entities: entities,
	    errorMessage: errorMessage,
	    session: session,
	    routing: _reactRouterRedux.routerReducer,
	    form: _betterReduxForm.reducer,
	    pagination: _pagination2.default
	});
	exports.default = rootReducer;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(212);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _viewer = __webpack_require__(384);
	
	var _viewer2 = _interopRequireDefault(_viewer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function notifications() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.NOTIFICATION.HIDE) {
	        return state.map(function (n) {
	            return n.id === action.id ? Object.assign({}, n, { visible: false }) : n;
	        });
	    }
	    if (action.type === ACTION_TYPES.NOTIFICATION.SHOW) {
	        return [].concat(_toConsumableArray(state), [{
	            visible: true,
	            message: action.message,
	            type: action.msgType,
	            id: action.id
	        }]);
	    }
	    return state;
	}
	function confirmModal() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.OPEN_CONFIRM_MODAL) {
	        return Object.assign({}, state, { open: true }, action.data);
	    }
	    if (action.type === ACTION_TYPES.CLOSE_CONFIRM_MODAL) {
	        return {
	            open: false
	        };
	    }
	    return state;
	}
	function modal() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.MODAL.OPEN) {
	        return Object.assign({}, state, { open: true }, action.data);
	    }
	    if (action.type === ACTION_TYPES.MODAL.CLOSE) {
	        return {
	            open: false
	        };
	    }
	    return state;
	}
	var components = (0, _redux.combineReducers)({
	    notifications: notifications,
	    confirmModal: confirmModal,
	    modal: modal,
	    viewer: _viewer2.default
	});
	exports.default = components;

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(212);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _constants = __webpack_require__(385);
	
	var CONSTANTS = _interopRequireWildcard(_constants);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var getFlag = function getFlag(reset, currentFlag) {
	    if (typeof reset === 'undefined') {
	        return !currentFlag;
	    }
	    return reset;
	};
	function contents() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.CALC_SUCCESS:
	            return _lodash2.default.merge({}, state, _defineProperty({}, action.bookId, {
	                computed: action.computed
	            }));
	        default:
	            return state;
	    }
	}
	function config() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { theme: CONSTANTS.VIEWER_DEFS.THEMES.WHITE, isScrollMode: true };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.SCROLL_MODE_TOGGLE:
	            var reset = action.reset;
	
	            return _lodash2.default.merge({}, state, {
	                isScrollMode: getFlag(reset, state.isScrollMode)
	            });
	        case ACTION_TYPES.VIEWER.THEME_CHANGE:
	            return _lodash2.default.merge({}, state, {
	                theme: action.theme
	            });
	        case ACTION_TYPES.VIEWER.FONT_CHANGE:
	            return _lodash2.default.merge({}, state, {
	                fontSize: action.fontSize
	            });
	        case ACTION_TYPES.VIEWER.CONFIG:
	            return _lodash2.default.merge({}, state, {
	                bookId: action.bookId
	            }, action.payload);
	        default:
	            return state;
	    }
	}
	function progress() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE:
	            return _lodash2.default.merge({}, state, _defineProperty({}, action.id, {
	                isFetching: false,
	                percentage: action.percentage,
	                pageNo: action.pageNo
	            }));
	        case ACTION_TYPES.VIEWER.BOOK_PROGRESS_DESTROY:
	            return _lodash2.default.assign({}, state, _defineProperty({}, action.id, {
	                isFetching: false
	            }));
	        default:
	            return state;
	    }
	}
	var panel = function panel() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.PANEL_TOGGLE:
	            var reset = action.reset;
	
	            var a = getFlag(reset, state.show);
	            return {
	                show: a
	            };
	        default:
	            return state;
	    }
	};
	var preference = function preference() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.PREFERENCE_TOGGLE:
	            var reset = action.reset;
	
	            return {
	                show: getFlag(reset, state.show)
	            };
	        default:
	            return state;
	    }
	};
	var navigation = function navigation() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.NAVIGATION_TOGGLE:
	            var reset = action.reset;
	
	            return {
	                show: getFlag(reset, state.show)
	            };
	        default:
	            return state;
	    }
	};
	var components = (0, _redux.combineReducers)({
	    panel: panel,
	    preference: preference,
	    navigation: navigation
	});
	exports.default = (0, _redux.combineReducers)({
	    config: config,
	    contents: contents,
	    progress: progress,
	    components: components
	});

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.VIEWER_DEFS = exports.COMMON = exports.ACTION_TYPES = undefined;
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _common = __webpack_require__(52);
	
	var COMMON = _interopRequireWildcard(_common);
	
	var _viewerDefs = __webpack_require__(245);
	
	var VIEWER_DEFS = _interopRequireWildcard(_viewerDefs);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.ACTION_TYPES = ACTION_TYPES;
	exports.COMMON = COMMON;
	exports.VIEWER_DEFS = VIEWER_DEFS;

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = combined;
	
	var _paginate = __webpack_require__(387);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _redux = __webpack_require__(212);
	
	var _actionTypes = __webpack_require__(106);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var DEFAULT_KEY = 'default';
	var SEARCH_KEY = 'search';
	var parseTypes = function parseTypes(actionTypes) {
	    return [actionTypes.REQUEST, actionTypes.SUCCESS, actionTypes.FAILURE];
	};
	var generalMapActionToKey = function generalMapActionToKey(action) {
	    var options = action.options;
	    var key = action.key;
	
	    var _ref = options || {};
	
	    var q = _ref.q;
	
	    if (key) {
	        return key;
	    }
	    if (q) {
	        return SEARCH_KEY;
	    }
	    return DEFAULT_KEY;
	};
	function pagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    var combinedReducer = (0, _redux.combineReducers)({
	        books: (0, _paginate2.default)({
	            mapActionToKey: generalMapActionToKey,
	            types: parseTypes(ActionTypes.BOOKS)
	        }),
	        users: (0, _paginate2.default)({
	            mapActionToKey: generalMapActionToKey,
	            types: parseTypes(ActionTypes.USERS)
	        }),
	        authors: function authors() {
	            return state.authors || {};
	        },
	        doubanBooks: function doubanBooks() {
	            return state.doubanBooks || {};
	        },
	        bookShelves: function bookShelves() {
	            return state.bookShelves || {};
	        }
	    });
	    return combinedReducer(state, action);
	}
	// legacy pagination support
	var updatePagination = function updatePagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _paginate.DEFAULT_PAGINATION_STATE;
	    var action = arguments[1];
	    var merge = arguments[2];
	
	    if (!action.response) {
	        return Object.assign({}, state, {
	            isFetching: true
	        });
	    } else {
	        return (0, _paginate.computePaginationState)(state, action);
	    }
	};
	function legacyPagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.pagination) {
	        var _action$pagination = action.pagination;
	        var name = _action$pagination.name;
	        var q = _action$pagination.q;
	        var key = _action$pagination.key;
	        var merge = _action$pagination.merge;
	
	        var qKey = q ? SEARCH_KEY : null;
	        var finalKey = qKey || key || DEFAULT_KEY;
	        var originalState = state[name] && state[name][finalKey] || undefined;
	        return Object.assign({}, state, _defineProperty({}, name, _defineProperty({}, finalKey, updatePagination(originalState, action, merge))));
	    }
	    return state;
	}
	function combined(state, action) {
	    return pagination(legacyPagination(state, action), action);
	}

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DEFAULT_PAGINATION_STATE = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	exports.computePaginationState = computePaginationState;
	exports.default = paginate;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var DEFAULT_PAGINATION_STATE = exports.DEFAULT_PAGINATION_STATE = {
	    isFetching: false,
	    pages: {},
	    ids: [],
	    pageCount: 0
	};
	function computePaginationState(state, action) {
	    var currentPage = action.response._next ? action.response._next.page - 1 : action.response._last && action.response._last.page || 1;
	    var pages = _lodash2.default.assign({}, _defineProperty({}, currentPage, action.response.result));
	    return _lodash2.default.assign({}, state, {
	        isFetching: false,
	        pages: pages,
	        ids: _lodash2.default.union(state.ids, action.response.result),
	        // 如果不使用 null 在外层的 merge 会忽略 undefined 从而导致一些边缘问题
	        next: action.response._next || null,
	        last: action.response._last || null,
	        pageCount: state.pageCount + 1
	    });
	}
	function paginate(_ref) {
	    var types = _ref.types;
	    var mapActionToKey = _ref.mapActionToKey;
	
	    if (!Array.isArray(types) || types.length !== 3) {
	        throw new Error('Expected types to be an array of three elements.');
	    }
	    if (!types.every(function (t) {
	        return typeof t === 'string';
	    })) {
	        throw new Error('Expected types to be strings.');
	    }
	    if (typeof mapActionToKey !== 'function') {
	        throw new Error('Expected mapActionToKey to be a function.');
	    }
	
	    var _types = _slicedToArray(types, 3);
	
	    var requestType = _types[0];
	    var successType = _types[1];
	    var failureType = _types[2];
	
	    function updatePagination() {
	        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_PAGINATION_STATE;
	        var action = arguments[1];
	
	        switch (action.type) {
	            case requestType:
	                return _lodash2.default.assign({}, state, {
	                    isFetching: true
	                });
	            case successType:
	                return computePaginationState(state, action);
	            case failureType:
	                return _lodash2.default.assign({}, state, {
	                    isFetching: false
	                });
	            default:
	                return state;
	        }
	    }
	    return function updatePaginationByKey() {
	        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	        var action = arguments[1];
	
	        switch (action.type) {
	            case requestType:
	            case successType:
	            case failureType:
	                var key = mapActionToKey(action);
	                if (typeof key !== 'string') {
	                    throw new Error('Expected key to be a string.');
	                }
	                return _lodash2.default.merge({}, state, _defineProperty({}, key, updatePagination(state[key], action)));
	            default:
	                return state;
	        }
	    };
	}

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _callApi = __webpack_require__(205);
	
	var _callApi2 = _interopRequireDefault(_callApi);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _handleResponse = __webpack_require__(209);
	
	var _handleResponse2 = _interopRequireDefault(_handleResponse);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            var CALL_API = action.CALL_API;
	            if (typeof CALL_API === 'undefined') {
	                return next(action);
	            }
	            var endpoint = CALL_API.endpoint;
	            var apiUrl = CALL_API.apiUrl;
	            var options = CALL_API.options;
	            var pagination = CALL_API.pagination;
	            var types = CALL_API.types;
	            var schema = CALL_API.schema;
	
	            var _types = _slicedToArray(types, 3);
	
	            var requestType = _types[0];
	            var successType = _types[1];
	            var failureType = _types[2];
	
	            var actionWith = function actionWith(_ref) {
	                var data = _ref.data;
	                var hasPagination = _ref.hasPagination;
	
	                var finalAction = Object.assign({}, action, data);
	                finalAction = _lodash2.default.omit(finalAction, ['CALL_API']);
	                if (!hasPagination) {
	                    finalAction = _lodash2.default.omit(finalAction, ['CALL_API', 'pagination']);
	                }
	                return finalAction;
	            };
	            next(actionWith({
	                data: {
	                    type: requestType,
	                    pagination: pagination
	                },
	                hasPagination: Boolean(pagination)
	            }));
	            if (typeof endpoint === 'function') {
	                endpoint = endpoint(store.getState());
	            }
	            if (typeof apiUrl === 'undefined') {
	                apiUrl = _helpers2.default.getApiRoot();
	            }
	            var fullUrl = apiUrl + '/' + endpoint;
	            return (0, _callApi2.default)(fullUrl, options || {}).then(function (response) {
	                var normalizedRes = (0, _handleResponse2.default)(response, schema);
	                var finalAction = {
	                    response: normalizedRes,
	                    type: successType,
	                    pagination: pagination
	                };
	                return next(function (dispatch) {
	                    dispatch(actionWith({ data: finalAction, hasPagination: Boolean(pagination) }));
	                    return {
	                        ok: true,
	                        response: response
	                    };
	                });
	            }, function (error) {
	                return next(function (dispatch) {
	                    dispatch(actionWith({
	                        data: {
	                            type: failureType,
	                            pagination: pagination,
	                            error: error
	                        },
	                        hasPagination: Boolean(pagination)
	                    }));
	                    return {
	                        ok: false,
	                        error: error
	                    };
	                });
	            });
	        };
	    };
	};

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionTypes = __webpack_require__(106);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            if (action.type === ACTION_TYPES.DOUBAN_BOOKS.SUCCESS) {
	                action.response.result = action.response.result.books;
	            }
	            return next(action);
	        };
	    };
	};

/***/ },
/* 390 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            if (typeof action.SERVER_STORE === 'undefined') {
	                return next(action);
	            }
	            var actionBody = new Promise(function (resolve) {
	                resolve(action.SERVER_STORE.body);
	            });
	            return actionBody.then(function (body) {
	                return next(function (dispatch) {
	                    dispatch(body);
	                    return {
	                        ok: true,
	                        response: action.body.response
	                    };
	                });
	            });
	        };
	    };
	};

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleInitialState;
	
	var _common = __webpack_require__(52);
	
	function handleInitialState() {
	    if (typeof window === 'undefined') {
	        return {};
	    }
	    return window[_common.INITIAL_STATE] || {};
	}

/***/ },
/* 392 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            console.info(action.type);
	            next(action);
	        };
	    };
	};

/***/ },
/* 393 */
/***/ function(module, exports) {

	module.exports = require("redux-logger");

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _api = __webpack_require__(388);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _modifyResponse = __webpack_require__(389);
	
	var _modifyResponse2 = _interopRequireDefault(_modifyResponse);
	
	var _handleServerStore = __webpack_require__(390);
	
	var _handleServerStore2 = _interopRequireDefault(_handleServerStore);
	
	var _logActionTypes = __webpack_require__(392);
	
	var _logActionTypes2 = _interopRequireDefault(_logActionTypes);
	
	var _cache = __webpack_require__(395);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    api: _api2.default,
	    modifyResponse: _modifyResponse2.default,
	    handleServerStore: _handleServerStore2.default,
	    logActionTypes: _logActionTypes2.default,
	    cache: _cache2.default
	};

/***/ },
/* 395 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var SUCCESS = 'SUCCESS';
	var isSuccessAction = function isSuccessAction(action) {
	    // console.log(action)
	    // return true
	    // return _.last(action.type.split('/')) === SUCCESS
	};
	var cacheResponseAction = function cacheResponseAction(action) {
	    // console.log('cached')
	};
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            // if (action.cacheKey) {
	            //   // function* gen() {
	            //   //   yield 1
	            //   // }
	            //   // const fuck = gen()
	            //   // console.log(fuck.next())
	            //   next({
	            //     type: 'cache'
	            //   })
	            //   // return false
	            // }
	            // if (action.cacheKey && isSuccessAction(action)) {
	            //   cacheResponseAction(action)
	            //   next(action)
	            //   return false
	            // }
	            return next(action);
	        };
	    };
	};

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = render500;
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ErrorPage = __webpack_require__(397);
	
	var _ErrorPage2 = _interopRequireDefault(_ErrorPage);
	
	var _server = __webpack_require__(374);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ERROR_DOC_TITLE = '服务器错误';
	var ERROR_PAGE_TITLE = '额，似乎出了点状况';
	function render500(message, isProd) {
	    return (0, _server.renderToStaticMarkup)(_react2.default.createElement(_ErrorPage2.default, { isProd: isProd, message: message, title: ERROR_PAGE_TITLE, docTitle: ERROR_DOC_TITLE }));
	}

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _Page = __webpack_require__(376);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	var _react = __webpack_require__(87);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _server = __webpack_require__(374);
	
	var _AppError = __webpack_require__(355);
	
	var _AppError2 = _interopRequireDefault(_AppError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ErrorPage(props) {
	    var isProd = props.isProd;
	    var message = props.message;
	    var docTitle = props.docTitle;
	    var title = props.title;
	
	    return _react2.default.createElement(_Page2.default, { isProd: isProd, title: docTitle, noScript: true, appMarkup: (0, _server.renderToString)(_react2.default.createElement(_AppError2.default, { title: title, message: message })) });
	}
	exports.default = ErrorPage;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = bootstrap;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var http = __webpack_require__(399);
	var port = _app2.default.port;
	function bootstrap(app, _ref) {
	    var production = _ref.production;
	    var render = _ref.render;
	    var hot = _ref.hot;
	    var route = _ref.route;
	
	    var features = [];
	    if (hot) {
	        features.push('hot');
	    }
	    if (render) {
	        features.push('server rendering');
	    } else if (route) {
	        features.push('server routing');
	    } else {
	        features.push('hash routing');
	    }
	    app.set('port', port);
	    var server = http.createServer(app);
	    server.listen(port);
	    features = features.map(function (feature) {
	        return '[' + feature + ']';
	    }).join(' ');
	    _print2.default.info('Server running in ' + (production ? 'production' : 'development') + ' (' + port + ') ' + features);
	    if (hot) {
	        console.info('webpack building...');
	    }
	    return app;
	}

/***/ },
/* 399 */
/***/ function(module, exports) {

	module.exports = require("http");

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = hotModuleReplacement;
	
	var _webpack = __webpack_require__(401);
	
	var _webpack2 = _interopRequireDefault(_webpack);
	
	var _webpackHot = __webpack_require__(402);
	
	var _webpackHot2 = _interopRequireDefault(_webpackHot);
	
	var _combineMiddleware = __webpack_require__(412);
	
	var _combineMiddleware2 = _interopRequireDefault(_combineMiddleware);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var webpackDevMiddleware = __webpack_require__(413);
	var webpackHotMiddleware = __webpack_require__(414);
	function hotModuleReplacement() {
	    var compiler = (0, _webpack2.default)(_webpackHot2.default);
	    return (0, _combineMiddleware2.default)([webpackDevMiddleware(compiler, { noInfo: true, publicPath: _webpackHot2.default.output.publicPath }), webpackHotMiddleware(compiler)]);
	}

/***/ },
/* 401 */
/***/ function(module, exports) {

	module.exports = require("webpack");

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _webpack = __webpack_require__(401);
	
	var _webpack2 = _interopRequireDefault(_webpack);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var base = __webpack_require__(403);
	var paths = base.vars.paths;
	var ExtractTextPlugin = __webpack_require__(407);
	var config = {
	    entry: {
	        app: [
	        // 需要放在第一个
	        'react-hot-loader/patch', 'webpack-hot-middleware/client', 'babel-polyfill', paths.isomorphic]
	    },
	    output: {
	        path: paths.built,
	        filename: '[name].js',
	        publicPath: 'http://localhost:3000/built/'
	    },
	    plugins: [base.plugins.devEnv()].concat(_toConsumableArray(base.plugins.dllReferences()), [new _webpack2.default.HotModuleReplacementPlugin(), new _webpack2.default.NoErrorsPlugin(), new ExtractTextPlugin('[name].css', {
	        allChunks: true
	    })]),
	    devtool: 'inline-source-map',
	    module: {
	        loaders: [base.loaders.image(), base.loaders.sass({
	            sourceMap: true,
	            extract: true
	        }), base.loaders.postcss({
	            sourceMap: true,
	            extract: true
	        }), base.loaders.babel(), base.loaders.typescript({
	            officialLoader: false,
	            isHot: true
	        }), base.loaders.json()]
	    },
	    sassLoader: base.loaders.loaderConfig.sassLoader(),
	    postcss: base.loaders.loaderConfig.postcss(),
	    resolve: base.common.resolve
	};
	exports.default = config;

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(404);
	var loaders = __webpack_require__(406);
	var plugins = __webpack_require__(410);
	var common = __webpack_require__(411);
	
	module.exports = {
	  vars: vars,
	  loaders: loaders,
	  plugins: plugins,
	  common: common
	};

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var path = __webpack_require__(405);
	
	var pathPrefix = process.cwd();
	
	var paths = {
	  root: pathPrefix,
	  src: path.join(pathPrefix, 'src'),
	  built: path.join(pathPrefix, 'public/built'),
	  builtProd: path.join(pathPrefix, 'public/built_prod'),
	  assets: path.join(pathPrefix, 'src/assets'),
	  isomorphic: path.join(pathPrefix, 'src/isomorphic'),
	  server: path.join(pathPrefix, 'src/server')
	};
	
	var cssLocalIdentName = '[local]_[hash:base64:5]';
	
	var imageName = 'img/[name].[hash:10].[ext]';
	
	// 暴露到全局变量的名称
	var vendorLibName = '_[name]_dll';
	
	// HMR entry 里面的一个标记，具体不懂。。
	var hot = 'webpack-hot-middleware/client';
	
	// webpack 会使用文件名作为变量，所以不能使用带有 - 的名字
	// 这边的配置会同时影响生成和引用，所以只需在这边修改就行了
	var dllNames = {
	  reactKit: 'react_kit',
	  utils: 'utils'
	};
	
	// code splitting
	var libs = {
	  reactKit: ['react', 'react-dom', 'react-addons-css-transition-group', 'redux', 'react-redux', 'react-router', 'redux-thunk', 'react-css-modules', 'react-side-effect', 'react-router-redux', 'immutable', 'react-motion', 'reselect', 'redux-saga'],
	
	  reactDevKit: ['redux-devtools-log-monitor', 'redux-devtools-dock-monitor'],
	
	  utils: ['lodash', 'jquery', 'normalizr', 'humps', 'isomorphic-fetch', 'classnames', 'marked', 'moment']
	};
	
	module.exports = {
	  pathPrefix: pathPrefix,
	  paths: paths,
	  cssLocalIdentName: cssLocalIdentName,
	  imageName: imageName,
	  vendorLibName: vendorLibName,
	  hot: hot,
	  dllNames: dllNames,
	  libs: libs
	};

/***/ },
/* 405 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(404);
	var ExtractTextPlugin = __webpack_require__(407);
	
	var parseLoadersForExtractTextPlugin = function parseLoadersForExtractTextPlugin(loaders) {
	  return [loaders[0], loaders.slice(1, loaders.length).join('!')];
	};
	
	module.exports = {
	  loaderConfig: {
	    sassLoader: function sassLoader() {
	      return {
	        // 用于 scss 文件里 import 其它文件
	        includePaths: [vars.paths.isomorphic, vars.paths.static]
	      };
	    },
	    postcss: function postcss() {
	      return [__webpack_require__(408)({
	        path: [vars.paths.isomorphic]
	      }), __webpack_require__(409)];
	    }
	  },
	
	  json: function json() {
	    return {
	      test: /\.json$/,
	      loader: 'json'
	    };
	  },
	  babel: function babel() {
	    return {
	      test: /\.jsx?$/,
	      exclude: /(node_modules|bower_components)/,
	      loader: 'babel'
	    };
	  },
	  image: function image() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { emitFile: true };
	
	    var emitFile = _ref.emitFile;
	
	    var emitFileConfig = emitFile ? 'emitFile=true' : 'emitFile=false';
	
	    return {
	      test: /\.(jpe?g|png|gif|svg)$/i,
	      loaders: ['file?name=' + vars.imageName + '&' + emitFileConfig, 'image-webpack?bypassOnDebug&optimizationLevel=7&interlaced=false']
	    };
	  },
	  typescript: function typescript() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var officialLoader = _ref2.officialLoader;
	    var isHot = _ref2.isHot;
	
	    var tsLoader = officialLoader ? 'ts' : 'awesome-typescript';
	    var babel = isHot ? 'babel?plugins=react-hot-loader/babel' : 'babel';
	
	    return {
	      test: /\.tsx?$/,
	      loaders: [babel, '' + tsLoader]
	    };
	  },
	  sass: function sass() {
	    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var isomorphic = _ref3.isomorphic;
	    var global = _ref3.global;
	    var extract = _ref3.extract;
	    var sourceMap = _ref3.sourceMap;
	
	    var styleLoader = isomorphic ? 'isomorphic-style' : 'style';
	    var sourceMapConfig = sourceMap ? 'sourceMap=true' : 'sourceMap=false';
	    var localIdentName = global ? '[local]' : vars.cssLocalIdentName;
	
	    var loaders = [styleLoader + '?' + sourceMapConfig, 'css?' + sourceMapConfig + '&modules&importLoaders=1&localIdentName=' + localIdentName, 'sass?' + sourceMapConfig];
	
	    return {
	      test: /\.scss$/,
	      loader: extract ? ExtractTextPlugin.extract.apply(null, parseLoadersForExtractTextPlugin(loaders)) : loaders.join('!')
	    };
	  },
	  postcss: function postcss() {
	    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var global = _ref4.global;
	    var extract = _ref4.extract;
	    var sourceMap = _ref4.sourceMap;
	    var isomorphic = _ref4.isomorphic;
	
	    var styleLoader = isomorphic ? 'isomorphic-style' : 'style';
	    var localIdentName = global ? '[local]' : vars.cssLocalIdentName;
	    var sourceMapConfig = sourceMap ? 'sourceMap=true' : 'sourceMap=false';
	
	    var loaders = [styleLoader + '?' + sourceMapConfig, 'css?' + sourceMapConfig + '&modules&importLoaders=1&localIdentName=' + localIdentName, 'postcss?' + sourceMapConfig];
	
	    return {
	      test: /\.css$/,
	      loader: extract ? ExtractTextPlugin.extract.apply(null, parseLoadersForExtractTextPlugin(loaders)) : loaders.join('!')
	    };
	  },
	
	
	  // 未经测试
	  css: function css() {
	    return {
	      test: /\.css$/,
	      loaders: ['style', 'css?modules&importLoaders=1&localIdentName=[local]', 'resolve-url']
	    };
	  }
	};

/***/ },
/* 407 */
/***/ function(module, exports) {

	module.exports = require("extract-text-webpack-plugin");

/***/ },
/* 408 */
/***/ function(module, exports) {

	module.exports = require("postcss-import");

/***/ },
/* 409 */
/***/ function(module, exports) {

	module.exports = require("postcss-cssnext");

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var webpack = __webpack_require__(401);
	var fs = __webpack_require__(378);
	var vars = __webpack_require__(404);
	var _ = __webpack_require__(10);
	
	/**
	 * @param names
	 * {
	 *   [name: string]: string
	 * }
	 */
	var createDllReferences = function createDllReferences(names) {
	  try {
	    return _.map(names, function (name) {
	      return new webpack.DllReferencePlugin({
	        context: '.',
	        manifest: JSON.parse(fs.readFileSync(vars.paths.built + '/' + name + '.dll.manifest.json', 'utf8'))
	      });
	    });
	  } catch (error) {
	    console.warn('WARNING: ', error.message);
	    return [];
	  }
	};
	
	module.exports = {
	  prodEnv: function prodEnv() {
	    return new webpack.DefinePlugin({
	      'process.env.NODE_ENV': '"production"'
	    });
	  },
	  devEnv: function devEnv() {
	    return new webpack.DefinePlugin({
	      'process.env.NODE_ENV': '"development"'
	    });
	  },
	  nodeSourceMapSupport: function nodeSourceMapSupport() {
	    return new webpack.BannerPlugin('require(\'source-map-support\').install()', {
	      raw: true,
	      entryOnly: true
	    });
	  },
	  occurenceOrder: function occurenceOrder() {
	    return new webpack.optimize.OccurenceOrderPlugin();
	  },
	  dllReferences: function dllReferences() {
	    return createDllReferences(vars.dllNames);
	  },
	  dll: function dll() {
	    return new webpack.DllPlugin({
	      path: vars.paths.built + '/[name].dll.manifest.json',
	      name: vars.vendorLibName
	    });
	  },
	  uglify: function uglify() {
	    return new webpack.optimize.UglifyJsPlugin({
	      compress: {
	        warnings: false
	      }
	    });
	  }
	};

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(404);
	
	module.exports = {
	  resolve: {
	    // 这边定义的 root 暂时没用，因为 vs code 里面目前配置的是只使用相对路径
	    root: vars.paths.src,
	    alias: {
	      // 方便在组建里面引用通用的 scss 文件（可能不会太常用）
	      // composes 使用的是 webpack resolve 里面的规则
	      styles: vars.paths.isomorphic + '/styles'
	    },
	    extensions: ['', '.js', '.jsx', '.ts', '.tsx']
	  }
	};

/***/ },
/* 412 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = combineMiddleware;
	/**
	 * Combine multiple middleware together
	 * Source: http://stackoverflow.com/questions/20274483/how-do-i-combine-connect-middleware-into-one-middleware
	 *
	 * @param {Function[]} mids functions of form:
	 *   function(req, res, next) { ... }
	 * @return {Function} single combined middleware
	 */
	/**
	 * Combine multiple middleware together
	 * Source: http://stackoverflow.com/questions/20274483/how-do-i-combine-connect-middleware-into-one-middleware
	 *
	 * @param {Function[]} mids functions of form:
	 *   function(req, res, next) { ... }
	 * @return {Function} single combined middleware
	 */function combineMiddleware(mids) {
	    return mids.reduce(function (a, b) {
	        return function (req, res, next) {
	            a(req, res, function (err) {
	                if (err) {
	                    return next(err);
	                }
	                return b(req, res, next);
	            });
	        };
	    });
	}

/***/ },
/* 413 */
/***/ function(module, exports) {

	module.exports = require("webpack-dev-middleware");

/***/ },
/* 414 */
/***/ function(module, exports) {

	module.exports = require("webpack-hot-middleware");

/***/ },
/* 415 */
/***/ function(module, exports) {

	module.exports = require("morgan");

/***/ },
/* 416 */
/***/ function(module, exports) {

	module.exports = require("cookie-parser");

/***/ },
/* 417 */
/***/ function(module, exports) {

	module.exports = require("body-parser");

/***/ },
/* 418 */
/***/ function(module, exports) {

	module.exports = require("connect-mongo");

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgYTJkMTc3Mjg4NWUzMzdkNzEwOGIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmFiZWwtcG9seWZpbGxcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvaW5pdGlhbGl6ZS50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJleHByZXNzXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZXhwcmVzcy1zZXNzaW9uXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yb3V0ZXMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yb3V0ZXMvYXBpLXJvdXRlcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL3BhcnNlLWNvbnRleHQudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibG9kYXNoXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2F1dGgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvbm90LWZvdW5kLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZXJyb3JzL2dlbmVyaWMtZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvdmFsaWRhdGlvbi1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy9iYWQtcmVxdWVzdC1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy9pbnRlcm5hbC1zZXJ2ZXItZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvbm8tcGVybWlzc2lvbi1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy91bmF1dGhvcml6ZWQtZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvcmVxdWVzdC10b28tbGFyZ2UtZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvdW5zdXBwb3J0ZWQtZmlsZS10eXBlLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZXJyb3JzL2VtYWlsLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZXJyb3JzL21ldGhvZC1ub3QtYWxsb3dlZC1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy90b28tbWFueS1yZXF1ZXN0cy1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy90b2tlbi1yZXZvY2F0aW9uLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvaTE4bi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3RyYW5zbGF0aW9ucy9jbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9tb2RlbC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9kYXRhYmFzZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmNvbmZpZy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmNvbmZpZy5kZXYudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC5jb25maWcucHJvZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9vdXRwdXQtZW1wdHktZW50aXR5LnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcIm1vbmdvZGJcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3V0aWxzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvdmFsaWRhdG9yLnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcInZhbGlkYXRvclwiIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvcGlwZWxpbmUudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmx1ZWJpcmRcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3V0aWxzL3JlZHVjZS10YXNrcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3V0aWxzL3NvcnQtYnktZGF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy92YWxpZGF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9wYWdpbmF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2hlbHBlcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9oZWxwZXJzL2NvbXB1dGUtaGFzaC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjcnlwdG9cIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJodW1wc1wiIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZGF0YS9zY2hlbWFzLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvbW9kZWxzL3NjaGVtYS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2RhdGEvdHlwZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL3JlcXVpcmUtcGVybWlzc2lvbnMtb2YudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29uc3RhbnRzL2NvbW1vbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvcHJpbnQudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiY29sb3JzL3NhZmVcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWpzb24tcmVzcG9uc2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvcGFyc2VVcmxlbmNvZGVkLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9saWZlY2lyY2xlLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvZ2V0QXBpUm9vdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyUm91dGluZ0VuYWJsZWQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9yZWRpcmVjdC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1yb3V0ZXJcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyRW52LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvcHJpbnQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2xvZy1maWxlLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvbWlkZGxld2FyZS9wcmVwYXJlLWFwaS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWFwaS1ub3QtZm91bmQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lbmRwb2ludHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvZmlsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2FwaS9ib29rcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3BhcnNlcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwic2ltcGxlLWVwdWItcGFyc2VyXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9wYXJzZXJzL3R4dC1jb250ZW50LnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvYXBpL3VzZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvdXNlcnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvY29sbGVjdGlvbnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvYmFzaWMtYXBpLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZW5kcG9pbnRzL21ha2UtYmFzaWMtZW5kcG9pbnQudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibXVsdGVyXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yb3V0ZXMvcGFnZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvb3B0aW9ucy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2hlbHBlcnMvcGFyc2VkLWFyZ3YudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibWluaW1pc3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvY3JlYXRlUm91dGVzLnRzeCIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdFwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvTWFzdGVyLnRzeCIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1yZWR1eFwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9hcGkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvZ2V0Q3VycmVudFRpbWUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvcGFkTnVtYmVyV2l0aFplcm8udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvcGFyc2VRdWVyeS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy91dGlscy9kb20vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvZG9tL2lzRGVzY2VuZGFudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3V0aWxzL2Jyb3dzZXIvZ2V0U2NyZWVuSW5mby50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2lzSUUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvYnJvd3Nlci9sb2NrU2Nyb2xsLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3V0aWxzL2Jyb3dzZXIvdW5sb2NrU2Nyb2xsLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3NjaGVtYXMudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibm9ybWFsaXpyXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy91dGlscy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb25zdGFudHMvYWN0aW9uVHlwZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9jb21tb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy90ZXN0LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvdmlld2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3NlbGVjdG9ycy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvZW50aXRpZXMudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVzZWxlY3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvY29tbW9uLnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcImJldHRlci1yZWR1eC1mb3JtXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2VsZWN0b3JzL3ZpZXdlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9BbGVydC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQWxlcnQvQWxlcnQudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9JY29uLnRzeCIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9zdmctaWNvbnMudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3QtY3NzLW1vZHVsZXNcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JY29uL0ljb24uc2Nzcz83M2JhIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vSWNvbi5zY3NzIiwid2VicGFjazovLy8uL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vfi9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5XCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXlcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQWxlcnQvQWxlcnQuc2Nzcz9iNWI2Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQWxlcnQvQWxlcnRzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9Nb2RhbC50c3giLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3QtZG9tXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9GYWRlL0ZhZGUudHN4Iiwid2VicGFjazovLy9leHRlcm5hbCBcInJlYWN0LWFkZG9ucy1jc3MtdHJhbnNpdGlvbi1ncm91cFwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ZhZGUvRmFkZS5zY3NzP2Y0YTAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWwuc2Nzcz82Y2FiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxQbHVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9Db25maXJtTW9kYWwudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsRm9vdGVyLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9mb3JtLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0J1dHRvbi9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9CdXR0b24vQnV0dG9uLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9CdXR0b24vX2J1dHRvbi5zY3NzPzZhMWQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQnV0dG9uL19idXR0b24uc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSW5wdXQvSW5wdXQuc2Nzcz9jYmJjIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0lucHV0L0lucHV0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvU2VsZWN0aXplSW5wdXQudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1NlbGVjdGl6ZUlucHV0L1NlbGVjdGl6ZUlucHV0LnNjc3M/ZmQ3NSIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9TZWxlY3RpemVJbnB1dC9TZWxlY3RpemVJbnB1dC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL1RleHRhcmVhLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9UZXh0YXJlYS9UZXh0YXJlYS5jc3M/Mjg2MSIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9UZXh0YXJlYS9UZXh0YXJlYS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3R5bGVzL3ZhcmlhYmxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxGb290ZXIuc2Nzcz85NDkxIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsRm9vdGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29udGFpbmVycy9BcHAudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL2xheW91dC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Db250YWluZXIvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQ29udGFpbmVyL0NvbnRhaW5lci50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRHJvcGRvd24vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRHJvcGRvd24vRHJvcGRvd24udHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL0Ryb3Bkb3duLnNjc3M/ZWNmMyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bi5zY3NzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL0Ryb3Bkb3duSXRlbS50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRHJvcGRvd24vRHJvcGRvd25JdGVtU2VwLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0xvZ28vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Mb2dvL0xvZ28udHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9Mb2dvLmNzcz8wNzBlIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9Mb2dvLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltZy9sb2dvLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltZy9sb2dvLWRhcmsucG5nIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcuc2Nzcz9lYzU3Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0NvbG9waG9uL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24udHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24uc2Nzcz84NzcyIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24uc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb250YWluZXJzL0NvbnNvbGUudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL0NvbnNvbGVCcmFuZGluZy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlQnJhbmRpbmcvQ29uc29sZUJyYW5kaW5nLnNjc3M/MThhNSIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0NvbnNvbGVCcmFuZGluZy9Db25zb2xlQnJhbmRpbmcuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0NvbnNvbGVTaWRlYmFyL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZVNpZGViYXIvQ29uc29sZVNpZGViYXIudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZVNpZGViYXIvQ29uc29sZVNpZGViYXIuY3NzP2E1OGUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9Db25zb2xlU2lkZWJhci5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29udGVudC9tZW51cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb250YWluZXJzL0RvY0NvbnRhaW5lci50c3giLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3Qtc2lkZS1lZmZlY3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy9hcGkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc2VydmljZXMvYXBpL2FwaS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9jYWxsQXBpLnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcImlzb21vcnBoaWMtZmV0Y2hcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9qc29ucC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9ub3JtYWxpemVSZXNwb25zZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9oYW5kbGVSZXNwb25zZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL2luZGV4LnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcInJlZHV4XCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1ZpZXdlci9jb21wb25lbnRzL0Jvb2tQYWdlLnNjc3M/MGVlYiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL2NvbXBvbmVudHMvQm9va1BhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb25zdGFudHMvdmlld2VyRGVmcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL1ZpZXdlci51dGlscy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVGVzdFBsYWNlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9BcHBIb21lL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9Ccm93c2UvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0Jvb2tEZXRhaWwvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0NvbGxlY3Rpb25zL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9Db2xsZWN0aW9uRGV0YWlsL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9TaWduaW4vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1NpZ251cC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvU2hlbGYvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1ByZWZlcmVuY2UvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1Byb2ZpbGUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL01hbmFnZUJvb2tzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9NYW5hZ2VVc2Vycy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQWRkQm9vay9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQWRkQ29sbGVjdGlvbi9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvTm9NYXRjaC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0FwcEVycm9yL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3IudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3Iuc2Nzcz9mODVhIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3Iuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9nZXQtc3RvcmUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVkdXgtc2FnYS9lZmZlY3RzXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvbG9hZFJlcXVlc3RzLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3NhZ2FzL3V0aWxzLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2RhdGEvY2FjaGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZlbmRvcl9tb2R1bGVzL21kNS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdmVuZG9yX21vZHVsZXMvbWQ1L21kNS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zYWdhcy9sb2dpbkZsb3cudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvdmlld2VyVGFza3MudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVkdXgtc2FnYVwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3NhZ2FzL3Rlc3QudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yZW5kZXIvbWF0Y2gtcm91dGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yZW5kZXIvcmVuZGVyLWh0bWwudHN4Iiwid2VicGFjazovLy9leHRlcm5hbCBcInJlYWN0LWRvbS9zZXJ2ZXJcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1yb3V0ZXItcmVkdXhcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9jb21wb25lbnRzL1BhZ2UudHN4Iiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvcmVuZGVyL2NvbXBvbmVudHMvSHRtbC50c3giLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZnNcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9jb21wb25lbnRzL1NlcnZlclNpZGVBcHBSb290LnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9jb25maWd1cmVTdG9yZS50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWR1eC10aHVua1wiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL2NvbXBvbmVudHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvcmVkdWNlcnMvY29tcG9uZW50cy92aWV3ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29uc3RhbnRzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL3BhZ2luYXRpb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvcmVkdWNlcnMvcGFnaW5hdGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9hcGkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9tb2RpZnlSZXNwb25zZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9taWRkbGV3YXJlL2hhbmRsZVNlcnZlclN0b3JlLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL2hhbmRsZUluaXRpYWxTdGF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9taWRkbGV3YXJlL2xvZ0FjdGlvblR5cGVzLnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcInJlZHV4LWxvZ2dlclwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL21pZGRsZXdhcmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9jYWNoZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9yZW5kZXI1MDAudHN4Iiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvcmVuZGVyL2NvbXBvbmVudHMvRXJyb3JQYWdlLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Jvb3RzdHJhcC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJodHRwXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9kZXYtdG9vbHMvaG90LW1vZHVsZS1yZXBsYWNlbWVudC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ3ZWJwYWNrXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9kZXYtdG9vbHMvd2VicGFjay5ob3QuY29uZmlnLnRzIiwid2VicGFjazovLy8uL3dlYnBhY2svYmFzZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi93ZWJwYWNrL2Jhc2UvdmFyaWFibGVzLmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcInBhdGhcIiIsIndlYnBhY2s6Ly8vLi93ZWJwYWNrL2Jhc2UvbG9hZGVycy5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwb3N0Y3NzLWltcG9ydFwiIiwid2VicGFjazovLy9leHRlcm5hbCBcInBvc3Rjc3MtY3NzbmV4dFwiIiwid2VicGFjazovLy8uL3dlYnBhY2svYmFzZS9wbHVnaW5zLmpzIiwid2VicGFjazovLy8uL3dlYnBhY2svYmFzZS9jb21tb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci91dGlscy9jb21iaW5lLW1pZGRsZXdhcmUudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwid2VicGFjay1kZXYtbWlkZGxld2FyZVwiIiwid2VicGFjazovLy9leHRlcm5hbCBcIndlYnBhY2staG90LW1pZGRsZXdhcmVcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJtb3JnYW5cIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjb29raWUtcGFyc2VyXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYm9keS1wYXJzZXJcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjb25uZWN0LW1vbmdvXCIiXSwibmFtZXMiOlsiYmFzZURpciIsInByb2Nlc3MiLCJjd2QiLCJhcHAiLCJpbml0aWFsaXplIiwiTW9uZ29TdG9yZSIsIlBVQkxJQ19QQVRIX05BTUUiLCJTRVNTSU9OX1NFQ1JFVCIsIlNFU1NJT05fTUFYX0FHRSIsIlJFUV9TSVpFX0xJTUlUIiwiTU9OR09fU1RPUkVfVVJMIiwiZGF0YWJhc2UiLCJob3N0IiwibW9uZ29TdG9yZU5hbWUiLCJSRVFfQkFTRV9QQVRIIiwiYmFzZVBhdGgiLCJ1c2UiLCJzZWNyZXQiLCJjb29raWUiLCJtYXhBZ2UiLCJleHBpcmVzIiwiRGF0ZSIsIm5vdyIsInJlc2F2ZSIsInNhdmVVbmluaXRpYWxpemVkIiwic3RvcmUiLCJ1cmwiLCJob3QiLCJ1cmxlbmNvZGVkIiwibGltaXQiLCJleHRlbmRlZCIsImpzb24iLCJzdGF0aWMiLCJqb2luIiwicmVxIiwicmVzIiwibmV4dCIsInNraXAiLCJzdGF0dXNDb2RlIiwiYXBpIiwicHJlZml4IiwicGFyc2VDb250ZXh0IiwicGFnZXMiLCJzZXR1cEFwaUFwcCIsImVuZHBvaW50cyIsIkZPUk1fREFUQV9GSUxFX0tFWSIsInVwbG9hZCIsImF1dGhlbnRpY2F0ZVB1YmxpYyIsInByZXBhcmVBcGkiLCJhdXRoZW50aWNhdGVQcml2YXRlIiwicmVxdWlyZVBlcm1pc3Npb25zT2YiLCJVU0VSIiwiYXV0aGVudGljYXRlQWRtaW4iLCJBRE1JTiIsImFwaVJvdXRlcyIsInJvdXRlciIsIlJvdXRlciIsImdldCIsImF1dGhvciIsImZpbmRPbmUiLCJsaXN0IiwicG9zdCIsImFkZCIsInB1dCIsInVwZGF0ZSIsImRlbGV0ZSIsInJlbW92ZSIsImNvbGxlY3Rpb24iLCJsaXN0Q29sbGVjdGlvbnMiLCJmaW5kQm9vayIsInJlc29sdmVCb29rQ29udGVudCIsImxpc3RCb29rcyIsInNpbmdsZSIsImxvZ0ZpbGUiLCJhZGRCb29rIiwiZWRpdEJvb2tNZXRhIiwicmVtb3ZlQm9vayIsInRhZyIsInVzZXIiLCJhZGRVc2VyIiwiZmluZFVzZXIiLCJsaXN0U2hlbGZCb29rcyIsImdldFJlYWRpbmdQcm9ncmVzcyIsInNldFJlYWRpbmdQcm9ncmVzcyIsInJlYWRGaWxlIiwiZGVsRmlsZSIsImF1dGgiLCJiYXNpY0F1dGgiLCJjaGVjayIsInJldm9rZSIsImFwaUFwcCIsImhhbmRsZUFwaU5vdEZvdW5kIiwiaGFuZGxlSlNPTlJlc3BvbnNlIiwiaGFuZGxlRXJyb3IiLCJzZXNzaW9uIiwiY29udGV4dCIsIm9taXQiLCJyb2xlIiwic2NoZW1hcyIsImxvZ2luIiwiYm9keSIsInRvTG93ZXJDYXNlIiwidW5kZWZpbmVkIiwicGFzc3dvcmQiLCJWYWxpZGF0aW9uRXJyb3IiLCJxdWVyeSIsIiRvciIsInVzZXJuYW1lIiwiZW1haWwiLCJ0aGVuIiwiY2FtZWxpemVLZXlzIiwicmVzdWx0IiwiYXBpUmVzdWx0cyIsIlByb21pc2UiLCJyZXNvbHZlIiwib2siLCJVbmF1dGhvcml6ZWRFcnJvciIsInNlbmQiLCJkZWNhbWVsaXplS2V5cyIsImRlc3Ryb3kiLCJzdGF0dXMiLCJOb3RGb3VuZEVycm9yIiwiQmFkUmVxdWVzdEVycm9yIiwiSW50ZXJuYWxTZXJ2ZXJFcnJvciIsIk5vUGVybWlzc2lvbkVycm9yIiwiUmVxdWVzdEVudGl0eVRvb0xhcmdlRXJyb3IiLCJVbnN1cHBvcnRlZE1lZGlhVHlwZUVycm9yIiwiRW1haWxFcnJvciIsIk1ldGhvZE5vdEFsbG93ZWRFcnJvciIsIlRvb01hbnlSZXF1ZXN0c0Vycm9yIiwiVG9rZW5SZXZvY2F0aW9uRXJyb3IiLCJHZW5lcmljRXJyb3IiLCJtZXNzYWdlIiwibmFtZSIsInN0YWNrIiwiRXJyb3IiLCJ0eXBlIiwib2ZmZW5kaW5nUHJvcGVydHkiLCJwcm9wZXJ0eSIsImNvZGUiLCJVbnN1cHBvcnRlZEZpbGVUeXBlRXJyb3IiLCJpMThuIiwiYWRkUGFkZGluZyIsInN0ciIsImVzY2FwZSIsInN1YnN0ciIsImluZGV4T2YiLCJnZXRNYXRjaGluZ1N0cmluZyIsIm1zZ1BhdGgiLCJtYXRjaGluZ1N0cmluZyIsInBhdGgiLCJzcGxpdCIsImkiLCJsZW5ndGgiLCJhZGRQdW5jIiwibGFuZyIsInZhbHVlIiwiaXNOdWxsIiwiY29uc29sZSIsImVycm9yIiwicGxhY2Vob2xkZXJJbmRleCIsImJlZm9yZSIsInN1YnN0cmluZyIsImFmdGVyIiwibWF0Y2hpbmdWYWx1ZSIsInRyaW0iLCJjb21tb24iLCJ0ZXJtcyIsImlkIiwicGVyY2VudGFnZSIsImRlc2NyaXB0aW9uIiwiY3JlYXRvciIsInRpdGxlIiwicHJvZ3Jlc3MiLCJhZG1pbiIsImZpbGUiLCJmaWxlcyIsImJvb2siLCJib29rcyIsImVycm9ycyIsInZhbGlkYXRpb24iLCJ2YWx1ZUxpbWl0Iiwibm90U3RyaW5nIiwic3RyaW5nT25seSIsImFscGhhbnVtZXJpYyIsImludmFsaWRGb3JtYXQiLCJub1B1cmVOdW1iZXIiLCJvbmx5U3RhcnRXaXRoTGV0dGVycyIsIm1pbkxlbmd0aCIsIm1heExlbmd0aCIsImFsbG93ZWRDaGFycyIsInByZUNoZWNrIiwiZW1wdHlPYmplY3QiLCJtaXNzUmVxdWlyZWRGaWVsZHMiLCJ1bnN1cHBvcnRlZElucHV0IiwiaW5wdXRFbXB0eSIsImdlbmVyYWwiLCJub3RGb3VuZCIsIm5vdEZvdW5kSW4iLCJleGlzdHMiLCJuZWVkUGVybWlzc2lvbnNPZiIsImxvZ2luUmVxdWlyZWQiLCJzY2hlbWEiLCJ1bmlxdWUiLCJtaWRkbGV3YXJlIiwiYWNjZXNzRGVuaWVkIiwid3JvbmdQYXNzd29yZCIsIndyb25nQ29tYmluYXRpb24iLCJvYXV0aCIsInRva2VuRXhwaXJlZCIsInNwYW1wcmV2ZW50aW9uIiwidG9vTWFueUF0dGVtcHRzIiwibm9Vc2VybmFtZSIsIm5vUGFzc3dvcmQiLCJtYWlsIiwiZmFpbGVkU2VuZGluZ0VtYWlsIiwiYW5FcnJvck9jY3VycmVkIiwidW5rbm93bkVycm9yT2NjdXJyZWQiLCJNb2RlbCIsImlkT3JRdWVyeSIsIl9pZCIsIl9zY2hlbWEiLCJfdGFibGVOYW1lIiwiZmllbGRzIiwicmF3IiwicGFyc2VRdWVyeSIsImRpc2FibGVQYWdpbmF0aW9uIiwiZW50aXR5IiwicmVqZWN0IiwiX2Jhc2VUYWJsZSIsIm9wdGlvbnMiLCJwYWdlIiwiZmlsdGVyIiwibWFwcGluZyIsImRvUXVlcnkiLCJsaXN0UmF3IiwiZ2V0Q29sbGVjdGlvbiIsImZpbmQiLCJsaXN0UmF3UXVlcnkiLCJ0b0FycmF5IiwicmF3UmVzdWx0cyIsInJlc3VsdHMiLCJtb2RpZmllZEVudGl0aWVzIiwiZW50aXRpZXMiLCJtYXAiLCJkYXRhIiwiZGF0YVdpdGhJRCIsIk9iamVjdCIsImFzc2lnbiIsIk1hdGgiLCJyYW5kb20iLCJ0b0ZpeGVkIiwiZGF0ZV9jcmVhdGVkIiwidG9TdHJpbmciLCJkYXRhVG9DaGVjayIsIkJvb2xlYW4iLCJmaWVsZCIsImtleSIsImZpbGVsZCIsImNoZWNraW5nUmVzdWx0IiwiYWxsIiwiZ2V0Um93QnlNYXRjaCIsImRhdGFJdGVtIiwiciIsImluc2VydCIsInJlZHVjZVRhc2tzIiwidXBkYXRlQ29uZmlnIiwibXVsdGkiLCJ1cHNlcnQiLCJkYXRhMiIsImRhdGVfdXBkYXRlZCIsImRvSXQiLCIkc2V0IiwiZ2V0Um93QnlJZCIsImVtYmVkUmVmIiwiTW9uZ29DbGllbnQiLCJ0YWJsZSIsImRiQ29ubmVjdCIsImNvbm5lY3QiLCJkYiIsIm1hdGNoIiwiZ2V0UmVmRmllbGRzV2l0aElkcyIsInJhd1Jlc3VsdCIsInJlZiIsImlkcyIsIkFycmF5IiwiaXNBcnJheSIsImhhbmRsZVJlZlJlc3VsdCIsInJhd1JlZlJlc3VsdCIsInJlZlNjaGVtYSIsImRvZXNSZWZIYXZlUmVmSW5zaWRlIiwiZ2V0UmVmRmllbGRzV2l0aERhdGEiLCJmaWVsZHNXaXRoUmVmSWRzIiwiZmllbGRzV2l0aERhdGEiLCJpc1JlZkluUmVmIiwicmVSZWZlZFJlc3VsdCIsImZpZWxkRGF0YSIsInJlZlJlc3VsdHMiLCJyZWR1Y2UiLCJmaWVsZHNPYmoiLCJmaWVsZHNXaXRoSWRzIiwicmVmT2JqIiwiYXBwQ29uZmlnIiwiZW52IiwiTk9ERV9FTlYiLCJzaXRlVXJsIiwicG9ydCIsImVuYWJsZUVudGl0eUNhY2hlIiwib3V0cHV0RW1wdHlFbnRpdHkiLCJpZE9iak9ySWRTdHJpbmciLCJpZE9iaiIsImZvckVhY2giLCJ2YWxpZGF0b3IiLCJwaXBlbGluZSIsInNvcnRCeURhdGUiLCJyZXF1aXJlIiwiYWRkaXRpb25hbFZhbGlkYXRvcnMiLCJsZW5ndGhNaW4iLCJsZW4iLCJpbnB1dCIsImxlbmd0aE1heCIsInRhc2tzIiwiYXJncyIsInByb3RvdHlwZSIsInNsaWNlIiwiY2FsbCIsImFyZ3VtZW50cyIsInJ1blRhc2siLCJ0YXNrIiwiYXJnIiwiYXBwbHkiLCJhIiwiYiIsInZhbHVlT2YiLCJ2YWxpZGF0ZSIsImlzRWRpdGluZyIsInN1cHBsaWVkRmllbGRzIiwia2V5cyIsImlzVW5kZWZpbmVkIiwic3VwcGxpZWRGaWVsZHNJblNjaGVtYSIsImFsbEZpZWxkcyIsInJlcXVpcmVkRmllbGRzIiwicmVxdWlyZWQiLCJ1bnN1cHBvcnRlZEZpZWxkcyIsIm1pc3NlZEZpZWxkcyIsInZhbGlkYXRlRmllbGQiLCJ2YWwiLCJ2YWxpZGF0b3JzIiwiZm4iLCJlcnJvck1zZyIsInBhZ2luYXRlIiwiZGVmYXVsdE9wdGlvbnMiLCJvcmRlciIsInBhcnNlSW50IiwicmV2ZXJzZSIsInN0YXJ0SW5kZXgiLCJfcGFnaW5hdGlvbiIsImN1cnJlbnQiLCJjZWlsIiwibm90Rm91bmRFcnJvciIsIml0ZW1OYW1lIiwiY29sbGVjdGlvbk5hbWUiLCJjb21wdXRlSGFzaCIsImJ1ZmZlciIsInNoYXN1bSIsImNyZWF0ZUhhc2giLCJkaWdlc3QiLCJpc0VtYWlsIiwiTnVtYmVyIiwiSUQiLCJpc0FscGhhbnVtZXJpYyIsIlNjaGVtYSIsImJhc2VUYWJsZSIsImZpZWxkRGVmaW5pdGlvbiIsIl9maWVsZERlZmluaXRpb24iLCJEYXRhVHlwZSIsIm1hcmsiLCJpc1R5cGVBcnJheSIsImFycmF5T2YiLCJEYXRhVHlwZXMiLCJTdHJpbmciLCJ1c2VyUm9sZSIsIlZJU0lUT1IiLCJFTkFCTEVfU0VSVkVSX1JPVVRJTkciLCJJTklUSUFMX1NUQVRFIiwiRE9VQkFOX0FQSV9ST09UIiwiR0lUSFVCX0FQSV9ST09UIiwiUk9MRVMiLCJlcnJvckpzb24iLCJpc1Byb3RvdHlwZU9mIiwiY29sb3JzIiwicHJpbnQiLCJpbmZvIiwiYmdHcmVlbiIsImJvbGQiLCJ3aGl0ZSIsImdyZWVuIiwidGVzdCIsImJnQ3lhbiIsImJsYWNrIiwiY3lhbiIsIndhcm4iLCJiZ1llbGxvdyIsInllbGxvdyIsImJnUmVkIiwicmVkIiwiQVBJX1JPT1QiLCJnZXRBcGlSb290IiwicGFyc2VQYWdpbmF0aW9uIiwiZnVsbFBhdGgiLCJnZXRMaW50QnlQYWdlIiwibGlua3MiLCJmaXJzdCIsImxhc3QiLCJwcmV2IiwiaGFuZGxlU3VjY2VzcyIsIm1ldGhvZCIsInBhcnNlVXJsZW5jb2RlZCIsIm9yaWdpbmFsT2JqIiwiaXNFbXB0eSIsIm9iamVjdCIsImNsb25lRGVlcCIsImVuY29kZWR1cmwiLCJwcm9wIiwiZW5jb2RlVVJJIiwibGlmZWNpcmNsZSIsImlzU2VydmVyUm91dGluZ0VuYWJsZWQiLCJyZWRpcmVjdCIsImlzU2VydmVyRW52Iiwib25Sb3V0aW5nQ2hhbmdlIiwibmV4dFByb3BzIiwiY3VycmVudFByb3BzIiwicm91dGluZyIsImhhc1BhdGhQYXJhbUNoYW5nZWQiLCJpc0VxdWFsIiwid2luZG93IiwibG9jYXRpb24iLCJvcmlnaW4iLCJwdXNoIiwic3R5bGUiLCJtZXJnZWRBcmdzIiwibW9kQXJncyIsImluZGV4IiwiY29uY2F0IiwidHJhY2UiLCJoZWxwZXJzIiwiZmlsZU1vZGVsIiwiaGFzaCIsImZpbGVuYW1lIiwib3JpZ2luYWxuYW1lIiwiY29udGVudCIsIm1pbWV0eXBlIiwic2l6ZSIsImVuY29kaW5nIiwiZXJyIiwibG9nZ2VkRmlsZUlkIiwiY2F0Y2giLCJfX2FwaVRvdWNoZWQiLCJwYXJhbXMiLCJsaXN0Q29sbGVjdGlvbiIsImZpbGVJZCIsInBhcnNlciIsImJpbmFyeUZpbGUiLCJmaWxlUmVzdWx0IiwiX19hc3NpZ24iLCJ0IiwicyIsIm4iLCJwIiwiaGFzT3duUHJvcGVydHkiLCJfX2F3YWl0ZXIiLCJ0aGlzQXJnIiwiX2FyZ3VtZW50cyIsIlAiLCJnZW5lcmF0b3IiLCJmdWxmaWxsZWQiLCJzdGVwIiwiZSIsInJlamVjdGVkIiwiZG9uZSIsImJvb2tNb2RlbCIsInByb2dyZXNzTW9kZWwiLCJhdXRob3JNb2RlbCIsImdldEF1dGhvcklkIiwiYXV0aG9yTmFtZSIsImF1dGhvckVudGl0eSIsIm9wcyIsImNvbnRlbnRUeXBlIiwiY29udGVudF90eXBlIiwibWV0YSIsImRvU2F2ZSIsImF1dGhvcklkIiwiYm9va0RhdGEiLCJtZXJnZUJvb2tNZXRhIiwiYXV0aG9ycyIsImVwdWIiLCJwYXJzZWRDb250ZW50IiwiZmlsZUNvbnRlbnRBcnJheSIsImJvb2tJZCIsImJvb2tNZXRhIiwiYm9va0VudGl0eSIsImJvb2tDb250ZW50IiwidHh0Q29udGVudCIsImNvbnRlbnRfaWQiLCJpc05pbCIsInVzZXJJZCIsInVzZXJfaWQiLCJzb3J0IiwiYm9va19pZCIsIm91dHB1dEVtcHR5IiwidGFyZ2V0IiwibmF2IiwibGFiZWwiLCJCdWZmZXIiLCJpc0J1ZmZlciIsImZsZXNoIiwic3JjIiwibWFya2Rvd24iLCJ1c2VyTW9kZWwiLCJ1c2VySW5mbyIsImNvbGxlY3Rpb25Nb2RlbCIsIml0ZW1zIiwiaXRlbSIsIkJhc2ljQXBpIiwiX21vZGVsIiwia2V5d29yZCIsIm1ha2VCYXNpY0VuZHBvaW50IiwiYXBpRm5zIiwiUFJPRF9FUlJPUl9NU0ciLCJpc1Jvb3QiLCJ1cmxQYXJ0cyIsInJvdXRlIiwiaXNQcm9kIiwicHJvZHVjdGlvbiIsInJlcVVybCIsInJvdXRlcyIsInJlcXVlc3QiLCJyZXNwb25zZSIsImZldGNoRGF0YSIsInJlbmRlciIsImlzSG90IiwidXNlclNlc3Npb24iLCJodG1sIiwicmVkaXJlY3RMb2NhdGlvbiIsInBhdGhuYW1lIiwic2VhcmNoIiwiaHRtbFN0cmluZyIsImFwcEVudiIsImFyZ3YiLCJjcmVhdGVSb3V0ZXMiLCJoYW5kbGVDb25zb2xlRW50ZXIiLCJuZXh0U3RhdGUiLCJyZXBsYWNlIiwiY2FsbGJhY2siLCJhbGVydCIsImNyZWF0ZUVsZW1lbnQiLCJjb21wb25lbnQiLCJ0byIsIm9uRW50ZXIiLCJNYXN0ZXIiLCJkaXNwYXRjaCIsInByb3BzIiwiaGFzTmV3RXJyb3JNc2ciLCJlcnJvck1lc3NhZ2UiLCJyb3V0ZXJDaGFuZ2VkIiwibG9jYXRpb25CZWZvcmVUcmFuc2l0aW9ucyIsInNlbmROb3RpZmljYXRpb24iLCJkb2N1bWVudCIsInNjcm9sbFRvcCIsInVzZXJBdXRoIiwiY29uZmlybU1vZGFsIiwiY2xvc2VDb25maXJtTW9kYWwiLCJtb2RhbCIsImNsb3NlTW9kYWwiLCJjbGFzc05hbWUiLCJvcGVuIiwib25Db25maXJtIiwib25SZXF1ZXN0Q2xvc2UiLCJ3aWR0aCIsIm5vdGlmaWNhdGlvbnMiLCJub3RpIiwidmlzaWJsZSIsImhpZGVOb3RpZmljYXRpb24iLCJtZXNzYWdlcyIsImNoaWxkcmVuIiwic3RhdGUiLCJjb21wb25lbnRzIiwiaW5pdGlhbGl6ZUZvcm0iLCJyZXNldEZvcm0iLCJyZXNldCIsImZldGNoQXV0aG9ycyIsImZldGNoQ29sbGVjdGlvbnMiLCJmZXRjaENvbGxlY3Rpb24iLCJzZWFyY2hEb3ViYW5Cb29rcyIsImZldGNoUHJvZmlsZSIsImZldGNoU2hlbGYiLCJBY3Rpb25UeXBlcyIsInJlbW92ZUVudGl0eSIsIlJFTU9WRV9FTlRJVFkiLCJCT09LIiwibG9hZEJvb2siLCJMT0FEX0JPT0siLCJCT09LX0NPTlRFTlQiLCJsb2FkQm9va0NvbnRlbnQiLCJMT0FEX0JPT0tfQ09OVEVOVCIsIkJPT0tTIiwibG9hZEJvb2tzIiwiTE9BRF9CT09LUyIsInVzZXJzIiwiVVNFUlMiLCJsb2FkVXNlcnMiLCJMT0FEX1VTRVJTIiwibG9nb3V0IiwiTE9HT1VUIiwidXNlckxvZ291dCIsIlVTRVJfTE9HT1VUIiwiQk9PS19QUk9HUkVTUyIsImxvYWRCb29rUHJvZ3Jlc3MiLCJMT0FEX0JPT0tfUFJPR1JFU1MiLCJMT0FEX0FDVElPTlMiLCJDQUxMX0FQSSIsInR5cGVzIiwiQVVUSE9SUyIsIlJFUVVFU1QiLCJTVUNDRVNTIiwiRkFJTFVSRSIsImVuZHBvaW50IiwiQVVUSE9SX0FSUkFZIiwicGFnaW5hdGlvbiIsInEiLCJmbG93VHlwZSIsIkNPTExFQ1RJT05TIiwiQ09MTEVDVElPTl9BUlJBWSIsImNvbGxlY3Rpb25JZCIsIkNPTExFQ1RJT04iLCJET1VCQU5fQk9PS1MiLCJhcGlVcmwiLCJET1VCQU5fQk9PS19TRUFSQ0hfUkVTVUxUUyIsInVzZUpzb25wIiwiUFJPRklMRSIsIlNFUlZFUl9TVE9SRSIsIkFVVEgiLCJTSEVMRiIsIlNIRUxGX0JPT0tfQVJSQVkiLCJnZXRDdXJyZW50VGltZSIsInBhZE51bWJlcldpdGhaZXJvIiwiZCIsInRpbWUiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJudW0iLCJudW1TdHJXaXRoWmVybyIsInF1ZXJ5U3RyaW5nIiwicGFyYW0iLCJpc0Rlc2NlbmRhbnQiLCJwYXJlbnQiLCJjaGlsZCIsIm5vZGUiLCJwYXJlbnROb2RlIiwiZ2V0U2NyZWVuSW5mbyIsImlzSUUiLCJsb2NrU2Nyb2xsIiwidW5sb2NrU2Nyb2xsIiwidmlldyIsInNjcmVlbiIsImlubmVyV2lkdGgiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsImFzcGVjdFJhdGlvIiwidmVyIiwiaW5uZXJIVE1MIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJvdmVyZmxvdyIsImlkQXR0cmlidXRlIiwiZGVmaW5lIiwicHJvZmlsZSIsImRvdWJhbkJvb2siLCJzaGVsZkJvb2siLCJib29rUHJvZ3Jlc3MiLCJtYXRjaGVkQm9va3MiLCJCT09LX0FSUkFZIiwiVVNFUl9BUlJBWSIsIk1BVENIRURfQk9PS19BUlJBWSIsIkFVVEhPUiIsIkxPQURfQ0FDSEUiLCJhY3Rpb24iLCJwYXlsb2FkIiwiY3JlYXRlUmVxdWVzdFR5cGVzIiwiYWNjIiwiYmFzZSIsImNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUiLCJvcGVyYXRpb24iLCJjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUiLCJjcmVhdGVBY3Rpb25FbnRpdHkiLCJyZXF1ZXN0VHlwZXMiLCJzdWNjZXNzIiwibG9hZENhY2hlIiwibG9hZGVkRnJvbUNhY2hlIiwiZmFpbHVyZSIsIk5PVElGSUNBVElPTiIsIlNIT1ciLCJISURFIiwiT1BFTl9DT05GSVJNX01PREFMIiwiQ0xPU0VfQ09ORklSTV9NT0RBTCIsIk1PREFMIiwiT1BFTiIsIkNMT1NFIiwiVklFV0VSIiwiSU5JVElBTElaRSIsIklOSVRJQUxJWkVfQ09ORklHIiwiQ09ORklHIiwiQ0FMQ19TVEFSVCIsIkNBTENfU1VDQ0VTUyIsIkNBTENfRkFJTFVSRSIsIkJPT0tfUFJPR1JFU1NfVVBEQVRFIiwiQk9PS19QUk9HUkVTU19JTklUSUFMSVpFIiwiQk9PS19QUk9HUkVTU19ERVNUUk9ZIiwiSlVNUCIsIkZPTlRfQ0hBTkdFIiwiUEFORUxfVE9HR0xFIiwiUFJFRkVSRU5DRV9UT0dHTEUiLCJOQVZJR0FUSU9OX1RPR0dMRSIsIlRIRU1FX0NIQU5HRSIsIlNDUk9MTF9NT0RFX1RPR0dMRSIsInNob3dOb3RpZmljYXRpb24iLCJvcGVuQ29uZmlybU1vZGFsIiwib3Blbk1vZGFsIiwibXNnVHlwZSIsImdldFN0YXRlIiwic2V0VGltZW91dCIsImxvYWRTb21ldGhpbmciLCJzYXZlU29tZXRoaW5nIiwic2VsZWN0b3JzIiwiQUNUSU9OX1RZUEVTIiwiaW5pdGlhbGl6ZVZpZXdlckNvbmZpZyIsImNvbmZpZyIsImluaXRpYWxpemVWaWV3ZXIiLCJjb25maWdWaWV3ZXIiLCJjYWxjQm9vayIsIndyYXAiLCJjYWxjQm9va1N1Y2Nlc3MiLCJjb21wdXRlZCIsImNhbGNCb29rRmFpbHVyZSIsImluaXRpYWxpemVCb29rUHJvZ3Jlc3MiLCJ1cGRhdGVCb29rUHJvZ3Jlc3MiLCJ2aWV3ZXIiLCJwYWdlTm8iLCJmbG9vciIsImRlc3Ryb3lCb29rUHJvZ3Jlc3MiLCJ2aWV3ZXJKdW1wVG8iLCJ0b2dnbGVWaWV3ZXJQYW5lbCIsInRvZ2dsZVZpZXdlclByZWZlcmVuY2UiLCJ0b2dnbGVWaWV3ZXJOYXZpZ2F0aW9uIiwiY2hhbmdlVmlld2VyRm9udFNpemUiLCJmb250U2l6ZUluUGl4ZWwiLCJmb250U2l6ZSIsImNoYW5nZVZpZXdlclRoZW1lIiwidGhlbWVOYW1lIiwidGhlbWUiLCJ0b2dnbGVWaWV3ZXJTY3JvbGxNb2RlIiwiZm9ybSIsImRvdWJhbkJvb2tzIiwiZW50aXRpZXNOYW1lIiwicGFnaW5hdGlvbk5hbWUiLCJwYWdpbmF0aW9uS2V5Iiwic2hlbGZCb29rcyIsImRvdWJhbkJvb2tzQXNPcHRpb25zIiwic2VsZWN0ZWRCb29rcyIsImFkZGl0aW9uYWwiLCJzdW1tYXJ5IiwiY292ZXIiLCJpbWFnZXMiLCJsYXJnZSIsImF1dGhvcnNBc09wdGlvbnMiLCJib29rc0FzT3B0aW9ucyIsInNlc3Npb25Vc2VySWQiLCJERUZBVUxUX0tFWSIsImlzUGFnaW5hdGlvbkZldGNoaW5nIiwicGFnaW5hdGlvblBhZ2VzIiwicGFnaW5hdGlvbkxpbmtzIiwicGljayIsIm5leHRQYWdlIiwic2VsZWN0ZWRQYWdpbmF0aW9uTGlua3MiLCJjdXJyZW50UGFnZSIsImVudGl0eVBhZ2VzIiwic2VsZWN0ZWRFbnRpdGllcyIsIm1hcFZhbHVlcyIsInBhZ2VkRW50aXRpZXMiLCJhbGxFbnRpdGllcyIsInNlbGYiLCJuYXZEYXRhIiwicGFuZWwiLCJfc2VsZiIsInByZWZlcmVuY2UiLCJuYXZpZ2F0aW9uIiwiQWxlcnRzIiwiQWxlcnQiLCJfX2RlY29yYXRlIiwiZGVjb3JhdG9ycyIsImRlc2MiLCJjIiwiZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yIiwiUmVmbGVjdCIsImRlY29yYXRlIiwiZGVmaW5lUHJvcGVydHkiLCJzdHlsZXMiLCJzdHlsZU5hbWUiLCJvbkNsaWNrIiwiYWxsb3dNdWx0aXBsZSIsIkljb24iLCJzdmdXcmFwU3R5bGUiLCJwb3NpdGlvbiIsInRvcCIsIm1hcmdpblRvcCIsIm1pbldpZHRoIiwibWluSGVpZ2h0Iiwidmlld0JveCIsImNsb3NlIiwic3RhciIsImZvbGRlciIsInN0YXRpc3RpY3MiLCJiYWNrIiwiZm9udCIsImFycm93UmlnaHQiLCJhbGVydHMiLCJtc2ciLCJNb2RhbFBsdXMiLCJDb25maXJtTW9kYWwiLCJNb2RhbCIsIm1vZGFsSGVpZ2h0IiwiaXNNb2RhbEhpZGRlbiIsImlzTW9kYWxWZXJ0aWNhbENlbnRlciIsImNsaWNrcyIsInNldFZpZXciLCJiaW5kIiwiaGlkZU1vZGFsIiwiZmluZERPTU5vZGUiLCJjbGllbnRIZWlnaHQiLCJkb2N1bWVudEhlaWdodCIsInNldFN0YXRlIiwicHJldlByb3BzIiwiYWRkRXZlbnRMaXN0ZW5lciIsInJlbW92ZUV2ZW50TGlzdGVuZXIiLCJkZWZhdWx0Q2xhc3MiLCJtb2RhbElkIiwiYmFja2Ryb3AiLCJ2ZXJ0aWNhbENlbnRlciIsInNjcm9sbCIsImxlZnQiLCJiYWNrZ3JvdW5kIiwibWFyZ2luTGVmdCIsIm1hcmdpbiIsInF1ZXJ5U2VsZWN0b3IiLCJ0cmFuc2l0aW9uTmFtZSIsInRyYW5zaXRpb25FbnRlclRpbWVvdXQiLCJ0cmFuc2l0aW9uTGVhdmVUaW1lb3V0IiwiYWN0aW9ucyIsImNsb25lRWxlbWVudCIsIkRpYWxvZyIsIm9uQ2FuY2VsIiwiTW9kYWxGb290ZXIiLCJjb2xvciIsIkJ1dHRvbiIsIklucHV0IiwiU2VsZWN0aXplSW5wdXQiLCJUZXh0YXJlYSIsImlzTW91c2VPdmVyIiwiaXNGbHVpZCIsInByZXZlbnREZWZhdWx0Iiwib25Nb3VzZU92ZXIiLCJvbk1vdXNlT3V0IiwiZGVmYXVsdFByb3BzIiwidG91Y2hlZCIsInNob3dFcnJvciIsInBsYWNlaG9sZGVyIiwib25DaGFuZ2UiLCJzaG93T3B0aW9ucyIsImZvY3VzIiwiZXhwZW5kZWRPcHRpb25JbmRleCIsImhhbmRsZU91dHNpZGVDbGljayIsImZvY3VzSW5wdXQiLCJoYW5kbGVJbnB1dENoYW5nZSIsIm5ld1ZhbHVlIiwidXNlVmFsdWUiLCJvblZhbHVlc0NoYW5nZSIsInZhbHVlcyIsIm9uT3B0aW9uc0NoYW5nZSIsIm9wdGlvbiIsImRpc2FibGVkIiwiY2xlYXJJbnB1dFZhbHVlIiwic3RheUZvY3VzZWQiLCJoaWRlT3B0aW9ucyIsIm9uSW5wdXRDaGFuZ2UiLCJuZXdWYWx1ZXMiLCJyZW1vdmVkVmFsdWUiLCJ2Iiwia2V5Q29kZSIsInJlbW92ZVZhbHVlIiwiaW5wdXRXcmFwIiwib3B0aW9uc0xvYWRlZCIsIm9uQWRkTmV3VmFsdWUiLCJvbWl0U2VsZWN0ZWRWYWx1ZXNGcm9tT3B0aW9ucyIsImlucHV0V2lkdGgiLCJmaWx0ZXJlZE9wdGlvbnMiLCJ2YWx1ZU9mVmFsdWVzIiwic2VsZWN0aXplSW5wdXRTdHlsZU5hbWUiLCJvbkJsdXIiLCJvbkZvY3VzIiwib25LZXlEb3duIiwiaGFuZGxlS2V5UHJlc3MiLCJhZGRWYWx1ZSIsIm9uT3B0aW9uQ2xpY2siLCJBcHAiLCJoYW5kbGVMb2dvdXQiLCJ1c2VyTG9nZ2VkSW4iLCJpc0FkbWluIiwiYm9va1NoZWxmIiwiYm9va1NoZWxmTGlzdCIsInJlY2VudFJlYWRpbmciLCJvbkxvZ291dCIsIm5vdGlmaWNhdGlvbiIsIkJyYW5kaW5nIiwiaXNEcm9wZG93bk1lbnVWaXNpYmxlIiwiaGFuZGxlTG9nb3V0Q2xpY2siLCJkaXNwbGF5IiwiaHJlZiIsIkNvbnRhaW5lciIsIkRyb3Bkb3duSXRlbSIsIkRyb3Bkb3duIiwiRHJvcGRvd25JdGVtU2VwIiwic2hvd01lbnUiLCJoYW5kbGVHbG9iYWxDbGljayIsImRyb3Bkb3duIiwiTG9nbyIsImRhcmsiLCJDb2xvcGhvbiIsIkNvbnNvbGUiLCJ1c2VyUm9sZUNoYW5nZWQiLCJyZWRpcmVjdElmTm90QWRtaW4iLCJjb250ZW50U3R5bGUiLCJwYWRkaW5nVG9wIiwiYm9keUNsYXNzIiwibWVudU1hcHBpbmciLCJjdXJyZW50UGF0aCIsInRleHRBbGlnbiIsIkNvbnNvbGVCcmFuZGluZyIsIkNvbnNvbGVTaWRlYmFyIiwiY3VycmVudE1lbnUiLCJyb290SW5kZXgiLCJzdWJJbmRleCIsIm1lbnUiLCJzdWJNZW51Iiwicm9vdE1lbnUiLCJkaXNwbGF5TmFtZSIsIm1lbnVzIiwiZGVmYXVsdFRpdGxlIiwiRG9jQ29udGFpbmVyIiwicmVkdWNlUHJvcHNUb1N0YXRlIiwiaGFuZGxlU3RhdGVDaGFuZ2VPbkNsaWVudCIsInByb3BzTGlzdCIsImlubmVybW9zdFByb3BzIiwidXNlQXNNYXN0ZXJUaXRsZSIsInByb3BMaXN0IiwicmVtb3ZlQXR0cmlidXRlIiwiZmV0Y2hOb3JtYWxpemVkIiwiYWRkQ29sbGVjdGlvbiIsImFkZEF1dGhvciIsInNldFByb2dyZXNzIiwiZGVsZXRlQm9vayIsInBhcnNlRW5kcG9pbnRXaXRoT3B0aW9ucyIsImZldGNoT3B0aW9ucyIsImZldGNoQm9va1Byb2dyZXNzIiwiZmV0Y2hCb29rIiwiZmV0Y2hCb29rQ29udGVudCIsImZldGNoQm9va3MiLCJ3aXRoQ29udGVudCIsImFwaU9wdGlvbnMiLCJleGNsdWRlIiwiZmV0Y2hVc2VycyIsImZldGNoRG91YmFuQm9va3MiLCJ1c2VyTG9naW4iLCJ1c2VyU2lnbnVwIiwiY2FsbEFwaSIsImRhdGFUeXBlIiwiY3JlZGVudGlhbHMiLCJwYXJzZU9wdGlvbnMiLCJvcmlnaW5hbk9wdGlvbnMiLCJKU09OIiwic3RyaW5naWZ5IiwiaGVhZGVycyIsImZ1bGxVcmwiLCJmZXRjaCIsIl9yZXNwb25zZSIsImpzb25wIiwianNvbnBJZCIsImpzb25wQ2FsbGJhY2siLCJqc29ucENhbGxiYWNrRGF0YSIsInNjcmlwdCIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwib25sb2FkIiwicmVtb3ZlQ2hpbGQiLCJnZXRFbGVtZW50QnlJZCIsIm5vcm1hbGl6ZVJlc3BvbnNlIiwicmVzdWx0UHJvbWlzZSIsInBhcnNlSGVhZGVyUGFnZUxpbmtCeVJlbCIsInJlbCIsImxpbmsiLCJwYXJzZVJlc0hlYWRlclRvUGFnaW5hdGlvbiIsImhhbmRsZVJlc3BvbnNlIiwiY2FtZWxpemVkSnNvbiIsIl9uZXh0IiwiX2xhc3QiLCJtb2R1bGUiLCJleHBvcnRzIiwiZ2V0Q29tcG9uZW50IiwiZGVmYXVsdCIsIlRIRU1FUyIsIldISVRFIiwiTklHSFQiLCJTRVBJQSIsImdldE5vZGVIZWlnaHRzIiwiZ3JvdXBOb2Rlc0J5UGFnZSIsImdyb3VwUGFnZUZyb21DaGFwdGVycyIsInJlc29sdmVCb29rTG9jYXRpb24iLCJub2RlcyIsIm5vZGVzSGVpZ2h0IiwiZ2V0UGFnZU9mZnNldCIsInBhZ2VJbmRleCIsInBhZ2VIZWlnaHQiLCJub2RlSGVpZ2h0cyIsIm9mZnNldCIsIm5vZGVJbmRleCIsIm5vZGVTdGFydEluZGV4Iiwibm9kZUhlaWdodFN1bSIsImdldE5vZGVzT2ZQYWdlIiwibm9kZUVuZEluZGV4IiwicGFnZU5vZGVzIiwicGFnZVN0YXJ0RnJvbSIsImNoYXB0ZXJJZCIsInBhZ2VIZWlnaHRTdW0iLCJwYWdlU3VtIiwiZmluZElkT2ZIVGFncyIsIm1kTm9kZSIsInBhdHRlcm4iLCJjb250ZW50T2ZDaGFwdGVycyIsIm5vZGVIZWlnaHRzT2ZDaGFwdGVycyIsImFsbFBhZ2VzIiwidDAiLCJjaGFwdGVyIiwidDEiLCJjb21wdXRlZFBhZ2VzIiwiZm91bmRDaGFwdGVyUGFnZSIsIkFwcEVycm9yIiwiZ2V0U3RvcmUiLCJtYXRjaFJvdXRlIiwicmVuZGVySHRtbCIsInJlbmRlcjUwMCIsInJlbmRlclByb3BzIiwiZmV0Y2hEYXRhRm5zIiwiY29tcCIsInJ1blNhZ2EiLCJmZXRjaERhdGFGbiIsInJvb3RTYWdhIiwid2F0Y2hBbGxMb2FkUmVxdWVzdHMiLCJoYW5kbGVMb2FkIiwiT1BUSU9OUyIsIkRBVEEiLCJUWVBFIiwiQVBJX0NPTkZJR19LRVlTIiwiUkVTRVJWRURfQUNUSU9OX0tZRVMiLCJmZXRjaEZuIiwicGFyc2VkQWN0aW9uIiwiYXBpQ29uZmlnIiwiZmV0Y2hFbnRpdHkiLCJjYWNoZSIsImFwaUZuIiwiZnVsbFBheWxvYWQiLCJhcGlBcmdzIiwiaGFzQ2FjaGUiLCJjYWNoZUlkIiwiY3JlYXRlQ2FjaGVJZCIsImNhY2hlQ29udGVudCIsImdldENhY2hlIiwic2V0Q2FjaGUiLCJpZGVudGlmaWVyIiwibG9jYWxTdG9yYWdlIiwiZ2V0SXRlbSIsInBhcnNlIiwic2F2ZSIsInNldEl0ZW0iLCJjbGVhciIsIm1kNSIsIiQiLCJzYWZlX2FkZCIsIngiLCJ5IiwibHN3IiwibXN3IiwiYml0X3JvbCIsImNudCIsIm1kNV9jbW4iLCJtZDVfZmYiLCJtZDVfZ2ciLCJtZDVfaGgiLCJtZDVfaWkiLCJiaW5sX21kNSIsIm9sZGEiLCJvbGRiIiwib2xkYyIsIm9sZGQiLCJiaW5sMnJzdHIiLCJvdXRwdXQiLCJsZW5ndGgzMiIsImZyb21DaGFyQ29kZSIsInJzdHIyYmlubCIsImxlbmd0aDgiLCJjaGFyQ29kZUF0IiwicnN0cl9tZDUiLCJyc3RyX2htYWNfbWQ1IiwiYmtleSIsImlwYWQiLCJvcGFkIiwicnN0cjJoZXgiLCJoZXhfdGFiIiwiY2hhckF0Iiwic3RyMnJzdHJfdXRmOCIsInVuZXNjYXBlIiwiZW5jb2RlVVJJQ29tcG9uZW50IiwicmF3X21kNSIsImhleF9tZDUiLCJyYXdfaG1hY19tZDUiLCJrIiwiaGV4X2htYWNfbWQ1Iiwic3RyaW5nIiwid2F0Y2hMb2dpbkZsb3ciLCJ3YXRjaFZpZXdlciIsInZpZXdlclV0aWxzIiwic2V0Vmlld2VyIiwic2V0Vmlld2VyV2l0aEFjdGlvbiIsIndhdGNoSW5pdFZpZXdlciIsInVwZGF0ZVByb2dyZXNzIiwid2F0Y2hDYWxjQm9vayIsIndhdGNoUHJvZ3Jlc3NPcGVyYXRpb25zIiwianVtcFRvIiwid2F0Y2hKdW1wUmVxdWVzdCIsImZldGNoUHJvZ3Jlc3NBbmRKdW1wIiwiREVGQVVMVF9QQUdFX0hFSUdIVCIsIkRFRkFVTFRfRk9OVF9TSVpFIiwidmlld2VyV2lkdGgiLCJpc1NtYWxsU2NyZWVuIiwiaW5pdGlhbGl6ZWQiLCJpc0NhbGNNb2RlIiwiZmx1aWQiLCJpc1RvdWNoTW9kZSIsIm1lcmdlIiwic3RhcnRDYWxjSHRtbFRpbWUiLCJjb21wdXRlZENoYXB0ZXJzIiwiY2hpbGROb2RlcyIsImNoaWxkRGl2IiwiZ2V0QXR0cmlidXRlIiwiZW5kQ2FsY0h0bWxUaW1lIiwiaXNTY3JvbGxNb2RlIiwicGFnZUNvdW50IiwidG90YWxIZWlnaHQiLCJ3YXRjaFRlc3QiLCJ3YXRjaFRlc3QyIiwiZG9Mb2FkV2l0aENhbmNlbCIsInNvbWVBc3luY1Rhc2siLCJsb2ciLCJkb0xvYWQiLCJsb2FkQWN0aW9uIiwibG9hZFRhc2siLCJzYXZlQWN0aW9uIiwiaGlzdG9yeSIsIndyYXBwZWRDb21wb25lbnQiLCJtZW1vcnlIaXN0b3J5IiwiZ2VuUGFnZUNvbXAiLCJhcHBNYXJrdXAiLCJzdG9yZVdpdGhGZXRjaGVkRGF0YSIsInNjcmlwdERhdGEiLCJhcHBSb290IiwicmVuZGVyUGFnZUNvbnRlbnQiLCJhcHBSb290TWFya3VwIiwiREVGQVVMVF9USVRMRSIsIlNDUklQVF9DT05URU5UX0lEIiwiQVNTRVRfUEFUSCIsIkFTU0VUX1BBVEhfUFJPRCIsIlNDUklQVFNfUFJPRCIsIlNDUklQVFNfREVWIiwiR0xPQkFMX1NUWUxFUyIsIkxPQ0FMX1NUWUxFUyIsIkNTU19NQU5JRkVTVF9QQVRIIiwiQ0hVTktTX01BTklGRVNUX1BBVEgiLCJnZXRNYW5pZmVzdCIsImNodW5rTWFuaWZlc3QiLCJjc3NNYW5pZmVzdCIsInJlYWRGaWxlU3luYyIsImdldEhhc2hlZEZpbGVuYW1lIiwibWFuaWZlc3QiLCJQYWdlIiwiaW5jbHVkZUxvY2FsU3R5bGVzaGVldHMiLCJub1NjcmlwdCIsInNjcmlwdHMiLCJzY3JpcHRDb250ZW50IiwiYXNzZXRQYXRoIiwiaW5pdGlhbFN0YXRlIiwic2NyaXB0Q29udGVudElkIiwiSHRtbCIsIlN0eWxlTGluayIsIlNjcmlwdCIsInVzZUZhdmljb24iLCJodHRwRXF1aXYiLCJzaXplcyIsInN0eWxlc2hlZXROYW1lIiwiZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUwiLCJfX2h0bWwiLCJzY3JpcHROYW1lIiwiU2VydmVyU2lkZUFwcFJvb3QiLCJjb25maWd1cmVTdG9yZSIsInNhZ2FNaWRkbGV3YXJlIiwiU0VSVkVSX01JRERMRVdBUkVTX0RFViIsIlNFUlZFUl9NSURETEVXQVJFU19QUk9EIiwiTUlERExFV0FSRVNfREVWIiwiY29sbGFwc2VkIiwiTUlERExFV0FSRVNfUFJPRCIsImhhbmRsZVN0b3JlIiwibWlkZGxld2FyZXMiLCJhY2NlcHQiLCJuZXh0Um9vdFJlZHVjZXIiLCJyZXBsYWNlUmVkdWNlciIsInJ1biIsIkRFRkFVTFRfVklTVE9SX1NUQVRFIiwiaXNGZXRjaGluZyIsImRldGVybWluZWQiLCJyb290UmVkdWNlciIsIkNPTlNUQU5UUyIsImdldEZsYWciLCJjdXJyZW50RmxhZyIsImNvbnRlbnRzIiwiVklFV0VSX0RFRlMiLCJzaG93IiwiQ09NTU9OIiwiY29tYmluZWQiLCJTRUFSQ0hfS0VZIiwicGFyc2VUeXBlcyIsImFjdGlvblR5cGVzIiwiZ2VuZXJhbE1hcEFjdGlvblRvS2V5IiwiY29tYmluZWRSZWR1Y2VyIiwibWFwQWN0aW9uVG9LZXkiLCJib29rU2hlbHZlcyIsInVwZGF0ZVBhZ2luYXRpb24iLCJsZWdhY3lQYWdpbmF0aW9uIiwicUtleSIsImZpbmFsS2V5Iiwib3JpZ2luYWxTdGF0ZSIsImNvbXB1dGVQYWdpbmF0aW9uU3RhdGUiLCJERUZBVUxUX1BBR0lOQVRJT05fU1RBVEUiLCJ1bmlvbiIsImV2ZXJ5IiwicmVxdWVzdFR5cGUiLCJzdWNjZXNzVHlwZSIsImZhaWx1cmVUeXBlIiwidXBkYXRlUGFnaW5hdGlvbkJ5S2V5IiwiYWN0aW9uV2l0aCIsImhhc1BhZ2luYXRpb24iLCJmaW5hbEFjdGlvbiIsIm5vcm1hbGl6ZWRSZXMiLCJhY3Rpb25Cb2R5IiwiaGFuZGxlSW5pdGlhbFN0YXRlIiwibW9kaWZ5UmVzcG9uc2UiLCJoYW5kbGVTZXJ2ZXJTdG9yZSIsImxvZ0FjdGlvblR5cGVzIiwiaXNTdWNjZXNzQWN0aW9uIiwiY2FjaGVSZXNwb25zZUFjdGlvbiIsIkVSUk9SX0RPQ19USVRMRSIsIkVSUk9SX1BBR0VfVElUTEUiLCJkb2NUaXRsZSIsIkVycm9yUGFnZSIsImJvb3RzdHJhcCIsImh0dHAiLCJmZWF0dXJlcyIsInNldCIsInNlcnZlciIsImNyZWF0ZVNlcnZlciIsImxpc3RlbiIsImZlYXR1cmUiLCJob3RNb2R1bGVSZXBsYWNlbWVudCIsIndlYnBhY2tEZXZNaWRkbGV3YXJlIiwid2VicGFja0hvdE1pZGRsZXdhcmUiLCJjb21waWxlciIsIm5vSW5mbyIsInB1YmxpY1BhdGgiLCJwYXRocyIsInZhcnMiLCJFeHRyYWN0VGV4dFBsdWdpbiIsImVudHJ5IiwiaXNvbW9ycGhpYyIsImJ1aWx0IiwicGx1Z2lucyIsImRldkVudiIsImRsbFJlZmVyZW5jZXMiLCJIb3RNb2R1bGVSZXBsYWNlbWVudFBsdWdpbiIsIk5vRXJyb3JzUGx1Z2luIiwiYWxsQ2h1bmtzIiwiZGV2dG9vbCIsImxvYWRlcnMiLCJpbWFnZSIsInNhc3MiLCJzb3VyY2VNYXAiLCJleHRyYWN0IiwicG9zdGNzcyIsImJhYmVsIiwidHlwZXNjcmlwdCIsIm9mZmljaWFsTG9hZGVyIiwic2Fzc0xvYWRlciIsImxvYWRlckNvbmZpZyIsInBhdGhQcmVmaXgiLCJyb290IiwiYnVpbHRQcm9kIiwiYXNzZXRzIiwiY3NzTG9jYWxJZGVudE5hbWUiLCJpbWFnZU5hbWUiLCJ2ZW5kb3JMaWJOYW1lIiwiZGxsTmFtZXMiLCJyZWFjdEtpdCIsInV0aWxzIiwibGlicyIsInJlYWN0RGV2S2l0IiwicGFyc2VMb2FkZXJzRm9yRXh0cmFjdFRleHRQbHVnaW4iLCJpbmNsdWRlUGF0aHMiLCJsb2FkZXIiLCJlbWl0RmlsZSIsImVtaXRGaWxlQ29uZmlnIiwidHNMb2FkZXIiLCJnbG9iYWwiLCJzdHlsZUxvYWRlciIsInNvdXJjZU1hcENvbmZpZyIsImxvY2FsSWRlbnROYW1lIiwiY3NzIiwid2VicGFjayIsImZzIiwiXyIsImNyZWF0ZURsbFJlZmVyZW5jZXMiLCJuYW1lcyIsIkRsbFJlZmVyZW5jZVBsdWdpbiIsInByb2RFbnYiLCJEZWZpbmVQbHVnaW4iLCJub2RlU291cmNlTWFwU3VwcG9ydCIsIkJhbm5lclBsdWdpbiIsImVudHJ5T25seSIsIm9jY3VyZW5jZU9yZGVyIiwib3B0aW1pemUiLCJPY2N1cmVuY2VPcmRlclBsdWdpbiIsImRsbCIsIkRsbFBsdWdpbiIsInVnbGlmeSIsIlVnbGlmeUpzUGx1Z2luIiwiY29tcHJlc3MiLCJ3YXJuaW5ncyIsImFsaWFzIiwiZXh0ZW5zaW9ucyIsImNvbWJpbmVNaWRkbGV3YXJlIiwibWlkcyJdLCJtYXBwaW5ncyI6Ijs7O0FBQUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQSx1QkFBZTtBQUNmO0FBQ0E7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwREFBa0Q7QUFDbEQ7QUFDQTtBQUNBO0FBQ0E7QUFDQSwwQkFBa0IscUJBQXFCO0FBQ3ZDO0FBQ0E7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7Ozs7Ozs7Ozs7Ozs7OztBQzNEQSw0Qzs7Ozs7Ozs7Ozs7O0FDQUE7Ozs7OztBQUNBLEtBQU1BLFVBQVVDLFFBQVFDLEdBQVIsRUFBaEI7QUFDQSxLQUFNQyxNQUFNLDBCQUFXSCxPQUFYLENBQVo7bUJBQ2VHLEc7Ozs7Ozs7Ozs7O21CQ21CU0MsVTs7QUF0QnhCOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7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RUFBaUM7QUFDaEQsWUFBT0EsS0FBSzdpQyxNQUFMLENBQVksVUFBQ2lDLENBQUQsRUFBSUMsQ0FBSixFQUFVO0FBQ3pCLGdCQUFPLFVBQUMxUyxHQUFELEVBQU1DLEdBQU4sRUFBV0MsSUFBWCxFQUFvQjtBQUN2QnVTLGVBQUV6UyxHQUFGLEVBQU9DLEdBQVAsRUFBWSxlQUFPO0FBQ2YscUJBQUltYSxHQUFKLEVBQVM7QUFDTCw0QkFBT2xhLEtBQUtrYSxHQUFMLENBQVA7QUFDSDtBQUNELHdCQUFPMUgsRUFBRTFTLEdBQUYsRUFBT0MsR0FBUCxFQUFZQyxJQUFaLENBQVA7QUFDSCxjQUxEO0FBTUgsVUFQRDtBQVFILE1BVE0sQ0FBUDtBQVVILEU7Ozs7OztBQzFCRCxvRDs7Ozs7O0FDQUEsb0Q7Ozs7OztBQ0FBLG9DOzs7Ozs7QUNBQSwyQzs7Ozs7O0FDQUEseUM7Ozs7OztBQ0FBLDJDIiwiZmlsZSI6ImluZGV4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiIFx0Ly8gVGhlIG1vZHVsZSBjYWNoZVxuIFx0dmFyIGluc3RhbGxlZE1vZHVsZXMgPSB7fTtcblxuIFx0Ly8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBjaHVua3NcbiBcdC8vIFwiMVwiIG1lYW5zIFwiYWxyZWFkeSBsb2FkZWRcIlxuIFx0dmFyIGluc3RhbGxlZENodW5rcyA9IHtcbiBcdFx0MDoxXG4gXHR9O1xuXG4gXHQvLyBUaGUgcmVxdWlyZSBmdW5jdGlvblxuIFx0ZnVuY3Rpb24gX193ZWJwYWNrX3JlcXVpcmVfXyhtb2R1bGVJZCkge1xuXG4gXHRcdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuIFx0XHRpZihpbnN0YWxsZWRNb2R1bGVzW21vZHVsZUlkXSlcbiBcdFx0XHRyZXR1cm4gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0uZXhwb3J0cztcblxuIFx0XHQvLyBDcmVhdGUgYSBuZXcgbW9kdWxlIChhbmQgcHV0IGl0IGludG8gdGhlIGNhY2hlKVxuIFx0XHR2YXIgbW9kdWxlID0gaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0gPSB7XG4gXHRcdFx0ZXhwb3J0czoge30sXG4gXHRcdFx0aWQ6IG1vZHVsZUlkLFxuIFx0XHRcdGxvYWRlZDogZmFsc2VcbiBcdFx0fTtcblxuIFx0XHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cbiBcdFx0bW9kdWxlc1ttb2R1bGVJZF0uY2FsbChtb2R1bGUuZXhwb3J0cywgbW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cbiBcdFx0Ly8gRmxhZyB0aGUgbW9kdWxlIGFzIGxvYWRlZFxuIFx0XHRtb2R1bGUubG9hZGVkID0gdHJ1ZTtcblxuIFx0XHQvLyBSZXR1cm4gdGhlIGV4cG9ydHMgb2YgdGhlIG1vZHVsZVxuIFx0XHRyZXR1cm4gbW9kdWxlLmV4cG9ydHM7XG4gXHR9XG5cbiBcdC8vIFRoaXMgZmlsZSBjb250YWlucyBvbmx5IHRoZSBlbnRyeSBjaHVuay5cbiBcdC8vIFRoZSBjaHVuayBsb2FkaW5nIGZ1bmN0aW9uIGZvciBhZGRpdGlvbmFsIGNodW5rc1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5lID0gZnVuY3Rpb24gcmVxdWlyZUVuc3VyZShjaHVua0lkLCBjYWxsYmFjaykge1xuIFx0XHQvLyBcIjFcIiBpcyB0aGUgc2lnbmFsIGZvciBcImFscmVhZHkgbG9hZGVkXCJcbiBcdFx0aWYoIWluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuIFx0XHRcdHZhciBjaHVuayA9IHJlcXVpcmUoXCIuL1wiICsgY2h1bmtJZCArIFwiLlwiICsgKHt9W2NodW5rSWRdfHxjaHVua0lkKSArIFwiLmpzXCIpO1xuIFx0XHRcdHZhciBtb3JlTW9kdWxlcyA9IGNodW5rLm1vZHVsZXMsIGNodW5rSWRzID0gY2h1bmsuaWRzO1xuIFx0XHRcdGZvcih2YXIgbW9kdWxlSWQgaW4gbW9yZU1vZHVsZXMpIHtcbiBcdFx0XHRcdG1vZHVsZXNbbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuIFx0XHRcdH1cbiBcdFx0XHRmb3IodmFyIGkgPSAwOyBpIDwgY2h1bmtJZHMubGVuZ3RoOyBpKyspXG4gXHRcdFx0XHRpbnN0YWxsZWRDaHVua3NbY2h1bmtJZHNbaV1dID0gMTtcbiBcdFx0fVxuIFx0XHRjYWxsYmFjay5jYWxsKG51bGwsIF9fd2VicGFja19yZXF1aXJlX18pO1xuIFx0fTtcblxuIFx0Ly8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbiBcdF9fd2VicGFja19yZXF1aXJlX18ubSA9IG1vZHVsZXM7XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlIGNhY2hlXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLmMgPSBpbnN0YWxsZWRNb2R1bGVzO1xuXG4gXHQvLyBfX3dlYnBhY2tfcHVibGljX3BhdGhfX1xuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5wID0gXCJcIjtcblxuIFx0Ly8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4gXHRyZXR1cm4gX193ZWJwYWNrX3JlcXVpcmVfXygwKTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIHdlYnBhY2svYm9vdHN0cmFwIGEyZDE3NzI4ODVlMzM3ZDcxMDhiXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYmFiZWwtcG9seWZpbGxcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImJhYmVsLXBvbHlmaWxsXCJcbiAqKiBtb2R1bGUgaWQgPSAxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgaW5pdGlhbGl6ZSBmcm9tICcuL2luaXRpYWxpemUnO1xuY29uc3QgYmFzZURpciA9IHByb2Nlc3MuY3dkKCk7XG5jb25zdCBhcHAgPSBpbml0aWFsaXplKGJhc2VEaXIpO1xuZXhwb3J0IGRlZmF1bHQgYXBwO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgc2Vzc2lvbiBmcm9tICdleHByZXNzLXNlc3Npb24nO1xuaW1wb3J0IHJvdXRlcyBmcm9tICcuL3JvdXRlcyc7XG5pbXBvcnQgYm9vdFNlcnZlciBmcm9tICcuL2Jvb3RzdHJhcCc7XG5pbXBvcnQgYXBwQ29uZmlnIGZyb20gJy4uL2FwcC5jb25maWcnO1xuaW1wb3J0IGhvdE1vZHVsZVJlcGxhY2VtZW50IGZyb20gJy4vZGV2LXRvb2xzL2hvdC1tb2R1bGUtcmVwbGFjZW1lbnQnO1xuaW1wb3J0IG9wdGlvbnMgZnJvbSAnLi9vcHRpb25zJztcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xuaW1wb3J0IG1pZGRsZXdhcmUgZnJvbSAnLi9taWRkbGV3YXJlJztcbmltcG9ydCBtb3JnYW4gZnJvbSAnbW9yZ2FuJztcbmltcG9ydCBjb29raWVQYXJzZXIgZnJvbSAnY29va2llLXBhcnNlcic7XG5pbXBvcnQgYm9keVBhcnNlciBmcm9tICdib2R5LXBhcnNlcic7XG5pbXBvcnQgY29ubmVjdE1vbmdvIGZyb20gJ2Nvbm5lY3QtbW9uZ28nO1xuY29uc3QgTW9uZ29TdG9yZSA9IGNvbm5lY3RNb25nbyhzZXNzaW9uKTtcbmNvbnN0IGFwcCA9IGV4cHJlc3MoKTtcbmNvbnN0IFBVQkxJQ19QQVRIX05BTUUgPSAncHVibGljJztcbmNvbnN0IFNFU1NJT05fU0VDUkVUID0gJ2tleSc7XG4vLyBUT0RPOiB3aGF0IGhhcHBlbnMgd2hlbiBtYXggYWdlIGV4Y2VlZHNcbmNvbnN0IFNFU1NJT05fTUFYX0FHRSA9IDcwICogMjQgKiA2MCAqIDYwICogMTAwMDsgLy8gNzAgZGF5c1xuY29uc3QgUkVRX1NJWkVfTElNSVQgPSAnNW1iJztcbmNvbnN0IE1PTkdPX1NUT1JFX1VSTCA9IGAke2FwcENvbmZpZy5kYXRhYmFzZS5ob3N0fS8ke2FwcENvbmZpZy5kYXRhYmFzZS5tb25nb1N0b3JlTmFtZX1gO1xuY29uc3QgUkVRX0JBU0VfUEFUSCA9ICdfX2Jhc2VQYXRoJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRpYWxpemUoYmFzZVBhdGgpIHtcbiAgICBhcHAudXNlKHNlc3Npb24oe1xuICAgICAgICBzZWNyZXQ6IFNFU1NJT05fU0VDUkVULFxuICAgICAgICBjb29raWU6IHtcbiAgICAgICAgICAgIG1heEFnZTogU0VTU0lPTl9NQVhfQUdFLFxuICAgICAgICAgICAgZXhwaXJlczogbmV3IERhdGUoRGF0ZS5ub3coKSArIFNFU1NJT05fTUFYX0FHRSlcbiAgICAgICAgfSxcbiAgICAgICAgcmVzYXZlOiB0cnVlLFxuICAgICAgICBzYXZlVW5pbml0aWFsaXplZDogdHJ1ZSxcbiAgICAgICAgc3RvcmU6IG5ldyBNb25nb1N0b3JlKHsgdXJsOiBNT05HT19TVE9SRV9VUkwgfSlcbiAgICB9KSk7XG4gICAgLy8g6ZyA6KaB5pS+5Zyo5byA5aeL55qE5L2N572uXG4gICAgaWYgKG9wdGlvbnMuaG90KSB7XG4gICAgICAgIGFwcC51c2UoaG90TW9kdWxlUmVwbGFjZW1lbnQoKSk7XG4gICAgfVxuICAgIGFwcC51c2UoYm9keVBhcnNlci51cmxlbmNvZGVkKHsgbGltaXQ6IFJFUV9TSVpFX0xJTUlULCBleHRlbmRlZDogZmFsc2UgfSkpO1xuICAgIGFwcC51c2UoYm9keVBhcnNlci5qc29uKHsgbGltaXQ6IFJFUV9TSVpFX0xJTUlUIH0pKTtcbiAgICBhcHAudXNlKGNvb2tpZVBhcnNlcigpKTtcbiAgICBhcHAudXNlKGV4cHJlc3Muc3RhdGljKHBhdGguam9pbihiYXNlUGF0aCwgUFVCTElDX1BBVEhfTkFNRSkpKTtcbiAgICAvLyBzZXQgYmFzZVBhdGhcbiAgICBhcHAudXNlKChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICByZXFbUkVRX0JBU0VfUEFUSF0gPSBiYXNlUGF0aDtcbiAgICAgICAgbmV4dCgpO1xuICAgIH0pO1xuICAgIC8vIGxvZyBlcnJvciBpbmZvXG4gICAgYXBwLnVzZShtb3JnYW4oJ2RldicsIHtcbiAgICAgICAgc2tpcChyZXEsIHJlcykgeyByZXR1cm4gcmVzLnN0YXR1c0NvZGUgPCA0MDA7IH1cbiAgICB9KSk7XG4gICAgLy8gYXBpIHJvdXRpbmdcbiAgICBhcHAudXNlKGAvJHthcHBDb25maWcuYXBpLnByZWZpeH1gLCByb3V0ZXMuYXBpKCkpO1xuICAgIC8vIGZyb250ZW5kIHJvdXRpbmdcbiAgICBhcHAudXNlKG1pZGRsZXdhcmUucGFyc2VDb250ZXh0LCByb3V0ZXMucGFnZXMpO1xuICAgIHJldHVybiBib290U2VydmVyKGFwcCwgb3B0aW9ucyk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvaW5pdGlhbGl6ZS50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImV4cHJlc3NcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImV4cHJlc3NcIlxuICoqIG1vZHVsZSBpZCA9IDRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImV4cHJlc3Mtc2Vzc2lvblwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiZXhwcmVzcy1zZXNzaW9uXCJcbiAqKiBtb2R1bGUgaWQgPSA1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgYXBpIGZyb20gJy4vYXBpLXJvdXRlcyc7XG5pbXBvcnQgcGFnZXMgZnJvbSAnLi9wYWdlcyc7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgYXBpLFxuICAgIHBhZ2VzXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JvdXRlcy9pbmRleC50c1xuICoqLyIsImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IG1pZGRsZXdhcmUgZnJvbSAnLi4vbWlkZGxld2FyZSc7XG5pbXBvcnQgKiBhcyBlbmRwb2ludHMgZnJvbSAnLi4vZW5kcG9pbnRzJztcbmltcG9ydCB7IFJPTEVTIH0gZnJvbSAnLi4vLi4vaXNvbW9ycGhpYy9jb25zdGFudHMvY29tbW9uJztcbmltcG9ydCBtdWx0ZXIgZnJvbSAnbXVsdGVyJztcbmNvbnN0IEZPUk1fREFUQV9GSUxFX0tFWSA9ICdmaWxlJztcbi8vIGNvbnN0IFVQTE9BRFNfRElSID0gJ19fdXBsb2Fkc19fJ1xuLy8gY29uc3QgdXBsb2FkID0gbXVsdGVyKHsgZGVzdDogVVBMT0FEU19ESVIgfSlcbmNvbnN0IHVwbG9hZCA9IG11bHRlcigpO1xuY29uc3QgYXV0aGVudGljYXRlUHVibGljID0gW1xuICAgIG1pZGRsZXdhcmUucHJlcGFyZUFwaSxcbiAgICBtaWRkbGV3YXJlLnBhcnNlQ29udGV4dFxuXTtcbmNvbnN0IGF1dGhlbnRpY2F0ZVByaXZhdGUgPSBbXG4gICAgbWlkZGxld2FyZS5wcmVwYXJlQXBpLFxuICAgIG1pZGRsZXdhcmUucGFyc2VDb250ZXh0LFxuICAgIG1pZGRsZXdhcmUucmVxdWlyZVBlcm1pc3Npb25zT2YoUk9MRVMuVVNFUilcbl07XG5jb25zdCBhdXRoZW50aWNhdGVBZG1pbiA9IFtcbiAgICBtaWRkbGV3YXJlLnByZXBhcmVBcGksXG4gICAgbWlkZGxld2FyZS5wYXJzZUNvbnRleHQsXG4gICAgbWlkZGxld2FyZS5yZXF1aXJlUGVybWlzc2lvbnNPZihST0xFUy5BRE1JTilcbl07XG5mdW5jdGlvbiBhcGlSb3V0ZXMoKSB7XG4gICAgY29uc3Qgcm91dGVyID0gZXhwcmVzcy5Sb3V0ZXIoKTtcbiAgICAvLyBhdXRob3JzXG4gICAgcm91dGVyLmdldCgnL2F1dGhvcnMvOmlkJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuYXV0aG9yLmZpbmRPbmUpOyAvLyBiYXNpY1xuICAgIHJvdXRlci5nZXQoJy9hdXRob3JzJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuYXV0aG9yLmxpc3QpOyAvLyBiYXNpY1xuICAgIHJvdXRlci5wb3N0KCcvYXV0aG9ycycsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmF1dGhvci5hZGQpOyAvLyBiYXNpY1xuICAgIHJvdXRlci5wdXQoJy9hdXRob3JzLzppZCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmF1dGhvci51cGRhdGUpOyAvLyBiYXNpY1xuICAgIHJvdXRlci5kZWxldGUoJy9hdXRob3JzLzppZCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmF1dGhvci5yZW1vdmUpOyAvLyBiYXNpY1xuICAgIC8vIGNvbGxlY3Rpb25zXG4gICAgcm91dGVyLmdldCgnL2NvbGxlY3Rpb25zLzppZCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmNvbGxlY3Rpb24uZmluZE9uZSk7IC8vIGJhc2ljXG4gICAgcm91dGVyLmdldCgnL2NvbGxlY3Rpb25zJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMubGlzdENvbGxlY3Rpb25zKTtcbiAgICByb3V0ZXIucG9zdCgnL2NvbGxlY3Rpb25zJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuY29sbGVjdGlvbi5hZGQpOyAvLyBiYXNpY1xuICAgIHJvdXRlci5wdXQoJy9jb2xsZWN0aW9ucy86aWQnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy5jb2xsZWN0aW9uLnVwZGF0ZSk7IC8vIGJhc2ljXG4gICAgcm91dGVyLmRlbGV0ZSgnL2NvbGxlY3Rpb25zLzppZCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmNvbGxlY3Rpb24ucmVtb3ZlKTsgLy8gYmFzaWNcbiAgICAvLyBib29rc1xuICAgIHJvdXRlci5nZXQoJy9ib29rcy86Ym9vaycsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmZpbmRCb29rKTtcbiAgICByb3V0ZXIuZ2V0KCcvYm9va3MvOmJvb2svY29udGVudCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLnJlc29sdmVCb29rQ29udGVudCk7XG4gICAgcm91dGVyLmdldCgnL2Jvb2tzJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMubGlzdEJvb2tzKTtcbiAgICAvLyByb3V0ZXIucG9zdCgnL2Jvb2tzJywgYXV0aGVudGljYXRlQWRtaW4sIGVuZHBvaW50cy5ib29rLmFkZCkgLy8gYmFzaWNcbiAgICByb3V0ZXIucG9zdCgnL2Jvb2tzJywgYXV0aGVudGljYXRlQWRtaW4sIHVwbG9hZC5zaW5nbGUoRk9STV9EQVRBX0ZJTEVfS0VZKSwgbWlkZGxld2FyZS5sb2dGaWxlLCBlbmRwb2ludHMuYWRkQm9vayk7IC8vIOWkhOeQhuaWh+S7tlxuICAgIHJvdXRlci5wdXQoJy9ib29rcy86Ym9vaycsIGF1dGhlbnRpY2F0ZUFkbWluLCBlbmRwb2ludHMuZWRpdEJvb2tNZXRhKTtcbiAgICByb3V0ZXIuZGVsZXRlKCcvYm9va3MvOmJvb2snLCBhdXRoZW50aWNhdGVBZG1pbiwgZW5kcG9pbnRzLnJlbW92ZUJvb2spO1xuICAgIC8vIHRhZ3NcbiAgICByb3V0ZXIuZ2V0KCcvdGFncy86aWQnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy50YWcuZmluZE9uZSk7IC8vIGJhc2ljXG4gICAgcm91dGVyLmdldCgnL3RhZ3MnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy50YWcubGlzdCk7IC8vIGJhc2ljXG4gICAgcm91dGVyLnBvc3QoJy90YWdzJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMudGFnLmFkZCk7IC8vIGJhc2ljXG4gICAgcm91dGVyLnB1dCgnL3RhZ3MvOmlkJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMudGFnLnVwZGF0ZSk7IC8vIGJhc2ljXG4gICAgcm91dGVyLmRlbGV0ZSgnL3RhZ3MvOmlkJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMudGFnLnJlbW92ZSk7IC8vIGJhc2ljXG4gICAgLy8gdXNlcnNcbiAgICByb3V0ZXIuZ2V0KCcvdXNlcnMnLCBhdXRoZW50aWNhdGVBZG1pbiwgZW5kcG9pbnRzLnVzZXIubGlzdCk7IC8vIGJhc2ljXG4gICAgcm91dGVyLnBvc3QoJy91c2VycycsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmFkZFVzZXIpO1xuICAgIC8vIHVzZXJcbiAgICByb3V0ZXIuZ2V0KCcvdXNlci9wcm9maWxlJywgYXV0aGVudGljYXRlUHJpdmF0ZSwgZW5kcG9pbnRzLmZpbmRVc2VyKTtcbiAgICByb3V0ZXIuZ2V0KCcvdXNlci9ib29rcy9zaGVsZicsIGF1dGhlbnRpY2F0ZVByaXZhdGUsIGVuZHBvaW50cy5saXN0U2hlbGZCb29rcyk7XG4gICAgLy8gcHJvZ3Jlc3NcbiAgICByb3V0ZXIuZ2V0KCcvdXNlci9ib29rcy86Ym9vay9wcm9ncmVzcycsIGF1dGhlbnRpY2F0ZVByaXZhdGUsIGVuZHBvaW50cy5nZXRSZWFkaW5nUHJvZ3Jlc3MpO1xuICAgIHJvdXRlci5wdXQoJy91c2VyL2Jvb2tzLzpib29rL3Byb2dyZXNzJywgYXV0aGVudGljYXRlUHJpdmF0ZSwgZW5kcG9pbnRzLnNldFJlYWRpbmdQcm9ncmVzcyk7XG4gICAgLy8gZmlsZVxuICAgIHJvdXRlci5nZXQoJy9maWxlcy86ZmlsZScsIGF1dGhlbnRpY2F0ZUFkbWluLCBlbmRwb2ludHMucmVhZEZpbGUpO1xuICAgIHJvdXRlci5kZWxldGUoJy9maWxlcy86ZmlsZScsIGF1dGhlbnRpY2F0ZUFkbWluLCBlbmRwb2ludHMuZGVsRmlsZSk7XG4gICAgLy8gYXV0aFxuICAgIHJvdXRlci5wb3N0KCcvYXV0aCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgbWlkZGxld2FyZS5hdXRoLmJhc2ljQXV0aCk7XG4gICAgcm91dGVyLmdldCgnL2F1dGgnLCBhdXRoZW50aWNhdGVQdWJsaWMsIG1pZGRsZXdhcmUuYXV0aC5jaGVjayk7XG4gICAgcm91dGVyLnB1dCgnL2F1dGgvcmV2b2tlJywgYXV0aGVudGljYXRlUHVibGljLCBtaWRkbGV3YXJlLmF1dGgucmV2b2tlKTtcbiAgICByZXR1cm4gcm91dGVyO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gc2V0dXBBcGlBcHAoKSB7XG4gICAgY29uc3QgYXBpQXBwID0gZXhwcmVzcygpO1xuICAgIGFwaUFwcC51c2UoYXBpUm91dGVzKCkpO1xuICAgIGFwaUFwcC51c2UobWlkZGxld2FyZS5oYW5kbGVBcGlOb3RGb3VuZCk7XG4gICAgYXBpQXBwLnVzZShtaWRkbGV3YXJlLmhhbmRsZUpTT05SZXNwb25zZSk7XG4gICAgYXBpQXBwLnVzZShtaWRkbGV3YXJlLmhhbmRsZUVycm9yKTtcbiAgICByZXR1cm4gYXBpQXBwO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JvdXRlcy9hcGktcm91dGVzLnRzXG4gKiovIiwiaW1wb3J0IHBhcnNlQ29udGV4dCBmcm9tICcuL3BhcnNlLWNvbnRleHQnO1xuaW1wb3J0IGF1dGggZnJvbSAnLi9hdXRoJztcbmltcG9ydCByZXF1aXJlUGVybWlzc2lvbnNPZiBmcm9tICcuL3JlcXVpcmUtcGVybWlzc2lvbnMtb2YnO1xuaW1wb3J0IGhhbmRsZUVycm9yIGZyb20gJy4vaGFuZGxlLWVycm9yJztcbmltcG9ydCBoYW5kbGVKU09OUmVzcG9uc2UgZnJvbSAnLi9oYW5kbGUtanNvbi1yZXNwb25zZSc7XG5pbXBvcnQgbG9nRmlsZSBmcm9tICcuL2xvZy1maWxlJztcbmltcG9ydCBwcmVwYXJlQXBpIGZyb20gJy4vcHJlcGFyZS1hcGknO1xuaW1wb3J0IGhhbmRsZUFwaU5vdEZvdW5kIGZyb20gJy4vaGFuZGxlLWFwaS1ub3QtZm91bmQnO1xuZXhwb3J0IGRlZmF1bHQge1xuICAgIHBhcnNlQ29udGV4dCwgYXV0aCwgcmVxdWlyZVBlcm1pc3Npb25zT2YsXG4gICAgaGFuZGxlRXJyb3IsIGhhbmRsZUpTT05SZXNwb25zZSwgbG9nRmlsZSwgcHJlcGFyZUFwaSxcbiAgICBoYW5kbGVBcGlOb3RGb3VuZFxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlQ29udGV4dChyZXEsIHJlcywgbmV4dCkge1xuICAgIGlmIChyZXEuc2Vzc2lvbi51c2VyKSB7XG4gICAgICAgIHJlcS5jb250ZXh0ID0ge1xuICAgICAgICAgICAgdXNlcjogXy5vbWl0KHJlcS5zZXNzaW9uLnVzZXIsIFsncGFzc3dvcmQnLCAnZGF0ZUNyZWF0ZWQnLCAnZW1haWwnXSlcbiAgICAgICAgfTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJlcS5jb250ZXh0ID0ge1xuICAgICAgICAgICAgdXNlcjoge1xuICAgICAgICAgICAgICAgIHJvbGU6ICd2aXNpdG9yJ1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgIH1cbiAgICBuZXh0KCk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvbWlkZGxld2FyZS9wYXJzZS1jb250ZXh0LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibG9kYXNoXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJsb2Rhc2hcIlxuICoqIG1vZHVsZSBpZCA9IDEwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgZXJyb3JzIGZyb20gJy4uL2Vycm9ycyc7XG5pbXBvcnQgaTE4biBmcm9tICcuLi91dGlscy9pMThuJztcbmltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbHMvbW9kZWwnO1xuaW1wb3J0IGh1bXBzIGZyb20gJ2h1bXBzJztcbmltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmV4cG9ydCBmdW5jdGlvbiBiYXNpY0F1dGgocmVxLCByZXMsIG5leHQpIHtcbiAgICBjb25zdCB1c2VyID0gbmV3IE1vZGVsKHNjaGVtYXMudXNlcik7XG4gICAgY29uc3QgbG9naW4gPSByZXEuYm9keS5sb2dpbiA/IHJlcS5ib2R5LmxvZ2luLnRvTG93ZXJDYXNlKCkgOiB1bmRlZmluZWQ7XG4gICAgY29uc3QgcGFzc3dvcmQgPSByZXEuYm9keS5wYXNzd29yZDtcbiAgICBpZiAodHlwZW9mIGxvZ2luID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBuZXh0KG5ldyBlcnJvcnMuVmFsaWRhdGlvbkVycm9yKGkxOG4oJ2Vycm9ycy52YWxpZGF0aW9uLnByZUNoZWNrLm1pc3NSZXF1aXJlZEZpZWxkcycsICdsb2dpbicpKSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgcGFzc3dvcmQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIG5leHQobmV3IGVycm9ycy5WYWxpZGF0aW9uRXJyb3IoaTE4bignZXJyb3JzLnZhbGlkYXRpb24ucHJlQ2hlY2subWlzc1JlcXVpcmVkRmllbGRzJywgJ3Bhc3N3b3JkJykpKTtcbiAgICB9XG4gICAgY29uc3QgcXVlcnkgPSB7ICRvcjogW3sgdXNlcm5hbWU6IGxvZ2luLCBwYXNzd29yZCB9LCB7IGVtYWlsOiBsb2dpbiwgcGFzc3dvcmQgfV0gfTtcbiAgICB1c2VyLmZpbmRPbmUocXVlcnkpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgcmVxLnNlc3Npb24udXNlciA9IGh1bXBzLmNhbWVsaXplS2V5cyhyZXN1bHQpO1xuICAgICAgICByZXEuYXBpUmVzdWx0cyA9IFByb21pc2UucmVzb2x2ZSh7IG9rOiAxIH0pO1xuICAgICAgICBuZXh0KCk7XG4gICAgfSwgZXJyb3IgPT4ge1xuICAgICAgICBuZXh0KG5ldyBlcnJvcnMuVW5hdXRob3JpemVkRXJyb3IoaTE4bignZXJyb3JzLm1pZGRsZXdhcmUuYXV0aC53cm9uZ0NvbWJpbmF0aW9uJykpKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjaGVjayhyZXEsIHJlcykge1xuICAgIHJlcy5zZW5kKGh1bXBzLmRlY2FtZWxpemVLZXlzKHJlcS5jb250ZXh0LnVzZXIpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXZva2UocmVxLCByZXMpIHtcbiAgICByZXEuc2Vzc2lvbi5kZXN0cm95KCk7XG4gICAgcmVzLnN0YXR1cygyMDQpLnNlbmQobnVsbCk7XG59XG5leHBvcnQgZGVmYXVsdCB7IGJhc2ljQXV0aCwgY2hlY2ssIHJldm9rZSB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvYXV0aC50c1xuICoqLyIsImltcG9ydCBOb3RGb3VuZEVycm9yIGZyb20gJy4vbm90LWZvdW5kLWVycm9yJztcbmltcG9ydCBWYWxpZGF0aW9uRXJyb3IgZnJvbSAnLi92YWxpZGF0aW9uLWVycm9yJztcbmltcG9ydCBCYWRSZXF1ZXN0RXJyb3IgZnJvbSAnLi9iYWQtcmVxdWVzdC1lcnJvcic7XG5pbXBvcnQgSW50ZXJuYWxTZXJ2ZXJFcnJvciBmcm9tICcuL2ludGVybmFsLXNlcnZlci1lcnJvcic7XG5pbXBvcnQgTm9QZXJtaXNzaW9uRXJyb3IgZnJvbSAnLi9uby1wZXJtaXNzaW9uLWVycm9yJztcbmltcG9ydCBVbmF1dGhvcml6ZWRFcnJvciBmcm9tICcuL3VuYXV0aG9yaXplZC1lcnJvcic7XG5pbXBvcnQgUmVxdWVzdEVudGl0eVRvb0xhcmdlRXJyb3IgZnJvbSAnLi9yZXF1ZXN0LXRvby1sYXJnZS1lcnJvcic7XG5pbXBvcnQgVW5zdXBwb3J0ZWRNZWRpYVR5cGVFcnJvciBmcm9tICcuL3Vuc3VwcG9ydGVkLWZpbGUtdHlwZS1lcnJvcic7XG5pbXBvcnQgRW1haWxFcnJvciBmcm9tICcuL2VtYWlsLWVycm9yJztcbmltcG9ydCBNZXRob2ROb3RBbGxvd2VkRXJyb3IgZnJvbSAnLi9tZXRob2Qtbm90LWFsbG93ZWQtZXJyb3InO1xuaW1wb3J0IFRvb01hbnlSZXF1ZXN0c0Vycm9yIGZyb20gJy4vdG9vLW1hbnktcmVxdWVzdHMtZXJyb3InO1xuaW1wb3J0IFRva2VuUmV2b2NhdGlvbkVycm9yIGZyb20gJy4vdG9rZW4tcmV2b2NhdGlvbi1lcnJvcic7XG5pbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgTm90Rm91bmRFcnJvcixcbiAgICBWYWxpZGF0aW9uRXJyb3IsXG4gICAgQmFkUmVxdWVzdEVycm9yLFxuICAgIEludGVybmFsU2VydmVyRXJyb3IsXG4gICAgTm9QZXJtaXNzaW9uRXJyb3IsXG4gICAgVW5hdXRob3JpemVkRXJyb3IsXG4gICAgUmVxdWVzdEVudGl0eVRvb0xhcmdlRXJyb3IsXG4gICAgVW5zdXBwb3J0ZWRNZWRpYVR5cGVFcnJvcixcbiAgICBFbWFpbEVycm9yLFxuICAgIE1ldGhvZE5vdEFsbG93ZWRFcnJvcixcbiAgICBUb29NYW55UmVxdWVzdHNFcnJvcixcbiAgICBUb2tlblJldm9jYXRpb25FcnJvcixcbiAgICBHZW5lcmljRXJyb3IsXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy9pbmRleC50c1xuICoqLyIsImltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE5vdEZvdW5kRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ05vdEZvdW5kRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNDA0O1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvbm90LWZvdW5kLWVycm9yLnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBuYW1lKSB7XG4gICAgICAgIHRoaXMubmFtZSA9IG5hbWUgfHwgJ0dlbmVyaWNFcnJvcic7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDUwMDtcbiAgICAgICAgdGhpcy5tZXNzYWdlID0gbWVzc2FnZTtcbiAgICAgICAgdGhpcy5zdGFjayA9IG5ldyBFcnJvcigpLnN0YWNrO1xuICAgICAgICB0aGlzLnR5cGUgPSB0aGlzLm5hbWU7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy9nZW5lcmljLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVmFsaWRhdGlvbkVycm9yIGV4dGVuZHMgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlLCBvZmZlbmRpbmdQcm9wZXJ0eSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnVmFsaWRhdGlvbkVycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDQyMjtcbiAgICAgICAgaWYgKG9mZmVuZGluZ1Byb3BlcnR5KSB7XG4gICAgICAgICAgICB0aGlzLnByb3BlcnR5ID0gb2ZmZW5kaW5nUHJvcGVydHk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL3ZhbGlkYXRpb24tZXJyb3IudHNcbiAqKi8iLCJpbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCYWRSZXF1ZXN0RXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIGNvZGUpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0JhZFJlcXVlc3RFcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA0MDA7XG4gICAgICAgIGlmIChjb2RlKSB7XG4gICAgICAgICAgICB0aGlzLmNvZGUgPSBjb2RlO1xuICAgICAgICB9XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy9iYWQtcmVxdWVzdC1lcnJvci50c1xuICoqLyIsImltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEludGVybmFsU2VydmVyRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ0ludGVybmFsU2VydmVyRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNTAwO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvaW50ZXJuYWwtc2VydmVyLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm9QZXJtaXNzaW9uRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ05vUGVybWlzc2lvbkVycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDQwMztcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL25vLXBlcm1pc3Npb24tZXJyb3IudHNcbiAqKi8iLCJpbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVbmF1dGhvcml6ZWRFcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnVW5hdXRob3JpemVkRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNDAxO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvdW5hdXRob3JpemVkLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVxdWVzdEVudGl0eVRvb0xhcmdlRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ1JlcXVlc3RFbnRpdHlUb29MYXJnZUVycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDQxMztcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL3JlcXVlc3QtdG9vLWxhcmdlLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVW5zdXBwb3J0ZWRGaWxlVHlwZUVycm9yIGV4dGVuZHMgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdVbnN1cHBvcnRlZEZpbGVUeXBlRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNDE1O1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvdW5zdXBwb3J0ZWQtZmlsZS10eXBlLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRW1haWxFcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnRW1haWxFcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA1MDA7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy9lbWFpbC1lcnJvci50c1xuICoqLyIsImltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIE1ldGhvZE5vdEFsbG93ZWRFcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnTWV0aG9kTm90QWxsb3dlZEVycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDQwNTtcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL21ldGhvZC1ub3QtYWxsb3dlZC1lcnJvci50c1xuICoqLyIsImltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRvb01hbnlSZXF1ZXN0c0Vycm9yIGV4dGVuZHMgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdUb29NYW55UmVxdWVzdHNFcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA0Mjk7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy90b28tbWFueS1yZXF1ZXN0cy1lcnJvci50c1xuICoqLyIsImltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFRva2VuUmV2b2NhdGlvbkVycm9yIGV4dGVuZHMgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdUb2tlblJldm9jYXRpb25FcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA1MDM7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy90b2tlbi1yZXZvY2F0aW9uLWVycm9yLnRzXG4gKiovIiwiLyoqXG4gKiByZWZlcmVuY2VkIGdob3N0IGkxOG4uanMsIGl0J3MgYSBzaW1wbGlmaWVkIHZlcnNpb25cbiAqIGFuZCBJIHVzZWQganMgdG8gc3RvcmUgbG9jYWwgdHJhbnNsYXRpb25zIGluc3RlYWQgb2YganNvblxuICovXG5pbXBvcnQgY25UcmFuc2xhdGlvbnMgZnJvbSAnLi4vdHJhbnNsYXRpb25zL2NuJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5mdW5jdGlvbiBhZGRQYWRkaW5nKHN0cikge1xuICAgIGlmICghc3RyKSB7XG4gICAgICAgIHJldHVybiAnJztcbiAgICB9XG4gICAgaWYgKGVzY2FwZShzdHIuc3Vic3RyKC0xKSkuaW5kZXhPZignJXUnKSAhPT0gMCkge1xuICAgICAgICByZXR1cm4gYCAke3N0cn0gYDtcbiAgICB9XG4gICAgcmV0dXJuIHN0cjtcbn1cbmZ1bmN0aW9uIGdldE1hdGNoaW5nU3RyaW5nKG1zZ1BhdGgpIHtcbiAgICBsZXQgbWF0Y2hpbmdTdHJpbmcgPSBjblRyYW5zbGF0aW9ucztcbiAgICBjb25zdCBwYXRoID0gbXNnUGF0aC5zcGxpdCgnLicpO1xuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcGF0aC5sZW5ndGg7IGkrKykge1xuICAgICAgICBpZiAobWF0Y2hpbmdTdHJpbmdbcGF0aFtpXV0pIHtcbiAgICAgICAgICAgIG1hdGNoaW5nU3RyaW5nID0gbWF0Y2hpbmdTdHJpbmdbcGF0aFtpXV07XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtYXRjaGluZ1N0cmluZyA9IG51bGw7XG4gICAgICAgICAgICBicmVhaztcbiAgICAgICAgfVxuICAgIH1cbiAgICByZXR1cm4gbWF0Y2hpbmdTdHJpbmc7XG59XG5mdW5jdGlvbiBhZGRQdW5jKHN0ciwgbGFuZykge1xuICAgIC8vIHRvZG86IGxhbmdcbiAgICByZXR1cm4gYCR7c3Ryfe+8gWA7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBpMThuKG1zZ1BhdGgsIHZhbHVlKSB7XG4gICAgbGV0IG1hdGNoaW5nU3RyaW5nID0gZ2V0TWF0Y2hpbmdTdHJpbmcobXNnUGF0aCk7XG4gICAgaWYgKF8uaXNOdWxsKG1hdGNoaW5nU3RyaW5nKSkge1xuICAgICAgICBjb25zb2xlLmVycm9yKCdVbmFibGUgdG8gZmluZCBtYXRjaGluZyBwYXRoIFsnICsgbXNnUGF0aCArICddIGluIGxvY2FsZSBmaWxlLlxcbicpO1xuICAgICAgICBtYXRjaGluZ1N0cmluZyA9ICdpMThuIGVycm9yOiBwYXRoIFwiJyArIG1zZ1BhdGggKyAnXCIgd2FzIG5vdCBmb3VuZC4nO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgY29uc3QgcGxhY2Vob2xkZXJJbmRleCA9IG1hdGNoaW5nU3RyaW5nLmluZGV4T2YoJ3t2YWx1ZX0nKTtcbiAgICAgICAgaWYgKHBsYWNlaG9sZGVySW5kZXggIT09IC0xKSB7XG4gICAgICAgICAgICBjb25zdCBiZWZvcmUgPSBtYXRjaGluZ1N0cmluZy5zdWJzdHJpbmcoMCwgcGxhY2Vob2xkZXJJbmRleCk7XG4gICAgICAgICAgICBjb25zdCBhZnRlciA9IG1hdGNoaW5nU3RyaW5nLnN1YnN0cihwbGFjZWhvbGRlckluZGV4ICsgNyk7XG4gICAgICAgICAgICBsZXQgbWF0Y2hpbmdWYWx1ZSA9ICcnO1xuICAgICAgICAgICAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgICAgICBtYXRjaGluZ1ZhbHVlID0gZ2V0TWF0Y2hpbmdTdHJpbmcoYGNvbW1vbi50ZXJtcy4ke3ZhbHVlfWApO1xuICAgICAgICAgICAgICAgIGlmIChfLmlzTnVsbChtYXRjaGluZ1ZhbHVlKSkge1xuICAgICAgICAgICAgICAgICAgICBtYXRjaGluZ1ZhbHVlID0gdmFsdWU7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIG1hdGNoaW5nVmFsdWUgPSBhZGRQYWRkaW5nKG1hdGNoaW5nVmFsdWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgbWF0Y2hpbmdTdHJpbmcgPSBhZGRQdW5jKGJlZm9yZSArIG1hdGNoaW5nVmFsdWUgKyBhZnRlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBtYXRjaGluZ1N0cmluZyA9IGFkZFB1bmMobWF0Y2hpbmdTdHJpbmcpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtYXRjaGluZ1N0cmluZy50cmltKCk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvaTE4bi50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjb21tb246IHtcbiAgICAgICAgdGVybXM6IHtcbiAgICAgICAgICAgIGlkOiAnSUQnLFxuICAgICAgICAgICAgdXNlcm5hbWU6ICfnlKjmiLflkI0nLFxuICAgICAgICAgICAgcGFzc3dvcmQ6ICflr4bnoIEnLFxuICAgICAgICAgICAgcGVyY2VudGFnZTogJ+i/m+W6pueZvuWIhuavlCcsXG4gICAgICAgICAgICBlbWFpbDogJ+mCrueusScsXG4gICAgICAgICAgICBsb2dpbjogJ+eZu+W9lemhuScsXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogJ+aPj+i/sCcsXG4gICAgICAgICAgICBuYW1lOiAn5ZCN56ewJyxcbiAgICAgICAgICAgIGNyZWF0b3I6ICfliJvlu7rogIUnLFxuICAgICAgICAgICAgdGl0bGU6ICfmoIfpopgnLFxuICAgICAgICAgICAgcHJvZ3Jlc3M6ICfov5vluqYnLFxuICAgICAgICAgICAgdXNlcjogJ+eUqOaItycsXG4gICAgICAgICAgICBhZG1pbjogJ+euoeeQhuWRmCcsXG4gICAgICAgICAgICBmaWxlOiAn5paH5Lu2JyxcbiAgICAgICAgICAgIGZpbGVzOiAn5paH5Lu2JyxcbiAgICAgICAgICAgIGJvb2s6ICfkuabnsY0nLFxuICAgICAgICAgICAgYm9va3M6ICfkuabnsY0nXG4gICAgICAgIH0sXG4gICAgfSxcbiAgICBlcnJvcnM6IHtcbiAgICAgICAgdmFsaWRhdGlvbjoge1xuICAgICAgICAgICAgdmFsdWVMaW1pdDoge1xuICAgICAgICAgICAgICAgIG5vdFN0cmluZzogJ3t2YWx1ZX3kuI3mmK/lrZfnrKbkuLInLFxuICAgICAgICAgICAgICAgIHN0cmluZ09ubHk6ICfovpPlhaXpobnnsbvlnovlj6rog73kuLrlrZfnrKbkuLInLFxuICAgICAgICAgICAgICAgIGFscGhhbnVtZXJpYzogJ3t2YWx1ZX3lj6rog73kuLrlrZfmr43miJbmlbDlrZcnLFxuICAgICAgICAgICAgICAgIHVuZGVmaW5lZDogJ3t2YWx1ZX3mnKrlrprkuYknLFxuICAgICAgICAgICAgICAgIGludmFsaWRGb3JtYXQ6ICd7dmFsdWV95qC85byP5LiN5a+5JyxcbiAgICAgICAgICAgICAgICBub1B1cmVOdW1iZXI6ICd7dmFsdWV95LiN6IO95Li657qv5pWw5a2XJyxcbiAgICAgICAgICAgICAgICBvbmx5U3RhcnRXaXRoTGV0dGVyczogJ3t2YWx1ZX3lj6rog73ku6XlrZfmr43lvIDlpLQnLFxuICAgICAgICAgICAgICAgIGxlbmd0aDogJ+mVv+W6puS4jeWMuemFjScsXG4gICAgICAgICAgICAgICAgbWluTGVuZ3RoOiAne3ZhbHVlfemVv+W6puS4jei2sycsXG4gICAgICAgICAgICAgICAgbWF4TGVuZ3RoOiAne3ZhbHVlfei2heWHuuacgOWkp+mVv+W6picsXG4gICAgICAgICAgICAgICAgdXNlcm5hbWU6IHtcbiAgICAgICAgICAgICAgICAgICAgYWxsb3dlZENoYXJzOiAn55So5oi35ZCN5Y+q6IO95YyF5ZCr5a2X5q+N77yM5pWw5a2X5Y+K5Lul5LiL5a2X56ymIFwiLVwiLFwiX1wiJyxcbiAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHByZUNoZWNrOiB7XG4gICAgICAgICAgICAgICAgZW1wdHlPYmplY3Q6ICfmj5DkuqTmlbDmja7kuI3og73kuLrnqbonLFxuICAgICAgICAgICAgICAgIG1pc3NSZXF1aXJlZEZpZWxkczogJ3t2YWx1ZX3kuLrlv4XloavpobknLFxuICAgICAgICAgICAgICAgIHVuc3VwcG9ydGVkSW5wdXQ6ICflj5HnjrDmnKrnn6XnmoTovpPlhaXpobl7dmFsdWV9JyxcbiAgICAgICAgICAgICAgICBpbnB1dEVtcHR5OiAne3ZhbHVlfei+k+WFpeS4jeiDveS4uuepuicsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBhcGk6IHtcbiAgICAgICAgICAgIGdlbmVyYWw6IHtcbiAgICAgICAgICAgICAgICBub3RGb3VuZDogJ3t2YWx1ZX3mnKrmib7liLAnLFxuICAgICAgICAgICAgICAgIG5vdEZvdW5kSW46ICflnKh7dmFsdWV95Lit5pyq5om+5YiwJyxcbiAgICAgICAgICAgICAgICBleGlzdHM6ICd7dmFsdWV95bey5a2Y5ZyoJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBhdXRoOiB7XG4gICAgICAgICAgICAgICAgbmVlZFBlcm1pc3Npb25zT2Y6ICfpnIDopoEge3ZhbHVlfSDmnYPpmZAnLFxuICAgICAgICAgICAgICAgIGxvZ2luUmVxdWlyZWQ6ICfpnIDopoHnmbvlvZUnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSxcbiAgICAgICAgc2NoZW1hOiB7XG4gICAgICAgICAgICB1bmlxdWU6ICd7dmFsdWV95bey5a2Y5ZyoJ1xuICAgICAgICB9LFxuICAgICAgICBtaWRkbGV3YXJlOiB7XG4gICAgICAgICAgICBhdXRoOiB7XG4gICAgICAgICAgICAgICAgYWNjZXNzRGVuaWVkOiAn6K6/6Zeu6KKr56aB5q2iJyxcbiAgICAgICAgICAgICAgICB3cm9uZ1Bhc3N3b3JkOiAn5a+G56CB6ZSZ6K+vJyxcbiAgICAgICAgICAgICAgICB3cm9uZ0NvbWJpbmF0aW9uOiAn55So5oi35ZCN5oiW5a+G56CB6ZSZ6K+vJ1xuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIG9hdXRoOiB7XG4gICAgICAgICAgICAgICAgdG9rZW5FeHBpcmVkOiAndG9rZW4g6L+H5pyfJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBzcGFtcHJldmVudGlvbjoge1xuICAgICAgICAgICAgICAgIHRvb01hbnlBdHRlbXB0czogJ+aCqOeahOiuv+mXrui/h+S6jumikee5gScsXG4gICAgICAgICAgICAgICAgbm9Vc2VybmFtZTogJ+aXoOeUqOaIt+WQjScsXG4gICAgICAgICAgICAgICAgbm9QYXNzd29yZDogJ+aXoOWvhueggScsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBtYWlsOiB7XG4gICAgICAgICAgICBmYWlsZWRTZW5kaW5nRW1haWw6ICfpgq7ku7blj5HpgIHlpLHotKUnLFxuICAgICAgICB9LFxuICAgICAgICBnZW5lcmFsOiB7XG4gICAgICAgICAgICBhbkVycm9yT2NjdXJyZWQ6ICflj5HnlJ/plJnor68nLFxuICAgICAgICAgICAgdW5rbm93bkVycm9yT2NjdXJyZWQ6ICflj5HnlJ/mnKrnn6XplJnor68nLFxuICAgICAgICAgICAgbm90Rm91bmQ6ICd7dmFsdWV95pyq5om+5YiwJyxcbiAgICAgICAgfSxcbiAgICB9LFxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci90cmFuc2xhdGlvbnMvY24udHNcbiAqKi8iLCJpbXBvcnQgZGIsIHsgZW1iZWRSZWYgfSBmcm9tICcuL2RhdGFiYXNlJztcbmltcG9ydCBlcnJvcnMgZnJvbSAnLi4vZXJyb3JzJztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uL3V0aWxzJztcbmltcG9ydCB2YWxpZGF0ZSBmcm9tICcuL3ZhbGlkYXRlJztcbmltcG9ydCBvdXRwdXRFbXB0eUVudGl0eSBmcm9tICcuL291dHB1dC1lbXB0eS1lbnRpdHknO1xuaW1wb3J0IHBhZ2luYXRlIGZyb20gJy4vcGFnaW5hdGUnO1xuaW1wb3J0IHsgbm90Rm91bmRJbiB9IGZyb20gJy4uL2hlbHBlcnMnO1xuY2xhc3MgTW9kZWwge1xuICAgIHN0YXRpYyBwYXJzZVF1ZXJ5KGlkT3JRdWVyeSkge1xuICAgICAgICBpZiAodHlwZW9mIGlkT3JRdWVyeSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignUGFyYW0gaWRPclF1ZXJ5IGlzIHVuZGVmaW5lZCEnKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gdHlwZW9mIGlkT3JRdWVyeSA9PT0gJ3N0cmluZydcbiAgICAgICAgICAgID8geyBfaWQ6IGlkT3JRdWVyeSB9XG4gICAgICAgICAgICA6IGlkT3JRdWVyeTtcbiAgICB9XG4gICAgY29uc3RydWN0b3Ioc2NoZW1hKSB7XG4gICAgICAgIHRoaXMuX3NjaGVtYSA9IHNjaGVtYTtcbiAgICAgICAgdGhpcy5fdGFibGVOYW1lID0gc2NoZW1hLm5hbWU7XG4gICAgfVxuICAgIG91dHB1dEVtcHR5KGlkKSB7XG4gICAgICAgIHJldHVybiBvdXRwdXRFbXB0eUVudGl0eSh0aGlzLl9zY2hlbWEuZmllbGRzLCBpZCk7XG4gICAgfVxuICAgIGZpbmRPbmUoaWRPclF1ZXJ5LCByYXcpIHtcbiAgICAgICAgY29uc3QgcXVlcnkgPSBNb2RlbC5wYXJzZVF1ZXJ5KGlkT3JRdWVyeSk7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3QoeyByYXcsIGRpc2FibGVQYWdpbmF0aW9uOiB0cnVlLCBxdWVyeSB9KS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBjb25zdCBlbnRpdHkgPSByZXN1bHRbMF07XG4gICAgICAgICAgICBpZiAoIWVudGl0eSkge1xuICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChub3RGb3VuZEluKHRoaXMuX3NjaGVtYS5fYmFzZVRhYmxlKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gZW50aXR5O1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgbGlzdChvcHRpb25zID0ge30pIHtcbiAgICAgICAgY29uc3QgeyByYXcsIHBhZ2UsIGRpc2FibGVQYWdpbmF0aW9uLCBmaWx0ZXIsIG1hcHBpbmcsIHF1ZXJ5IH0gPSBvcHRpb25zO1xuICAgICAgICBjb25zdCBkb1F1ZXJ5ID0gKCkgPT4ge1xuICAgICAgICAgICAgY29uc3QgbGlzdFJhdyA9IGxpc3RSYXdRdWVyeSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRiLmdldENvbGxlY3Rpb24odGhpcy5fdGFibGVOYW1lKS50aGVuKGNvbGxlY3Rpb24gPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gY29sbGVjdGlvbi5maW5kKGxpc3RSYXdRdWVyeSkudG9BcnJheSgpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGNvbnN0IHJhd1Jlc3VsdHMgPSBsaXN0UmF3KHF1ZXJ5IHx8IHt9KTtcbiAgICAgICAgICAgIGlmIChyYXcpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmF3UmVzdWx0cztcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJldHVybiByYXdSZXN1bHRzLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBlbWJlZFJlZihyZXN1bHRzLCB0aGlzLl9zY2hlbWEpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gZG9RdWVyeSgpLnRoZW4oZW50aXRpZXMgPT4ge1xuICAgICAgICAgICAgY29uc3QgbW9kaWZpZWRFbnRpdGllcyA9IGVudGl0aWVzXG4gICAgICAgICAgICAgICAgLmZpbHRlcihmaWx0ZXIgfHwgKCgpID0+IHRydWUpKVxuICAgICAgICAgICAgICAgIC5tYXAobWFwcGluZyB8fCAoZW50aXR5ID0+IGVudGl0eSkpO1xuICAgICAgICAgICAgaWYgKCFkaXNhYmxlUGFnaW5hdGlvbikge1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWdpbmF0ZShtb2RpZmllZEVudGl0aWVzLCB7XG4gICAgICAgICAgICAgICAgICAgIHBhZ2U6IHBhZ2UgfHwgMVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG1vZGlmaWVkRW50aXRpZXM7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsaXN0UmF3KG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IGZpbHRlciwgbWFwcGluZywgcXVlcnkgfSA9IG9wdGlvbnM7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe1xuICAgICAgICAgICAgZGlzYWJsZVBhZ2luYXRpb246IHRydWUsXG4gICAgICAgICAgICByYXc6IHRydWUsXG4gICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICBtYXBwaW5nLFxuICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5IHx8IHt9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhZGQoZGF0YSkge1xuICAgICAgICBjb25zdCBxdWVyeSA9ICgpID0+IHtcbiAgICAgICAgICAgIGxldCBkYXRhV2l0aElEID0gT2JqZWN0LmFzc2lnbih7fSwgZGF0YSwge1xuICAgICAgICAgICAgICAgIF9pZDogTWF0aC5yYW5kb20oKS50b0ZpeGVkKDgpLnN1YnN0cigyKSxcbiAgICAgICAgICAgICAgICBkYXRlX2NyZWF0ZWQ6IG5ldyBEYXRlKCkudG9TdHJpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbpnIDopoHnoa7orqTllK/kuIDmgKdcbiAgICAgICAgICAgIGNvbnN0IGRhdGFUb0NoZWNrID0gdGhpcy5fc2NoZW1hLmZpZWxkc1xuICAgICAgICAgICAgICAgIC5maWx0ZXIoZmllbGQgPT4gQm9vbGVhbihmaWVsZC51bmlxdWUpKVxuICAgICAgICAgICAgICAgIC5tYXAoZmllbGQgPT4gKHtcbiAgICAgICAgICAgICAgICBrZXk6IGZpZWxkLm5hbWUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGRhdGFbZmllbGQubmFtZV1cbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoZmlsZWxkID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gQm9vbGVhbihmaWxlbGQudmFsdWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyDov4fmu6Tlh7rlkozmlbDmja7lupPkuK3lt7LlrZjlnKjmlbDmja7nm7jljLnphY3nmoTovpPlhaXpoblcbiAgICAgICAgICAgIGlmIChkYXRhVG9DaGVjay5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgICAgICBjb25zdCBjaGVja2luZ1Jlc3VsdCA9IFByb21pc2UuYWxsKGRhdGFUb0NoZWNrLm1hcChkYXRhSXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYi5nZXRSb3dCeU1hdGNoKHsgW2RhdGFJdGVtLmtleV06IGRhdGFJdGVtLnZhbHVlIH0sIHRoaXMuX3RhYmxlTmFtZSkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZGF0YUl0ZW07XG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXMuZmlsdGVyKHIgPT4gciAhPT0gZmFsc2UpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIHJldHVybiBjaGVja2luZ1Jlc3VsdC50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IGVycm9ycy5CYWRSZXF1ZXN0RXJyb3IoaTE4bignZXJyb3JzLnNjaGVtYS51bmlxdWUnLCByZXNbMF0ua2V5KSkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYi5nZXRDb2xsZWN0aW9uKHRoaXMuX3RhYmxlTmFtZSkudGhlbihjb2xsZWN0aW9uID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBjb2xsZWN0aW9uLmluc2VydChbZGF0YVdpdGhJRF0pO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkYi5nZXRDb2xsZWN0aW9uKHRoaXMuX3RhYmxlTmFtZSkudGhlbihjb2xsZWN0aW9uID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gY29sbGVjdGlvbi5pbnNlcnQoW2RhdGFXaXRoSURdKTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gdXRpbHMucmVkdWNlVGFza3MoW1xuICAgICAgICAgICAgdmFsaWRhdGUoZGF0YSwgdGhpcy5fc2NoZW1hKSxcbiAgICAgICAgICAgIHF1ZXJ5XG4gICAgICAgIF0pO1xuICAgIH1cbiAgICB1cGRhdGUoaWRPclF1ZXJ5LCBkYXRhLCB1cGRhdGVDb25maWcgPSB7fSkge1xuICAgICAgICBjb25zdCB7IG11bHRpLCB1cHNlcnQgfSA9IHVwZGF0ZUNvbmZpZztcbiAgICAgICAgY29uc3QgcXVlcnkgPSBNb2RlbC5wYXJzZVF1ZXJ5KGlkT3JRdWVyeSk7XG4gICAgICAgIGNvbnN0IGRvUXVlcnkgPSAoKSA9PiB7XG4gICAgICAgICAgICBjb25zdCBkYXRhMiA9IE9iamVjdC5hc3NpZ24oe30sIGRhdGEsIHtcbiAgICAgICAgICAgICAgICBkYXRlX3VwZGF0ZWQ6IG5ldyBEYXRlKCkudG9TdHJpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBkb0l0ID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBkYi5nZXRDb2xsZWN0aW9uKHRoaXMuX3RhYmxlTmFtZSkudGhlbihjb2xsZWN0aW9uID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGNvbGxlY3Rpb24udXBkYXRlKHF1ZXJ5LCB7ICRzZXQ6IGRhdGEyIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwc2VydDogQm9vbGVhbih1cHNlcnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGk6IEJvb2xlYW4obXVsdGkpXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIGlmICghdXBzZXJ0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHRoaXMuZmluZE9uZShpZE9yUXVlcnksIHRydWUpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRvSXQoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBkb0l0KCk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB1dGlscy5yZWR1Y2VUYXNrcyhbXG4gICAgICAgICAgICB2YWxpZGF0ZShkYXRhLCB0aGlzLl9zY2hlbWEsIHRydWUpLFxuICAgICAgICAgICAgZG9RdWVyeVxuICAgICAgICBdKTtcbiAgICB9XG4gICAgcmVtb3ZlKGlkT3JRdWVyeSkge1xuICAgICAgICBjb25zdCBxdWVyeSA9IE1vZGVsLnBhcnNlUXVlcnkoaWRPclF1ZXJ5KTtcbiAgICAgICAgcmV0dXJuIGRiLmdldENvbGxlY3Rpb24odGhpcy5fdGFibGVOYW1lKS50aGVuKGNvbGxlY3Rpb24gPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGNvbGxlY3Rpb24ucmVtb3ZlKHF1ZXJ5KTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgTW9kZWw7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvbW9kZWxzL21vZGVsLnRzXG4gKiovIiwiaW1wb3J0IGFwcENvbmZpZyBmcm9tICcuLi8uLi9hcHAuY29uZmlnJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgb3V0cHV0RW1wdHlFbnRpdHkgZnJvbSAnLi9vdXRwdXQtZW1wdHktZW50aXR5JztcbmltcG9ydCBtb25nb2RiIGZyb20gJ21vbmdvZGInO1xuY29uc3QgTW9uZ29DbGllbnQgPSBtb25nb2RiLk1vbmdvQ2xpZW50O1xuZXhwb3J0IGZ1bmN0aW9uIGdldENvbGxlY3Rpb24odGFibGUpIHtcbiAgICBjb25zdCBkYkNvbm5lY3QgPSBNb25nb0NsaWVudC5jb25uZWN0KGAke2FwcENvbmZpZy5kYXRhYmFzZS5ob3N0fS8ke2FwcENvbmZpZy5kYXRhYmFzZS5uYW1lfWApO1xuICAgIHJldHVybiBkYkNvbm5lY3QudGhlbihkYiA9PiB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZGIuY29sbGVjdGlvbih0YWJsZSkpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldFJvd0J5TWF0Y2gobWF0Y2gsIHRhYmxlKSB7XG4gICAgcmV0dXJuIGdldENvbGxlY3Rpb24odGFibGUpLnRoZW4oY29sbGVjdGlvbiA9PiB7XG4gICAgICAgIHJldHVybiBjb2xsZWN0aW9uLmZpbmQobWF0Y2gpLnRvQXJyYXkoKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRSb3dCeUlkKGlkLCB0YWJsZSkge1xuICAgIHJldHVybiBnZXRSb3dCeU1hdGNoKHsgX2lkOiBpZCB9LCB0YWJsZSk7XG59XG5jb25zdCBnZXRSZWZGaWVsZHNXaXRoSWRzID0gKHJhd1Jlc3VsdCwgc2NoZW1hKSA9PiB7XG4gICAgcmV0dXJuIHNjaGVtYS5maWVsZHNcbiAgICAgICAgLmZpbHRlcihmaWVsZCA9PiB7XG4gICAgICAgIHJldHVybiAodHlwZW9mIGZpZWxkLnJlZiAhPT0gJ3VuZGVmaW5lZCcpO1xuICAgIH0pXG4gICAgICAgIC5tYXAoZmllbGQgPT4ge1xuICAgICAgICBsZXQgaWRzID0gcmF3UmVzdWx0W2ZpZWxkLm5hbWVdO1xuICAgICAgICAvLyDlsIYgaWRzIOmAmumAmui9rOaNouS4uuaVsOe7hFxuICAgICAgICAvLyDov5nph4zljIXmi6zmnKzor6XkvKDmlbDnu4TljbTlvpfliLDlrZfnrKbkuLLooqvovazmjaLnmoTmg4XlhrVcbiAgICAgICAgaWYgKCFBcnJheS5pc0FycmF5KGlkcykpIHtcbiAgICAgICAgICAgIGlkcyA9IFtpZHNdO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBmaWVsZCwgeyBpZHMgfSk7XG4gICAgfSk7XG59O1xuLy8g5bm25LiU5re75Yqg55u45bqU6ZSZ6K+v5L+h5oGvXG5jb25zdCBoYW5kbGVSZWZSZXN1bHQgPSAocmF3UmVmUmVzdWx0LCByZWZTY2hlbWEsIGlkKSA9PiB7XG4gICAgaWYgKHR5cGVvZiByYXdSZWZSZXN1bHQgPT09ICdvYmplY3QnKSB7XG4gICAgICAgIHJldHVybiByYXdSZWZSZXN1bHQ7XG4gICAgfVxuICAgIHJldHVybiBvdXRwdXRFbXB0eUVudGl0eShyZWZTY2hlbWEuZmllbGRzLCBpZCk7XG59O1xuY29uc3QgZG9lc1JlZkhhdmVSZWZJbnNpZGUgPSAocmVmKSA9PiB7XG4gICAgcmV0dXJuIF8uZmlsdGVyKHJlZi5maWVsZHMsIGZpZWxkID0+IEJvb2xlYW4oZmllbGQucmVmKSkubGVuZ3RoICE9PSAwO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBlbWJlZFJlZihyYXdSZXN1bHRzLCBzY2hlbWEpIHtcbiAgICBpZiAocmF3UmVzdWx0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShbXSk7XG4gICAgfVxuICAgIC8vIOiOt+WPliByZWYg5pWw5o2u77yM55Sf5oiQ55SxIHJlZiDlrZfmrrXnu4TmiJDnmoTlr7nosaFcbiAgICBjb25zdCBnZXRSZWZGaWVsZHNXaXRoRGF0YSA9IChmaWVsZHNXaXRoUmVmSWRzKSA9PiB7XG4gICAgICAgIGNvbnN0IGZpZWxkc1dpdGhEYXRhID0gZmllbGRzV2l0aFJlZklkc1xuICAgICAgICAgICAgLm1hcChmaWVsZCA9PiB7XG4gICAgICAgICAgICAvLyDkuIDkuKogZmllbGQg6YeM6Z2i55qEIGlkcyDov5Tlm57nmoTmn6Xor6Lnu5PmnpxcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlXG4gICAgICAgICAgICAgICAgLmFsbChmaWVsZC5pZHNcbiAgICAgICAgICAgICAgICAubWFwKGlkID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gZ2V0Um93QnlJZChpZCwgZmllbGQucmVmLm5hbWUpXG4gICAgICAgICAgICAgICAgICAgIC50aGVuKHJlc3VsdHMgPT4ge1xuICAgICAgICAgICAgICAgICAgICBjb25zdCBpc1JlZkluUmVmID0gZG9lc1JlZkhhdmVSZWZJbnNpZGUoZmllbGQucmVmKTtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVmU2NoZW1hID0gZmllbGQucmVmO1xuICAgICAgICAgICAgICAgICAgICBpZiAoaXNSZWZJblJlZikge1xuICAgICAgICAgICAgICAgICAgICAgICAgLy8g6YCS5b2S77yB77yBXG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gZW1iZWRSZWYocmVzdWx0cywgcmVmU2NoZW1hKS50aGVuKHJlUmVmZWRSZXN1bHQgPT4gaGFuZGxlUmVmUmVzdWx0KHJlUmVmZWRSZXN1bHRbMF0sIHJlZlNjaGVtYSwgaWQpKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gaGFuZGxlUmVmUmVzdWx0KHJlc3VsdHNbMF0sIHJlZlNjaGVtYSwgaWQpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSkpXG4gICAgICAgICAgICAgICAgLnRoZW4ocmVmUmVzdWx0cyA9PiB7XG4gICAgICAgICAgICAgICAgLy8g5aSE55CG5Y2V5LiqIHJlZiBmaWVsZCDmlbDmja7vvIzpg73mmK/mlbDnu4TlvaLlvI/vvIzmnIDnu4jmmK/lkKbkuLrmlbDnu4Tlj5blhrPkuo4gcmVmIGZpZWxkIOeahCB0eXBlXG4gICAgICAgICAgICAgICAgbGV0IGZpZWxkRGF0YSA9IHJlZlJlc3VsdHM7XG4gICAgICAgICAgICAgICAgaWYgKCFmaWVsZC50eXBlIHx8ICFmaWVsZC50eXBlLmlzQXJyYXkoKSkge1xuICAgICAgICAgICAgICAgICAgICBmaWVsZERhdGEgPSByZWZSZXN1bHRzWzBdO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgICAgICBuYW1lOiBmaWVsZC5uYW1lLFxuICAgICAgICAgICAgICAgICAgICBkYXRhOiBmaWVsZERhdGEsXG4gICAgICAgICAgICAgICAgfTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKGZpZWxkc1dpdGhEYXRhKS50aGVuKGZpZWxkcyA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZmllbGRzLnJlZHVjZSgoZmllbGRzT2JqLCBmaWVsZCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBmaWVsZHNPYmosIHtcbiAgICAgICAgICAgICAgICAgICAgW2ZpZWxkLm5hbWVdOiBmaWVsZC5kYXRhXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9LCB7fSk7XG4gICAgICAgIH0pO1xuICAgIH07XG4gICAgcmV0dXJuIFByb21pc2UuYWxsKHJhd1Jlc3VsdHNcbiAgICAgICAgLm1hcChyYXdSZXN1bHQgPT4ge1xuICAgICAgICBjb25zdCBmaWVsZHNXaXRoSWRzID0gZ2V0UmVmRmllbGRzV2l0aElkcyhyYXdSZXN1bHQsIHNjaGVtYSk7XG4gICAgICAgIHJldHVybiBnZXRSZWZGaWVsZHNXaXRoRGF0YShmaWVsZHNXaXRoSWRzKS50aGVuKHJlZk9iaiA9PiB7XG4gICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIHJhd1Jlc3VsdCwgcmVmT2JqKTtcbiAgICAgICAgfSk7XG4gICAgfSkpO1xufVxuZXhwb3J0IGRlZmF1bHQge1xuICAgIGVtYmVkUmVmLFxuICAgIGdldENvbGxlY3Rpb24sXG4gICAgZ2V0Um93QnlNYXRjaCxcbiAgICBnZXRSb3dCeUlkXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21vZGVscy9kYXRhYmFzZS50c1xuICoqLyIsImltcG9ydCBhcHBDb25maWdEZXYgZnJvbSAnLi9hcHAuY29uZmlnLmRldic7XG5pbXBvcnQgYXBwQ29uZmlnUHJvZCBmcm9tICcuL2FwcC5jb25maWcucHJvZCc7XG5sZXQgYXBwQ29uZmlnID0gYXBwQ29uZmlnRGV2O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBhcHBDb25maWcgPSBhcHBDb25maWdQcm9kO1xufVxuZXhwb3J0IGRlZmF1bHQgYXBwQ29uZmlnO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvYXBwLmNvbmZpZy50c1xuICoqLyIsImNvbnN0IGFwcENvbmZpZyA9IHtcbiAgICBhcGk6IHtcbiAgICAgICAgcHJlZml4OiAnYXBpJ1xuICAgIH0sXG4gICAgZGF0YWJhc2U6IHtcbiAgICAgICAgaG9zdDogJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnLFxuICAgICAgICBuYW1lOiAncmVhZHInLFxuICAgICAgICBtb25nb1N0b3JlTmFtZTogJ3JlYWRyX3Nlc3Npb24nXG4gICAgfSxcbiAgICBzaXRlVXJsOiAnaHR0cDovL3JlYWRyd2ViLmNvbScsXG4gICAgcG9ydDogMzAwMCxcbiAgICBlbmFibGVFbnRpdHlDYWNoZTogZmFsc2Vcbn07XG5leHBvcnQgZGVmYXVsdCBhcHBDb25maWc7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9hcHAuY29uZmlnLmRldi50c1xuICoqLyIsImNvbnN0IGFwcENvbmZpZyA9IHtcbiAgICBhcGk6IHtcbiAgICAgICAgcHJlZml4OiAnYXBpJ1xuICAgIH0sXG4gICAgZGF0YWJhc2U6IHtcbiAgICAgICAgaG9zdDogJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnLFxuICAgICAgICBuYW1lOiAncmVhZHInLFxuICAgICAgICBtb25nb1N0b3JlTmFtZTogJ3JlYWRyX3Nlc3Npb24nXG4gICAgfSxcbiAgICBzaXRlVXJsOiAnaHR0cDovL3JlYWRyd2ViLmNvbScsXG4gICAgcG9ydDogMzAwMCxcbiAgICBlbmFibGVFbnRpdHlDYWNoZTogdHJ1ZVxufTtcbmV4cG9ydCBkZWZhdWx0IGFwcENvbmZpZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2FwcC5jb25maWcucHJvZC50c1xuICoqLyIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvdXRwdXRFbXB0eUVudGl0eShmaWVsZHMsIGlkT2JqT3JJZFN0cmluZyA9IHt9KSB7XG4gICAgLy8gaWQg5Y+v5Lul5Li65a+56LGh77yM5q2k5pe25Lya55u05o6l6KKr5omp5bGV5Yiw6L6T5Ye657uT5p6c6YeM6Z2iXG4gICAgbGV0IGlkT2JqID0gaWRPYmpPcklkU3RyaW5nO1xuICAgIGlmICh0eXBlb2YgaWRPYmpPcklkU3RyaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZE9iaiA9IHsgX2lkOiBpZE9iak9ySWRTdHJpbmcgfTtcbiAgICB9XG4gICAgY29uc3QgZW50aXR5ID0ge307XG4gICAgZmllbGRzLmZvckVhY2goZmllbGQgPT4ge1xuICAgICAgICAvLyB0b2RvXG4gICAgICAgIC8vIOa3u+WKoOexu+Wei+WIpOaWrVxuICAgICAgICBlbnRpdHlbZmllbGQubmFtZV0gPSAnJztcbiAgICB9KTtcbiAgICByZXR1cm4gXy5hc3NpZ24oe30sIGVudGl0eSwgaWRPYmopO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21vZGVscy9vdXRwdXQtZW1wdHktZW50aXR5LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibW9uZ29kYlwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwibW9uZ29kYlwiXG4gKiogbW9kdWxlIGlkID0gMzRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB2YWxpZGF0b3IgZnJvbSAnLi92YWxpZGF0b3InO1xuaW1wb3J0IGkxOG4gZnJvbSAnLi9pMThuJztcbmltcG9ydCBwaXBlbGluZSBmcm9tICcuL3BpcGVsaW5lJztcbmltcG9ydCByZWR1Y2VUYXNrcyBmcm9tICcuL3JlZHVjZS10YXNrcyc7XG5pbXBvcnQgc29ydEJ5RGF0ZSBmcm9tICcuL3NvcnQtYnktZGF0ZSc7XG5leHBvcnQgZGVmYXVsdCB7IHZhbGlkYXRvciwgaTE4biwgcGlwZWxpbmUsIHJlZHVjZVRhc2tzLCBzb3J0QnlEYXRlIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvaW5kZXgudHNcbiAqKi8iLCJjb25zdCB2YWxpZGF0b3IgPSByZXF1aXJlKCd2YWxpZGF0b3InKTtcbmNvbnN0IGFkZGl0aW9uYWxWYWxpZGF0b3JzID0ge1xuICAgIGxlbmd0aE1pbihsZW4pIHtcbiAgICAgICAgcmV0dXJuIGlucHV0ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpbnB1dC5sZW5ndGggPj0gbGVuO1xuICAgICAgICB9O1xuICAgIH0sXG4gICAgbGVuZ3RoTWF4KGxlbikge1xuICAgICAgICByZXR1cm4gaW5wdXQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0Lmxlbmd0aCA8PSBsZW47XG4gICAgICAgIH07XG4gICAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5hc3NpZ24oe30sIHZhbGlkYXRvciwgYWRkaXRpb25hbFZhbGlkYXRvcnMpO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3V0aWxzL3ZhbGlkYXRvci50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInZhbGlkYXRvclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwidmFsaWRhdG9yXCJcbiAqKiBtb2R1bGUgaWQgPSAzN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiLyoqXG4gKiAjIFBpcGVsaW5lIFV0aWxpdHkgKGJvcnJvd2VkIGZyb20gR2hvc3QpXG4gKlxuICogQmFzZWQgb24gcGlwZWxpbmUuanMgZnJvbSB3aGVuLmpzOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2N1am9qcy93aGVuL2Jsb2IvMy43LjQvcGlwZWxpbmUuanNcbiAqL1xuaW1wb3J0IFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnO1xuZnVuY3Rpb24gcGlwZWxpbmUodGFza3MgLyogaW5pdGlhbCBhcmd1bWVudHMgKi8pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICBsZXQgcnVuVGFzayA9ICh0YXNrLCBhcmdzKSA9PiB7XG4gICAgICAgIC8vIFNlbGYtb3B0aW1pemluZyBmdW5jdGlvbiB0byBydW4gZmlyc3QgdGFzayB3aXRoIG11bHRpcGxlXG4gICAgICAgIC8vIGFyZ3MgdXNpbmcgYXBwbHksIGJ1dCBzdWJzZXF1ZW50IHRhc2tzIHZpYSBkaXJlY3QgaW52b2NhdGlvblxuICAgICAgICBydW5UYXNrID0gKHRhc2ssIGFyZykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRhc2soYXJnKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHRhc2suYXBwbHkobnVsbCwgYXJncyk7XG4gICAgfTtcbiAgICAvLyBSZXNvbHZlIGFueSBwcm9taXNlcyBmb3IgdGhlIGFyZ3VtZW50cyBwYXNzZWQgaW4gZmlyc3RcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoYXJncykudGhlbihhcmdzID0+IHtcbiAgICAgICAgLy8gSXRlcmF0ZSB0aHJvdWdoIHRoZSB0YXNrcyBwYXNzaW5nIGFyZ3MgZnJvbSBvbmUgaW50byB0aGUgbmV4dFxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWR1Y2UodGFza3MsIChhcmcsIHRhc2spID0+IHtcbiAgICAgICAgICAgIHJldHVybiBydW5UYXNrKHRhc2ssIGFyZyk7XG4gICAgICAgIH0sIGFyZ3MpO1xuICAgIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgcGlwZWxpbmU7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvcGlwZWxpbmUudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJibHVlYmlyZFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiYmx1ZWJpcmRcIlxuICoqIG1vZHVsZSBpZCA9IDM5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgUHJvbWlzZSBmcm9tICdibHVlYmlyZCc7XG4vLyB0YXNrcyDlj6/ku6XmmK/ov5Tlm54gUHJvbWlzZSDnmoQgZm5cbi8vIOS5n+WPr+S7peaYryBQcm9taXNlXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWR1Y2VUYXNrcyh0YXNrcykge1xuICAgIHJldHVybiBQcm9taXNlLnJlZHVjZSh0YXNrcywgKHJlc3VsdCwgdGFzaykgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIHRhc2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXNrLmNhbGwodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8g5aaC5p6cIHRhc2sg5pivIFByb21pc2UgYmx1ZSBiaXJkIOiyjOS8vOS8muiHquWKqOaKiiBwcm9taXNlIHJlc29sdmUg5Ye65p2l77yM5pivIHJlamVjdCDnm7TmjqXlsLHnu4jmraLmiafooYxcbiAgICAgICAgLy8g5omA5LulIOWGmSB0YXNrKCkjdGhlbiDkvJrlh7rplJlcbiAgICAgICAgcmV0dXJuIHRhc2s7XG4gICAgfSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvcmVkdWNlLXRhc2tzLnRzXG4gKiovIiwiLy8g5pyA5paw55qE5Zyo5YmN6Z2iXG4vLyDmnIDmlrDnmoTlnKjliY3pnaJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNvcnRCeURhdGUoKSB7XG4gICAgcmV0dXJuIChhLCBiKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShiLmRhdGVfdXBkYXRlZCkudmFsdWVPZigpIC0gbmV3IERhdGUoYS5kYXRlX3VwZGF0ZWQpLnZhbHVlT2YoKTtcbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3V0aWxzL3NvcnQtYnktZGF0ZS50c1xuICoqLyIsImltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgZXJyb3JzIGZyb20gJy4uL2Vycm9ycyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3QgcmVkdWNlVGFza3MgPSB1dGlscy5yZWR1Y2VUYXNrcztcbmNvbnN0IGkxOG4gPSB1dGlscy5pMThuO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmFsaWRhdGUoZGF0YSwgc2NoZW1hLCBpc0VkaXRpbmcpIHtcbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgZXJyb3JzLkJhZFJlcXVlc3RFcnJvcihpMThuKCdlcnJvcnMudmFsaWRhdGlvbi5wcmVDaGVjay5lbXB0eU9iamVjdCcpKSk7XG4gICAgfVxuICAgIGNvbnN0IHN1cHBsaWVkRmllbGRzID0gT2JqZWN0LmtleXMoZGF0YSkuZmlsdGVyKGtleSA9PiAhXy5pc1VuZGVmaW5lZChkYXRhW2tleV0pKTtcbiAgICBjb25zdCBzdXBwbGllZEZpZWxkc0luU2NoZW1hID0gc2NoZW1hLmZpZWxkcy5maWx0ZXIoZmllbGQgPT4gIV8uaXNVbmRlZmluZWQoZGF0YVtmaWVsZC5uYW1lXSkpO1xuICAgIGNvbnN0IGFsbEZpZWxkcyA9IF8ubWFwKHNjaGVtYS5maWVsZHMsICduYW1lJyk7XG4gICAgY29uc3QgcmVxdWlyZWRGaWVsZHMgPSBzY2hlbWEuZmllbGRzXG4gICAgICAgIC5maWx0ZXIoZmllbGQgPT4gQm9vbGVhbihmaWVsZC5yZXF1aXJlZCkpXG4gICAgICAgIC5tYXAoZmllbGQgPT4gZmllbGQubmFtZSk7XG4gICAgY29uc3QgdW5zdXBwb3J0ZWRGaWVsZHMgPSBzdXBwbGllZEZpZWxkcy5maWx0ZXIoa2V5ID0+IGFsbEZpZWxkcy5pbmRleE9mKGtleSkgPT09IC0xKTtcbiAgICBjb25zdCBtaXNzZWRGaWVsZHMgPSByZXF1aXJlZEZpZWxkcy5maWx0ZXIoa2V5ID0+IHN1cHBsaWVkRmllbGRzLmluZGV4T2Yoa2V5KSA9PT0gLTEpO1xuICAgIGlmICh1bnN1cHBvcnRlZEZpZWxkcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgZXJyb3JzLkJhZFJlcXVlc3RFcnJvcihpMThuKCdlcnJvcnMudmFsaWRhdGlvbi5wcmVDaGVjay51bnN1cHBvcnRlZElucHV0JywgdW5zdXBwb3J0ZWRGaWVsZHNbMF0pKSk7XG4gICAgfVxuICAgIGlmIChtaXNzZWRGaWVsZHMubGVuZ3RoID4gMCAmJiAhaXNFZGl0aW5nKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgZXJyb3JzLkJhZFJlcXVlc3RFcnJvcihpMThuKCdlcnJvcnMudmFsaWRhdGlvbi5wcmVDaGVjay5taXNzUmVxdWlyZWRGaWVsZHMnLCBtaXNzZWRGaWVsZHNbMF0pKSk7XG4gICAgfVxuICAgIC8vIOmqjOivgSBmaWVsZHPvvIzlm6DkuLrmr4/kuKogZmllbGQg5Y+v6IO95pyJ5LiN5q2i5LiA5LiqIHZhbGlkYXRvclxuICAgIGNvbnN0IHZhbGlkYXRlRmllbGQgPSAodmFsLCB2YWxpZGF0b3JzKSA9PiB7XG4gICAgICAgIHJldHVybiByZWR1Y2VUYXNrcyh2YWxpZGF0b3JzLm1hcCh2YWxpZGF0aW9uID0+IHtcbiAgICAgICAgICAgIGlmICh2YWxpZGF0aW9uLmZuKHZhbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBlcnJvcnMuQmFkUmVxdWVzdEVycm9yKHZhbGlkYXRpb24uZXJyb3JNc2cpKTtcbiAgICAgICAgfSkpO1xuICAgIH07XG4gICAgLy8g5omA5pyJIGZpZWxkcyDpqozor4HkuIDpgY1cbiAgICByZXR1cm4gcmVkdWNlVGFza3Moc3VwcGxpZWRGaWVsZHNJblNjaGVtYS5tYXAoZmllbGQgPT4ge1xuICAgICAgICBjb25zdCB2YWxpZGF0b3JzID0gZmllbGQudmFsaWRhdG9ycztcbiAgICAgICAgaWYgKHZhbGlkYXRvcnMpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZUZpZWxkKGRhdGFbZmllbGQubmFtZV0sIHZhbGlkYXRvcnMpO1xuICAgICAgICB9XG4gICAgICAgIC8vIOi3s+i/h+acquWumuS5iSB2YWxpZGF0aW9uIOeahCBmaWxlZFxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgIH0pKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9tb2RlbHMvdmFsaWRhdGUudHNcbiAqKi8iLCJjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBwYWdlOiAxLFxuICAgIGxpbWl0OiAxMCxcbiAgICBvcmRlcjogJ25ldydcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYWdpbmF0ZShyZXN1bHRzLCBvcHRpb25zKSB7XG4gICAgbGV0IHsgcGFnZSwgbGltaXQsIG9yZGVyIH0gPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0T3B0aW9ucywgb3B0aW9ucyk7XG4gICAgLy8gcXVlcnkg6YeM6Z2i5Lyg6L+H5p2l55qE6YO95pivIHN0cmluZ1xuICAgIHBhZ2UgPSBwYXJzZUludChwYWdlLCAxMCk7XG4gICAgLy8g5aaC5p6cIHBhZ2Ug5bCP5LqOIDAg5YiZ5b2T5YGaIDEg5p2l5aSE55CG77yM5aSn5LqO5pyA5aSn6aG16Z2i5YiZ5LiN566hXG4gICAgLy8g5q2k6YC76L6R5Y+C54WnIEdpdEh1YiBhcGlcbiAgICBwYWdlID0gcGFnZSA8PSAwID8gMSA6IHBhZ2U7XG4gICAgbGltaXQgPSBwYXJzZUludChsaW1pdCwgMTApO1xuICAgIGlmIChvcmRlciA9PT0gJ25ldycpIHtcbiAgICAgICAgcmVzdWx0cy5yZXZlcnNlKCk7XG4gICAgfVxuICAgIGNvbnN0IHN0YXJ0SW5kZXggPSAocGFnZSAtIDEpICogbGltaXQ7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZW50aXRpZXM6IHJlc3VsdHMuc2xpY2Uoc3RhcnRJbmRleCwgbGltaXQgKyBzdGFydEluZGV4KSxcbiAgICAgICAgX3BhZ2luYXRpb246IHtcbiAgICAgICAgICAgIGN1cnJlbnQ6IHBhZ2UsXG4gICAgICAgICAgICBhbGw6IE1hdGguY2VpbChyZXN1bHRzLmxlbmd0aCAvIGxpbWl0KSB8fCAxXG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21vZGVscy9wYWdpbmF0ZS50c1xuICoqLyIsImltcG9ydCBlcnJvcnMgZnJvbSAnLi4vZXJyb3JzJztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IGNvbXB1dGVIYXNoIGZyb20gJy4vY29tcHV0ZS1oYXNoJztcbmV4cG9ydCBmdW5jdGlvbiBub3RGb3VuZEVycm9yKGl0ZW1OYW1lKSB7XG4gICAgcmV0dXJuIG5ldyBlcnJvcnMuTm90Rm91bmRFcnJvcihpMThuKCdlcnJvcnMuYXBpLmdlbmVyYWwubm90Rm91bmQnLCBpdGVtTmFtZSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG5vdEZvdW5kSW4oY29sbGVjdGlvbk5hbWUpIHtcbiAgICByZXR1cm4gbmV3IGVycm9ycy5Ob3RGb3VuZEVycm9yKGkxOG4oJ2Vycm9ycy5hcGkuZ2VuZXJhbC5ub3RGb3VuZEluJywgY29sbGVjdGlvbk5hbWUpKTtcbn1cbmV4cG9ydCB7IGNvbXB1dGVIYXNoIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvaGVscGVycy9pbmRleC50c1xuICoqLyIsImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbi8qKlxuICogc291cmNlOlxuICogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy82OTg0MTM5L2hvdy1jYW4taS1nZXQtdGhlLXNoYTEtaGFzaC1vZi1hLXN0cmluZy1pbi1ub2RlLWpzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVIYXNoKGJ1ZmZlcikge1xuICAgIGNvbnN0IHNoYXN1bSA9IGNyeXB0by5jcmVhdGVIYXNoKCdzaGExJyk7XG4gICAgc2hhc3VtLnVwZGF0ZShidWZmZXIpO1xuICAgIHJldHVybiBzaGFzdW0uZGlnZXN0KCdoZXgnKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9oZWxwZXJzL2NvbXB1dGUtaGFzaC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImNyeXB0b1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiY3J5cHRvXCJcbiAqKiBtb2R1bGUgaWQgPSA0NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiaHVtcHNcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImh1bXBzXCJcbiAqKiBtb2R1bGUgaWQgPSA0N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFNjaGVtYSBmcm9tICcuLi9tb2RlbHMvc2NoZW1hJztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IHZhbGlkYXRvciBmcm9tICcuLi91dGlscy92YWxpZGF0b3InO1xuaW1wb3J0IERhdGFUeXBlcywgeyBhcnJheU9mIH0gZnJvbSAnLi4vZGF0YS90eXBlcyc7XG5leHBvcnQgY29uc3QgdXNlciA9IG5ldyBTY2hlbWEoJ3VzZXJzJywgW1xuICAgIHtcbiAgICAgICAgbmFtZTogJ3VzZXJuYW1lJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICAgICAgdmFsaWRhdG9yczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZuOiB2YWxpZGF0b3IubGVuZ3RoTWluKDUpLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0Lm1pbkxlbmd0aCcsICduYW1lJylcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZm46IHZhbGlkYXRvci5sZW5ndGhNYXgoMjApLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0Lm1heExlbmd0aCcsICduYW1lJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAncGFzc3dvcmQnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgdmFsaWRhdG9yczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZuOiB2YWxpZGF0b3IubGVuZ3RoTWluKDYpLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0Lm1pbkxlbmd0aCcsICdwYXNzd29yZCcpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZuOiB2YWxpZGF0b3IubGVuZ3RoTWF4KDIwKSxcbiAgICAgICAgICAgICAgICBlcnJvck1zZzogaTE4bignZXJyb3JzLnZhbGlkYXRpb24udmFsdWVMaW1pdC5tYXhMZW5ndGgnLCAncGFzc3dvcmQnKVxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdlbWFpbCcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB1bmlxdWU6IHRydWUsXG4gICAgICAgIHZhbGlkYXRvcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmbjogdmFsaWRhdG9yLmlzRW1haWwsXG4gICAgICAgICAgICAgICAgZXJyb3JNc2c6IGkxOG4oJ2Vycm9ycy52YWxpZGF0aW9uLnZhbHVlTGltaXQuaW52YWxpZEZvcm1hdCcsICdlbWFpbCcpXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ3JvbGUnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH1cbl0pO1xuZXhwb3J0IGNvbnN0IGZpbGUgPSBuZXcgU2NoZW1hKCdmaWxlcycsIFtcbiAgICB7XG4gICAgICAgIG5hbWU6ICdmaWxlbmFtZScsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdjb250ZW50JyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ21pbWV0eXBlJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnc2l6ZSdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2VuY29kaW5nJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnaGFzaCcsXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxuICAgIH1cbl0pO1xuZXhwb3J0IGNvbnN0IHByb2dyZXNzID0gbmV3IFNjaGVtYSgncmVhZGluZ19wcm9ncmVzcycsIFtcbiAgICB7XG4gICAgICAgIG5hbWU6ICdwZXJjZW50YWdlJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5OdW1iZXJcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ3VzZXJfaWQnLFxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSURcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2Jvb2tfaWQnLFxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSURcbiAgICB9XG5dKTtcbmV4cG9ydCBjb25zdCB0YWcgPSBuZXcgU2NoZW1hKCd0YWdzJywgW1xuICAgIHtcbiAgICAgICAgbmFtZTogJ25hbWUnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnc2x1ZycsXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nXG4gICAgfVxuXSk7XG5leHBvcnQgY29uc3QgYXV0aG9yID0gbmV3IFNjaGVtYSgnYXV0aG9ycycsIFtcbiAgICB7XG4gICAgICAgIG5hbWU6ICduYW1lJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ3NsdWcnLFxuICAgICAgICB1bmlxdWU6IHRydWUsXG4gICAgICAgIHZhbGlkYXRvcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmbjogdmFsaWRhdG9yLmlzQWxwaGFudW1lcmljLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0LmFscGhhbnVtZXJpYycsICdzbHVnJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nXG4gICAgfVxuXSk7XG5leHBvcnQgY29uc3QgYm9vayA9IG5ldyBTY2hlbWEoJ2Jvb2tzJywgW1xuICAgIHtcbiAgICAgICAgbmFtZTogJ3RpdGxlJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2F1dGhvcnMnLFxuICAgICAgICByZWY6IGF1dGhvcixcbiAgICAgICAgdHlwZTogYXJyYXlPZihEYXRhVHlwZXMuSUQpXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdkZXNjcmlwdGlvbidcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2NvdmVyJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZmlsZScsXG4gICAgICAgIHJlZjogZmlsZSxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9XG5dKTtcbmV4cG9ydCBjb25zdCBjb2xsZWN0aW9uID0gbmV3IFNjaGVtYSgnY29sbGVjdGlvbnMnLCBbXG4gICAge1xuICAgICAgICBuYW1lOiAnbmFtZScsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdpdGVtcycsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICByZWY6IGJvb2ssXG4gICAgICAgIHR5cGU6IGFycmF5T2YoRGF0YVR5cGVzLklEKVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdjcmVhdG9yJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHJlZjogdXNlclxuICAgIH1cbl0pO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2RhdGEvc2NoZW1hcy50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjaGVtYSB7XG4gICAgY29uc3RydWN0b3IoYmFzZVRhYmxlLCBmaWVsZERlZmluaXRpb24pIHtcbiAgICAgICAgdGhpcy5fZmllbGREZWZpbml0aW9uID0gZmllbGREZWZpbml0aW9uO1xuICAgICAgICB0aGlzLl9iYXNlVGFibGUgPSBiYXNlVGFibGU7XG4gICAgfVxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYmFzZVRhYmxlO1xuICAgIH1cbiAgICBnZXQgZmllbGRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmllbGREZWZpbml0aW9uO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9tb2RlbHMvc2NoZW1hLnRzXG4gKiovIiwiZXhwb3J0IGNsYXNzIERhdGFUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihtYXJrLCBpc1R5cGVBcnJheSkge1xuICAgICAgICB0aGlzLm1hcmsgPSBtYXJrO1xuICAgICAgICB0aGlzLmlzVHlwZUFycmF5ID0gdHlwZW9mIGlzVHlwZUFycmF5ID09PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyBmYWxzZVxuICAgICAgICAgICAgOiBpc1R5cGVBcnJheTtcbiAgICB9XG4gICAgaXNBcnJheSgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmlzVHlwZUFycmF5ID09PSAndW5kZWZpbmVkJyB8fCAhdGhpcy5pc1R5cGVBcnJheSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBlcXVhbHModHlwZSkge1xuICAgICAgICByZXR1cm4gKHR5cGUubWFyayA9PT0gdGhpcy5tYXJrICYmIHR5cGUuaXNBcnJheSgpID09PSB0aGlzLmlzVHlwZUFycmF5KTtcbiAgICB9XG59XG5leHBvcnQgY29uc3QgYXJyYXlPZiA9ICh0eXBlKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBEYXRhVHlwZSh0eXBlLm1hcmssIHRydWUpO1xufTtcbmNvbnN0IERhdGFUeXBlcyA9IHtcbiAgICBTdHJpbmc6IG5ldyBEYXRhVHlwZSgnU1RSSU5HJyksXG4gICAgTnVtYmVyOiBuZXcgRGF0YVR5cGUoJ05VTUJFUicpLFxuICAgIElEOiBuZXcgRGF0YVR5cGUoJ0lEJyksXG59O1xuZXhwb3J0IGRlZmF1bHQgRGF0YVR5cGVzO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2RhdGEvdHlwZXMudHNcbiAqKi8iLCJpbXBvcnQgeyBST0xFUyB9IGZyb20gJy4uLy4uL2lzb21vcnBoaWMvY29uc3RhbnRzL2NvbW1vbic7XG5pbXBvcnQgZXJyb3JzIGZyb20gJy4uL2Vycm9ycyc7XG5pbXBvcnQgaTE4biBmcm9tICcuLi91dGlscy9pMThuJztcbi8qKlxuICog5p2D6ZmQ562J57qn5o6S5bqPXG4gKiBhZG1pbiB8IHVzZXIgfCB2aXNpdG9yIHwgbm9uZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXF1aXJlUGVybWlzc2lvbnNPZih1c2VyUm9sZSkge1xuICAgIHJldHVybiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgc3dpdGNoICh1c2VyUm9sZSkge1xuICAgICAgICAgICAgY2FzZSBST0xFUy5BRE1JTjpcbiAgICAgICAgICAgICAgICBpZiAocmVxLmNvbnRleHQudXNlci5yb2xlID09PSBST0xFUy5BRE1JTikge1xuICAgICAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuZXh0KG5ldyBlcnJvcnMuTm9QZXJtaXNzaW9uRXJyb3IoaTE4bignZXJyb3JzLmFwaS5hdXRoLm5lZWRQZXJtaXNzaW9uc09mJywgJ2FkbWluJykpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUk9MRVMuVVNFUjpcbiAgICAgICAgICAgICAgICBpZiAocmVxLmNvbnRleHQudXNlci5yb2xlID09PSBST0xFUy5VU0VSIHx8IHJlcS5jb250ZXh0LnVzZXIucm9sZSA9PT0gUk9MRVMuQURNSU4pIHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV4dChuZXcgZXJyb3JzLk5vUGVybWlzc2lvbkVycm9yKGkxOG4oJ2Vycm9ycy5hcGkuYXV0aC5sb2dpblJlcXVpcmVkJykpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgaWYgKHVzZXJSb2xlICE9PSBST0xFUy5WSVNJVE9SKSB7XG4gICAgICAgICAgICAgICAgICAgIG5leHQobmV3IEVycm9yKCdVbmRlZmluZWQgcm9sZSEnKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvcmVxdWlyZS1wZXJtaXNzaW9ucy1vZi50c1xuICoqLyIsIi8vIOWFqOWxgOWPmOmHj1xuLy8g5YWo5bGA5Y+Y6YePXG5leHBvcnQgY29uc3QgRU5BQkxFX1NFUlZFUl9ST1VUSU5HID0gJ19fRU5BQkxFX1NFUlZFUl9ST1VUSU5HX18nO1xuZXhwb3J0IGNvbnN0IElOSVRJQUxfU1RBVEUgPSAnX19JTklUSUFMX1NUQVRFX18nO1xuLy8g5YW25LuW5bi46YePXG5leHBvcnQgY29uc3QgRE9VQkFOX0FQSV9ST09UID0gJ2h0dHBzOi8vYXBpLmRvdWJhbi5jb20vdjInO1xuZXhwb3J0IGNvbnN0IEdJVEhVQl9BUElfUk9PVCA9ICdodHRwczovL2FwaS5naXRodWIuY29tJztcbmV4cG9ydCBjb25zdCBST0xFUyA9IHtcbiAgICBVU0VSOiAndXNlcicsXG4gICAgQURNSU46ICdhZG1pbicsXG4gICAgVklTSVRPUjogJ3Zpc2l0b3InXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb25zdGFudHMvY29tbW9uLnRzXG4gKiovIiwiaW1wb3J0IHByaW50IGZyb20gJy4uL3V0aWxzL3ByaW50JztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZUVycm9yKGVycm9yLCByZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHN0YXR1c0NvZGUgPSBlcnJvci5zdGF0dXNDb2RlIHx8IDUwMDtcbiAgICBsZXQgZXJyb3JKc29uID0gZXJyb3I7XG4gICAgaWYgKEVycm9yLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGVycm9yKSkge1xuICAgICAgICBlcnJvckpzb24gPSB7XG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIHx8IGkxOG4oJ2Vycm9ycy5nZW5lcmFsLnVua25vd25FcnJvck9jY3VycmVkJyksXG4gICAgICAgICAgICB0eXBlOiBlcnJvci5uYW1lLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoIWVycm9yLnN0YXR1c0NvZGUpIHtcbiAgICAgICAgcHJpbnQuZXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpLnNlbmQoXy5vbWl0KGVycm9ySnNvbiwgWydzdGF0dXNDb2RlJywgJ25hbWUnLCAnc3RhY2snXSkpO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWVycm9yLnRzXG4gKiovIiwiY29uc3QgY29sb3JzID0gcmVxdWlyZSgnY29sb3JzL3NhZmUnKTtcbmNvbnN0IHByaW50ID0ge1xuICAgIGluZm8obWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmluZm8oJ1xcbicgKyBjb2xvcnMuYmdHcmVlbi5ib2xkLndoaXRlKCcgSU5GTyAnKSwgY29sb3JzLmdyZWVuKG1lc3NhZ2UpKTtcbiAgICB9LFxuICAgIHRlc3QobWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmluZm8oJ1xcbicgKyBjb2xvcnMuYmdDeWFuLmJvbGQuYmxhY2soJyBJTkZPICcpLCB0eXBlb2YgbWVzc2FnZSAhPT0gJ29iamVjdCcgPyBjb2xvcnMuY3lhbihtZXNzYWdlKSA6IG1lc3NhZ2UpO1xuICAgIH0sXG4gICAgd2FybihtZXNzYWdlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1xcbicgKyBjb2xvcnMuYmdZZWxsb3cuYm9sZC5ibGFjaygnIFdBUk5JTkcgJyksIHR5cGVvZiBtZXNzYWdlICE9PSAnb2JqZWN0JyA/IGNvbG9ycy55ZWxsb3cobWVzc2FnZSkgOiBtZXNzYWdlKTtcbiAgICB9LFxuICAgIGVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignXFxuJyArIGNvbG9ycy5iZ1JlZC5ib2xkLndoaXRlKCcgRVJST1IgJyksIHR5cGVvZiBtZXNzYWdlICE9PSAnb2JqZWN0JyA/IGNvbG9ycy5yZWQobWVzc2FnZSkgOiBtZXNzYWdlKTtcbiAgICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgcHJpbnQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvcHJpbnQudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjb2xvcnMvc2FmZVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiY29sb3JzL3NhZmVcIlxuICoqIG1vZHVsZSBpZCA9IDU1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHBhcnNlVXJsZW5jb2RlZCBmcm9tICcuLi8uLi9pc29tb3JwaGljL3V0aWxzL3BhcnNlVXJsZW5jb2RlZCc7XG5pbXBvcnQgaGVscGVycyBmcm9tICcuLi8uLi9pc29tb3JwaGljL2hlbHBlcnMnO1xuY29uc3QgQVBJX1JPT1QgPSBoZWxwZXJzLmdldEFwaVJvb3QoKTtcbmZ1bmN0aW9uIHBhcnNlUGFnaW5hdGlvbih7IGZ1bGxQYXRoLCBxdWVyeSB9LCB7IGN1cnJlbnQsIGFsbCB9KSB7XG4gICAgY29uc3QgZ2V0TGludEJ5UGFnZSA9IHBhZ2UgPT4gKGAke2Z1bGxQYXRofT8ke3BhcnNlVXJsZW5jb2RlZChfLmFzc2lnbih7fSwgcXVlcnksIHsgcGFnZSB9KSl9YCk7XG4gICAgY29uc3QgbGlua3MgPSB7XG4gICAgICAgIGZpcnN0OiBnZXRMaW50QnlQYWdlKDEpLFxuICAgICAgICBsYXN0OiBnZXRMaW50QnlQYWdlKGFsbCksXG4gICAgICAgIHByZXY6IGdldExpbnRCeVBhZ2UoY3VycmVudCAtIDEpLFxuICAgICAgICBuZXh0OiBnZXRMaW50QnlQYWdlKGN1cnJlbnQgKyAxKSxcbiAgICB9O1xuICAgIGlmIChjdXJyZW50ID4gYWxsKSB7XG4gICAgICAgIGxpbmtzLnByZXYgPSBsaW5rcy5sYXN0O1xuICAgIH1cbiAgICBpZiAoYWxsID09PSAxKSB7XG4gICAgICAgIGlmIChjdXJyZW50ID4gMSkge1xuICAgICAgICAgICAgcmV0dXJuIF8ub21pdChsaW5rcywgWyduZXh0J10pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjdXJyZW50ID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gXy5vbWl0KGxpbmtzLCBbJ3ByZXYnLCAnbmV4dCddKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY3VycmVudCA8PSAxKSB7XG4gICAgICAgIHJldHVybiBfLm9taXQobGlua3MsIFsncHJldiddKTtcbiAgICB9XG4gICAgaWYgKGN1cnJlbnQgPj0gYWxsKSB7XG4gICAgICAgIHJldHVybiBfLm9taXQobGlua3MsIFsnbmV4dCddKTtcbiAgICB9XG4gICAgcmV0dXJuIGxpbmtzO1xufVxuY29uc3QgaGFuZGxlU3VjY2VzcyA9IChhcGlSZXN1bHRzLCByZXEsIHJlcykgPT4ge1xuICAgIGlmIChyZXEubWV0aG9kID09PSAnUE9TVCcpIHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoYXBpUmVzdWx0cyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoYXBpUmVzdWx0cy5fcGFnaW5hdGlvbikge1xuICAgICAgICAgICAgY29uc3QgaG9zdCA9IEFQSV9ST09UO1xuICAgICAgICAgICAgcmVzLmxpbmtzKHBhcnNlUGFnaW5hdGlvbih7XG4gICAgICAgICAgICAgICAgZnVsbFBhdGg6IGhvc3QgKyByZXEucGF0aCxcbiAgICAgICAgICAgICAgICBxdWVyeTogcmVxLnF1ZXJ5LFxuICAgICAgICAgICAgfSwgYXBpUmVzdWx0cy5fcGFnaW5hdGlvbikpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoYXBpUmVzdWx0cy5lbnRpdGllcyk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoYXBpUmVzdWx0cyk7XG4gICAgfVxufTtcbmZ1bmN0aW9uIGhhbmRsZUpTT05SZXNwb25zZShyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHsgYXBpUmVzdWx0cyB9ID0gcmVxO1xuICAgIGlmICghYXBpUmVzdWx0cykge1xuICAgICAgICBuZXh0KG5ldyBFcnJvcignXCJhcGlSZXN1bHRzXCIgaXMgbm90IHByZXNlbnQhJykpO1xuICAgIH1cbiAgICBhcGlSZXN1bHRzLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICAgIGhhbmRsZVN1Y2Nlc3MocmVzdWx0cywgcmVxLCByZXMpO1xuICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgbmV4dChlcnJvcik7XG4gICAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBoYW5kbGVKU09OUmVzcG9uc2U7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvbWlkZGxld2FyZS9oYW5kbGUtanNvbi1yZXNwb25zZS50c1xuICoqLyIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG4vLyB0b2RvXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXJzZVVybGVuY29kZWQob3JpZ2luYWxPYmopIHtcbiAgICBpZiAoXy5pc0VtcHR5KG9yaWdpbmFsT2JqKSkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGxldCBvYmplY3QgPSBfLmNsb25lRGVlcChvcmlnaW5hbE9iaik7XG4gICAgbGV0IGVuY29kZWR1cmwgPSAnJztcbiAgICBmb3IgKGxldCBwcm9wIGluIG9iamVjdCkge1xuICAgICAgICBpZiAodHlwZW9mIG9iamVjdFtwcm9wXSA9PT0gJ29iamVjdCcgJiYgb2JqZWN0W3Byb3BdICE9PSBudWxsKSB7XG4gICAgICAgICAgICBvYmplY3RbcHJvcF0gPSBvYmplY3RbcHJvcF0udG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBlbmNvZGVkdXJsID0gYCR7ZW5jb2RlZHVybH0ke3Byb3B9PSR7ZW5jb2RlVVJJKG9iamVjdFtwcm9wXSl9JmA7XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVkdXJsLnN1YnN0cigwLCBlbmNvZGVkdXJsLmxlbmd0aCAtIDEpO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9wYXJzZVVybGVuY29kZWQudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBsaWZlY2lyY2xlIGZyb20gJy4vbGlmZWNpcmNsZSc7XG5pbXBvcnQgZ2V0QXBpUm9vdCBmcm9tICcuL2dldEFwaVJvb3QnO1xuaW1wb3J0IGlzU2VydmVyUm91dGluZ0VuYWJsZWQgZnJvbSAnLi9pc1NlcnZlclJvdXRpbmdFbmFibGVkJztcbmltcG9ydCByZWRpcmVjdCBmcm9tICcuL3JlZGlyZWN0JztcbmltcG9ydCBpc1NlcnZlckVudiBmcm9tICcuL2lzU2VydmVyRW52JztcbmltcG9ydCBwcmludCBmcm9tICcuL3ByaW50JztcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5hc3NpZ24oe30sIGxpZmVjaXJjbGUsIHtcbiAgICBnZXRBcGlSb290LFxuICAgIGlzU2VydmVyUm91dGluZ0VuYWJsZWQsXG4gICAgcmVkaXJlY3QsXG4gICAgaXNTZXJ2ZXJFbnYsXG4gICAgcHJpbnRcbn0pO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbi8vIOajgOafpSBzdG9yZSDph4zpnaLnmoQgcm91dGluZyDmmK/lkKblj5jljJZcbmV4cG9ydCBjb25zdCBvblJvdXRpbmdDaGFuZ2UgPSBmbiA9PiAobmV4dFByb3BzLCBjdXJyZW50UHJvcHMpID0+IHtcbiAgICBpZiAoIWN1cnJlbnRQcm9wcy5yb3V0aW5nKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ3JvdXRpbmcg6ZyA6KaB546w5Zyo57uE5Lu2IHByb3BzIOmHjOmdouWjsOaYju+8gScpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGhhc1BhdGhQYXJhbUNoYW5nZWQgPSAhXy5pc0VxdWFsKG5leHRQcm9wcy5yb3V0aW5nLCBjdXJyZW50UHJvcHMucm91dGluZyk7XG4gICAgaWYgKGhhc1BhdGhQYXJhbUNoYW5nZWQpIHtcbiAgICAgICAgZm4obmV4dFByb3BzLnJvdXRpbmcpO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvbGlmZWNpcmNsZS50c1xuICoqLyIsImltcG9ydCBhcHBDb25maWcgZnJvbSAnLi4vLi4vYXBwLmNvbmZpZyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRBcGlSb290KCkge1xuICAgIGNvbnN0IGhvc3QgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICA/IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW5cbiAgICAgICAgOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwJztcbiAgICByZXR1cm4gYCR7aG9zdH0vJHthcHBDb25maWcuYXBpLnByZWZpeH1gO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2dldEFwaVJvb3QudHNcbiAqKi8iLCJpbXBvcnQgeyBFTkFCTEVfU0VSVkVSX1JPVVRJTkcgfSBmcm9tICcuLi9jb25zdGFudHMvY29tbW9uJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzU2VydmVyUm91dGluZ0VuYWJsZWQoKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4od2luZG93W0VOQUJMRV9TRVJWRVJfUk9VVElOR10pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyUm91dGluZ0VuYWJsZWQudHNcbiAqKi8iLCJpbXBvcnQgaXNTZXJ2ZXJSb3V0aW5nRW5hYmxlZCBmcm9tICcuL2lzU2VydmVyUm91dGluZ0VuYWJsZWQnO1xuaW1wb3J0IHsgaGFzaEhpc3RvcnksIGJyb3dzZXJIaXN0b3J5IH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlZGlyZWN0KHVybCkge1xuICAgIGlmIChpc1NlcnZlclJvdXRpbmdFbmFibGVkKCkpIHtcbiAgICAgICAgYnJvd3Nlckhpc3RvcnkucHVzaCh1cmwpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaGFzaEhpc3RvcnkucHVzaCh1cmwpO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9yZWRpcmVjdC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXJvdXRlclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVhY3Qtcm91dGVyXCJcbiAqKiBtb2R1bGUgaWQgPSA2M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNTZXJ2ZXJFbnYoKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyRW52LnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJpbnQoLi4uYXJncykge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gJ2NvbG9yOiBibHVlOyc7XG4gICAgICAgIGNvbnN0IG1lcmdlZEFyZ3MgPSBbYXJncy5qb2luKCcgJyldO1xuICAgICAgICBsZXQgbW9kQXJncyA9IG1lcmdlZEFyZ3MubWFwKChhcmcsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCVjIFtERVZdICR7YXJnfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBtb2RBcmdzID0gbW9kQXJncy5jb25jYXQoc3R5bGUpO1xuICAgICAgICBjb25zb2xlLnRyYWNlLmFwcGx5KG51bGwsIG1vZEFyZ3MpO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9wcmludC50c1xuICoqLyIsImltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbHMvbW9kZWwnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCAqIGFzIGhlbHBlcnMgZnJvbSAnLi4vaGVscGVycyc7XG5jb25zdCBmaWxlTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5maWxlKTtcbi8vIEByZXEjbG9nZ2VkRmlsZUlkXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsb2dGaWxlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29uc3QgZmlsZSA9IHJlcS5maWxlO1xuICAgIGNvbnN0IGhhc2ggPSBoZWxwZXJzLmNvbXB1dGVIYXNoKGZpbGUuYnVmZmVyKTtcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICBmaWxlbmFtZTogZmlsZS5vcmlnaW5hbG5hbWUsXG4gICAgICAgIC8vIOS8muiiq+i9rOaNouS4uiBiaW5EYXRhIOeahCBCU09OIHR5cGVcbiAgICAgICAgY29udGVudDogZmlsZS5idWZmZXIsXG4gICAgICAgIG1pbWV0eXBlOiBmaWxlLm1pbWV0eXBlLFxuICAgICAgICBzaXplOiBmaWxlLnNpemUsXG4gICAgICAgIGVuY29kaW5nOiBmaWxlLmVuY29kaW5nLFxuICAgICAgICBoYXNoXG4gICAgfTtcbiAgICBmaWxlTW9kZWwuZmluZE9uZSh7IGhhc2ggfSkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAvLyByZXEubG9nZ2VkRmlsZUlkID0gcmVzdWx0Ll9pZFxuICAgICAgICAvLyBUT0RPOiA0MDQg5aSE55CGXG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignRmlsZSBhbHJlYWR5IGV4aXN0cyEnKTtcbiAgICAgICAgbmV4dChlcnIpO1xuICAgIH0sIG5vdEZvdW5kRXJyb3IgPT4ge1xuICAgICAgICAvLyBUT0RPOiDkuI3kvb/nlKggNDA0XG4gICAgICAgIC8vIOS4uuS6huehruWumuaYr+acquaJvuWIsOiAjOS4jeaYr+WFtuS7lumUmeivr+mcgOimgeWBmumineWklueahOWIpOaWrVxuICAgICAgICBmaWxlTW9kZWxcbiAgICAgICAgICAgIC5hZGQoZGF0YSlcbiAgICAgICAgICAgIC50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBjb25zdCBsb2dnZWRGaWxlSWQgPSBfLmdldChyZXN1bHQsIFsnb3BzJywgMCwgJ19pZCddKTtcbiAgICAgICAgICAgIGlmICghbG9nZ2VkRmlsZUlkKSB7XG4gICAgICAgICAgICAgICAgLy8gVE9ET1xuICAgICAgICAgICAgICAgIC8vIHRocm93IG5ldyBFcnJvcignRmlsZSBub3QgRm91bmQhJylcbiAgICAgICAgICAgICAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0ZpbGUgbm90IEZvdW5kIScpO1xuICAgICAgICAgICAgICAgIG5leHQoZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlcS5sb2dnZWRGaWxlSWQgPSBsb2dnZWRGaWxlSWQ7XG4gICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2xvZy1maWxlLnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJlcGFyZUFwaShyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcS5fX2FwaVRvdWNoZWQgPSB0cnVlO1xuICAgIG5leHQoKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL3ByZXBhcmUtYXBpLnRzXG4gKiovIiwiaW1wb3J0IHsgbm90Rm91bmRFcnJvciB9IGZyb20gJy4uL2hlbHBlcnMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlQXBpTm90Rm91bmQocmVxLCByZXMsIG5leHQpIHtcbiAgICBpZiAoIXJlcS5fX2FwaVRvdWNoZWQpIHtcbiAgICAgICAgbmV4dChub3RGb3VuZEVycm9yKCdBUEknKSk7XG4gICAgfVxuICAgIG5leHQoKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2hhbmRsZS1hcGktbm90LWZvdW5kLnRzXG4gKiovIiwiaW1wb3J0ICogYXMgYXBpIGZyb20gJy4uL2FwaSc7XG5pbXBvcnQgbWFrZUJhc2ljRW5kcG9pbnQgZnJvbSAnLi9tYWtlLWJhc2ljLWVuZHBvaW50Jztcbi8vIGJhc2ljIGVuZHBvaW50c1xuZXhwb3J0IGNvbnN0IGF1dGhvciA9IG1ha2VCYXNpY0VuZHBvaW50KGFwaS5hdXRob3IpO1xuZXhwb3J0IGNvbnN0IGNvbGxlY3Rpb24gPSBtYWtlQmFzaWNFbmRwb2ludChhcGkuY29sbGVjdGlvbik7XG5leHBvcnQgY29uc3QgYm9vayA9IG1ha2VCYXNpY0VuZHBvaW50KGFwaS5ib29rKTtcbmV4cG9ydCBjb25zdCB0YWcgPSBtYWtlQmFzaWNFbmRwb2ludChhcGkudGFnKTtcbmV4cG9ydCBjb25zdCB1c2VyID0gbWFrZUJhc2ljRW5kcG9pbnQoYXBpLnVzZXIpO1xuLy8gY29tbW9uIGVuZHBvaW50c1xuLy8gYm9va3NcbmV4cG9ydCBjb25zdCBhZGRCb29rID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkuYWRkQm9vayhyZXEuYm9keSwgcmVxLmxvZ2dlZEZpbGVJZCk7XG4gICAgbmV4dCgpO1xufTtcbmV4cG9ydCBjb25zdCBmaW5kQm9vayA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLmZpbmRCb29rKHJlcS5wYXJhbXMuYm9vayk7XG4gICAgbmV4dCgpO1xufTtcbmV4cG9ydCBjb25zdCByZXNvbHZlQm9va0NvbnRlbnQgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5yZXNvbHZlQm9va0NvbnRlbnQocmVxLnBhcmFtcy5ib29rKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGxpc3RCb29rcyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLmxpc3RCb29rcyhyZXEucXVlcnkucGFnZSB8fCAxKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGVkaXRCb29rTWV0YSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLmVkaXRCb29rTWV0YShyZXEucGFyYW1zLmJvb2ssIHJlcS5ib2R5KTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IHJlbW92ZUJvb2sgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5yZW1vdmVCb29rKHJlcS5wYXJhbXMuYm9vayk7XG4gICAgbmV4dCgpO1xufTtcbi8vIHVzZXJzXG5leHBvcnQgY29uc3QgZmluZFVzZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5maW5kVXNlcihyZXEuY29udGV4dC51c2VyLmlkKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGFkZFVzZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5hZGRVc2VyKHJlcS5ib2R5KTtcbiAgICBuZXh0KCk7XG59O1xuLy8gdXNlclxuZXhwb3J0IGNvbnN0IGxpc3RTaGVsZkJvb2tzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkubGlzdFNoZWxmQm9va3MocmVxLmNvbnRleHQudXNlci5pZCwgcmVxLnF1ZXJ5LnBhZ2UgfHwgMSk7XG4gICAgbmV4dCgpO1xufTtcbmV4cG9ydCBjb25zdCBnZXRSZWFkaW5nUHJvZ3Jlc3MgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5nZXRSZWFkaW5nUHJvZ3Jlc3MocmVxLmNvbnRleHQudXNlci5pZCwgcmVxLnBhcmFtcy5ib29rKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IHNldFJlYWRpbmdQcm9ncmVzcyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLnNldFJlYWRpbmdQcm9ncmVzcyhyZXEuY29udGV4dC51c2VyLmlkLCByZXEucGFyYW1zLmJvb2ssIHJlcS5ib2R5KTtcbiAgICBuZXh0KCk7XG59O1xuLy8gZmlsZVxuZXhwb3J0IGNvbnN0IHJlYWRGaWxlID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkucmVhZEZpbGUocmVxLnBhcmFtcy5maWxlKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGRlbEZpbGUgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5kZWxGaWxlKHJlcS5wYXJhbXMuZmlsZSk7XG4gICAgbmV4dCgpO1xufTtcbi8vIG90aGVyXG5leHBvcnQgY29uc3QgbGlzdENvbGxlY3Rpb25zID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkubGlzdENvbGxlY3Rpb24ocmVxLnF1ZXJ5LnBhZ2UgfHwgMSk7XG4gICAgbmV4dCgpO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lbmRwb2ludHMvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBzY2hlbWFzIGZyb20gJy4uL2RhdGEvc2NoZW1hcyc7XG5pbXBvcnQgQmFzaWNBcGkgZnJvbSAnLi9iYXNpYy1hcGknO1xuZXhwb3J0ICogZnJvbSAnLi9maWxlJztcbmV4cG9ydCAqIGZyb20gJy4vYm9va3MnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb2xsZWN0aW9ucyc7XG5leHBvcnQgY29uc3QgYXV0aG9yID0gbmV3IEJhc2ljQXBpKHNjaGVtYXMuYXV0aG9yKTtcbmV4cG9ydCBjb25zdCBjb2xsZWN0aW9uID0gbmV3IEJhc2ljQXBpKHNjaGVtYXMuY29sbGVjdGlvbik7XG5leHBvcnQgY29uc3QgYm9vayA9IG5ldyBCYXNpY0FwaShzY2hlbWFzLmJvb2spO1xuZXhwb3J0IGNvbnN0IHRhZyA9IG5ldyBCYXNpY0FwaShzY2hlbWFzLnRhZyk7XG5leHBvcnQgY29uc3QgdXNlciA9IG5ldyBCYXNpY0FwaShzY2hlbWFzLnVzZXIpO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2FwaS9pbmRleC50c1xuICoqLyIsImltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbHMvbW9kZWwnO1xuaW1wb3J0ICogYXMgc2NoZW1hcyBmcm9tICcuLi9kYXRhL3NjaGVtYXMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmNvbnN0IGZpbGVNb2RlbCA9IG5ldyBNb2RlbChzY2hlbWFzLmZpbGUpO1xuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKGZpbGVJZCwgcGFyc2VyKSB7XG4gICAgcmV0dXJuIGZpbGVNb2RlbC5maW5kT25lKGZpbGVJZCkudGhlbihmaWxlUmVzdWx0ID0+IHtcbiAgICAgICAgaWYgKHBhcnNlciAmJiB0eXBlb2YgcGFyc2VyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjb25zdCBiaW5hcnlGaWxlID0gZmlsZVJlc3VsdC5jb250ZW50LmJ1ZmZlcjtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZXIoYmluYXJ5RmlsZSkudGhlbihjb250ZW50ID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIGZpbGVSZXN1bHQsIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbGVSZXN1bHQ7XG4gICAgfSk7XG59XG4vLyBUT0RPXG5leHBvcnQgZnVuY3Rpb24gZGVsRmlsZShmaWxlSWQpIHtcbiAgICByZXR1cm4gZmlsZU1vZGVsLmZpbmRPbmUoZmlsZUlkKS50aGVuKHJlc3VsdEZpbGUgPT4ge1xuICAgICAgICByZXR1cm4gZmlsZU1vZGVsLnJlbW92ZShmaWxlSWQpO1xuICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgaWYgKGVycm9yLnR5cGUgPT09ICdOb3RGb3VuZEVycm9yJykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmlsZSByZWNvcmQgbm90IGZvdW5kLCBwcm9iYWJseSBiZWNhdXNlIGl0IGRvZXNuXFwndCBleGlzdCwgb3IgaGFzblxcJ3QgYmVlbiBjcmVhdGVkIGluIHRoZSBmaXJzdCBwbGFjZSEnXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvYXBpL2ZpbGUudHNcbiAqKi8iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgfVxuICAgIHJldHVybiB0O1xufTtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IE1vZGVsIGZyb20gJy4uL21vZGVscy9tb2RlbCc7XG5pbXBvcnQgcGFnaW5hdGUgZnJvbSAnLi4vbW9kZWxzL3BhZ2luYXRlJztcbmltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgbm90Rm91bmRFcnJvciB9IGZyb20gJy4uL2hlbHBlcnMnO1xuaW1wb3J0IHsgcmVhZEZpbGUsIGRlbEZpbGUgfSBmcm9tICcuL2ZpbGUnO1xuaW1wb3J0IHBhcnNlcnMgZnJvbSAnLi4vcGFyc2Vycyc7XG5jb25zdCBib29rTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5ib29rKTtcbmNvbnN0IHByb2dyZXNzTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5wcm9ncmVzcyk7XG5jb25zdCBhdXRob3JNb2RlbCA9IG5ldyBNb2RlbChzY2hlbWFzLmF1dGhvcik7XG4vKipcbiAqIGhlbHBlcnNcbiAqL1xuZnVuY3Rpb24gZ2V0QXV0aG9ySWQoYXV0aG9yTmFtZSkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBhdXRob3JFbnRpdHkgPSB5aWVsZCBhdXRob3JNb2RlbC5maW5kT25lKHsgbmFtZTogYXV0aG9yTmFtZSB9KTtcbiAgICAgICAgICAgIHJldHVybiBhdXRob3JFbnRpdHkuX2lkO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0geWllbGQgYXV0aG9yTW9kZWwuYWRkKHtcbiAgICAgICAgICAgICAgICBuYW1lOiBhdXRob3JOYW1lXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHQub3BzWzBdLl9pZDtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuLyoqXG4gKiBhcGlzXG4gKi9cbmV4cG9ydCBmdW5jdGlvbiBmaW5kQm9vayhpZCkge1xuICAgIHJldHVybiBib29rTW9kZWwuZmluZE9uZShpZCkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICBjb25zdCBkYXRhID0gXy5vbWl0KHJlc3VsdCwgWydmaWxlJ10pO1xuICAgICAgICBsZXQgY29udGVudFR5cGUgPSAndHh0JztcbiAgICAgICAgaWYgKCFyZXN1bHQuZmlsZSkge1xuICAgICAgICAgICAgY29udGVudFR5cGUgPSAnJztcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChyZXN1bHQuZmlsZS5taW1ldHlwZSA9PT0gJ2FwcGxpY2F0aW9uL2VwdWIremlwJykge1xuICAgICAgICAgICAgY29udGVudFR5cGUgPSAnZXB1Yic7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF8uYXNzaWduKHt9LCBkYXRhLCB7XG4gICAgICAgICAgICBjb250ZW50X3R5cGU6IGNvbnRlbnRUeXBlXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZEJvb2sobWV0YSwgZmlsZUlkKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgbWVyZ2VCb29rTWV0YSA9ICh0aXRsZSwgYXV0aG9ySWQpID0+IHtcbiAgICAgICAgICAgIHJldHVybiBfLmFzc2lnbih7fSwge1xuICAgICAgICAgICAgICAgIHRpdGxlLFxuICAgICAgICAgICAgICAgIGF1dGhvcnM6IFthdXRob3JJZF0sXG4gICAgICAgICAgICAgICAgZmlsZTogZmlsZUlkXG4gICAgICAgICAgICB9LCBtZXRhKTtcbiAgICAgICAgfTtcbiAgICAgICAgZnVuY3Rpb24gZG9TYXZlKHRpdGxlLCBhdXRob3JOYW1lKSB7XG4gICAgICAgICAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICAgICAgICAgIGNvbnN0IGF1dGhvcklkID0geWllbGQgZ2V0QXV0aG9ySWQoYXV0aG9yTmFtZSk7XG4gICAgICAgICAgICAgICAgY29uc3QgYm9va0RhdGEgPSBtZXJnZUJvb2tNZXRhKHRpdGxlLCBhdXRob3JJZCk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvb2tNb2RlbC5hZGQoYm9va0RhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZpbGVJZCkge1xuICAgICAgICAgICAgY29uc3QgZmlsZVJlc3VsdCA9IHlpZWxkIHJlYWRGaWxlKGZpbGVJZCk7XG4gICAgICAgICAgICBpZiAoZmlsZVJlc3VsdC5taW1ldHlwZSA9PT0gJ2FwcGxpY2F0aW9uL2VwdWIremlwJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSB5aWVsZCByZWFkRmlsZShmaWxlSWQsIHBhcnNlcnMuZXB1Yik7XG4gICAgICAgICAgICAgICAgY29uc3QgcGFyc2VkQ29udGVudCA9IGZpbGUuY29udGVudDtcbiAgICAgICAgICAgICAgICBjb25zdCBhdXRob3JOYW1lID0gcGFyc2VkQ29udGVudC5tZXRhLmF1dGhvcjtcbiAgICAgICAgICAgICAgICByZXR1cm4gZG9TYXZlKHBhcnNlZENvbnRlbnQubWV0YS50aXRsZSwgYXV0aG9yTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChmaWxlUmVzdWx0Lm1pbWV0eXBlID09PSAndGV4dC9wbGFpbicpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlID0geWllbGQgcmVhZEZpbGUoZmlsZUlkKTtcbiAgICAgICAgICAgICAgICBjb25zdCBmaWxlQ29udGVudEFycmF5ID0gZmlsZS5jb250ZW50LmJ1ZmZlci50b1N0cmluZygndXRmLTgnKS5zcGxpdCgnXFxuJyk7XG4gICAgICAgICAgICAgICAgY29uc3QgdGl0bGUgPSBmaWxlQ29udGVudEFycmF5WzBdO1xuICAgICAgICAgICAgICAgIGNvbnN0IGF1dGhvck5hbWUgPSBmaWxlQ29udGVudEFycmF5WzFdO1xuICAgICAgICAgICAgICAgIHJldHVybiBkb1NhdmUodGl0bGUsIGF1dGhvck5hbWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBFcnJvcignVW5zdXBwb3J0ZWQgZmlsZSB0eXBlIScpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gYm9va01vZGVsLmFkZChtZXRhKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlZGl0Qm9va01ldGEoYm9va0lkLCBtZXRhKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgeWllbGQgYm9va01vZGVsLmZpbmRPbmUoYm9va0lkLCB0cnVlKTtcbiAgICAgICAgLy8gdG9kbzog5aSa5Liq5L2c6ICF5oOF5Ya1XG4gICAgICAgIGNvbnN0IGF1dGhvcklkID0geWllbGQgZ2V0QXV0aG9ySWQobWV0YS5hdXRob3JzKTtcbiAgICAgICAgY29uc3QgYm9va01ldGEgPSBfX2Fzc2lnbih7fSwgbWV0YSwge1xuICAgICAgICAgICAgYXV0aG9yczogW2F1dGhvcklkXVxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGJvb2tNb2RlbC51cGRhdGUoYm9va0lkLCBib29rTWV0YSwge1xuICAgICAgICAgICAgdXBzZXJ0OiBmYWxzZVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQm9va0NvbnRlbnQoYm9va0lkKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgYm9va0VudGl0eSA9IHlpZWxkIGJvb2tNb2RlbC5maW5kT25lKGJvb2tJZCk7XG4gICAgICAgIGNvbnN0IGZpbGVJZCA9IGJvb2tFbnRpdHkuZmlsZS5faWQ7XG4gICAgICAgIGxldCBib29rQ29udGVudDtcbiAgICAgICAgaWYgKCFmaWxlSWQpIHtcbiAgICAgICAgICAgIC8vIOS7jui/mei+ueaKpeWHuueahCA0MDQg5ZKM5LiL6Z2i55qE5o+Q56S65Lya5LiN5LiA5qC3XG4gICAgICAgICAgICAvLyDkuIvpnaLmiqXnmoQgNDA0IOWPr+iDveaYr+aWh+S7tuiiq+WIoOS6hlxuICAgICAgICAgICAgLy8g6L+Z6L655oqlIDQwNCDliJnmmK/kuIDlvIDlp4vmlbDmja7lupPph4zlsLHmsqHlrZggZmlsZVxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5vdEZvdW5kRXJyb3IoJ2Jvb2snKSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGJvb2tFbnRpdHkuZmlsZS5taW1ldHlwZSA9PT0gJ2FwcGxpY2F0aW9uL2VwdWIremlwJykge1xuICAgICAgICAgICAgY29uc3QgZmlsZVJlc3VsdCA9IHlpZWxkIHJlYWRGaWxlKGZpbGVJZCwgcGFyc2Vycy5lcHViKTtcbiAgICAgICAgICAgIGJvb2tDb250ZW50ID0gXy5vbWl0KGZpbGVSZXN1bHQuY29udGVudCwgWydtZXRhJ10pO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKGJvb2tFbnRpdHkuZmlsZS5taW1ldHlwZSA9PT0gJ3RleHQvcGxhaW4nKSB7XG4gICAgICAgICAgICBjb25zdCBmaWxlUmVzdWx0ID0geWllbGQgcmVhZEZpbGUoZmlsZUlkLCBwYXJzZXJzLnR4dENvbnRlbnQpO1xuICAgICAgICAgICAgYm9va0NvbnRlbnQgPSBmaWxlUmVzdWx0LmNvbnRlbnQ7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdVbnN1cHBvcnRlZCBmaWxlIHR5cGUhJykpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfLmFzc2lnbih7fSwgYm9va0NvbnRlbnQsIHsgX2lkOiBib29rSWQsIGNvbnRlbnRfaWQ6IGZpbGVJZCB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsaXN0Qm9va3MocGFnZSkge1xuICAgIHJldHVybiBib29rTW9kZWwubGlzdCh7XG4gICAgICAgIHBhZ2UsXG4gICAgICAgIGRpc2FibGVQYWdpbmF0aW9uOiBfLmlzTmlsKHBhZ2UpLFxuICAgICAgICBtYXBwaW5nOiBlbnRpdHkgPT4gXy5vbWl0KGVudGl0eSwgWydjb250ZW50JywgJ2ZpbGUnXSlcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBsaXN0U2hlbGZCb29rcyh1c2VySWQsIHBhZ2UpIHtcbiAgICByZXR1cm4gcHJvZ3Jlc3NNb2RlbC5saXN0UmF3KHsgcXVlcnk6IHsgdXNlcl9pZDogdXNlcklkIH0gfSkudGhlbihyZXN1bHRzID0+IHtcbiAgICAgICAgaWYgKHJlc3VsdHMubGVuZ3RoID09PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZVxuICAgICAgICAgICAgLmFsbChyZXN1bHRzXG4gICAgICAgICAgICAuc29ydCh1dGlscy5zb3J0QnlEYXRlKCkpXG4gICAgICAgICAgICAubWFwKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gYm9va01vZGVsLmZpbmRPbmUocmVzdWx0LmJvb2tfaWQsIHRydWUpLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzO1xuICAgICAgICAgICAgfSwgZXJyb3IgPT4ge1xuICAgICAgICAgICAgICAgIC8vIOWmguaenOmUmeivr+S4jeaYryA0MDQg5Lmf6L6T5Ye656m655qEIGVudGl0eVxuICAgICAgICAgICAgICAgIHJldHVybiBib29rTW9kZWwub3V0cHV0RW1wdHkocmVzdWx0LmJvb2tfaWQpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pKVxuICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgIHJldHVybiBwYWdpbmF0ZShyZXMubWFwKGVudGl0eSA9PiBfLm9taXQoZW50aXR5LCBbJ2NvbnRlbnQnXSkpLCB7XG4gICAgICAgICAgICAgICAgcGFnZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlbW92ZUJvb2soYm9va0lkKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgY29uc3QgYm9vayA9IHlpZWxkIGJvb2tNb2RlbC5maW5kT25lKGJvb2tJZCwgdHJ1ZSk7XG4gICAgICAgIGNvbnN0IGZpbGVJZCA9IGJvb2suZmlsZTtcbiAgICAgICAgeWllbGQgYm9va01vZGVsLnJlbW92ZShib29rSWQpO1xuICAgICAgICByZXR1cm4gZGVsRmlsZShmaWxlSWQpO1xuICAgIH0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2FwaS9ib29rcy50c1xuICoqLyIsImltcG9ydCBlcHViIGZyb20gJ3NpbXBsZS1lcHViLXBhcnNlcic7XG5pbXBvcnQgdHh0Q29udGVudCBmcm9tICcuL3R4dC1jb250ZW50JztcbmV4cG9ydCBkZWZhdWx0IHsgZXB1YiwgdHh0Q29udGVudCB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3BhcnNlcnMvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJzaW1wbGUtZXB1Yi1wYXJzZXJcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInNpbXBsZS1lcHViLXBhcnNlclwiXG4gKiogbW9kdWxlIGlkID0gNzRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsInZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdHh0Q29udGVudCh0YXJnZXQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBuYXYgPSBbe1xuICAgICAgICAgICAgICAgIHJlZjogJ3BhcnQwMScsXG4gICAgICAgICAgICAgICAgbGFiZWw6ICfnrKzkuIDnq6DoioInLFxuICAgICAgICAgICAgICAgIGluZGV4OiAwXG4gICAgICAgICAgICB9XTtcbiAgICAgICAgbGV0IGNvbnRlbnQ7XG4gICAgICAgIGlmICh0eXBlb2YgdGFyZ2V0ID09PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgY29uc3QgYnVmZmVyID0gbmV3IEJ1ZmZlcih0YXJnZXQsICdiaW5hcnknKTtcbiAgICAgICAgICAgIGNvbnRlbnQgPSBidWZmZXIudG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIGlmIChCdWZmZXIuaXNCdWZmZXIodGFyZ2V0KSkge1xuICAgICAgICAgICAgY29udGVudCA9IHRhcmdldC50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdPbmx5IHN0cmluZyBvciBidWZmZXIgaXMgc3VwcG9ydGVkIScpO1xuICAgICAgICB9XG4gICAgICAgIGNvbnN0IGZsZXNoID0gW3tcbiAgICAgICAgICAgICAgICBzcmM6ICdwYXJ0MDEnLFxuICAgICAgICAgICAgICAgIG1hcmtkb3duOiBjb250ZW50XG4gICAgICAgICAgICB9XTtcbiAgICAgICAgcmV0dXJuIHsgbmF2LCBmbGVzaCB9O1xuICAgIH0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3BhcnNlcnMvdHh0LWNvbnRlbnQudHNcbiAqKi8iLCJpbXBvcnQgTW9kZWwgZnJvbSAnLi4vbW9kZWxzL21vZGVsJztcbmltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBodW1wcyBmcm9tICdodW1wcyc7XG5jb25zdCBwcm9ncmVzc01vZGVsID0gbmV3IE1vZGVsKHNjaGVtYXMucHJvZ3Jlc3MpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJlYWRpbmdQcm9ncmVzcyh1c2VySWQsIGJvb2tJZCkge1xuICAgIGNvbnN0IHF1ZXJ5ID0gaHVtcHMuZGVjYW1lbGl6ZUtleXMoeyB1c2VySWQsIGJvb2tJZCB9KTtcbiAgICByZXR1cm4gcHJvZ3Jlc3NNb2RlbC5saXN0KHsgZGlzYWJsZVBhZ2luYXRpb246IHRydWUsIHJhdzogdHJ1ZSwgcXVlcnkgfSkudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb2dyZXNzTW9kZWwub3V0cHV0RW1wdHkoe1xuICAgICAgICAgICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgICAgICAgICBib29rX2lkOiBib29rSWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNbMF07XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0UmVhZGluZ1Byb2dyZXNzKHVzZXJJZCwgYm9va0lkLCBkYXRhKSB7XG4gICAgY29uc3QgcXVlcnkgPSBodW1wcy5kZWNhbWVsaXplS2V5cyh7IHVzZXJJZCwgYm9va0lkIH0pO1xuICAgIHJldHVybiBwcm9ncmVzc01vZGVsLnVwZGF0ZShxdWVyeSwgZGF0YSwge1xuICAgICAgICB1cHNlcnQ6IHRydWVcbiAgICB9KTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9hcGkvdXNlci50c1xuICoqLyIsImltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbHMvbW9kZWwnO1xuaW1wb3J0ICogYXMgc2NoZW1hcyBmcm9tICcuLi9kYXRhL3NjaGVtYXMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFJPTEVTIH0gZnJvbSAnLi4vLi4vaXNvbW9ycGhpYy9jb25zdGFudHMvY29tbW9uJztcbmNvbnN0IHVzZXJNb2RlbCA9IG5ldyBNb2RlbChzY2hlbWFzLnVzZXIpO1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRVc2VyKGlkKSB7XG4gICAgcmV0dXJuIHVzZXJNb2RlbC5maW5kT25lKGlkKS50aGVuKGVudGl0eSA9PiB7XG4gICAgICAgIHJldHVybiBfLm9taXQoZW50aXR5LCBbJ3Bhc3N3b3JkJ10pO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZFVzZXIodXNlckluZm8pIHtcbiAgICByZXR1cm4gdXNlck1vZGVsLmFkZChfLmFzc2lnbih7fSwgdXNlckluZm8sIHtcbiAgICAgICAgcm9sZTogUk9MRVMuVVNFUlxuICAgIH0pKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9hcGkvdXNlcnMudHNcbiAqKi8iLCJpbXBvcnQgTW9kZWwgZnJvbSAnLi4vbW9kZWxzL21vZGVsJztcbmltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5jb25zdCBjb2xsZWN0aW9uTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5jb2xsZWN0aW9uKTtcbmV4cG9ydCBmdW5jdGlvbiBsaXN0Q29sbGVjdGlvbihwYWdlKSB7XG4gICAgcmV0dXJuIGNvbGxlY3Rpb25Nb2RlbC5saXN0KHtcbiAgICAgICAgcGFnZSxcbiAgICAgICAgZGlzYWJsZVBhZ2luYXRpb246IF8uaXNOaWwocGFnZSksXG4gICAgICAgIG1hcHBpbmc6IGVudGl0eSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIGVudGl0eSwge1xuICAgICAgICAgICAgICAgIGl0ZW1zOiBlbnRpdHlbJ2l0ZW1zJ10ubWFwKGl0ZW0gPT4gXy5vbWl0KGl0ZW0sICdjb250ZW50JykpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2FwaS9jb2xsZWN0aW9ucy50c1xuICoqLyIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgTW9kZWwgZnJvbSAnLi4vbW9kZWxzL21vZGVsJztcbmNsYXNzIEJhc2ljQXBpIHtcbiAgICBjb25zdHJ1Y3RvcihzY2hlbWEpIHtcbiAgICAgICAgdGhpcy5fc2NoZW1hID0gc2NoZW1hO1xuICAgICAgICB0aGlzLl9tb2RlbCA9IG5ldyBNb2RlbChzY2hlbWEpO1xuICAgIH1cbiAgICBmaW5kT25lKGlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tb2RlbC5maW5kT25lKGlkKTtcbiAgICB9XG4gICAgbGlzdChwYWdlLCBrZXl3b3JkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tb2RlbC5saXN0KHtcbiAgICAgICAgICAgIHBhZ2UsXG4gICAgICAgICAgICBkaXNhYmxlUGFnaW5hdGlvbjogXy5pc05pbChwYWdlKSxcbiAgICAgICAgICAgIC8vIFRPRE9cbiAgICAgICAgICAgIGZpbHRlcjogZW50aXR5ID0+IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFkZChkYXRhKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tb2RlbC5hZGQoZGF0YSk7XG4gICAgfVxuICAgIHVwZGF0ZShpZCwgZGF0YSkge1xuICAgICAgICAvLyB0b2RvXG4gICAgICAgIC8vIOaXoOazleaPkOWJjeefpemBk+aYr+WQpuS4uiB1cHNlcnTvvIzmiYDku6Xml6Dms5XpooTlhYjlhrPlrprmmK/lkKbpqozor4EgZmllbGRzXG4gICAgICAgIC8vIOWPr+iDveS8mumAoOaIkCB1cHNlcnQg55qE5pWw5o2uIGZpZWxkcyDkuI3lhajnmoTpl67pophcbiAgICAgICAgcmV0dXJuIHRoaXMuX21vZGVsLnVwZGF0ZShpZCwgZGF0YSk7XG4gICAgfVxuICAgIHJlbW92ZShpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbW9kZWwucmVtb3ZlKGlkKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBCYXNpY0FwaTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9hcGkvYmFzaWMtYXBpLnRzXG4gKiovIiwiY29uc3QgbWFrZUJhc2ljRW5kcG9pbnQgPSAoYXBpRm5zKSA9PiB7XG4gICAgY29uc3QgZmluZE9uZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICByZXEuYXBpUmVzdWx0cyA9IGFwaUZucy5maW5kT25lKHJlcS5wYXJhbXMuaWQpO1xuICAgICAgICBuZXh0KCk7XG4gICAgfTtcbiAgICBjb25zdCBsaXN0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpRm5zLmxpc3QocmVxLnF1ZXJ5LnBhZ2UgfHwgMSk7XG4gICAgICAgIG5leHQoKTtcbiAgICB9O1xuICAgIGNvbnN0IGFkZCA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICByZXEuYXBpUmVzdWx0cyA9IGFwaUZucy5hZGQocmVxLmJvZHkpO1xuICAgICAgICBuZXh0KCk7XG4gICAgfTtcbiAgICBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgcmVxLmFwaVJlc3VsdHMgPSBhcGlGbnMudXBkYXRlKHJlcS5wYXJhbXMuaWQsIHJlcS5ib2R5KTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH07XG4gICAgY29uc3QgcmVtb3ZlID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpRm5zLnJlbW92ZShyZXEucGFyYW1zLmlkKTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH07XG4gICAgcmV0dXJuIHsgZmluZE9uZSwgbGlzdCwgYWRkLCB1cGRhdGUsIHJlbW92ZSB9O1xufTtcbmV4cG9ydCBkZWZhdWx0IG1ha2VCYXNpY0VuZHBvaW50O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2VuZHBvaW50cy9tYWtlLWJhc2ljLWVuZHBvaW50LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibXVsdGVyXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJtdWx0ZXJcIlxuICoqIG1vZHVsZSBpZCA9IDgxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgb3B0aW9ucyBmcm9tICcuLi9vcHRpb25zJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgY3JlYXRlUm91dGVzIGZyb20gJy4uLy4uL2lzb21vcnBoaWMvcm91dGVzL2NyZWF0ZVJvdXRlcyc7XG5pbXBvcnQgcmVuZGVyLCB7IHJlbmRlcjUwMCB9IGZyb20gJy4uL3JlbmRlcic7XG5jb25zdCBQUk9EX0VSUk9SX01TRyA9ICfnqI3lronli7/ouoHvvIzlt6XnqIvluIjmraPlnKjop6PlhrPpl67popggLi4uJztcbmNvbnN0IGlzUm9vdCA9IHVybCA9PiB7XG4gICAgbGV0IHVybFBhcnRzID0gdXJsLnNwbGl0KCc/JylbMF0uc3BsaXQoJy8nKTtcbiAgICBpZiAodXJsUGFydHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKF8ubGFzdCh1cmxQYXJ0cykgIT09ICcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuZnVuY3Rpb24gcGFnZXMocmVxLCByZXMpIHtcbiAgICAvLyDmnI3liqHnq6/ot6/nlLHlhbPpl63vvIjku4XpmZDlvIDlj5HmqKHlvI/vvIlcbiAgICBpZiAob3B0aW9ucy5yb3V0ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgaWYgKCFpc1Jvb3QocmVxLnVybCkpIHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKGBcbiAgICAgICAgPGRpdiBzdHlsZT1cIm1hcmdpbjogNjBweCBhdXRvOyB3aWR0aDogNjAwcHg7IHBhZGRpbmc6IDVweCAyMHB4OyBib3JkZXI6IDFweCBzb2xpZCAjMjIyO1wiPlxuICAgICAgICAgIDxoMSBzdHlsZT1cImZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXNpemU6IDIycHg7IG1hcmdpbjogMTBweCAwO1wiPjQwNCBOb3QgRm91bmQ8L2gxPlxuICAgICAgICAgIDxwIHN0eWxlPVwibWFyZ2luOiAxMHB4IDA7XCI+RGV2IG1vZGUgd2l0aCBzZXJ2ZXIgcm91dGluZyBkaXNhYmxlZDwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICBgKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZW5kZXIoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICByZXMuc2VuZChyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBpc1Byb2QgPSBvcHRpb25zLnByb2R1Y3Rpb247XG4gICAgdHJ5IHtcbiAgICAgICAgcmVuZGVyKHtcbiAgICAgICAgICAgIHJlcVVybDogcmVxLnVybCxcbiAgICAgICAgICAgIHJvdXRlczogY3JlYXRlUm91dGVzKHsgcmVxdWVzdDogcmVxLCByZXNwb25zZTogcmVzIH0pLFxuICAgICAgICAgICAgaXNQcm9kLFxuICAgICAgICAgICAgZmV0Y2hEYXRhOiBvcHRpb25zLnJlbmRlcixcbiAgICAgICAgICAgIGlzSG90OiBvcHRpb25zLmhvdCxcbiAgICAgICAgICAgIHVzZXJTZXNzaW9uOiByZXEuY29udGV4dC51c2VyXG4gICAgICAgIH0pLnRoZW4oKHsgaHRtbCwgcmVkaXJlY3RMb2NhdGlvbiwgc3RhdHVzQ29kZSB9KSA9PiB7XG4gICAgICAgICAgICBpZiAocmVkaXJlY3RMb2NhdGlvbikge1xuICAgICAgICAgICAgICAgIHJlcy5yZWRpcmVjdCgzMDIsIHJlZGlyZWN0TG9jYXRpb24ucGF0aG5hbWUgKyByZWRpcmVjdExvY2F0aW9uLnNlYXJjaCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpLnNlbmQoaHRtbCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc3QgZXJyb3JNc2cgPSBpc1Byb2QgPyBQUk9EX0VSUk9SX01TRyA6IGVycm9yLm1lc3NhZ2U7XG4gICAgICAgIGNvbnN0IGh0bWxTdHJpbmcgPSByZW5kZXI1MDAoZXJyb3JNc2csIGlzUHJvZCk7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGh0bWxTdHJpbmcpO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IHBhZ2VzO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JvdXRlcy9wYWdlcy50c3hcbiAqKi8iLCJpbXBvcnQgYXJndiBmcm9tICcuL2hlbHBlcnMvcGFyc2VkLWFyZ3YnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG4vKipcbiAqIFNlcnZlciDmlK/mjIHnmoTpgInpoblcbiAqIC0taG90IOeDremHjei9vVxuICogLS1wcm9kdWN0aW9uIOeUn+S6p+eOr+Wig1xuICogLS1ub1JlbmRlciDmnI3liqHnq6/muLLmn5NcbiAqIC0tbm9Sb3V0ZSDmnI3liqHnq6/ot6/nlLFcbiAqL1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgYXBwRW52ID0gYXBwLmdldCgnZW52Jyk7XG5sZXQgcmVuZGVyID0gIUJvb2xlYW4oYXJndlsnbm9SZW5kZXInXSk7XG5jb25zdCBob3QgPSBCb29sZWFuKGFyZ3ZbJ2hvdCddKTtcbmNvbnN0IHJvdXRlID0gIUJvb2xlYW4oYXJndlsnbm9Sb3V0ZSddKTtcbmlmIChyb3V0ZSA9PT0gZmFsc2UpIHtcbiAgICByZW5kZXIgPSBmYWxzZTtcbn1cbmxldCBwcm9kdWN0aW9uID0gQm9vbGVhbihhcmd2Wydwcm9kdWN0aW9uJ10pO1xuaWYgKGFwcEVudiA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgcHJvZHVjdGlvbiA9IHRydWU7XG59XG5jb25zdCBvcHRpb25zID0ge1xuICAgIGhvdCxcbiAgICByZW5kZXIsXG4gICAgcm91dGUsXG4gICAgcHJvZHVjdGlvblxufTtcbmV4cG9ydCBkZWZhdWx0IG9wdGlvbnM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvb3B0aW9ucy50c1xuICoqLyIsImltcG9ydCBtaW5pbWlzdCBmcm9tICdtaW5pbWlzdCc7XG5jb25zdCBhcmd2ID0gbWluaW1pc3QocHJvY2Vzcy5hcmd2LnNsaWNlKDIpKTtcbmV4cG9ydCBkZWZhdWx0IGFyZ3Y7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvaGVscGVycy9wYXJzZWQtYXJndi50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm1pbmltaXN0XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJtaW5pbWlzdFwiXG4gKiogbW9kdWxlIGlkID0gODVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNYXN0ZXIgZnJvbSAnLi4vY29udGFpbmVycy9NYXN0ZXInO1xuaW1wb3J0IEFwcCBmcm9tICcuLi9jb250YWluZXJzL0FwcCc7XG5pbXBvcnQgQ29uc29sZSBmcm9tICcuLi9jb250YWluZXJzL0NvbnNvbGUnO1xuaW1wb3J0IHsgUm91dGUsIEluZGV4UmVkaXJlY3QsIEluZGV4Um91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IGFwaSBmcm9tICcuLi9zZXJ2aWNlcy9hcGknO1xuaW1wb3J0IHsgUk9MRVMgfSBmcm9tICcuLi9jb25zdGFudHMvY29tbW9uJztcbmNvbnN0IGNyZWF0ZVJvdXRlcyA9IChjb250ZXh0ID0ge30pID0+IHtcbiAgICBjb25zdCB7IHJlcXVlc3QsIHJlc3BvbnNlIH0gPSBjb250ZXh0O1xuICAgIGNvbnN0IGhhbmRsZUNvbnNvbGVFbnRlciA9IChuZXh0U3RhdGUsIHJlcGxhY2UsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChyZXF1ZXN0KSB7XG4gICAgICAgICAgICAvLyDmnI3liqHnq6/moKHpqozmlrnlvI9cbiAgICAgICAgICAgIGNvbnN0IHsgY29udGV4dDogeyB1c2VyOiB7IHJvbGUgfSB9IH0gPSByZXF1ZXN0O1xuICAgICAgICAgICAgaWYgKHJvbGUgIT09IFJPTEVTLkFETUlOKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UucmVkaXJlY3QoJy8nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyDlrqLmiLfnq6/moKHpqozmlrnlvI9cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXBpLmF1dGgoKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMuanNvbi5yb2xlICE9PSBST0xFUy5BRE1JTikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZSgnLycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBhbGVydCgn5pyN5Yqh5Zmo5byC5bi477yM6K+356iN5ZCO5YaN6K+V77yBJyk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBwYXRoOiBcIi9cIiwgY29tcG9uZW50OiBNYXN0ZXIgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcInZpZXdlci9ib29rLzppZFwiIH0sIHJlcXVpcmUoJy4vVmlld2VyJykpKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcInRlc3RcIiB9LCByZXF1aXJlKCcuL1Rlc3RQbGFjZScpKSksXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgY29tcG9uZW50OiBBcHAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5kZXhSb3V0ZSwgX19hc3NpZ24oe30sIHJlcXVpcmUoJy4vQXBwSG9tZScpKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwiYnJvd3NlXCIgfSwgcmVxdWlyZSgnLi9Ccm93c2UnKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImJvb2svOmlkXCIgfSwgcmVxdWlyZSgnLi9Cb29rRGV0YWlsJykpKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJjb2xsZWN0aW9uc1wiIH0sIHJlcXVpcmUoJy4vQ29sbGVjdGlvbnMnKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImNvbGxlY3Rpb25zLzppZFwiIH0sIHJlcXVpcmUoJy4vQ29sbGVjdGlvbkRldGFpbCcpKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwic2lnbmluXCIgfSwgcmVxdWlyZSgnLi9TaWduaW4nKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcInNpZ251cFwiIH0sIHJlcXVpcmUoJy4vU2lnbnVwJykpKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgcGF0aDogXCJ1c2VyXCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEluZGV4UmVkaXJlY3QsIHsgdG86IFwiL3VzZXIvcHJvZmlsZVwiIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJzaGVsZlwiIH0sIHJlcXVpcmUoJy4vU2hlbGYnKSkpLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJwcmVmZXJlbmNlXCIgfSwgcmVxdWlyZSgnLi9QcmVmZXJlbmNlJykpKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwicHJvZmlsZVwiIH0sIHJlcXVpcmUoJy4vUHJvZmlsZScpKSkpKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBvbkVudGVyOiBoYW5kbGVDb25zb2xlRW50ZXIsIHBhdGg6IFwiY29uc29sZVwiLCBjb21wb25lbnQ6IENvbnNvbGUgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5kZXhSZWRpcmVjdCwgeyB0bzogXCIvY29uc29sZS9ib29rc1wiIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImJvb2tzXCIgfSwgcmVxdWlyZSgnLi9NYW5hZ2VCb29rcycpKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwidXNlcnNcIiB9LCByZXF1aXJlKCcuL01hbmFnZVVzZXJzJykpKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJib29rcy9uZXdcIiB9LCByZXF1aXJlKCcuL0FkZEJvb2snKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImNvbGxlY3Rpb25zL25ld1wiIH0sIHJlcXVpcmUoJy4vQWRkQ29sbGVjdGlvbicpKSkpLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwiKlwiIH0sIHJlcXVpcmUoJy4vTm9NYXRjaCcpKSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVSb3V0ZXM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9jcmVhdGVSb3V0ZXMudHN4XG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3RcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlYWN0XCJcbiAqKiBtb2R1bGUgaWQgPSA4N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBzZW5kTm90aWZpY2F0aW9uLCBoaWRlTm90aWZpY2F0aW9uLCBjbG9zZUNvbmZpcm1Nb2RhbCwgdXNlckF1dGgsIGNsb3NlTW9kYWwgfSBmcm9tICcuLi9zdG9yZS9hY3Rpb25zJztcbmltcG9ydCB7IEFsZXJ0cyB9IGZyb20gJy4uL2VsZW1lbnRzL0FsZXJ0JztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBDb25maXJtTW9kYWwgfSBmcm9tICcuLi9lbGVtZW50cy9Nb2RhbCc7XG5pbXBvcnQgeyBNb2RhbFBsdXMgfSBmcm9tICcuLi9lbGVtZW50cy9Nb2RhbCc7XG5jbGFzcyBNYXN0ZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHN0YXRpYyBmZXRjaERhdGEoeyBzdG9yZSwgdXNlclNlc3Npb24gfSkge1xuICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2godXNlckF1dGgodXNlclNlc3Npb24pKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICBjb25zdCBoYXNOZXdFcnJvck1zZyA9IHRoaXMucHJvcHMuZXJyb3JNZXNzYWdlLmxlbmd0aCAhPT0gbmV4dFByb3BzLmVycm9yTWVzc2FnZS5sZW5ndGg7XG4gICAgICAgIGNvbnN0IHJvdXRlckNoYW5nZWQgPSBuZXh0UHJvcHMucm91dGluZy5sb2NhdGlvbkJlZm9yZVRyYW5zaXRpb25zLnBhdGhuYW1lICE9PSB0aGlzLnByb3BzLnJvdXRpbmcubG9jYXRpb25CZWZvcmVUcmFuc2l0aW9ucy5wYXRobmFtZTtcbiAgICAgICAgaWYgKGhhc05ld0Vycm9yTXNnKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLnNlbmROb3RpZmljYXRpb24oXy5sYXN0KG5leHRQcm9wcy5lcnJvck1lc3NhZ2UpLnRvU3RyaW5nKCksICdlcnJvcicsIDApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyb3V0ZXJDaGFuZ2VkKSB7XG4gICAgICAgICAgICAvLyDov5Tlm57pobbpg6hcbiAgICAgICAgICAgIHdpbmRvdy5kb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA9IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIHRoaXMucHJvcHMudXNlckF1dGgoKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNvbmZpcm1Nb2RhbCwgY2xvc2VDb25maXJtTW9kYWwsIG1vZGFsLCBjbG9zZU1vZGFsIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiYXBwLXJvb3RcIiB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDb25maXJtTW9kYWwsIHsgb3BlbjogY29uZmlybU1vZGFsLm9wZW4sIHRpdGxlOiBjb25maXJtTW9kYWwudGl0bGUsIG9uQ29uZmlybTogY29uZmlybU1vZGFsLm9uQ29uZmlybSwgb25SZXF1ZXN0Q2xvc2U6IGNsb3NlQ29uZmlybU1vZGFsLCB3aWR0aDogNTAwIH0sIGNvbmZpcm1Nb2RhbC5jb250ZW50KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWxQbHVzLCB7IG9wZW46IG1vZGFsLm9wZW4sIHdpZHRoOiA1MDAsIG9uUmVxdWVzdENsb3NlOiBjbG9zZU1vZGFsLCB0aXRsZTogbW9kYWwudGl0bGUgfSwgbW9kYWwuY29udGVudCksXG4gICAgICAgICAgICB0aGlzLnByb3BzLm5vdGlmaWNhdGlvbnMuZmlsdGVyKG5vdGkgPT4gbm90aS52aXNpYmxlKS5sZW5ndGggPiAwICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KEFsZXJ0cywgeyBvblJlcXVlc3RDbG9zZTogdGhpcy5wcm9wcy5oaWRlTm90aWZpY2F0aW9uLCBtZXNzYWdlczogdGhpcy5wcm9wcy5ub3RpZmljYXRpb25zLm1hcChub3RpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG5vdGkubWVzc2FnZSB8fCAn5Y+R55Sf6ZSZ6K+v77yBJyxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogbm90aS50eXBlLFxuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlOiBub3RpLnZpc2libGUsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBub3RpLmlkXG4gICAgICAgICAgICAgICAgfSkpIH0pKSxcbiAgICAgICAgICAgIHRoaXMucHJvcHMuY2hpbGRyZW4pKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KHN0YXRlID0+ICh7XG4gICAgbm90aWZpY2F0aW9uczogc3RhdGUuY29tcG9uZW50cy5ub3RpZmljYXRpb25zLFxuICAgIGVycm9yTWVzc2FnZTogc3RhdGUuZXJyb3JNZXNzYWdlLFxuICAgIGNvbmZpcm1Nb2RhbDogc3RhdGUuY29tcG9uZW50cy5jb25maXJtTW9kYWwsXG4gICAgbW9kYWw6IHN0YXRlLmNvbXBvbmVudHMubW9kYWwsXG4gICAgcm91dGluZzogc3RhdGUucm91dGluZyxcbiAgICBzZXNzaW9uOiBzdGF0ZS5zZXNzaW9uLFxufSksIHsgc2VuZE5vdGlmaWNhdGlvbiwgaGlkZU5vdGlmaWNhdGlvbiwgY2xvc2VDb25maXJtTW9kYWwsIHVzZXJBdXRoLCBjbG9zZU1vZGFsIH0pKE1hc3Rlcik7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvTWFzdGVyLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXJlZHV4XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWFjdC1yZWR1eFwiXG4gKiogbW9kdWxlIGlkID0gODlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB7IGFjdGlvbnMgYXMgZm9ybSB9IGZyb20gJ2JldHRlci1yZWR1eC1mb3JtJztcbmV4cG9ydCAqIGZyb20gJy4vYXBpJztcbmV4cG9ydCAqIGZyb20gJy4vY29tbW9uJztcbmV4cG9ydCAqIGZyb20gJy4vdGVzdCc7XG5leHBvcnQgKiBmcm9tICcuL3ZpZXdlcic7XG4vLyBmb3JtXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUZvcm0gPSBmb3JtLmluaXRpYWxpemU7XG5leHBvcnQgY29uc3QgcmVzZXRGb3JtID0gZm9ybS5yZXNldDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9pbmRleC50c1xuICoqLyIsImltcG9ydCB1dGlscyBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgc2NoZW1hcyBmcm9tICcuLi8uLi9zZXJ2aWNlcy9zY2hlbWFzJztcbmltcG9ydCB7IERPVUJBTl9BUElfUk9PVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9jb21tb24nO1xuaW1wb3J0IHsgY3JlYXRlQWN0aW9uRW50aXR5LCBhY3Rpb24gfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCAqIGFzIEFjdGlvblR5cGVzIGZyb20gJy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5leHBvcnQgY29uc3QgcmVtb3ZlRW50aXR5ID0gKG5hbWUsIGlkKSA9PiAoeyB0eXBlOiBBY3Rpb25UeXBlcy5SRU1PVkVfRU5USVRZLCBuYW1lLCBpZCB9KTtcbmV4cG9ydCBjb25zdCBib29rID0gY3JlYXRlQWN0aW9uRW50aXR5KEFjdGlvblR5cGVzLkJPT0spO1xuZXhwb3J0IGNvbnN0IGxvYWRCb29rID0gKGlkKSA9PiBhY3Rpb24oQWN0aW9uVHlwZXMuTE9BRF9CT09LLCB7IGlkIH0pO1xuZXhwb3J0IGNvbnN0IGJvb2tDb250ZW50ID0gY3JlYXRlQWN0aW9uRW50aXR5KEFjdGlvblR5cGVzLkJPT0tfQ09OVEVOVCk7XG5leHBvcnQgY29uc3QgbG9hZEJvb2tDb250ZW50ID0gKGlkKSA9PiBhY3Rpb24oQWN0aW9uVHlwZXMuTE9BRF9CT09LX0NPTlRFTlQsIHsgaWQgfSk7XG5leHBvcnQgY29uc3QgYm9va3MgPSBjcmVhdGVBY3Rpb25FbnRpdHkoQWN0aW9uVHlwZXMuQk9PS1MpO1xuZXhwb3J0IGNvbnN0IGxvYWRCb29rcyA9IChvcHRpb25zLCBrZXkpID0+IGFjdGlvbihBY3Rpb25UeXBlcy5MT0FEX0JPT0tTLCB7IG9wdGlvbnMsIGtleSB9KTtcbmV4cG9ydCBjb25zdCB1c2VycyA9IGNyZWF0ZUFjdGlvbkVudGl0eShBY3Rpb25UeXBlcy5VU0VSUyk7XG5leHBvcnQgY29uc3QgbG9hZFVzZXJzID0gKG9wdGlvbnMpID0+IGFjdGlvbihBY3Rpb25UeXBlcy5MT0FEX1VTRVJTLCB7IG9wdGlvbnMgfSk7XG5leHBvcnQgY29uc3QgbG9nb3V0ID0gY3JlYXRlQWN0aW9uRW50aXR5KEFjdGlvblR5cGVzLkxPR09VVCk7XG5leHBvcnQgY29uc3QgdXNlckxvZ291dCA9ICgpID0+IGFjdGlvbihBY3Rpb25UeXBlcy5VU0VSX0xPR09VVCk7XG5leHBvcnQgY29uc3QgcHJvZ3Jlc3MgPSBjcmVhdGVBY3Rpb25FbnRpdHkoQWN0aW9uVHlwZXMuQk9PS19QUk9HUkVTUyk7XG5leHBvcnQgY29uc3QgbG9hZEJvb2tQcm9ncmVzcyA9IChpZCkgPT4gYWN0aW9uKEFjdGlvblR5cGVzLkxPQURfQk9PS19QUk9HUkVTUywgeyBpZCB9KTtcbi8vIGRlZmluZSBsb2FkIGFjdGlvbnMgaGFuZGxlZCBpbiBzYWdhc1xuZXhwb3J0IGNvbnN0IExPQURfQUNUSU9OUyA9IFtBY3Rpb25UeXBlcy5MT0FEX0JPT0ssIEFjdGlvblR5cGVzLkxPQURfQk9PS19DT05URU5ULCBBY3Rpb25UeXBlcy5MT0FEX0JPT0tTLCBBY3Rpb25UeXBlcy5MT0FEX1VTRVJTXTtcbi8qKlxuICogbGVnYWN5IGNhbGwgYXBpIGFjdGlvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZldGNoQXV0aG9ycyhvcHRpb25zKSB7XG4gICAgY29uc3QgQ0FMTF9BUEkgPSB7XG4gICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuQVVUSE9SUy5SRVFVRVNULCBBY3Rpb25UeXBlcy5BVVRIT1JTLlNVQ0NFU1MsIEFjdGlvblR5cGVzLkFVVEhPUlMuRkFJTFVSRV0sXG4gICAgICAgIGVuZHBvaW50OiBgYXV0aG9ycz8ke3V0aWxzLnBhcnNlVXJsZW5jb2RlZChvcHRpb25zKX1gLFxuICAgICAgICBzY2hlbWE6IHNjaGVtYXMuQVVUSE9SX0FSUkFZLFxuICAgICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgICAgICBuYW1lOiAnYXV0aG9ycycsXG4gICAgICAgICAgICBxOiBvcHRpb25zLnFcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHsgQ0FMTF9BUEkgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaENvbGxlY3Rpb25zKGZsb3dUeXBlID0gJ25ld2VzdCcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBmbG93VHlwZSxcbiAgICAgICAgQ0FMTF9BUEk6IHtcbiAgICAgICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuQ09MTEVDVElPTlMuUkVRVUVTVCwgQWN0aW9uVHlwZXMuQ09MTEVDVElPTlMuU1VDQ0VTUywgQWN0aW9uVHlwZXMuQ09MTEVDVElPTlMuRkFJTFVSRV0sXG4gICAgICAgICAgICBlbmRwb2ludDogYGNvbGxlY3Rpb25zYCxcbiAgICAgICAgICAgIHNjaGVtYTogc2NoZW1hcy5DT0xMRUNUSU9OX0FSUkFZXG4gICAgICAgIH1cbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoQ29sbGVjdGlvbihjb2xsZWN0aW9uSWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjb2xsZWN0aW9uSWQsXG4gICAgICAgIENBTExfQVBJOiB7XG4gICAgICAgICAgICB0eXBlczogW0FjdGlvblR5cGVzLkNPTExFQ1RJT04uUkVRVUVTVCwgQWN0aW9uVHlwZXMuQ09MTEVDVElPTi5TVUNDRVNTLCBBY3Rpb25UeXBlcy5DT0xMRUNUSU9OLkZBSUxVUkVdLFxuICAgICAgICAgICAgZW5kcG9pbnQ6IGBjb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25JZH1gLFxuICAgICAgICAgICAgc2NoZW1hOiBzY2hlbWFzLkNPTExFQ1RJT05cbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoRG91YmFuQm9va3MocSkge1xuICAgIGNvbnN0IENBTExfQVBJID0ge1xuICAgICAgICB0eXBlczogW0FjdGlvblR5cGVzLkRPVUJBTl9CT09LUy5SRVFVRVNULCBBY3Rpb25UeXBlcy5ET1VCQU5fQk9PS1MuU1VDQ0VTUywgQWN0aW9uVHlwZXMuRE9VQkFOX0JPT0tTLkZBSUxVUkVdLFxuICAgICAgICBlbmRwb2ludDogYGJvb2svc2VhcmNoP2NvdW50PTEwJnE9JHtxfWAsXG4gICAgICAgIGFwaVVybDogRE9VQkFOX0FQSV9ST09ULFxuICAgICAgICBzY2hlbWE6IHNjaGVtYXMuRE9VQkFOX0JPT0tfU0VBUkNIX1JFU1VMVFMsXG4gICAgICAgIG9wdGlvbnM6IHsgdXNlSnNvbnA6IHRydWUgfSxcbiAgICAgICAgcGFnaW5hdGlvbjoge1xuICAgICAgICAgICAgbmFtZTogJ2RvdWJhbkJvb2tzJyxcbiAgICAgICAgICAgIHFcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHsgcSwgQ0FMTF9BUEkgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaFByb2ZpbGUoKSB7XG4gICAgY29uc3QgQ0FMTF9BUEkgPSB7XG4gICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuUFJPRklMRS5SRVFVRVNULCBBY3Rpb25UeXBlcy5QUk9GSUxFLlNVQ0NFU1MsIEFjdGlvblR5cGVzLlBST0ZJTEUuRkFJTFVSRV0sXG4gICAgICAgIGVuZHBvaW50OiBgdXNlci9wcm9maWxlYCxcbiAgICAgICAgc2NoZW1hOiBzY2hlbWFzLlBST0ZJTEVcbiAgICB9O1xuICAgIHJldHVybiB7IENBTExfQVBJIH07XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlckF1dGgodXNlclNlc3Npb24pIHtcbiAgICAvLyDmnI3liqHnq6/muLLmn5Mgc2Vzc2lvblxuICAgIGlmICh1c2VyU2Vzc2lvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgU0VSVkVSX1NUT1JFOiB7XG4gICAgICAgICAgICAgICAgYm9keToge1xuICAgICAgICAgICAgICAgICAgICByZXNwb25zZTogdXNlclNlc3Npb24sXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEFjdGlvblR5cGVzLkFVVEguU1VDQ0VTU1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgQ0FMTF9BUEk6IHtcbiAgICAgICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuQVVUSC5SRVFVRVNULCBBY3Rpb25UeXBlcy5BVVRILlNVQ0NFU1MsIEFjdGlvblR5cGVzLkFVVEguRkFJTFVSRV0sXG4gICAgICAgICAgICBlbmRwb2ludDogJ2F1dGgnXG4gICAgICAgIH1cbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoU2hlbGYoKSB7XG4gICAgY29uc3QgQ0FMTF9BUEkgPSB7XG4gICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuU0hFTEYuUkVRVUVTVCwgQWN0aW9uVHlwZXMuU0hFTEYuU1VDQ0VTUywgQWN0aW9uVHlwZXMuU0hFTEYuRkFJTFVSRV0sXG4gICAgICAgIGVuZHBvaW50OiBgdXNlci9ib29rcy9zaGVsZmAsXG4gICAgICAgIHNjaGVtYTogc2NoZW1hcy5TSEVMRl9CT09LX0FSUkFZLFxuICAgICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgICAgICBuYW1lOiAnYm9va1NoZWx2ZXMnXG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB7IENBTExfQVBJIH07XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvYXBpLnRzXG4gKiovIiwiaW1wb3J0IGdldEN1cnJlbnRUaW1lIGZyb20gJy4vZ2V0Q3VycmVudFRpbWUnO1xuaW1wb3J0IHBhZE51bWJlcldpdGhaZXJvIGZyb20gJy4vcGFkTnVtYmVyV2l0aFplcm8nO1xuaW1wb3J0IHBhcnNlUXVlcnkgZnJvbSAnLi9wYXJzZVF1ZXJ5JztcbmltcG9ydCBwYXJzZVVybGVuY29kZWQgZnJvbSAnLi9wYXJzZVVybGVuY29kZWQnO1xuaW1wb3J0IGRvbSBmcm9tICcuL2RvbSc7XG5pbXBvcnQgYnJvd3NlciBmcm9tICcuL2Jyb3dzZXInO1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbih7XG4gICAgZ2V0Q3VycmVudFRpbWUsXG4gICAgcGFkTnVtYmVyV2l0aFplcm8sXG4gICAgcGFyc2VRdWVyeSxcbiAgICBwYXJzZVVybGVuY29kZWRcbn0sIGRvbSwgYnJvd3Nlcik7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IHBhZE51bWJlcldpdGhaZXJvIGZyb20gJy4vcGFkTnVtYmVyV2l0aFplcm8nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q3VycmVudFRpbWUoKSB7XG4gICAgY29uc3QgZCA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgdGltZSA9IFtkLmdldEZ1bGxZZWFyKCksIGQuZ2V0TW9udGgoKSArIDEsIGQuZ2V0RGF0ZSgpLCBkLmdldEhvdXJzKCksIGQuZ2V0TWludXRlcygpLCBkLmdldFNlY29uZHMoKV07XG4gICAgcmV0dXJuIHRpbWUubWFwKHQgPT4ge1xuICAgICAgICByZXR1cm4gcGFkTnVtYmVyV2l0aFplcm8odCk7XG4gICAgfSkuam9pbignJyk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2dldEN1cnJlbnRUaW1lLnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFkTnVtYmVyV2l0aFplcm8obnVtKSB7XG4gICAgbGV0IG51bVN0cldpdGhaZXJvO1xuICAgIGlmIChudW0gPCAxMCkge1xuICAgICAgICBudW1TdHJXaXRoWmVybyA9ICcwJyArIG51bS50b1N0cmluZygpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbnVtU3RyV2l0aFplcm8gPSBudW0udG9TdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bVN0cldpdGhaZXJvO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9wYWROdW1iZXJXaXRoWmVyby50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlUXVlcnkocXVlcnlTdHJpbmcpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBxdWVyeVN0cmluZy5zcGxpdCgnJicpO1xuICAgIGxldCBvYmplY3QgPSB7fTtcbiAgICBwYXJhbXMuZm9yRWFjaChwYXJhbSA9PiB7XG4gICAgICAgIGNvbnN0IGtleSA9IHBhcmFtLnNwbGl0KCc9JylbMF07XG4gICAgICAgIGNvbnN0IHZhbCA9IHBhcmFtLnNwbGl0KCc9JylbMV07XG4gICAgICAgIG9iamVjdFtrZXldID0gdmFsO1xuICAgIH0pO1xuICAgIHJldHVybiBvYmplY3Q7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL3BhcnNlUXVlcnkudHNcbiAqKi8iLCJpbXBvcnQgaXNEZXNjZW5kYW50IGZyb20gJy4vaXNEZXNjZW5kYW50JztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBpc0Rlc2NlbmRhbnRcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2RvbS9pbmRleC50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzRGVzY2VuZGFudChwYXJlbnQsIGNoaWxkKSB7XG4gICAgbGV0IG5vZGUgPSBjaGlsZC5wYXJlbnROb2RlO1xuICAgIHdoaWxlIChub2RlICE9IG51bGwpIHtcbiAgICAgICAgaWYgKG5vZGUgPT09IHBhcmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9kb20vaXNEZXNjZW5kYW50LnRzXG4gKiovIiwiaW1wb3J0IGdldFNjcmVlbkluZm8gZnJvbSAnLi9nZXRTY3JlZW5JbmZvJztcbmltcG9ydCBpc0lFIGZyb20gJy4vaXNJRSc7XG5pbXBvcnQgbG9ja1Njcm9sbCBmcm9tICcuL2xvY2tTY3JvbGwnO1xuaW1wb3J0IHVubG9ja1Njcm9sbCBmcm9tICcuL3VubG9ja1Njcm9sbCc7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZ2V0U2NyZWVuSW5mbyxcbiAgICBpc0lFLFxuICAgIGxvY2tTY3JvbGwsXG4gICAgdW5sb2NrU2Nyb2xsXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2luZGV4LnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U2NyZWVuSW5mbygpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignd2luZG93IGlzIHVuZGVmaW5lZCwgZW1wdHkgaW5mbyBvYmplY3Qgd2lsbCBiZSByZXR1cm5lZCEnKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZpZXc6IHt9LFxuICAgICAgICAgICAgc2NyZWVuOiB7fVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCxcbiAgICAgICAgICAgIGFzcGVjdFJhdGlvOiB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICB9LFxuICAgICAgICBzY3JlZW46IHdpbmRvdy5zY3JlZW5cbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2dldFNjcmVlbkluZm8udHNcbiAqKi8iLCJleHBvcnQgZnVuY3Rpb24gaXNJRSh2ZXIpIHtcbiAgICBpZiAodHlwZW9mIHZlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmVyID0gbnVsbDtcbiAgICB9XG4gICAgdmFyIGIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdiJyk7XG4gICAgYi5pbm5lckhUTUwgPSAnPCEtLVtpZiBJRSAnICsgdmVyICsgJ10+PGk+PC9pPjwhW2VuZGlmXS0tPic7XG4gICAgcmV0dXJuIGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2knKS5sZW5ndGggPT09IDE7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2Jyb3dzZXIvaXNJRS50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxvY2tTY3JvbGwoKSB7XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2xvY2tTY3JvbGwudHNcbiAqKi8iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1bmxvY2tTY3JvbGwoKSB7XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICd2aXNpYmxlJztcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvdXRpbHMvYnJvd3Nlci91bmxvY2tTY3JvbGwudHNcbiAqKi8iLCJpbXBvcnQgeyBTY2hlbWEsIGFycmF5T2YgfSBmcm9tICdub3JtYWxpenInO1xuY29uc3QgYm9vayA9IG5ldyBTY2hlbWEoJ2Jvb2tzJywge1xuICAgIGlkQXR0cmlidXRlOiAnaWQnXG59KTtcbmNvbnN0IGJvb2tDb250ZW50ID0gbmV3IFNjaGVtYSgnYm9va0NvbnRlbnRzJywge1xuICAgIGlkQXR0cmlidXRlOiAnaWQnXG59KTtcbmNvbnN0IGF1dGhvciA9IG5ldyBTY2hlbWEoJ2F1dGhvcnMnLCB7XG4gICAgaWRBdHRyaWJ1dGU6ICdpZCdcbn0pO1xuY29uc3QgY29sbGVjdGlvbiA9IG5ldyBTY2hlbWEoJ2Jvb2tDb2xsZWN0aW9ucycsIHtcbiAgICBpZEF0dHJpYnV0ZTogJ2lkJ1xufSk7XG5jb2xsZWN0aW9uLmRlZmluZSh7XG4gICAgaXRlbXM6IGFycmF5T2YoYm9vaylcbn0pO1xuY29uc3QgcHJvZmlsZSA9IG5ldyBTY2hlbWEoJ3Byb2ZpbGVzJywge1xuICAgIGlkQXR0cmlidXRlOiAnaWQnXG59KTtcbmNvbnN0IHVzZXIgPSBuZXcgU2NoZW1hKCd1c2VycycsIHtcbiAgICBpZEF0dHJpYnV0ZTogJ2lkJ1xufSk7XG5jb25zdCBkb3ViYW5Cb29rID0gbmV3IFNjaGVtYSgnZG91YmFuQm9va3MnLCB7XG4gICAgaWRBdHRyaWJ1dGU6ICdpZCdcbn0pO1xuY29uc3Qgc2hlbGZCb29rID0gbmV3IFNjaGVtYSgnc2hlbGZCb29rcycsIHtcbiAgICBpZEF0dHJpYnV0ZTogJ2lkJ1xufSk7XG5jb25zdCBib29rUHJvZ3Jlc3MgPSBuZXcgU2NoZW1hKCdib29rUHJvZ3Jlc3MnLCB7XG4gICAgaWRBdHRyaWJ1dGU6ICdib29rSWQnXG59KTtcbmNvbnN0IG1hdGNoZWRCb29rcyA9IG5ldyBTY2hlbWEoJ2Jvb2tzJywge1xuICAgIGlkQXR0cmlidXRlOiAnYm9va0lkJ1xufSk7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgQk9PSzogYm9vayxcbiAgICBCT09LX0NPTlRFTlQ6IGJvb2tDb250ZW50LFxuICAgIEJPT0tfUFJPR1JFU1M6IGJvb2tQcm9ncmVzcyxcbiAgICBCT09LX0FSUkFZOiBhcnJheU9mKGJvb2spLFxuICAgIERPVUJBTl9CT09LX1NFQVJDSF9SRVNVTFRTOiB7IGJvb2tzOiBhcnJheU9mKGRvdWJhbkJvb2spIH0sXG4gICAgVVNFUl9BUlJBWTogYXJyYXlPZih1c2VyKSxcbiAgICBNQVRDSEVEX0JPT0tfQVJSQVk6IGFycmF5T2YobWF0Y2hlZEJvb2tzKSxcbiAgICBDT0xMRUNUSU9OOiBjb2xsZWN0aW9uLFxuICAgIENPTExFQ1RJT05fQVJSQVk6IGFycmF5T2YoY29sbGVjdGlvbiksXG4gICAgUFJPRklMRTogcHJvZmlsZSxcbiAgICBBVVRIT1I6IGF1dGhvcixcbiAgICBBVVRIT1JfQVJSQVk6IGFycmF5T2YoYXV0aG9yKSxcbiAgICBTSEVMRl9CT09LX0FSUkFZOiBhcnJheU9mKHNoZWxmQm9vaylcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3NjaGVtYXMudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJub3JtYWxpenJcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIm5vcm1hbGl6clwiXG4gKiogbW9kdWxlIGlkID0gMTA0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJjb25zdCBSRVFVRVNUID0gJ1JFUVVFU1QnO1xuY29uc3QgU1VDQ0VTUyA9ICdTVUNDRVNTJztcbmNvbnN0IEZBSUxVUkUgPSAnRkFJTFVSRSc7XG5jb25zdCBMT0FEX0NBQ0hFID0gJ0xPQURfQ0FDSEUnO1xuZXhwb3J0IGNvbnN0IGFjdGlvbiA9ICh0eXBlLCBwYXlsb2FkID0ge30pID0+IHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwge1xuICAgICAgICB0eXBlXG4gICAgfSwgcGF5bG9hZCk7XG59O1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVJlcXVlc3RUeXBlcyA9IGJhc2UgPT4ge1xuICAgIHJldHVybiBbUkVRVUVTVCwgU1VDQ0VTUywgRkFJTFVSRSwgTE9BRF9DQUNIRV0ucmVkdWNlKChhY2MsIHR5cGUpID0+IHtcbiAgICAgICAgYWNjW3R5cGVdID0gYGFwaS8ke2Jhc2V9LyR7dHlwZX1gO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbn07XG5leHBvcnQgY29uc3QgY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSA9IChuYW1lLCBvcGVyYXRpb24pID0+IGBjb21wb25lbnRzLyR7bmFtZX0vJHtvcGVyYXRpb259YDtcbmV4cG9ydCBjb25zdCBjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUgPSAob3BlcmF0aW9uKSA9PiBgc2FnYS10cmlnZ2Vycy8ke29wZXJhdGlvbn1gO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUFjdGlvbkVudGl0eSA9IChyZXF1ZXN0VHlwZXMpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXF1ZXN0OiAocGF5bG9hZCkgPT4gYWN0aW9uKHJlcXVlc3RUeXBlcy5SRVFVRVNULCBwYXlsb2FkKSxcbiAgICAgICAgc3VjY2VzczogKHJlc3BvbnNlLCBwYXlsb2FkKSA9PiBhY3Rpb24ocmVxdWVzdFR5cGVzLlNVQ0NFU1MsIE9iamVjdC5hc3NpZ24oe30sIHsgcmVzcG9uc2UgfSwgcGF5bG9hZCkpLFxuICAgICAgICAvLyBUT0RPXG4gICAgICAgIGxvYWRDYWNoZTogKHJlc3BvbnNlLCBwYXlsb2FkKSA9PiBhY3Rpb24ocmVxdWVzdFR5cGVzLlNVQ0NFU1MsIE9iamVjdC5hc3NpZ24oe30sIHsgcmVzcG9uc2UgfSwgcGF5bG9hZCwgeyBsb2FkZWRGcm9tQ2FjaGU6IHRydWUgfSkpLFxuICAgICAgICBmYWlsdXJlOiAoZXJyb3IsIHBheWxvYWQpID0+IGFjdGlvbihyZXF1ZXN0VHlwZXMuRkFJTFVSRSwgT2JqZWN0LmFzc2lnbih7fSwgeyBlcnJvciB9LCBwYXlsb2FkKSksXG4gICAgfTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvdXRpbHMudHNcbiAqKi8iLCJpbXBvcnQgeyBjcmVhdGVSZXF1ZXN0VHlwZXMsIGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUsIGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSB9IGZyb20gJy4uL3N0b3JlL2FjdGlvbnMvdXRpbHMnO1xuLyoqXG4gKiBhcGlcbiAqL1xuZXhwb3J0IGNvbnN0IFJFTU9WRV9FTlRJVFkgPSAnUkVNT1ZFX0VOVElUWSc7XG5leHBvcnQgY29uc3QgQk9PSyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYm9vaycpO1xuZXhwb3J0IGNvbnN0IExPQURfQk9PSyA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9CT09LJyk7XG5leHBvcnQgY29uc3QgQk9PS19DT05URU5UID0gY3JlYXRlUmVxdWVzdFR5cGVzKCdib29rLWNvbnRlbnQnKTtcbmV4cG9ydCBjb25zdCBMT0FEX0JPT0tfQ09OVEVOVCA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9CT09LX0NPTlRFTlQnKTtcbmV4cG9ydCBjb25zdCBCT09LUyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYm9va3MnKTtcbmV4cG9ydCBjb25zdCBMT0FEX0JPT0tTID0gY3JlYXRlU2FnYVRyaWdnZXJBY3Rpb25UeXBlKCdMT0FEX0JPT0tTJyk7XG5leHBvcnQgY29uc3QgVVNFUlMgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ3VzZXJzJyk7XG5leHBvcnQgY29uc3QgTE9BRF9VU0VSUyA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9VU0VSUycpO1xuZXhwb3J0IGNvbnN0IExPR09VVCA9IGNyZWF0ZVJlcXVlc3RUeXBlcygncmV2b2tlJyk7XG5leHBvcnQgY29uc3QgVVNFUl9MT0dPVVQgPSBjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUoJ1VTRVJfTE9HT1VUJyk7XG5leHBvcnQgY29uc3QgQk9PS19QUk9HUkVTUyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYm9vay1wcm9ncmVzcycpO1xuZXhwb3J0IGNvbnN0IExPQURfQk9PS19QUk9HUkVTUyA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9CT09LX1BST0dSRVNTJyk7XG5leHBvcnQgY29uc3QgQVVUSE9SUyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYXV0aG9ycycpO1xuZXhwb3J0IGNvbnN0IENPTExFQ1RJT05TID0gY3JlYXRlUmVxdWVzdFR5cGVzKCdjb2xsZWN0aW9ucycpO1xuZXhwb3J0IGNvbnN0IENPTExFQ1RJT04gPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ2NvbGxlY3Rpb24nKTtcbmV4cG9ydCBjb25zdCBET1VCQU5fQk9PS1MgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ2RvdWJhbi1ib29rcycpO1xuZXhwb3J0IGNvbnN0IFBST0ZJTEUgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ3Byb2ZpbGUnKTtcbmV4cG9ydCBjb25zdCBBVVRIID0gY3JlYXRlUmVxdWVzdFR5cGVzKCdhdXRoJyk7XG5leHBvcnQgY29uc3QgU0hFTEYgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ3NoZWxmJyk7XG4vKipcbiAqIGNvbXBvbmVudHNcbiAqL1xuLy8gZ2VuZXJhbFxuZXhwb3J0IGNvbnN0IE5PVElGSUNBVElPTiA9IHtcbiAgICBTSE9XOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCdub3RpZmljYXRpb24nLCAnU0hPVycpLFxuICAgIEhJREU6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ25vdGlmaWNhdGlvbicsICdISURFJyksXG59O1xuZXhwb3J0IGNvbnN0IE9QRU5fQ09ORklSTV9NT0RBTCA9IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ2NvbmZpcm0tbW9kYWwnLCAnT1BFTicpO1xuZXhwb3J0IGNvbnN0IENMT1NFX0NPTkZJUk1fTU9EQUwgPSBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCdjb25maXJtLW1vZGFsJywgJ0NMT1NFJyk7XG5leHBvcnQgY29uc3QgTU9EQUwgPSB7XG4gICAgT1BFTjogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgnbW9kYWwnLCAnU0hPVycpLFxuICAgIENMT1NFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCdtb2RhbCcsICdISURFJyksXG59O1xuLy8gdmlld2VyXG5leHBvcnQgY29uc3QgVklFV0VSID0ge1xuICAgIElOSVRJQUxJWkU6IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZShjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXInLCAnSU5JVElBTElaRScpKSxcbiAgICBJTklUSUFMSVpFX0NPTkZJRzogY3JlYXRlU2FnYVRyaWdnZXJBY3Rpb25UeXBlKGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlcicsICdJTklUSUFMSVpFX0NPTkZJRycpKSxcbiAgICBDT05GSUc6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlcicsICdDT05GSUcnKSxcbiAgICBDQUxDX1NUQVJUOiBjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUoY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyJywgJ0NBTENfU1RBUlQnKSksXG4gICAgQ0FMQ19TVUNDRVNTOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXInLCAnQ0FMQ19TVUNDRVNTJyksXG4gICAgQ0FMQ19GQUlMVVJFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXInLCAnQ0FMQ19GQUlMVVJFJyksXG4gICAgQk9PS19QUk9HUkVTU19VUERBVEU6IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZShjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXIvcHJvZ3Jlc3MnLCAnVVBEQVRFJykpLFxuICAgIC8vIFRPRE86IOi/meS4quWlveWDj+ayoeeUqFxuICAgIEJPT0tfUFJPR1JFU1NfSU5JVElBTElaRTogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyL3Byb2dyZXNzJywgJ0lOSVRJQUxJWkUnKSxcbiAgICAvLyBUT0RPOiDov5nkuKrlpb3lg4/kuZ/msqHnlKhcbiAgICBCT09LX1BST0dSRVNTX0RFU1RST1k6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlci9wcm9ncmVzcycsICdERVNUUk9ZJyksXG4gICAgSlVNUDogY3JlYXRlU2FnYVRyaWdnZXJBY3Rpb25UeXBlKGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlcicsICdKVU1QJykpLFxuICAgIEZPTlRfQ0hBTkdFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXIvcHJlZmVyZW5jZScsICdDSEFOR0VfRk9OVF9TSVpFJyksXG4gICAgUEFORUxfVE9HR0xFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXIvY29tcG9uZW50cy9wYW5lbCcsICdUT0dHTEUnKSxcbiAgICBQUkVGRVJFTkNFX1RPR0dMRTogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyL2NvbXBvbmVudHMvcHJlZmVyZW5jZScsICdUT0dHTEUnKSxcbiAgICBOQVZJR0FUSU9OX1RPR0dMRTogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyL2NvbXBvbmVudHMvbmF2aWdhdGlvbicsICdUT0dHTEUnKSxcbiAgICBUSEVNRV9DSEFOR0U6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlci90aGVtZScsICdDSEFOR0UnKSxcbiAgICBTQ1JPTExfTU9ERV9UT0dHTEU6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlci9zY3JvbGwtbW9kZScsICdUT0dHTEUnKVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29uc3RhbnRzL2FjdGlvblR5cGVzLnRzXG4gKiovIiwiaW1wb3J0ICogYXMgQWN0aW9uVHlwZXMgZnJvbSAnLi4vLi4vY29uc3RhbnRzL2FjdGlvblR5cGVzJztcbmV4cG9ydCBjb25zdCBzZW5kTm90aWZpY2F0aW9uID0gKG1lc3NhZ2UsIG1zZ1R5cGUgPSAnc3VjY2VzcycsIHQgPSAyMDAwKSA9PiB7XG4gICAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBNYXRoLnJhbmRvbSgpLnRvRml4ZWQoOCkuc3Vic3RyKDIpO1xuICAgICAgICBkaXNwYXRjaChzaG93Tm90aWZpY2F0aW9uKGlkLCBtZXNzYWdlLCBtc2dUeXBlKSk7XG4gICAgICAgIGlmICh0ICE9PSAwKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBkaXNwYXRjaChoaWRlTm90aWZpY2F0aW9uKGlkKSk7XG4gICAgICAgICAgICB9LCB0KTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHNob3dOb3RpZmljYXRpb24oaWQsIG1lc3NhZ2UsIG1zZ1R5cGUgPSAnc3VjY2VzcycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBBY3Rpb25UeXBlcy5OT1RJRklDQVRJT04uU0hPVyxcbiAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgbXNnVHlwZSxcbiAgICAgICAgaWRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhpZGVOb3RpZmljYXRpb24oaWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBBY3Rpb25UeXBlcy5OT1RJRklDQVRJT04uSElERSxcbiAgICAgICAgaWRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Db25maXJtTW9kYWwoZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IEFjdGlvblR5cGVzLk9QRU5fQ09ORklSTV9NT0RBTCxcbiAgICAgICAgZGF0YVxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gY2xvc2VDb25maXJtTW9kYWwoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogQWN0aW9uVHlwZXMuQ0xPU0VfQ09ORklSTV9NT0RBTFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gb3Blbk1vZGFsKGRhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBBY3Rpb25UeXBlcy5NT0RBTC5PUEVOLFxuICAgICAgICBkYXRhXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IEFjdGlvblR5cGVzLk1PREFMLkNMT1NFXG4gICAgfTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9jb21tb24udHNcbiAqKi8iLCJleHBvcnQgY29uc3QgbG9hZFNvbWV0aGluZyA9ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnTE9BRCdcbiAgICB9O1xufTtcbmV4cG9ydCBjb25zdCBzYXZlU29tZXRoaW5nID0gKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdTQVZFJ1xuICAgIH07XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9hY3Rpb25zL3Rlc3QudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBzZWxlY3RvcnMgZnJvbSAnLi4vc2VsZWN0b3JzJztcbmltcG9ydCAqIGFzIEFDVElPTl9UWVBFUyBmcm9tICcuLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi4vLi4vaGVscGVycyc7XG4vLyB2aWV3ZXJcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplVmlld2VyQ29uZmlnID0gKGJvb2tJZCwgY29uZmlnID0ge30pID0+ICh7IGJvb2tJZCwgY29uZmlnLCB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLklOSVRJQUxJWkVfQ09ORklHIH0pO1xuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVWaWV3ZXIgPSAoYm9va0lkKSA9PiAoeyBib29rSWQsIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuSU5JVElBTElaRSB9KTtcbmV4cG9ydCBjb25zdCBjb25maWdWaWV3ZXIgPSAoYm9va0lkLCBwYXlsb2FkKSA9PiAoe1xuICAgIGJvb2tJZCxcbiAgICBwYXlsb2FkLFxuICAgIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuQ09ORklHLFxufSk7XG4vLyBib29rXG5leHBvcnQgY29uc3QgY2FsY0Jvb2sgPSAoYm9va0lkLCB3cmFwKSA9PiAoe1xuICAgIGJvb2tJZCxcbiAgICB3cmFwLFxuICAgIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuQ0FMQ19TVEFSVCxcbn0pO1xuZXhwb3J0IGNvbnN0IGNhbGNCb29rU3VjY2VzcyA9IChib29rSWQsIGNvbXB1dGVkKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYm9va0lkLFxuICAgICAgICBjb21wdXRlZCxcbiAgICAgICAgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5DQUxDX1NVQ0NFU1MsXG4gICAgfTtcbn07XG5leHBvcnQgY29uc3QgY2FsY0Jvb2tGYWlsdXJlID0gKGJvb2tJZCwgZXJyb3IpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBib29rSWQsXG4gICAgICAgIGVycm9yLFxuICAgICAgICB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLkNBTENfRkFJTFVSRSxcbiAgICB9O1xufTtcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplQm9va1Byb2dyZXNzID0gKCkgPT4gKHsgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX0lOSVRJQUxJWkUgfSk7XG4vLyBwcm9ncmVzc1xuZXhwb3J0IGNvbnN0IHVwZGF0ZUJvb2tQcm9ncmVzcyA9IChwZXJjZW50YWdlKSA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XG4gICAgaGVscGVycy5wcmludCgnQWN0aW9uIHVwZGF0ZUJvb2tQcm9ncmVzcycpO1xuICAgIGNvbnN0IHN0YXRlID0gZ2V0U3RhdGUoKTtcbiAgICBjb25zdCB7IGJvb2tJZCB9ID0gc2VsZWN0b3JzLnZpZXdlci5jb25maWcoc3RhdGUpO1xuICAgIGNvbnN0IGNvbXB1dGVkID0gc2VsZWN0b3JzLnZpZXdlci5jb21wdXRlZChib29rSWQpKHN0YXRlKTtcbiAgICBjb25zdCBwYWdlTm8gPSBNYXRoLmZsb29yKGNvbXB1dGVkLmxlbmd0aCAqIHBlcmNlbnRhZ2UpICsgMTtcbiAgICByZXR1cm4gZGlzcGF0Y2goe1xuICAgICAgICBpZDogYm9va0lkLFxuICAgICAgICBwZXJjZW50YWdlLFxuICAgICAgICBwYWdlTm8sXG4gICAgICAgIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuQk9PS19QUk9HUkVTU19VUERBVEUsXG4gICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IGRlc3Ryb3lCb29rUHJvZ3Jlc3MgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX0RFU1RST1ksXG4gICAgfTtcbn07XG5leHBvcnQgY29uc3Qgdmlld2VySnVtcFRvID0gKHBlcmNlbnRhZ2UpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuSlVNUCwgcGVyY2VudGFnZSB9KTtcbi8vIHN1YiBjb21wb25lbnRzXG5leHBvcnQgY29uc3QgdG9nZ2xlVmlld2VyUGFuZWwgPSAocmVzZXQpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuUEFORUxfVE9HR0xFLCByZXNldCB9KTtcbmV4cG9ydCBjb25zdCB0b2dnbGVWaWV3ZXJQcmVmZXJlbmNlID0gKHJlc2V0KSA9PiAoeyB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLlBSRUZFUkVOQ0VfVE9HR0xFLCByZXNldCB9KTtcbmV4cG9ydCBjb25zdCB0b2dnbGVWaWV3ZXJOYXZpZ2F0aW9uID0gKHJlc2V0KSA9PiAoeyB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLk5BVklHQVRJT05fVE9HR0xFLCByZXNldCB9KTtcbi8vIGNvbmZpZ1xuZXhwb3J0IGNvbnN0IGNoYW5nZVZpZXdlckZvbnRTaXplID0gKGZvbnRTaXplSW5QaXhlbCkgPT4gKHsgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5GT05UX0NIQU5HRSwgZm9udFNpemU6IGZvbnRTaXplSW5QaXhlbCB9KTtcbmV4cG9ydCBjb25zdCBjaGFuZ2VWaWV3ZXJUaGVtZSA9ICh0aGVtZU5hbWUpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuVEhFTUVfQ0hBTkdFLCB0aGVtZTogdGhlbWVOYW1lIH0pO1xuZXhwb3J0IGNvbnN0IHRvZ2dsZVZpZXdlclNjcm9sbE1vZGUgPSAocmVzZXQpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuU0NST0xMX01PREVfVE9HR0xFLCByZXNldCB9KTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy92aWV3ZXIudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBjb21tb24gZnJvbSAnLi9jb21tb24nO1xuaW1wb3J0IHsgc2VsZWN0b3JzIGFzIGZvcm0gfSBmcm9tICdiZXR0ZXItcmVkdXgtZm9ybSc7XG5pbXBvcnQgKiBhcyB2aWV3ZXIgZnJvbSAnLi92aWV3ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdGllcyc7XG5leHBvcnQgeyBjb21tb24sIGZvcm0sIHZpZXdlciB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciB9IGZyb20gJ3Jlc2VsZWN0JztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBwYWdlZEVudGl0aWVzIH0gZnJvbSAnLi9jb21tb24nO1xuZXhwb3J0IGNvbnN0IGRvdWJhbkJvb2tzID0ga2V5ID0+IGNyZWF0ZVNlbGVjdG9yKHBhZ2VkRW50aXRpZXMoe1xuICAgIGVudGl0aWVzTmFtZTogJ2RvdWJhbkJvb2tzJyxcbiAgICBwYWdpbmF0aW9uTmFtZTogJ2RvdWJhbkJvb2tzJyxcbiAgICBwYWdpbmF0aW9uS2V5OiBrZXlcbn0pLCBib29rcyA9PiBib29rcyk7XG5leHBvcnQgY29uc3QgYXV0aG9ycyA9IGtleSA9PiBwYWdlZEVudGl0aWVzKHtcbiAgICBlbnRpdGllc05hbWU6ICdhdXRob3JzJyxcbiAgICBwYWdpbmF0aW9uTmFtZTogJ2F1dGhvcnMnLFxuICAgIHBhZ2luYXRpb25LZXk6IGtleVxufSk7XG5leHBvcnQgY29uc3Qgc2hlbGZCb29rcyA9IChrZXkpID0+IHBhZ2VkRW50aXRpZXMoe1xuICAgIGVudGl0aWVzTmFtZTogJ3NoZWxmQm9va3MnLFxuICAgIHBhZ2luYXRpb25OYW1lOiAnYm9va1NoZWx2ZXMnLFxuICAgIHBhZ2luYXRpb25LZXk6IGtleVxufSk7XG5leHBvcnQgY29uc3QgYm9va3MgPSAoa2V5LCBwYWdlKSA9PiBwYWdlZEVudGl0aWVzKHtcbiAgICBlbnRpdGllc05hbWU6ICdib29rcycsXG4gICAgcGFnaW5hdGlvbk5hbWU6ICdib29rcycsXG4gICAgcGFnaW5hdGlvbktleToga2V5LFxuICAgIHBhZ2Vcbn0pO1xuZXhwb3J0IGNvbnN0IGRvdWJhbkJvb2tzQXNPcHRpb25zID0ga2V5ID0+IGNyZWF0ZVNlbGVjdG9yKGRvdWJhbkJvb2tzKGtleSksIHNlbGVjdGVkQm9va3MgPT4ge1xuICAgIHJldHVybiBzZWxlY3RlZEJvb2tzLm1hcChib29rID0+ICh7XG4gICAgICAgIG5hbWU6IGJvb2sudGl0bGUsXG4gICAgICAgIHZhbHVlOiBib29rLmlkLFxuICAgICAgICBhZGRpdGlvbmFsOiB7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogYm9vay5zdW1tYXJ5LFxuICAgICAgICAgICAgY292ZXI6IGJvb2suaW1hZ2VzLmxhcmdlLFxuICAgICAgICAgICAgYXV0aG9yOiBib29rLmF1dGhvci5qb2luKCcsICcpXG4gICAgICAgIH1cbiAgICB9KSk7XG59KTtcbmV4cG9ydCBjb25zdCBhdXRob3JzQXNPcHRpb25zID0ga2V5ID0+IGNyZWF0ZVNlbGVjdG9yKGF1dGhvcnMoa2V5KSwgaXRlbXMgPT4ge1xuICAgIHJldHVybiBpdGVtcy5tYXAoaXRlbSA9PiAoe1xuICAgICAgICBuYW1lOiBpdGVtLm5hbWUsXG4gICAgICAgIHZhbHVlOiBpdGVtLmlkXG4gICAgfSkpO1xufSk7XG5leHBvcnQgY29uc3QgYm9va3NBc09wdGlvbnMgPSAoa2V5KSA9PiBjcmVhdGVTZWxlY3Rvcihib29rcyhrZXkpLCBpdGVtcyA9PiB7XG4gICAgcmV0dXJuIGl0ZW1zLm1hcChpdGVtID0+ICh7XG4gICAgICAgIG5hbWU6IGl0ZW0udGl0bGUsXG4gICAgICAgIHZhbHVlOiBpdGVtLmlkXG4gICAgfSkpO1xufSk7XG5leHBvcnQgY29uc3QgdXNlcnMgPSBwYWdlZEVudGl0aWVzKHtcbiAgICBlbnRpdGllc05hbWU6ICd1c2VycycsXG4gICAgcGFnaW5hdGlvbk5hbWU6ICd1c2VycycsXG59KTtcbmV4cG9ydCBjb25zdCBzZXNzaW9uVXNlcklkID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydzZXNzaW9uJywgJ3VzZXInLCAnaWQnXSk7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvZW50aXRpZXMudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZXNlbGVjdFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVzZWxlY3RcIlxuICoqIG1vZHVsZSBpZCA9IDExMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdyZXNlbGVjdCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3QgREVGQVVMVF9LRVkgPSAnZGVmYXVsdCc7XG5leHBvcnQgY29uc3Qgc2Vzc2lvbiA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5nZXQoc3RhdGUsIFsnc2Vzc2lvbiddLCB7fSk7XG59O1xuZXhwb3J0IGNvbnN0IGVudGl0aWVzID0gbmFtZSA9PiBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlLmVudGl0aWVzW25hbWVdIHx8IHt9O1xufTtcbmV4cG9ydCBjb25zdCBlbnRpdHkgPSAobmFtZSwgaWQpID0+IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5nZXQoc3RhdGUsIFsnZW50aXRpZXMnLCBuYW1lLCBpZF0sIHt9KTtcbn07XG5leHBvcnQgY29uc3QgaXNQYWdpbmF0aW9uRmV0Y2hpbmcgPSAobmFtZSwga2V5ID0gREVGQVVMVF9LRVkpID0+IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5nZXQoc3RhdGUsIFsncGFnaW5hdGlvbicsIG5hbWUsIGtleSwgJ2lzRmV0Y2hpbmcnXSwgdHJ1ZSk7XG59O1xuZXhwb3J0IGNvbnN0IHBhZ2luYXRpb25QYWdlcyA9IChuYW1lLCBrZXkgPSBERUZBVUxUX0tFWSkgPT4gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydwYWdpbmF0aW9uJywgbmFtZSwga2V5LCAncGFnZXMnXSwge30pO1xufTtcbmV4cG9ydCBjb25zdCBwYWdpbmF0aW9uTGlua3MgPSAobmFtZSwga2V5ID0gREVGQVVMVF9LRVkpID0+IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5waWNrKF8uZ2V0KHN0YXRlLnBhZ2luYXRpb24sIGAke25hbWV9LiR7a2V5fWAsIHt9KSwgWyduZXh0JywgJ2xhc3QnXSk7XG59O1xuZXhwb3J0IGNvbnN0IG5leHRQYWdlID0gKG5hbWUsIGtleSA9IERFRkFVTFRfS0VZKSA9PiBjcmVhdGVTZWxlY3RvcihwYWdpbmF0aW9uTGlua3MobmFtZSwga2V5KSwgc2VsZWN0ZWRQYWdpbmF0aW9uTGlua3MgPT4ge1xuICAgIHJldHVybiBfLmdldChzZWxlY3RlZFBhZ2luYXRpb25MaW5rcywgJ25leHQucGFnZScsIDApO1xufSk7XG5leHBvcnQgY29uc3QgY3VycmVudFBhZ2UgPSAobmFtZSwga2V5ID0gREVGQVVMVF9LRVkpID0+IGNyZWF0ZVNlbGVjdG9yKHBhZ2luYXRpb25MaW5rcyhuYW1lLCBrZXkpLCBzZWxlY3RlZFBhZ2luYXRpb25MaW5rcyA9PiB7XG4gICAgY29uc3QgbmV4dCA9IF8uZ2V0KHNlbGVjdGVkUGFnaW5hdGlvbkxpbmtzLCAnbmV4dC5wYWdlJyk7XG4gICAgY29uc3QgbGFzdCA9IF8uZ2V0KHNlbGVjdGVkUGFnaW5hdGlvbkxpbmtzLCAnbGFzdC5wYWdlJyk7XG4gICAgcmV0dXJuIG5leHRcbiAgICAgICAgPyBuZXh0IC0gMVxuICAgICAgICA6IGxhc3Q7XG59KTtcbmV4cG9ydCBjb25zdCBlbnRpdHlQYWdlcyA9IChvcHRpb25zKSA9PiB7XG4gICAgY29uc3QgeyBlbnRpdGllc05hbWUsIHBhZ2luYXRpb25OYW1lLCBwYWdpbmF0aW9uS2V5IH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBjcmVhdGVTZWxlY3RvcihlbnRpdGllcyhlbnRpdGllc05hbWUpLCBwYWdpbmF0aW9uUGFnZXMocGFnaW5hdGlvbk5hbWUsIHBhZ2luYXRpb25LZXkpLCAoc2VsZWN0ZWRFbnRpdGllcywgcGFnZXMpID0+IHtcbiAgICAgICAgcmV0dXJuIF8ubWFwVmFsdWVzKHBhZ2VzLCBpZHMgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGlkc1xuICAgICAgICAgICAgICAgIC5tYXAoaWQgPT4gc2VsZWN0ZWRFbnRpdGllc1tpZF0pXG4gICAgICAgICAgICAgICAgLmZpbHRlcihpdGVtID0+IEJvb2xlYW4oaXRlbSkpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgcGFnZWRFbnRpdGllcyA9IChvcHRpb25zKSA9PiB7XG4gICAgY29uc3QgeyBwYWdlIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBjcmVhdGVTZWxlY3RvcihlbnRpdHlQYWdlcyhvcHRpb25zKSwgcGFnZXMgPT4ge1xuICAgICAgICBpZiAocGFnZSkge1xuICAgICAgICAgICAgcmV0dXJuIF8uZ2V0KHBhZ2VzLCBbcGFnZV0sIFtdKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYWxsRW50aXRpZXMgPSBbXTtcbiAgICAgICAgXy5rZXlzKHBhZ2VzKS5mb3JFYWNoKHAgPT4ge1xuICAgICAgICAgICAgYWxsRW50aXRpZXMgPSBhbGxFbnRpdGllcy5jb25jYXQocGFnZXNbcF0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGFsbEVudGl0aWVzO1xuICAgIH0pO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2VsZWN0b3JzL2NvbW1vbi50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJldHRlci1yZWR1eC1mb3JtXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJiZXR0ZXItcmVkdXgtZm9ybVwiXG4gKiogbW9kdWxlIGlkID0gMTE0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0ICogYXMgY29tbW9uIGZyb20gJy4vY29tbW9uJztcbmltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAncmVzZWxlY3QnO1xuZXhwb3J0IGNvbnN0IHNlbGYgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIF8uZ2V0KHN0YXRlLCBbJ2NvbXBvbmVudHMnLCAndmlld2VyJ10sIHt9KTtcbn07XG5leHBvcnQgY29uc3QgY29uZmlnID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydjb21wb25lbnRzJywgJ3ZpZXdlcicsICdjb25maWcnXSwge30pO1xufTtcbmV4cG9ydCBjb25zdCBjb21wdXRlZCA9IGJvb2tJZCA9PiBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIF8uZ2V0KHN0YXRlLCBbJ2NvbXBvbmVudHMnLCAndmlld2VyJywgJ2NvbnRlbnRzJywgYm9va0lkLCAnY29tcHV0ZWQnXSwgW10pO1xufTtcbmV4cG9ydCBjb25zdCBuYXZEYXRhID0gYm9va0lkID0+IHN0YXRlID0+IHtcbiAgICBjb25zdCBib29rQ29udGVudCA9IGNvbW1vbi5lbnRpdHkoJ2Jvb2tDb250ZW50cycsIGJvb2tJZCkoc3RhdGUpO1xuICAgIHJldHVybiBfLmdldChib29rQ29udGVudCwgJ25hdicsIFtdKTtcbn07XG5leHBvcnQgY29uc3QgcHJvZ3Jlc3MgPSBib29rSWQgPT4gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydjb21wb25lbnRzJywgJ3ZpZXdlcicsICdwcm9ncmVzcycsIGJvb2tJZF0sIHt9KTtcbn07XG4vLyBzdWIgY29tcG9uZW50c1xuZXhwb3J0IGNvbnN0IHBhbmVsID0gY3JlYXRlU2VsZWN0b3Ioc2VsZiwgX3NlbGYgPT4ge1xuICAgIHJldHVybiBfLmdldChfc2VsZiwgWydjb21wb25lbnRzJywgJ3BhbmVsJ10sIHt9KTtcbn0pO1xuZXhwb3J0IGNvbnN0IHByZWZlcmVuY2UgPSBjcmVhdGVTZWxlY3RvcihzZWxmLCBfc2VsZiA9PiB7XG4gICAgcmV0dXJuIF8uZ2V0KF9zZWxmLCBbJ2NvbXBvbmVudHMnLCAncHJlZmVyZW5jZSddLCB7fSk7XG59KTtcbmV4cG9ydCBjb25zdCBuYXZpZ2F0aW9uID0gY3JlYXRlU2VsZWN0b3Ioc2VsZiwgX3NlbGYgPT4ge1xuICAgIHJldHVybiBfLmdldChfc2VsZiwgWydjb21wb25lbnRzJywgJ25hdmlnYXRpb24nXSwge30pO1xufSk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3NlbGVjdG9ycy92aWV3ZXIudHNcbiAqKi8iLCJpbXBvcnQgQWxlcnQgZnJvbSAnLi9BbGVydCc7XG5pbXBvcnQgQWxlcnRzIGZyb20gJy4vQWxlcnRzJztcbmV4cG9ydCB7IEFsZXJ0cywgQWxlcnQgfTtcbmV4cG9ydCBkZWZhdWx0IEFsZXJ0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9BbGVydC9pbmRleC50c3hcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEljb24gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgQ1NTTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0FsZXJ0LnNjc3MnKTtcbmxldCBBbGVydCA9IGNsYXNzIEFsZXJ0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLnByb3BzLnR5cGUgPyB0aGlzLnByb3BzLnR5cGUgOiAnc3VjY2Vzcyc7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCB0aGlzLnByb3BzLnZpc2libGUgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IGBhbGVydC0tJHt0eXBlfWAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IFwiYWxlcnQtY2xvc2VcIiB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSWNvbiwgeyBvbkNsaWNrOiB0aGlzLnByb3BzLm9uUmVxdWVzdENsb3NlLCBuYW1lOiBcImNsb3NlXCIsIHNpemU6IDE1IH0pKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IFwiY29udGVudFwiIH0sIHRoaXMucHJvcHMubWVzc2FnZSkpKSkpO1xuICAgIH1cbn07XG5BbGVydCA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgQWxlcnQpO1xuZXhwb3J0IGRlZmF1bHQgQWxlcnQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0LnRzeFxuICoqLyIsImltcG9ydCBJY29uIGZyb20gJy4vSWNvbic7XG5leHBvcnQgZGVmYXVsdCBJY29uO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JY29uL2luZGV4LnRzXG4gKiovIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgc3ZnSWNvbnMgZnJvbSAnLi9zdmctaWNvbnMnO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9JY29uLnNjc3MnKTtcbmxldCBJY29uID0gY2xhc3MgSWNvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB7IG5hbWUsIG9uQ2xpY2ssIHNpemUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBjbGFzc05hbWUgPSBjbGFzc25hbWVzKCdpY29uJywgYGljb24tJHtuYW1lfWAsIHRoaXMucHJvcHMuY2xhc3NOYW1lKTtcbiAgICAgICAgaWYgKHR5cGVvZiBzdmdJY29uc1tuYW1lXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ljb24gbmFtZSAoJXMpIG5vdCBmb3VuZCEgJywgbmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2l6ZSA9IHNpemUgfHwgMzA7XG4gICAgICAgIGNvbnN0IHN2Z1dyYXBTdHlsZSA9IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgdG9wOiAnNTAlJyxcbiAgICAgICAgICAgIG1hcmdpblRvcDogLXNpemUgLyAyXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBzdHlsZU5hbWU6IFwiaWNvblwiLCBzdHlsZTogeyBtaW5XaWR0aDogc2l6ZSwgbWluSGVpZ2h0OiBzaXplIH0sIGNsYXNzTmFtZTogY2xhc3NOYW1lLCBvbkNsaWNrOiBvbkNsaWNrIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHN2Z1dyYXBTdHlsZSB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19hc3NpZ24oe30sIHN2Z0ljb25zW25hbWVdLnZpZXdCb3ggJiYgeyB2aWV3Qm94OiBzdmdJY29uc1tuYW1lXS52aWV3Qm94IH0sIHsgd2lkdGg6IHNpemUsIGhlaWdodDogc2l6ZSwgc3R5bGVOYW1lOiBcInN2Zy1zaGFwZVwiIH0pLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7IGQ6IHN2Z0ljb25zW25hbWVdLnBhdGggfSkpKSkpO1xuICAgIH1cbn07XG5JY29uID0gX19kZWNvcmF0ZShbXG4gICAgQ1NTTW9kdWxlcyhzdHlsZXMsIHtcbiAgICAgICAgYWxsb3dNdWx0aXBsZTogdHJ1ZVxuICAgIH0pXG5dLCBJY29uKTtcbmV4cG9ydCBkZWZhdWx0IEljb247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vSWNvbi50c3hcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjbGFzc25hbWVzXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCJcbiAqKiBtb2R1bGUgaWQgPSAxMjBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjbG9zZToge1xuICAgICAgICBwYXRoOiAnTTcuNDggOGwzLjc1IDMuNzUtMS40OCAxLjQ4TDYgOS40OGwtMy43NSAzLjc1LTEuNDgtMS40OEw0LjUyIDggLjc3IDQuMjVsMS40OC0xLjQ4TDYgNi41MmwzLjc1LTMuNzUgMS40OCAxLjQ4eicsXG4gICAgICAgIHZpZXdCb3g6ICcwIDAgMTIgMTYnXG4gICAgfSxcbiAgICBzdGFyOiB7XG4gICAgICAgIHBhdGg6ICdNMTQgNmwtNC45LS42NEw3IDEgNC45IDUuMzYgMCA2bDMuNiAzLjI2TDIuNjcgMTQgNyAxMS42NyAxMS4zMyAxNGwtLjkzLTQuNzR6JyxcbiAgICB9LFxuICAgIHVzZXJzOiB7XG4gICAgICAgIHBhdGg6ICdNMTYgMTFjMS42NiAwIDIuOTktMS4zNCAyLjk5LTNTMTcuNjYgNSAxNiA1Yy0xLjY2IDAtMyAxLjM0LTMgM3MxLjM0IDMgMyAzem0tOCAwYzEuNjYgMCAyLjk5LTEuMzQgMi45OS0zUzkuNjYgNSA4IDVDNi4zNCA1IDUgNi4zNCA1IDhzMS4zNCAzIDMgM3ptMCAyYy0yLjMzIDAtNyAxLjE3LTcgMy41VjE5aDE0di0yLjVjMC0yLjMzLTQuNjctMy41LTctMy41em04IDBjLS4yOSAwLS42Mi4wMi0uOTcuMDUgMS4xNi44NCAxLjk3IDEuOTcgMS45NyAzLjQ1VjE5aDZ2LTIuNWMwLTIuMzMtNC42Ny0zLjUtNy0zLjV6JyxcbiAgICB9LFxuICAgIGZvbGRlcjoge1xuICAgICAgICBwYXRoOiAnTTEwIDRINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWOGMwLTEuMS0uOS0yLTItMmgtOGwtMi0yeicsXG4gICAgfSxcbiAgICBkYXRhYmFzZToge1xuICAgICAgICBwYXRoOiAnTTIwLjIgNS45bC44LS44QzE5LjYgMy43IDE3LjggMyAxNiAzcy0zLjYuNy01IDIuMWwuOC44QzEzIDQuOCAxNC41IDQuMiAxNiA0LjJzMyAuNiA0LjIgMS43em0tLjkuOGMtLjktLjktMi4xLTEuNC0zLjMtMS40cy0yLjQuNS0zLjMgMS40bC44LjhjLjctLjcgMS42LTEgMi41LTEgLjkgMCAxLjguMyAyLjUgMWwuOC0uOHpNMTkgMTNoLTJWOWgtMnY0SDVjLTEuMSAwLTIgLjktMiAydjRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMnYtNGMwLTEuMS0uOS0yLTItMnpNOCAxOEg2di0yaDJ2MnptMy41IDBoLTJ2LTJoMnYyem0zLjUgMGgtMnYtMmgydjJ6J1xuICAgIH0sXG4gICAgc3RhdGlzdGljczoge1xuICAgICAgICBwYXRoOiAnTTIxIDJIM2MtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmg3djJIOHYyaDh2LTJoLTJ2LTJoN2MxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0wIDE0SDNWNGgxOHYxMnonLFxuICAgIH0sXG4gICAgYm9va3M6IHtcbiAgICAgICAgcGF0aDogJ00yMC41NCA1LjIzbC0xLjM5LTEuNjhDMTguODggMy4yMSAxOC40NyAzIDE4IDNINmMtLjQ3IDAtLjg4LjIxLTEuMTYuNTVMMy40NiA1LjIzQzMuMTcgNS41NyAzIDYuMDIgMyA2LjVWMTljMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY2LjVjMC0uNDgtLjE3LS45My0uNDYtMS4yN3pNMTIgMTcuNUw2LjUgMTJIMTB2LTJoNHYyaDMuNUwxMiAxNy41ek01LjEyIDVsLjgxLTFoMTJsLjk0IDFINS4xMnonLFxuICAgIH0sXG4gICAgYmFjazoge1xuICAgICAgICAvLyBwYXRoOiAnTTczMiA4MzJsLTU1IDU1bC01MDUgLTUwNWw1MDUgLTUwNWw1NSA1NGwtNDUxIDQ1MXonXG4gICAgICAgIC8vIHBhdGg6ICdNMTQgNmwtNC45LS42NEw3IDEgNC45IDUuMzYgMCA2bDMuNiAzLjI2TDIuNjcgMTQgNyAxMS42NyAxMS4zMyAxNGwtLjkzLTQuNzR6JyxcbiAgICAgICAgcGF0aDogJ20gMjYsMjUgYyAtMC40Njc1NzQsMCAtMC45MDk0MzQsMC4xNjg2NSAtMS4yNSwwLjQzNzUgQyAyNC41NTUyNzksMjUuNTkxMjE1IDYuNjEzMDUxNiw0Mi41NDYyODUgNi40Njg3NSw0Mi43MTg3NSA2LjE3ODIzMzIsNDMuMDY1OTYgNiw0My41MTE4NyA2LDQ0IDYsNDQuNTE5NDYgNi4yMDY1NTY2LDQ0Ljk4ODE4IDYuNTMxMjUsNDUuMzQzNzUgNi42NjgzOTkyLDQ1LjQ5Mzk0MSAyNC42MjUsNjIuNDM3NSAyNC42MjUsNjIuNDM3NSBjIDAuNzU5ODQyLDAuNzI1MTUyIDIuMTIxODQyLDAuNzAwNDIxIDIuODQzNzUsLTAuMDYyNSAwLjcyMTkwOCwtMC43NjI5MyAwLjY3MjI0NCwtMi4xMjUwOTkgLTAuMDkzNzUsLTIuODQzNzUgTCAxMy4wMzEyNSw0NiA2NCw0NiBjIDEzLjg4ODg3MSwwIDI1LjY2MDM5MiwxMS42Mzk1NSAyNiwyNi4wMzEyNSAwLjAwMzUsMC4xNDA1NTcgMCwwLjc3NDg1IDAsMC45Njg3NSAwLDEuMTA4IDAuODkyLDIgMiwyIDEuMTA4LDAgMiwtMC44OTIgMiwtMiBsIDAsLTEuMDYyNSBDIDkzLjYxMDIwOCw1NS40MTk0IDgwLjExODUyOSw0MiA2NCw0MiBMIDEzLjAzMTI1LDQyIEMgMTMuMDMxMjUsNDIgMjcuMzYyNzMyLDI4LjQ5NTk1OSAyNy41LDI4LjM0Mzc1IDI3LjgxOTcxLDI3Ljk4OTI1IDI4LDI3LjUxNDk3IDI4LDI3IDI4LDI1Ljg5NTQzIDI3LjEwNDU2OSwyNSAyNiwyNSB6JyxcbiAgICAgICAgdmlld0JveDogJzAgMCAxMDAgMTI1J1xuICAgIH0sXG4gICAgcHJlZmVyZW5jZToge1xuICAgICAgICBwYXRoOiAnTSAxNy43ODEyNSA4Ljk2ODc1IEEgMi4wMDAyIDIuMDAwMiAwIDAgMCAxNiAxMSBMIDE2IDU2LjI1IEMgMTIuMDA4MTg4IDU3LjE2ODMwMiA5IDYwLjc0MTQwNiA5IDY1IEMgOSA2OS4yNTkyMjQgMTIuMDA3NDI3IDcyLjg2MzUzNCAxNiA3My43ODEyNSBMIDE2IDg5IEEgMi4wMDAyIDIuMDAwMiAwIDEgMCAyMCA4OSBMIDIwIDczLjc4MTI1IEMgMjMuOTkyNTczIDcyLjg2MzUzNCAyNyA2OS4yNTkyMjQgMjcgNjUgQyAyNyA2MC43NDE0MDYgMjMuOTkxODEyIDU3LjE2ODMwMiAyMCA1Ni4yNSBMIDIwIDExIEEgMi4wMDAyIDIuMDAwMiAwIDAgMCAxNy43ODEyNSA4Ljk2ODc1IHogTSA0OS43ODEyNSA4Ljk2ODc1IEEgMi4wMDAyIDIuMDAwMiAwIDAgMCA0OCAxMSBMIDQ4IDI2LjI1IEMgNDQuMDA4MTg4IDI3LjE2ODMwNSA0MSAzMC43NDE0MjMgNDEgMzUgQyA0MSAzOS4yNTkxMiA0NC4wMDc0MjcgNDIuODYzNTExIDQ4IDQzLjc4MTI1IEwgNDggODkgQSAyLjAwMDIgMi4wMDAyIDAgMSAwIDUyIDg5IEwgNTIgNDMuNzgxMjUgQyA1NS45OTI1NzMgNDIuODYzNTExIDU5IDM5LjI1OTEyIDU5IDM1IEMgNTkgMzAuNzQxNDIzIDU1Ljk5MTgxMiAyNy4xNjgzMDUgNTIgMjYuMjUgTCA1MiAxMSBBIDIuMDAwMiAyLjAwMDIgMCAwIDAgNDkuNzgxMjUgOC45Njg3NSB6IE0gODEuNzgxMjUgOC45Njg3NSBBIDIuMDAwMiAyLjAwMDIgMCAwIDAgODAgMTEgTCA4MCA1Ni4yNSBDIDc2LjAwODE4OCA1Ny4xNjgzMDIgNzMgNjAuNzQxNDA2IDczIDY1IEMgNzMgNjkuMjU5MjI0IDc2LjAwNzQyNyA3Mi44NjM1MzQgODAgNzMuNzgxMjUgTCA4MCA4OSBBIDIuMDAwMiAyLjAwMDIgMCAxIDAgODQgODkgTCA4NCA3My43ODEyNSBDIDg3Ljk5MjU3MyA3Mi44NjM1MzQgOTEgNjkuMjU5MjI0IDkxIDY1IEMgOTEgNjAuNzQxNDA2IDg3Ljk5MTgxMiA1Ny4xNjgzMDIgODQgNTYuMjUgTCA4NCAxMSBBIDIuMDAwMiAyLjAwMDIgMCAwIDAgODEuNzgxMjUgOC45Njg3NSB6IE0gNTAgMzAgQyA1Mi43ODUxMTYgMzAgNTUgMzIuMjE0ODggNTUgMzUgQyA1NSAzNy43ODUxMiA1Mi43ODUxMTYgNDAgNTAgNDAgQyA0Ny4yMTQ4ODQgNDAgNDUgMzcuNzg1MTIgNDUgMzUgQyA0NSAzMi4yMTQ4OCA0Ny4yMTQ4ODQgMzAgNTAgMzAgeiBNIDE4IDYwIEMgMjAuNzg1MTE2IDYwIDIzIDYyLjIxNDkgMjMgNjUgQyAyMyA2Ny43ODUyIDIwLjc4NTExNiA3MCAxOCA3MCBDIDE1LjIxNDg4NCA3MCAxMyA2Ny43ODUyIDEzIDY1IEMgMTMgNjIuMjE0OSAxNS4yMTQ4ODQgNjAgMTggNjAgeiBNIDgyIDYwIEMgODQuNzg1MTE2IDYwIDg3IDYyLjIxNDkgODcgNjUgQyA4NyA2Ny43ODUyIDg0Ljc4NTExNiA3MCA4MiA3MCBDIDc5LjIxNDg4NCA3MCA3NyA2Ny43ODUyIDc3IDY1IEMgNzcgNjIuMjE0OSA3OS4yMTQ4ODQgNjAgODIgNjAgeiAnLFxuICAgICAgICB2aWV3Qm94OiAnMCAwIDEwMCAxMjUnXG4gICAgfSxcbiAgICBmb250OiB7XG4gICAgICAgIC8vIHBhdGg6ICdNMTQgOC43N3YtMS42bC0xLjk0LS42NC0uNDUtMS4wOS44OC0xLjg0LTEuMTMtMS4xMy0xLjgxLjkxLTEuMDktLjQ1LS42OS0xLjkyaC0xLjZsLS42MyAxLjk0LTEuMTEuNDUtMS44NC0uODgtMS4xMyAxLjEzLjkxIDEuODEtLjQ1IDEuMDlMMCA3LjIzdjEuNTlsMS45NC42NC40NSAxLjA5LS44OCAxLjg0IDEuMTMgMS4xMyAxLjgxLS45MSAxLjA5LjQ1LjY5IDEuOTJoMS41OWwuNjMtMS45NCAxLjExLS40NSAxLjg0Ljg4IDEuMTMtMS4xMy0uOTItMS44MS40Ny0xLjA5TDE0IDguNzV2LjAyek03IDExYy0xLjY2IDAtMy0xLjM0LTMtM3MxLjM0LTMgMy0zIDMgMS4zNCAzIDMtMS4zNCAzLTMgM3onXG4gICAgICAgIHBhdGg6ICdNMTQgNmwtNC45LS42NEw3IDEgNC45IDUuMzYgMCA2bDMuNiAzLjI2TDIuNjcgMTQgNyAxMS42NyAxMS4zMyAxNGwtLjkzLTQuNzR6JyxcbiAgICB9LFxuICAgIGFycm93UmlnaHQ6IHtcbiAgICAgICAgcGF0aDogJ00tMjkwLjksNDMwLjFsLTAuNy0wLjdsOC4yLTguNmwtOC4yLTguMmwwLjctMC43bDguOSw4LjlMLTI5MC45LDQzMC4xeicsXG4gICAgICAgIHZpZXdCb3g6ICctMjkyIDQxMS45IDExIDE4J1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vc3ZnLWljb25zLnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3QtY3NzLW1vZHVsZXNcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlYWN0LWNzcy1tb2R1bGVzXCJcbiAqKiBtb2R1bGUgaWQgPSAxMjJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vSWNvbi5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9JY29uLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxMjNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnN2Zy1zaGFwZV80MjNXYiB7XFxuICBmaWxsOiBjdXJyZW50Q29sb3I7XFxuICBvdmVyZmxvdzogaGlkZGVuOyB9XFxuXFxuLmljb25fMnM2VDMge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwic3ZnLXNoYXBlXCI6IFwic3ZnLXNoYXBlXzQyM1diXCIsXG5cdFwiaWNvblwiOiBcImljb25fMnM2VDNcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9JY29uLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxMjRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqIG1vZHVsZSBpZCA9IDEyNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2Fzc2lnbiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduJyk7XG5cbnZhciBfYXNzaWduMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Fzc2lnbik7XG5cbnZhciBfc3RyaW5naWZ5ID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5Jyk7XG5cbnZhciBfc3RyaW5naWZ5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N0cmluZ2lmeSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheTIgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheScpO1xuXG52YXIgX3NsaWNlZFRvQXJyYXkzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2xpY2VkVG9BcnJheTIpO1xuXG52YXIgX2dldEl0ZXJhdG9yMiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9nZXQtaXRlcmF0b3InKTtcblxudmFyIF9nZXRJdGVyYXRvcjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRJdGVyYXRvcjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIElzb21vcnBoaWMgQ1NTIHN0eWxlIGxvYWRlciBmb3IgV2VicGFja1xuICpcbiAqIENvcHlyaWdodCDCqSAyMDE1LTIwMTYgS3JpYXNvZnQsIExMQy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UudHh0IGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIHByZWZpeCA9ICdzJztcbnZhciBpbnNlcnRlZCA9IHt9O1xuXG4vLyBCYXNlNjQgZW5jb2RpbmcgYW5kIGRlY29kaW5nIC0gVGhlIFwiVW5pY29kZSBQcm9ibGVtXCJcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3dCYXNlNjQvQmFzZTY0X2VuY29kaW5nX2FuZF9kZWNvZGluZyNUaGVfVW5pY29kZV9Qcm9ibGVtXG5mdW5jdGlvbiBiNjRFbmNvZGVVbmljb2RlKHN0cikge1xuICByZXR1cm4gYnRvYShlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC8lKFswLTlBLUZdezJ9KS9nLCBmdW5jdGlvbiAobWF0Y2gsIHAxKSB7XG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoJzB4JyArIHAxKTtcbiAgfSkpO1xufVxuXG4vKipcbiAqIFJlbW92ZSBzdHlsZS9saW5rIGVsZW1lbnRzIGZvciBzcGVjaWZpZWQgbm9kZSBJRHNcbiAqIGlmIHRoZXkgYXJlIG5vIGxvbmdlciByZWZlcmVuY2VkIGJ5IFVJIGNvbXBvbmVudHMuXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZUNzcyhpZHMpIHtcbiAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gKDAsIF9nZXRJdGVyYXRvcjMuZGVmYXVsdCkoaWRzKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgdmFyIGlkID0gX3N0ZXAudmFsdWU7XG5cbiAgICAgIGlmICgtLWluc2VydGVkW2lkXSA8PSAwKSB7XG4gICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4ICsgaWQpO1xuICAgICAgICBpZiAoZWxlbSkge1xuICAgICAgICAgIGVsZW0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBFeGFtcGxlOlxuICogICAvLyBJbnNlcnQgQ1NTIHN0eWxlcyBvYmplY3QgZ2VuZXJhdGVkIGJ5IGBjc3MtbG9hZGVyYCBpbnRvIERPTVxuICogICB2YXIgcmVtb3ZlQ3NzID0gaW5zZXJ0Q3NzKFtbMSwgJ2JvZHkgeyBjb2xvcjogcmVkOyB9J11dKTtcbiAqXG4gKiAgIC8vIFJlbW92ZSBpdCBmcm9tIHRoZSBET01cbiAqICAgcmVtb3ZlQ3NzKCk7XG4gKi9cbmZ1bmN0aW9uIGluc2VydENzcyhzdHlsZXMsIG9wdGlvbnMpIHtcbiAgdmFyIF9PYmplY3QkYXNzaWduID0gKDAsIF9hc3NpZ24yLmRlZmF1bHQpKHtcbiAgICByZXBsYWNlOiBmYWxzZSxcbiAgICBwcmVwZW5kOiBmYWxzZVxuICB9LCBvcHRpb25zKTtcblxuICB2YXIgcmVwbGFjZSA9IF9PYmplY3QkYXNzaWduLnJlcGxhY2U7XG4gIHZhciBwcmVwZW5kID0gX09iamVjdCRhc3NpZ24ucHJlcGVuZDtcblxuXG4gIHZhciBpZHMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgX3N0eWxlcyRpID0gKDAsIF9zbGljZWRUb0FycmF5My5kZWZhdWx0KShzdHlsZXNbaV0sIDQpO1xuXG4gICAgdmFyIG1vZHVsZUlkID0gX3N0eWxlcyRpWzBdO1xuICAgIHZhciBjc3MgPSBfc3R5bGVzJGlbMV07XG4gICAgdmFyIG1lZGlhID0gX3N0eWxlcyRpWzJdO1xuICAgIHZhciBzb3VyY2VNYXAgPSBfc3R5bGVzJGlbM107XG5cbiAgICB2YXIgaWQgPSBtb2R1bGVJZCArICctJyArIGk7XG5cbiAgICBpZHMucHVzaChpZCk7XG5cbiAgICBpZiAoaW5zZXJ0ZWRbaWRdKSB7XG4gICAgICBpZiAoIXJlcGxhY2UpIHtcbiAgICAgICAgaW5zZXJ0ZWRbaWRdKys7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGluc2VydGVkW2lkXSA9IDE7XG5cbiAgICB2YXIgZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByZWZpeCArIGlkKTtcbiAgICB2YXIgY3JlYXRlID0gZmFsc2U7XG5cbiAgICBpZiAoIWVsZW0pIHtcbiAgICAgIGNyZWF0ZSA9IHRydWU7XG5cbiAgICAgIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgZWxlbS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dC9jc3MnKTtcbiAgICAgIGVsZW0uaWQgPSBwcmVmaXggKyBpZDtcblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgY3NzVGV4dCA9IGNzcztcbiAgICBpZiAoc291cmNlTWFwKSB7XG4gICAgICBjc3NUZXh0ICs9ICdcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LCcgKyBiNjRFbmNvZGVVbmljb2RlKCgwLCBfc3RyaW5naWZ5Mi5kZWZhdWx0KShzb3VyY2VNYXApKSArICcqLyc7XG4gICAgICBjc3NUZXh0ICs9ICdcXG4vKiMgc291cmNlVVJMPScgKyBzb3VyY2VNYXAuZmlsZSArICcqLyc7XG4gICAgfVxuXG4gICAgaWYgKCd0ZXh0Q29udGVudCcgaW4gZWxlbSkge1xuICAgICAgZWxlbS50ZXh0Q29udGVudCA9IGNzc1RleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW0uc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzVGV4dDtcbiAgICB9XG5cbiAgICBpZiAoY3JlYXRlKSB7XG4gICAgICBpZiAocHJlcGVuZCkge1xuICAgICAgICBkb2N1bWVudC5oZWFkLmluc2VydEJlZm9yZShlbGVtLCBkb2N1bWVudC5oZWFkLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChlbGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVtb3ZlQ3NzLmJpbmQobnVsbCwgaWRzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRDc3M7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1xuICoqIG1vZHVsZSBpZCA9IDEyNlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9hc3NpZ25cIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduXCJcbiAqKiBtb2R1bGUgaWQgPSAxMjdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5XCJcbiAqKiBtb2R1bGUgaWQgPSAxMjhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheVwiXG4gKiogbW9kdWxlIGlkID0gMTI5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yXCJcbiAqKiBtb2R1bGUgaWQgPSAxMzBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vQWxlcnQuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0LnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxMzFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmFsZXJ0c19sTll5UyB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IDAgMjBweDtcXG4gIHRvcDogMTBweDtcXG4gIGxlZnQ6IDA7XFxuICB6LWluZGV4OiA5OTk5OyB9XFxuXFxuLmFsZXJ0X1RnNkFMLCAuYWxlcnQtLXN1Y2Nlc3NfaWJJb2wsIC5hbGVydC0tZXJyb3JfMzZpT2QsIC5hbGVydC0td2FybmluZ182XzE5WCB7XFxuICBwYWRkaW5nOiAxMHB4IDA7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYm94LXNoYWRvdzogMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMzIpO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBib3JkZXItcmFkaXVzOiAzcHg7XFxuICB3aWR0aDogNzAwcHg7XFxuICBtYXJnaW46IDAgYXV0byAxMHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNTQwcHgpIHtcXG4gICAgLmFsZXJ0X1RnNkFMLCAuYWxlcnQtLXN1Y2Nlc3NfaWJJb2wsIC5hbGVydC0tZXJyb3JfMzZpT2QsIC5hbGVydC0td2FybmluZ182XzE5WCB7XFxuICAgICAgbWF4LXdpZHRoOiAxMDAlOyB9IH1cXG5cXG4uY29udGVudF8yQ0lMZyB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcGFkZGluZzogMCAzMHB4OyB9XFxuXFxuLmFsZXJ0LWNsb3NlXzNDa3otIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxMHB4O1xcbiAgdG9wOiAxMXB4O1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XFxuXFxuLmFsZXJ0LS1zdWNjZXNzX2liSW9sIHtcXG4gIGJhY2tncm91bmQ6ICM3MmVmYTg7XFxuICBjb2xvcjogIzIwNGQzMzsgfVxcblxcbi5hbGVydC0tZXJyb3JfMzZpT2Qge1xcbiAgYmFja2dyb3VuZDogI2NjMDAwMDtcXG4gIGNvbG9yOiAjZmZmOyB9XFxuXFxuLmFsZXJ0LS13YXJuaW5nXzZfMTlYIHtcXG4gIGJhY2tncm91bmQ6IG9yYW5nZTtcXG4gIGNvbG9yOiBibGFjazsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImFsZXJ0c1wiOiBcImFsZXJ0c19sTll5U1wiLFxuXHRcImFsZXJ0XCI6IFwiYWxlcnRfVGc2QUxcIixcblx0XCJhbGVydC0tc3VjY2Vzc1wiOiBcImFsZXJ0LS1zdWNjZXNzX2liSW9sXCIsXG5cdFwiYWxlcnQtLWVycm9yXCI6IFwiYWxlcnQtLWVycm9yXzM2aU9kXCIsXG5cdFwiYWxlcnQtLXdhcm5pbmdcIjogXCJhbGVydC0td2FybmluZ182XzE5WFwiLFxuXHRcImNvbnRlbnRcIjogXCJjb250ZW50XzJDSUxnXCIsXG5cdFwiYWxlcnQtY2xvc2VcIjogXCJhbGVydC1jbG9zZV8zQ2t6LVwiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9BbGVydC9BbGVydC5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTMyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFsZXJ0IGZyb20gJy4vQWxlcnQnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9BbGVydC5zY3NzJyk7XG5mdW5jdGlvbiBBbGVydHMocHJvcHMpIHtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IHN0eWxlcy5hbGVydHMgfSwgcHJvcHMubWVzc2FnZXMubWFwKChtc2csIGluZGV4KSA9PiAoUmVhY3QuY3JlYXRlRWxlbWVudChBbGVydCwgeyBrZXk6IGluZGV4LCB0eXBlOiBtc2cudHlwZSwgbWVzc2FnZTogbXNnLmNvbnRlbnQsIHZpc2libGU6IG1zZy52aXNpYmxlLCBvblJlcXVlc3RDbG9zZTogKCkgPT4ge1xuICAgICAgICAgICAgcHJvcHMub25SZXF1ZXN0Q2xvc2UobXNnLmlkKTtcbiAgICAgICAgfSB9KSkpKSk7XG59XG5leHBvcnQgZGVmYXVsdCBBbGVydHM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0cy50c3hcbiAqKi8iLCJpbXBvcnQgTW9kYWwgZnJvbSAnLi9Nb2RhbCc7XG5pbXBvcnQgTW9kYWxQbHVzIGZyb20gJy4vTW9kYWxQbHVzJztcbmltcG9ydCBDb25maXJtTW9kYWwgZnJvbSAnLi9Db25maXJtTW9kYWwnO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG5leHBvcnQgKiBmcm9tICcuL01vZGFsJztcbmV4cG9ydCB7IE1vZGFsUGx1cywgQ29uZmlybU1vZGFsIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCBGYWRlIGZyb20gJy4uL0ZhZGUnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9Nb2RhbC5zY3NzJztcbmNsYXNzIE1vZGFsIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBtb2RhbEhlaWdodDogMCxcbiAgICAgICAgICAgIGlzTW9kYWxIaWRkZW46IGZhbHNlLFxuICAgICAgICAgICAgaXNNb2RhbFZlcnRpY2FsQ2VudGVyOiB0cnVlLFxuICAgICAgICAgICAgY2xpY2tzOiAwXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2V0VmlldyA9IHRoaXMuc2V0Vmlldy5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmhpZGVNb2RhbCA9IHRoaXMuaGlkZU1vZGFsLmJpbmQodGhpcyk7XG4gICAgfVxuICAgIGhpZGVNb2RhbCgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vblJlcXVlc3RDbG9zZSgpO1xuICAgICAgICB1dGlscy51bmxvY2tTY3JvbGwoKTtcbiAgICB9XG4gICAgc2V0VmlldygpIHtcbiAgICAgICAgbGV0IG1vZGFsSGVpZ2h0ID0gUmVhY3RET00uZmluZERPTU5vZGUodGhpcy5tb2RhbCkuY2xpZW50SGVpZ2h0O1xuICAgICAgICBsZXQgaXNNb2RhbFZlcnRpY2FsQ2VudGVyID0gdHJ1ZTtcbiAgICAgICAgbGV0IGRvY3VtZW50SGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7XG4gICAgICAgIGlmICh3aW5kb3cuaW5uZXJIZWlnaHQgPCBtb2RhbEhlaWdodCkge1xuICAgICAgICAgICAgaXNNb2RhbFZlcnRpY2FsQ2VudGVyID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHdpbmRvdy5pbm5lckhlaWdodCA+IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0KSB7XG4gICAgICAgICAgICBkb2N1bWVudEhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG1vZGFsSGVpZ2h0LFxuICAgICAgICAgICAgaXNNb2RhbFZlcnRpY2FsQ2VudGVyLFxuICAgICAgICAgICAgZG9jdW1lbnRIZWlnaHRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgfVxuICAgIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgICAgICByZXR1cm4gIV8uaXNFcXVhbCh0aGlzLnN0YXRlLCBuZXh0U3RhdGUpIHx8ICFfLmlzRXF1YWwodGhpcy5wcm9wcywgbmV4dFByb3BzKTtcbiAgICB9XG4gICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgICAgICAvLyBtb2RhbCBzaG93XG4gICAgICAgIGlmICghcHJldlByb3BzLm9wZW4gJiYgdGhpcy5wcm9wcy5vcGVuID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0aGlzLnNldFZpZXcoKTtcbiAgICAgICAgICAgIHV0aWxzLmxvY2tTY3JvbGwoKTtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldFZpZXcpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG1vZGFsIGhpZGVcbiAgICAgICAgaWYgKHByZXZQcm9wcy5vcGVuID09PSB0cnVlICYmIHRoaXMucHJvcHMub3BlbiA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldFZpZXcpO1xuICAgICAgICAgICAgdXRpbHMudW5sb2NrU2Nyb2xsKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldFZpZXcpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgb3BlbiB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgZGVmYXVsdENsYXNzID0gJ21vZGFsJztcbiAgICAgICAgY29uc3QgbW9kYWxJZCA9IGBtb2RhbC0keyhuZXcgRGF0ZSgpKS52YWx1ZU9mKCl9YDtcbiAgICAgICAgbGV0IGNsYXNzTmFtZSA9IHRoaXMucHJvcHMuY2xhc3NOYW1lID8gYCR7ZGVmYXVsdENsYXNzfSAke3RoaXMucHJvcHMuY2xhc3NOYW1lfWAgOiBkZWZhdWx0Q2xhc3M7XG4gICAgICAgIGxldCB3aWR0aCA9IHRoaXMucHJvcHMud2lkdGggPyB0aGlzLnByb3BzLndpZHRoIDogNTAwO1xuICAgICAgICBsZXQgaGVpZ2h0ID0gdGhpcy5zdGF0ZS5tb2RhbEhlaWdodDtcbiAgICAgICAgbGV0IHN0eWxlID0ge1xuICAgICAgICAgICAgYmFja2Ryb3A6IHt9LFxuICAgICAgICAgICAgdmVydGljYWxDZW50ZXI6IHt9LFxuICAgICAgICAgICAgc2Nyb2xsOiB7fSxcbiAgICAgICAgICAgIG1vZGFsOiB7fVxuICAgICAgICB9O1xuICAgICAgICBzdHlsZS5iYWNrZHJvcCA9IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICdyZ2JhKDAsIDAsIDAsIDAuMjMpJyxcbiAgICAgICAgICAgIG92ZXJmbG93OiAnc2Nyb2xsJ1xuICAgICAgICB9O1xuICAgICAgICBzdHlsZS52ZXJ0aWNhbENlbnRlciA9IHtcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgbWFyZ2luVG9wOiAtaGVpZ2h0IC8gMixcbiAgICAgICAgICAgIG1hcmdpbkxlZnQ6IC13aWR0aCAvIDIsXG4gICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgIGxlZnQ6ICc1MCUnLFxuICAgICAgICAgICAgdG9wOiAnNTAlJ1xuICAgICAgICB9O1xuICAgICAgICBzdHlsZS5zY3JvbGwgPSB7XG4gICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgIG1hcmdpbjogJzUwcHggYXV0bydcbiAgICAgICAgfTtcbiAgICAgICAgc3R5bGUubW9kYWwgPSB7fTtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuaXNNb2RhbFZlcnRpY2FsQ2VudGVyKSB7XG4gICAgICAgICAgICBzdHlsZS5tb2RhbCA9IE9iamVjdC5hc3NpZ24oe30sIHN0eWxlLm1vZGFsLCBzdHlsZS52ZXJ0aWNhbENlbnRlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdHlsZS5tb2RhbCA9IE9iamVjdC5hc3NpZ24oe30sIHN0eWxlLm1vZGFsLCBzdHlsZS5zY3JvbGwpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChGYWRlLCBudWxsLCBvcGVuID09PSB0cnVlICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgb25DbGljazogZSA9PiB7XG4gICAgICAgICAgICAgICAgLy8g5L2/55So6Zi75q2i5YaS5rOh5Lya6YCg5oiQ6Zeu6aKYXG4gICAgICAgICAgICAgICAgaWYgKGUudGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoYCMke21vZGFsSWR9YCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oaWRlTW9kYWwoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBjbGFzc05hbWU6IHN0eWxlc1snbW9kYWwtYmFja2Ryb3AnXSwgc3R5bGU6IHN0eWxlLmJhY2tkcm9wIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgaWQ6IG1vZGFsSWQsIHN0eWxlOiBzdHlsZS5tb2RhbCwgY2xhc3NOYW1lOiBgJHtzdHlsZXNbJ21vZGFsJ119ICR7Y2xhc3NOYW1lfWAsIHJlZjogcmVmID0+IHsgdGhpcy5tb2RhbCA9IHJlZjsgfSB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKSkpKSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LWRvbVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVhY3QtZG9tXCJcbiAqKiBtb2R1bGUgaWQgPSAxMzZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBGYWRlIGZyb20gJy4vRmFkZSc7XG5leHBvcnQgZGVmYXVsdCBGYWRlO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9GYWRlL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdENTU1RyYW5zaXRpb25Hcm91cCBmcm9tICdyZWFjdC1hZGRvbnMtY3NzLXRyYW5zaXRpb24tZ3JvdXAnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9GYWRlLnNjc3MnKTtcbmV4cG9ydCBkZWZhdWx0IHByb3BzID0+IHtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3RDU1NUcmFuc2l0aW9uR3JvdXAsIHsgY29tcG9uZW50OiBcImRpdlwiLCB0cmFuc2l0aW9uTmFtZTogc3R5bGVzLCB0cmFuc2l0aW9uRW50ZXJUaW1lb3V0OiAzMDAsIHRyYW5zaXRpb25MZWF2ZVRpbWVvdXQ6IDMwMCB9LCBwcm9wcy5jaGlsZHJlbikpO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LWFkZG9ucy1jc3MtdHJhbnNpdGlvbi1ncm91cFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVhY3QtYWRkb25zLWNzcy10cmFuc2l0aW9uLWdyb3VwXCJcbiAqKiBtb2R1bGUgaWQgPSAxMzlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vRmFkZS5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS10aW1lOiAuM3M7IH1cXG5cXG4uZW50ZXJfYjA4bEYge1xcbiAgb3BhY2l0eTogMC4wMTtcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgdmFyKC0tdGltZSkgZWFzZS1pbjsgfVxcblxcbi5lbnRlckFjdGl2ZV8ybFBHeiB7XFxuICBvcGFjaXR5OiAxOyB9XFxuXFxuLmxlYXZlXzNTMlEtIHtcXG4gIG9wYWNpdHk6IDE7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IHZhcigtLXRpbWUpIGVhc2UtaW47IH1cXG5cXG4ubGVhdmVBY3RpdmVfMmk0cUgge1xcbiAgb3BhY2l0eTogMDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImVudGVyXCI6IFwiZW50ZXJfYjA4bEZcIixcblx0XCJlbnRlckFjdGl2ZVwiOiBcImVudGVyQWN0aXZlXzJsUEd6XCIsXG5cdFwibGVhdmVcIjogXCJsZWF2ZV8zUzJRLVwiLFxuXHRcImxlYXZlQWN0aXZlXCI6IFwibGVhdmVBY3RpdmVfMmk0cUhcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vTW9kYWwuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm1vZGFsXzIwQVoxIHtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNoYWRvdzogMCAzcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xcbiAgYm9yZGVyLXJhZGl1czogM3B4OyB9XFxuICAubW9kYWxfMjBBWjEgLmljb24tY2xvc2VfNXV1TGEge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cXG5cXG4ubW9kYWwtYmFja2Ryb3BfM3JxMGsge1xcbiAgei1pbmRleDogOTAwOyB9XFxuXFxuLm1vZGFsLWJvZHlfMmdUMjMge1xcbiAgbWFyZ2luOiAxMHB4IDAgMDsgfVxcblxcbi5tb2RhbC1oZWFkZXJfMmR6Njgge1xcbiAgbWFyZ2luOiAxMHB4IDA7IH1cXG5cXG4ubW9kYWwtdGl0bGVfOHBPZkUge1xcbiAgZm9udC1zaXplOiAxLjRyZW07XFxuICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgY29sb3I6ICMzMzM7XFxuICBtYXJnaW46IDVweCAwOyB9XFxuXFxuLm1vZGFsLWZvb3Rlcl9meVp0UyB7XFxuICBib3JkZXItdG9wOiAzcHggc29saWQgI2U5ZWJmMjtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxcbiAgLm1vZGFsLWZvb3Rlcl9meVp0UyAuYnRuLXJlZF8zem9taSB7XFxuICAgIGZsb2F0OiBsZWZ0O1xcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxcbiAgLm1vZGFsLWZvb3Rlcl9meVp0UyBidXR0b24ge1xcbiAgICBtYXJnaW46IDVweCAwIDVweCAxMHB4OyB9XFxuXFxuLm1vZGFsLWNvbnRlbnRfM1pJSGIge1xcbiAgbWFyZ2luOiAxNXB4IDA7XFxuICBsaW5lLWhlaWdodDogMS41OyB9XFxuXFxuLmNvbmZpcm0tbW9kYWxfazVHRjAge1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIHBhZGRpbmc6IDIwcHggMzBweDsgfVxcbiAgLmNvbmZpcm0tbW9kYWxfazVHRjAgcCB7XFxuICAgIGZvbnQtc2l6ZTogMS4ycmVtOyB9XFxuXFxuLm1vZGFsLXBsdXNfMV9UU1Qge1xcbiAgcGFkZGluZzogMjBweCAzMHB4OyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwibW9kYWxcIjogXCJtb2RhbF8yMEFaMVwiLFxuXHRcImljb24tY2xvc2VcIjogXCJpY29uLWNsb3NlXzV1dUxhXCIsXG5cdFwibW9kYWwtYmFja2Ryb3BcIjogXCJtb2RhbC1iYWNrZHJvcF8zcnEwa1wiLFxuXHRcIm1vZGFsLWJvZHlcIjogXCJtb2RhbC1ib2R5XzJnVDIzXCIsXG5cdFwibW9kYWwtaGVhZGVyXCI6IFwibW9kYWwtaGVhZGVyXzJkejY4XCIsXG5cdFwibW9kYWwtdGl0bGVcIjogXCJtb2RhbC10aXRsZV84cE9mRVwiLFxuXHRcIm1vZGFsLWZvb3RlclwiOiBcIm1vZGFsLWZvb3Rlcl9meVp0U1wiLFxuXHRcImJ0bi1yZWRcIjogXCJidG4tcmVkXzN6b21pXCIsXG5cdFwibW9kYWwtY29udGVudFwiOiBcIm1vZGFsLWNvbnRlbnRfM1pJSGJcIixcblx0XCJjb25maXJtLW1vZGFsXCI6IFwiY29uZmlybS1tb2RhbF9rNUdGMFwiLFxuXHRcIm1vZGFsLXBsdXNcIjogXCJtb2RhbC1wbHVzXzFfVFNUXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAnLi9Nb2RhbCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vTW9kYWwuc2Nzcyc7XG5jbGFzcyBNb2RhbFBsdXMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyB0aXRsZSwgb3Blbiwgb25SZXF1ZXN0Q2xvc2UsIHdpZHRoLCBhY3Rpb25zIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWwsIHsgb3Blbjogb3Blbiwgb25SZXF1ZXN0Q2xvc2U6IG9uUmVxdWVzdENsb3NlLCB3aWR0aDogd2lkdGggfHwgNjAwIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBzdHlsZXNbJ21vZGFsLXBsdXMnXSB9LFxuICAgICAgICAgICAgICAgIHRpdGxlICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBzdHlsZXNbJ21vZGFsLWhlYWRlciddIH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCB7IGNsYXNzTmFtZTogc3R5bGVzWydtb2RhbC10aXRsZSddIH0sIHRpdGxlKSkpLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IHN0eWxlc1snbW9kYWwtYm9keSddIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pLFxuICAgICAgICAgICAgICAgIGFjdGlvbnMgJiYgKGFjdGlvbnMubWFwKChhY3Rpb24sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoYWN0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGluZGV4XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pKSkpKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBNb2RhbFBsdXM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsUGx1cy50c3hcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1vZGFsIGZyb20gJy4uL01vZGFsJztcbmltcG9ydCBNb2RhbEZvb3RlciBmcm9tICcuL01vZGFsRm9vdGVyJztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vTW9kYWwuc2NzcycpO1xubGV0IERpYWxvZyA9IGNsYXNzIERpYWxvZyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IG9uQ29uZmlybSwgb25SZXF1ZXN0Q2xvc2UsIG9wZW4gfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChNb2RhbCwgeyBvcGVuOiBvcGVuLCBvblJlcXVlc3RDbG9zZTogb25SZXF1ZXN0Q2xvc2UsIHdpZHRoOiB0aGlzLnByb3BzLndpZHRoIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImNvbmZpcm0tbW9kYWxcIiB9LFxuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudGl0bGUgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IFwibW9kYWwtaGVhZGVyXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgxXCIsIHsgc3R5bGVOYW1lOiBcIm1vZGFsLXRpdGxlXCIgfSwgdGhpcy5wcm9wcy50aXRsZSkpKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcIm1vZGFsLWNvbnRlbnRcIiB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KE1vZGFsRm9vdGVyLCB7IG9uQ29uZmlybTogb25Db25maXJtLCBvbkNhbmNlbDogb25SZXF1ZXN0Q2xvc2UgfSkpKSk7XG4gICAgfVxufTtcbkRpYWxvZyA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzKVxuXSwgRGlhbG9nKTtcbmV4cG9ydCBkZWZhdWx0IERpYWxvZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvQ29uZmlybU1vZGFsLnRzeFxuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi9mb3JtJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vTW9kYWxGb290ZXIuc2NzcycpO1xuZnVuY3Rpb24gTW9kYWxGb290ZXIocHJvcHMpIHtcbiAgICBjb25zdCB7IG9uQ29uZmlybSwgb25DYW5jZWwgfSA9IHByb3BzO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzWydtb2RhbC1mb290ZXInXSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgeyBjb2xvcjogXCJibHVlXCIsIG9uQ2xpY2s6IG9uQ29uZmlybSB9LCBcIlxcdTc4NkVcXHU4QkE0XCIpLFxuICAgICAgICBvbkNhbmNlbCAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHsgY29sb3I6IFwid2hpdGVcIiwgb25DbGljazogb25DYW5jZWwgfSwgXCJcXHU1M0Q2XFx1NkQ4OFwiKSkpKTtcbn1cbmV4cG9ydCBkZWZhdWx0IE1vZGFsRm9vdGVyO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9Nb2RhbEZvb3Rlci50c3hcbiAqKi8iLCJpbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcbmltcG9ydCBTZWxlY3RpemVJbnB1dCBmcm9tICcuL1NlbGVjdGl6ZUlucHV0JztcbmltcG9ydCBUZXh0YXJlYSBmcm9tICcuL1RleHRhcmVhJztcbmV4cG9ydCB7IEJ1dHRvbiwgSW5wdXQsIFNlbGVjdGl6ZUlucHV0LCBUZXh0YXJlYSB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9mb3JtLnRzXG4gKiovIiwiaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbic7XG5leHBvcnQgZGVmYXVsdCBCdXR0b247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0J1dHRvbi9pbmRleC50c1xuICoqLyIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uLy4uL2hlbHBlcnMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9fYnV0dG9uLnNjc3MnKTtcbmxldCBCdXR0b24gPSBjbGFzcyBCdXR0b24gZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzTW91c2VPdmVyOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgeyBvbkNsaWNrLCBjbGFzc05hbWUsIGNvbG9yLCBzaXplLCBpc0ZsdWlkLCB3aWR0aCwgdG8gfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBzdHlsZSA9IHt9O1xuICAgICAgICBjb25zdCBzdHlsZU5hbWUgPSBjbGFzc25hbWVzKHtcbiAgICAgICAgICAgICdidG4nOiB0cnVlLFxuICAgICAgICAgICAgJ2J0bi0taG92ZXInOiB0aGlzLnN0YXRlLmlzTW91c2VPdmVyLFxuICAgICAgICAgICAgJ2J0bi0tZmx1aWQnOiBpc0ZsdWlkLFxuICAgICAgICAgICAgW2BidG4tLSR7Y29sb3J9YF06IEJvb2xlYW4oY29sb3IpLFxuICAgICAgICAgICAgW2BidG4tLSR7c2l6ZX1gXTogQm9vbGVhbihzaXplKSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnRvKSB7XG4gICAgICAgICAgICBvbkNsaWNrID0gZSA9PiB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGhlbHBlcnMucmVkaXJlY3QodG8pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9uQ2xpY2sgPSBlID0+IHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMub25DbGljaykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uQ2xpY2soZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHdpZHRoICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgc3R5bGUgPSB7XG4gICAgICAgICAgICAgICAgd2lkdGhcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJvcHMgPSBfKHRoaXMucHJvcHMpXG4gICAgICAgICAgICAub21pdChbJ3RvJywgJ2NvbG9yJywgJ3NpemUnLCAnaXNGbHVpZCcsICd3aWR0aCcsICdzdHlsZXMnXSlcbiAgICAgICAgICAgIC5hc3NpZ24oe30sIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lIHx8ICcnLFxuICAgICAgICAgICAgb25DbGljayxcbiAgICAgICAgICAgIHN0eWxlXG4gICAgICAgIH0pXG4gICAgICAgICAgICAudmFsdWUoKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIF9fYXNzaWduKHt9LCBwcm9wcywgeyBzdHlsZU5hbWU6IHN0eWxlTmFtZSwgb25Nb3VzZU92ZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgaXNNb3VzZU92ZXI6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIG9uTW91c2VPdXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgaXNNb3VzZU92ZXI6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IH0pLCB0aGlzLnByb3BzLmNoaWxkcmVuKSk7XG4gICAgfVxufTtcbkJ1dHRvbiA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgQnV0dG9uKTtcbkJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gICAgY29sb3I6ICdibHVlJ1xufTtcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQnV0dG9uL0J1dHRvbi50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL19idXR0b24uc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0J1dHRvbi9fYnV0dG9uLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNTBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ0bl9NMk5oUSB7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMxQjI2N0Y7XFxuICBib3JkZXItY29sb3I6ICMxQjI2N0Y7XFxuICBwYWRkaW5nOiAzcHggMTJweDtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIDBzO1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbWFyZ2luOiA1cHggMDtcXG4gIGN1cnNvcjogcG9pbnRlcjsgfVxcbiAgLmJ0bl9NMk5oUTpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7IH1cXG4gIC5idG5fTTJOaFE6Zm9jdXMsIC5idG5fTTJOaFEuZm9jdXNfcHRLRF8ge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEyMTk1NTtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMTAxNzRkO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICMyNDMzYTk7IH1cXG4gIC5idG5fTTJOaFE6YWN0aXZlLCAuYnRuX00yTmhRLmFjdGl2ZV8xNTZsSyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggIzI0MzNhOTsgfVxcbiAgICAuYnRuX00yTmhROmFjdGl2ZTpob3ZlciwgLmJ0bl9NMk5oUTphY3RpdmU6Zm9jdXMsIC5idG5fTTJOaFE6YWN0aXZlLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmFjdGl2ZV8xNTZsSzpob3ZlciwgLmJ0bl9NMk5oUS5hY3RpdmVfMTU2bEs6Zm9jdXMsIC5idG5fTTJOaFEuYWN0aXZlXzE1NmxLLmZvY3VzX3B0S0RfIHtcXG4gICAgICBjb2xvcjogI2ZmZjtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGMxMTM4O1xcbiAgICAgIGJvcmRlci1jb2xvcjogIzA1MDcxNjtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICMyNDMzYTkgIWltcG9ydGFudDsgfVxcbiAgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaDpmb2N1cywgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaC5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUTpkaXNhYmxlZDpmb2N1cywgLmJ0bl9NMk5oUTpkaXNhYmxlZC5mb2N1c19wdEtEXyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxQjI2N0Y7XFxuICAgIGJvcmRlci1jb2xvcjogIzFCMjY3RjsgfVxcbiAgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaDpob3ZlciwgLmJ0bl9NMk5oUTpkaXNhYmxlZDpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxQjI2N0Y7XFxuICAgIGJvcmRlci1jb2xvcjogIzFCMjY3RjsgfVxcbiAgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaCwgLmJ0bl9NMk5oUTpkaXNhYmxlZCB7XFxuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxuICAgIG9wYWNpdHk6IC42NTsgfVxcbiAgLmJ0bl9NMk5oUTphY3RpdmU6aG92ZXIge1xcbiAgICBib3gtc2hhZG93OiBub25lOyB9XFxuXFxuLmJ0bi0taG92ZXJfMkt3VXYge1xcbiAgYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMjQpOyB9XFxuXFxuLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW8ge1xcbiAgY29sb3I6ICNmZmY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUIyNjdGO1xcbiAgYm9yZGVyLWNvbG9yOiAjMUIyNjdGOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRbzpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5mb2N1c19wdEtEXyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggIzI0MzNhOTsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86YWN0aXZlLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5hY3RpdmVfMTU2bEsge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEyMTk1NTtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMTAxNzRkO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICMyNDMzYTk7IH1cXG4gICAgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86YWN0aXZlOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRbzphY3RpdmU6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvOmFjdGl2ZS5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW8uYWN0aXZlXzE1NmxLOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5hY3RpdmVfMTU2bEs6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvLmFjdGl2ZV8xNTZsSy5mb2N1c19wdEtEXyB7XFxuICAgICAgY29sb3I6ICNmZmY7XFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBjMTEzODtcXG4gICAgICBib3JkZXItY29sb3I6ICMwNTA3MTY7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNmZmYsIDAgMCAwIDNweCAjMjQzM2E5ICFpbXBvcnRhbnQ7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvLmRpc2FibGVkXzJHbFhoOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5kaXNhYmxlZF8yR2xYaC5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86ZGlzYWJsZWQ6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvOmRpc2FibGVkLmZvY3VzX3B0S0RfIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFCMjY3RjtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMUIyNjdGOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5kaXNhYmxlZF8yR2xYaDpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86ZGlzYWJsZWQ6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUIyNjdGO1xcbiAgICBib3JkZXItY29sb3I6ICMxQjI2N0Y7IH1cXG5cXG4uYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzIHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlOTMzMztcXG4gIGJvcmRlci1jb2xvcjogI2VlOTMzMzsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGM3YTEyO1xcbiAgICBib3JkZXItY29sb3I6ICNkMjc0MTI7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3M6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3MuZm9jdXNfcHRLRF8ge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RjN2ExMjtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZDI3NDEyO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICNmMmFjNjI7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3M6YWN0aXZlLCAuYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzLmFjdGl2ZV8xNTZsSyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGM3YTEyO1xcbiAgICBib3JkZXItY29sb3I6ICNkMjc0MTI7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggI2YyYWM2MjsgfVxcbiAgICAuYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzOmFjdGl2ZTpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczphY3RpdmU6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3M6YWN0aXZlLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzLmFjdGl2ZV8xNTZsSzpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5hY3RpdmVfMTU2bEs6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3MuYWN0aXZlXzE1NmxLLmZvY3VzX3B0S0RfIHtcXG4gICAgICBjb2xvcjogI2ZmZjtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmI2NzEwO1xcbiAgICAgIGJvcmRlci1jb2xvcjogIzk1NTMwYztcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICNmMmFjNjIgIWltcG9ydGFudDsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5kaXNhYmxlZF8yR2xYaDpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5kaXNhYmxlZF8yR2xYaC5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpkaXNhYmxlZDpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpkaXNhYmxlZC5mb2N1c19wdEtEXyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZTkzMzM7XFxuICAgIGJvcmRlci1jb2xvcjogI2VlOTMzMzsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5kaXNhYmxlZF8yR2xYaDpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpkaXNhYmxlZDpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZTkzMzM7XFxuICAgIGJvcmRlci1jb2xvcjogI2VlOTMzMzsgfVxcblxcbi5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzMge1xcbiAgY29sb3I6ICNmZmY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDQyMDIwO1xcbiAgYm9yZGVyLWNvbG9yOiAjZDQyMDIwOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNhODE5MTk7XFxuICAgIGJvcmRlci1jb2xvcjogIzlmMTgxODsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMzpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMy5mb2N1c19wdEtEXyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTgxOTE5O1xcbiAgICBib3JkZXItY29sb3I6ICM5ZjE4MTg7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggI2UzNDQ0NDsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMzphY3RpdmUsIC5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzMuYWN0aXZlXzE1NmxLIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNhODE5MTk7XFxuICAgIGJvcmRlci1jb2xvcjogIzlmMTgxODtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNmZmYsIDAgMCAwIDNweCAjZTM0NDQ0OyB9XFxuICAgIC5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzM6YWN0aXZlOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmFjdGl2ZTpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMzphY3RpdmUuZm9jdXNfcHRLRF8sIC5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzMuYWN0aXZlXzE1NmxLOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmFjdGl2ZV8xNTZsSzpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMy5hY3RpdmVfMTU2bEsuZm9jdXNfcHRLRF8ge1xcbiAgICAgIGNvbG9yOiAjZmZmO1xcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4OTE1MTU7XFxuICAgICAgYm9yZGVyLWNvbG9yOiAjNjUwZjBmO1xcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggI2UzNDQ0NCAhaW1wb3J0YW50OyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmRpc2FibGVkXzJHbFhoOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmRpc2FibGVkXzJHbFhoLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmRpc2FibGVkOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmRpc2FibGVkLmZvY3VzX3B0S0RfIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0MjAyMDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZDQyMDIwOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmRpc2FibGVkXzJHbFhoOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmRpc2FibGVkOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0MjAyMDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZDQyMDIwOyB9XFxuXFxuLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKIHtcXG4gIGNvbG9yOiAjMzMzO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKOmhvdmVyIHtcXG4gICAgY29sb3I6ICMzMzM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XFxuICAgIGJvcmRlci1jb2xvcjogI2UwZTBlMDsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouZm9jdXNfcHRLRF8ge1xcbiAgICBjb2xvcjogIzMzMztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZTBlMGUwO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4IHdoaXRlOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLIHtcXG4gICAgY29sb3I6ICMzMzM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XFxuICAgIGJvcmRlci1jb2xvcjogI2UwZTBlMDtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNmZmYsIDAgMCAwIDNweCB3aGl0ZTsgfVxcbiAgICAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLLmZvY3VzX3B0S0RfIHtcXG4gICAgICBjb2xvcjogIzMzMztcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDRkNGQ0O1xcbiAgICAgIGJvcmRlci1jb2xvcjogI2JmYmZiZjtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4IHdoaXRlICFpbXBvcnRhbnQ7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS13aGl0ZV8zUnYySi5kaXNhYmxlZF8yR2xYaDpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKLmRpc2FibGVkXzJHbFhoLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6ZGlzYWJsZWQ6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS13aGl0ZV8zUnYySjpkaXNhYmxlZC5mb2N1c19wdEtEXyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKLmRpc2FibGVkXzJHbFhoOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6ZGlzYWJsZWQ6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJidG5cIjogXCJidG5fTTJOaFFcIixcblx0XCJmb2N1c1wiOiBcImZvY3VzX3B0S0RfXCIsXG5cdFwiYWN0aXZlXCI6IFwiYWN0aXZlXzE1NmxLXCIsXG5cdFwiZGlzYWJsZWRcIjogXCJkaXNhYmxlZF8yR2xYaFwiLFxuXHRcImJ0bi0taG92ZXJcIjogXCJidG4tLWhvdmVyXzJLd1V2XCIsXG5cdFwiYnRuLS1ibHVlXCI6IFwiYnRuLS1ibHVlXzIwWVFvXCIsXG5cdFwiYnRuLS1vcmFuZ2VcIjogXCJidG4tLW9yYW5nZV9FY24zc1wiLFxuXHRcImJ0bi0tcmVkXCI6IFwiYnRuLS1yZWRfM0VLQzNcIixcblx0XCJidG4tLXdoaXRlXCI6IFwiYnRuLS13aGl0ZV8zUnYySlwiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9CdXR0b24vX2J1dHRvbi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTUxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgSW5wdXQgZnJvbSAnLi9JbnB1dCc7XG5leHBvcnQgZGVmYXVsdCBJbnB1dDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSW5wdXQvaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0lucHV0LnNjc3MnKTtcbmxldCBJbnB1dCA9IGNsYXNzIElucHV0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgICAgIGRlbGV0ZSBwcm9wcy5jbGFzc05hbWU7XG4gICAgICAgIGNvbnN0IHsgZXJyb3IsIHRvdWNoZWQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHNob3dFcnJvciA9IGVycm9yICYmIHRvdWNoZWQ7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogY2xhc3NuYW1lcyh7ICdpbnB1dC13cmFwJzogIXNob3dFcnJvciwgJ2lucHV0LXdyYXAtLWVycm9yJzogc2hvd0Vycm9yIH0pLCBjbGFzc05hbWU6IHRoaXMucHJvcHMuY2xhc3NOYW1lIHx8ICcnIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgeyBzdHlsZU5hbWU6IFwiaW5wdXRcIiwgcGxhY2Vob2xkZXI6IHRoaXMucHJvcHMucGxhY2Vob2xkZXIsIHZhbHVlOiB0aGlzLnByb3BzLnZhbHVlLCBvbkNoYW5nZTogZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZSk7XG4gICAgICAgICAgICAgICAgfSwgdHlwZTogdGhpcy5wcm9wcy50eXBlID8gdGhpcy5wcm9wcy50eXBlIDogJ3RleHQnLCBuYW1lOiB0aGlzLnByb3BzLm5hbWUgPyB0aGlzLnByb3BzLm5hbWUgOiBudWxsIH0pLFxuICAgICAgICAgICAgc2hvd0Vycm9yICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImVycm9yLW1zZ1wiIH0sIGVycm9yKSkpKTtcbiAgICB9XG59O1xuSW5wdXQgPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIElucHV0KTtcbmV4cG9ydCBkZWZhdWx0IElucHV0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0lucHV0LnNjc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTU0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5pbnB1dC13cmFwXzF1TDlpLCAuaW5wdXQtd3JhcC0tZXJyb3Jfb09IeHgge1xcbiAgbWFyZ2luOiAxMHB4IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cXG5cXG4uaW5wdXRfYzF0aGcge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiA1cHggNXB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcXG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAuM3M7XFxuICBsaW5lLWhlaWdodDogMjVweDtcXG4gIG91dGxpbmU6IG5vbmU7IH1cXG5cXG4uaW5wdXRfYzF0aGc6Zm9jdXMge1xcbiAgYm9yZGVyLWNvbG9yOiAjMUIyNjdGOyB9XFxuXFxuLmlucHV0LXdyYXAtLWVycm9yX29PSHh4IC5pbnB1dF9jMXRoZyB7XFxuICBib3JkZXItY29sb3I6ICNjYzAwMDA7IH1cXG5cXG4uZXJyb3ItbXNnXzFWalBzIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxMHB4O1xcbiAgdG9wOiA2cHg7XFxuICBsaW5lLWhlaWdodDogMjVweDtcXG4gIGNvbG9yOiAjY2MwMDAwOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiaW5wdXQtd3JhcFwiOiBcImlucHV0LXdyYXBfMXVMOWlcIixcblx0XCJpbnB1dC13cmFwLS1lcnJvclwiOiBcImlucHV0LXdyYXAtLWVycm9yX29PSHh4XCIsXG5cdFwiaW5wdXRcIjogXCJpbnB1dF9jMXRoZ1wiLFxuXHRcImVycm9yLW1zZ1wiOiBcImVycm9yLW1zZ18xVmpQc1wiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTU1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgU2VsZWN0aXplSW5wdXQgZnJvbSAnLi9TZWxlY3RpemVJbnB1dCc7XG5leHBvcnQgZGVmYXVsdCBTZWxlY3RpemVJbnB1dDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEljb24gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmltcG9ydCBpc0Rlc2NlbmRhbnQgZnJvbSAnLi4vLi4vdXRpbHMvZG9tL2lzRGVzY2VuZGFudCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9TZWxlY3RpemVJbnB1dC5zY3NzJyk7XG5sZXQgU2VsZWN0aXplSW5wdXQgPSBjbGFzcyBTZWxlY3RpemVJbnB1dCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc2hvd09wdGlvbnM6IGZhbHNlLFxuICAgICAgICAgICAgZm9jdXM6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6ICcnLFxuICAgICAgICAgICAgZXhwZW5kZWRPcHRpb25JbmRleDogMFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmhhbmRsZU91dHNpZGVDbGljayA9IHRoaXMuaGFuZGxlT3V0c2lkZUNsaWNrLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuZm9jdXNJbnB1dCA9IHRoaXMuZm9jdXNJbnB1dC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlID0gdGhpcy5oYW5kbGVJbnB1dENoYW5nZS5iaW5kKHRoaXMpO1xuICAgIH1cbiAgICBhZGRWYWx1ZShuZXdWYWx1ZSkge1xuICAgICAgICBpZiAoIXRoaXMucHJvcHMudXNlVmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25WYWx1ZXNDaGFuZ2UodGhpcy5wcm9wcy52YWx1ZXMuY29uY2F0KG5ld1ZhbHVlKSk7XG4gICAgICAgICAgICBpZiAodGhpcy5wcm9wcy5vbk9wdGlvbnNDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uT3B0aW9uc0NoYW5nZSh0aGlzLnByb3BzLm9wdGlvbnMubWFwKG9wdGlvbiA9PiAob3B0aW9uLnZhbHVlID09PSBuZXdWYWx1ZS52YWx1ZVxuICAgICAgICAgICAgICAgICAgICA/IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbiwgeyBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgICAgICAgICA6IG9wdGlvbikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFJlYWN0IHNldFN0YXRlIOaYr+W8guatpeeahO+8jOWmguaenOmDveaYr+eUqCBzdGF0ZSDnrqHnkIbliJnkvJrlh7rnjrDlkIzml7bosIPnlKggc2V0U3RhdGUg55qE5oOF5Ya177yM5LuO6ICM6YCg5oiQ6Zeu6aKYXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFySW5wdXRWYWx1ZSgpO1xuICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMuc3RheUZvY3VzZWQgPT09ICd1bmRlZmluZWQnIHx8IHRoaXMucHJvcHMuc3RheUZvY3VzZWQgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5mb2N1c0lucHV0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmhpZGVPcHRpb25zKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uSW5wdXRDaGFuZ2UobmV3VmFsdWUubmFtZSk7XG4gICAgICAgICAgICB0aGlzLmhpZGVPcHRpb25zKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2hvd09wdGlvbnMoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2hvd09wdGlvbnM6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGhpZGVPcHRpb25zKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNob3dPcHRpb25zOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVtb3ZlVmFsdWUoaW5kZXgpIHtcbiAgICAgICAgbGV0IG5ld1ZhbHVlcyA9IFtdO1xuICAgICAgICBsZXQgcmVtb3ZlZFZhbHVlO1xuICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICBuZXdWYWx1ZXMgPSB0aGlzLnByb3BzLnZhbHVlcy5zbGljZSgwLCB0aGlzLnByb3BzLnZhbHVlcy5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgIHJlbW92ZWRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWVzW3RoaXMucHJvcHMudmFsdWVzLmxlbmd0aCAtIDFdLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbmV3VmFsdWVzID0gdGhpcy5wcm9wcy52YWx1ZXNcbiAgICAgICAgICAgICAgICAuZmlsdGVyKCh2LCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlZFZhbHVlID0gdi52YWx1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaSAhPT0gaW5kZXg7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcm9wcy5vbk9wdGlvbnNDaGFuZ2UpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25PcHRpb25zQ2hhbmdlKHRoaXMucHJvcHMub3B0aW9ucy5tYXAob3B0aW9uID0+IChvcHRpb24udmFsdWUgPT09IHJlbW92ZWRWYWx1ZVxuICAgICAgICAgICAgICAgID8gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9uLCB7IGRpc2FibGVkOiBmYWxzZSB9KVxuICAgICAgICAgICAgICAgIDogb3B0aW9uKSkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJvcHMub25WYWx1ZXNDaGFuZ2UobmV3VmFsdWVzKTtcbiAgICB9XG4gICAgY2xlYXJJbnB1dFZhbHVlKCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uSW5wdXRDaGFuZ2UoJycpO1xuICAgIH1cbiAgICBoYW5kbGVLZXlQcmVzcyhlKSB7XG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDggJiYgIXRoaXMucHJvcHMudmFsdWUgJiYgdGhpcy5wcm9wcy52YWx1ZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZVZhbHVlKC0xKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoYW5kbGVJbnB1dENoYW5nZShlKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25JbnB1dENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgIGlmICgodGhpcy5wcm9wcy5vcHRpb25zIHx8IFtdKS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd09wdGlvbnMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb2N1c0lucHV0KCkge1xuICAgICAgICB0aGlzLmlucHV0LmZvY3VzKCk7XG4gICAgfVxuICAgIGhhbmRsZU91dHNpZGVDbGljayhlKSB7XG4gICAgICAgIGlmIChpc0Rlc2NlbmRhbnQodGhpcy5pbnB1dFdyYXAsIGUudGFyZ2V0KSB8fCB0aGlzLmlucHV0V3JhcCA9PT0gZS50YXJnZXQpIHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNJbnB1dCgpO1xuICAgICAgICAgICAgdGhpcy5zaG93T3B0aW9ucygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5oaWRlT3B0aW9ucygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnNMb2FkZWQgPSAobmV4dFByb3BzLm9wdGlvbnMgfHwgW10pLmxlbmd0aCAhPT0gMCAmJiAodGhpcy5wcm9wcy5vcHRpb25zIHx8IFtdKS5sZW5ndGggPT09IDA7XG4gICAgICAgIGlmIChvcHRpb25zTG9hZGVkICYmIHRoaXMuc3RhdGUuZm9jdXMpIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd09wdGlvbnMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVPdXRzaWRlQ2xpY2spO1xuICAgIH1cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVPdXRzaWRlQ2xpY2spO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgbGFiZWwsIHZhbHVlcywgb25BZGROZXdWYWx1ZSwgb21pdFNlbGVjdGVkVmFsdWVzRnJvbU9wdGlvbnMgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMucHJvcHMudmFsdWUgfHwgJyc7XG4gICAgICAgIGxldCBvcHRpb25zID0gdGhpcy5wcm9wcy5vcHRpb25zIHx8IFtdO1xuICAgICAgICBsZXQgaW5wdXRXaWR0aCA9IHZhbHVlcy5sZW5ndGggPiAwID8gKHZhbHVlLmxlbmd0aCA9PT0gMCA/IDE2IDogdmFsdWUubGVuZ3RoICogMTYpIDogJzEwMCUnO1xuICAgICAgICBsZXQgcGxhY2Vob2xkZXIgPSB2YWx1ZXMubGVuZ3RoID4gMCA/ICcnIDogdGhpcy5wcm9wcy5wbGFjZWhvbGRlcjtcbiAgICAgICAgbGV0IGZpbHRlcmVkT3B0aW9ucyA9IG9wdGlvbnNcbiAgICAgICAgICAgIC5maWx0ZXIob3B0aW9uID0+IHtcbiAgICAgICAgICAgIGlmIChvbWl0U2VsZWN0ZWRWYWx1ZXNGcm9tT3B0aW9ucykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlT2ZWYWx1ZXMgPSBfLm1hcCh2YWx1ZXMsICd2YWx1ZScpO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZU9mVmFsdWVzLmluZGV4T2Yob3B0aW9uLnZhbHVlKSA9PT0gLTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHNlbGVjdGl6ZUlucHV0U3R5bGVOYW1lID0gY2xhc3NuYW1lcyh7XG4gICAgICAgICAgICAnc2VsZWN0aXplLWlucHV0JzogdHJ1ZSxcbiAgICAgICAgICAgICdzZWxlY3RpemUtaW5wdXQtLWZvY3VzJzogdGhpcy5zdGF0ZS5mb2N1cyxcbiAgICAgICAgICAgICdzZWxlY3RpemUtaW5wdXQtLWVtcHR5JzogdmFsdWVzLmxlbmd0aCA9PT0gMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcInNlbGVjdGl6ZS13cmFwXCIsIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUgfHwgJycgfSxcbiAgICAgICAgICAgIGxhYmVsID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7IGNsYXNzTmFtZTogXCJmb3JtLWxhYmVsXCIgfSwgbGFiZWwpKSA6IG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBzZWxlY3RpemVJbnB1dFN0eWxlTmFtZSwgcmVmOiByZWYgPT4geyB0aGlzLmlucHV0V3JhcCA9IHJlZjsgfSB9LFxuICAgICAgICAgICAgICAgIHZhbHVlcy5tYXAoKHYsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBrZXk6IGluZGV4LCBzdHlsZU5hbWU6IFwic2VsZWN0aXplLXRhZ1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB2Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEljb24sIHsgc3R5bGVOYW1lOiBcImljb24tcmVtb3ZlXCIsIHNpemU6IDIwLCBuYW1lOiBcImNsb3NlXCIsIG9uQ2xpY2s6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVZhbHVlKGluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IH0pKSk7XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHsgc3R5bGU6IHsgd2lkdGg6IGlucHV0V2lkdGggfSwgcmVmOiByZWYgPT4geyB0aGlzLmlucHV0ID0gcmVmOyB9LCB2YWx1ZTogdmFsdWUsIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlciwgb25CbHVyOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBmb2N1czogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIG9uRm9jdXM6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGZvY3VzOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgICAgICB9LCBvbkNoYW5nZTogdGhpcy5oYW5kbGVJbnB1dENoYW5nZSwgb25LZXlEb3duOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlS2V5UHJlc3MoZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSkpLFxuICAgICAgICAgICAgdGhpcy5zdGF0ZS5zaG93T3B0aW9ucyAmJiAoZmlsdGVyZWRPcHRpb25zLmxlbmd0aCAhPT0gMCB8fCBvbkFkZE5ld1ZhbHVlKSA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgeyBzdHlsZU5hbWU6IFwicXVlcnktcmVzdWx0c1wiIH0sXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRPcHRpb25zXG4gICAgICAgICAgICAgICAgICAgIC5tYXAoKG9wdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbi5kaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGtleTogaW5kZXgsIGNsYXNzTmFtZTogXCJkaXNhYmxlZFwiIH0sIG9wdGlvbi5uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGtleTogaW5kZXgsIG9uQ2xpY2s6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkVmFsdWUob3B0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5wcm9wcy5vbk9wdGlvbkNsaWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMub25PcHRpb25DbGljayhvcHRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIG9wdGlvbi5uYW1lKSkpO1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG9uQWRkTmV3VmFsdWUgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHsgb25DbGljazogZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkFkZE5ld1ZhbHVlKHRoaXMucHJvcHMudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9LCBjbGFzc05hbWU6IFwiYWRkXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJcXHU2REZCXFx1NTJBMCBcIixcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInN0cm9uZ1wiLCBudWxsLCB0aGlzLnByb3BzLnZhbHVlKSkpIDogbnVsbCkpIDogbnVsbCkpO1xuICAgIH1cbn07XG5TZWxlY3RpemVJbnB1dCA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgU2VsZWN0aXplSW5wdXQpO1xuU2VsZWN0aXplSW5wdXRbJ2RlZmF1bHRQcm9wcyddID0ge1xuICAgIG9taXRTZWxlY3RlZFZhbHVlc0Zyb21PcHRpb25zOiB0cnVlXG59O1xuZXhwb3J0IGRlZmF1bHQgU2VsZWN0aXplSW5wdXQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1NlbGVjdGl6ZUlucHV0L1NlbGVjdGl6ZUlucHV0LnRzeFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vU2VsZWN0aXplSW5wdXQuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1NlbGVjdGl6ZUlucHV0L1NlbGVjdGl6ZUlucHV0LnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNThcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNlbGVjdGl6ZS13cmFwX1AteTItIHtcXG4gIG1hcmdpbjogMTBweCAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuXFxuLnNlbGVjdGl6ZS1pbnB1dF8zNlVMZSB7XFxuICBtaW4td2lkdGg6IDMwMHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcXG4gIG1hcmdpbjogMTBweCAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIHRyYW5zaXRpb246IGFsbCAwcztcXG4gIGN1cnNvcjogdGV4dDtcXG4gIGJhY2tncm91bmQ6ICNmZmY7IH1cXG4gIC5zZWxlY3RpemUtaW5wdXRfMzZVTGUgaW5wdXQge1xcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7IH1cXG5cXG4uc2VsZWN0aXplLWlucHV0LS1mb2N1c18zMExVNSB7XFxuICBib3JkZXItY29sb3I6ICMxQjI2N0Y7IH1cXG5cXG4uc2VsZWN0aXplLWlucHV0LS1lbXB0eV8zZUFtSSB7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgcGFkZGluZzogNXB4IDVweCAwOyB9XFxuXFxuLnNlbGVjdGl6ZS1pbnB1dF8zNlVMZSBpbnB1dCB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgbWFyZ2luLWJvdHRvbTogNXB4OyB9XFxuXFxuLnF1ZXJ5LXJlc3VsdHNfM1BoLVoge1xcbiAgbWFyZ2luLXRvcDogLTNweDtcXG4gIG1hcmdpbi1ib3R0b206IDVweDtcXG4gIHBhZGRpbmc6IDVweDtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjMyKTtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICB6LWluZGV4OiA5MDA7IH1cXG5cXG4ucXVlcnktcmVzdWx0c18zUGgtWiBsaSB7XFxuICBwYWRkaW5nOiAwIDdweDtcXG4gIGxpbmUtaGVpZ2h0OiAyO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogM3B4OyB9XFxuICAucXVlcnktcmVzdWx0c18zUGgtWiBsaTpob3ZlciB7XFxuICAgIGJhY2tncm91bmQ6ICMxQjI2N0Y7XFxuICAgIGNvbG9yOiAjZmZmOyB9XFxuXFxuLnNlbGVjdGl6ZS10YWdfMVBXREUge1xcbiAgYmFja2dyb3VuZDogIzFCMjY3RjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIHBhZGRpbmc6IDNweCAyNXB4IDNweCA1cHg7XFxuICBtYXJnaW46IDVweDtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuXFxuLmljb24tcmVtb3ZlXzJCdVNWIHtcXG4gIGZvbnQtc2l6ZTogMC44cmVtO1xcbiAgbWFyZ2luLWxlZnQ6IDVweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiA1cHg7XFxuICB0b3A6IDJweDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNlbGVjdGl6ZS13cmFwXCI6IFwic2VsZWN0aXplLXdyYXBfUC15Mi1cIixcblx0XCJzZWxlY3RpemUtaW5wdXRcIjogXCJzZWxlY3RpemUtaW5wdXRfMzZVTGVcIixcblx0XCJzZWxlY3RpemUtaW5wdXQtLWZvY3VzXCI6IFwic2VsZWN0aXplLWlucHV0LS1mb2N1c18zMExVNVwiLFxuXHRcInNlbGVjdGl6ZS1pbnB1dC0tZW1wdHlcIjogXCJzZWxlY3RpemUtaW5wdXQtLWVtcHR5XzNlQW1JXCIsXG5cdFwicXVlcnktcmVzdWx0c1wiOiBcInF1ZXJ5LXJlc3VsdHNfM1BoLVpcIixcblx0XCJzZWxlY3RpemUtdGFnXCI6IFwic2VsZWN0aXplLXRhZ18xUFdERVwiLFxuXHRcImljb24tcmVtb3ZlXCI6IFwiaWNvbi1yZW1vdmVfMkJ1U1ZcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvU2VsZWN0aXplSW5wdXQuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE1OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFRleHRhcmVhIGZyb20gJy4vVGV4dGFyZWEnO1xuZXhwb3J0IGRlZmF1bHQgVGV4dGFyZWE7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL2luZGV4LnRzXG4gKiovIiwidmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vVGV4dGFyZWEuY3NzJyk7XG5sZXQgVGV4dGFyZWEgPSBjbGFzcyBUZXh0YXJlYSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJ0ZXh0YXJlYS13cmFwXCIsIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUgfHwgJycgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiLCB7IHBsYWNlaG9sZGVyOiB0aGlzLnByb3BzLnBsYWNlaG9sZGVyLCB2YWx1ZTogdGhpcy5wcm9wcy52YWx1ZSwgb25DaGFuZ2U6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKGUpO1xuICAgICAgICAgICAgICAgIH0sIHN0eWxlTmFtZTogXCJ0ZXh0YXJlYVwiLCB0eXBlOiB0aGlzLnByb3BzLnR5cGUgPyB0aGlzLnByb3BzLnR5cGUgOiAndGV4dCcsIG5hbWU6IHRoaXMucHJvcHMubmFtZSA/IHRoaXMucHJvcHMubmFtZSA6IG51bGwgfSkpKTtcbiAgICB9XG59O1xuVGV4dGFyZWEgPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIFRleHRhcmVhKTtcbmV4cG9ydCBkZWZhdWx0IFRleHRhcmVhO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9UZXh0YXJlYS9UZXh0YXJlYS50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL1RleHRhcmVhLmNzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL1RleHRhcmVhLmNzc1xuICoqIG1vZHVsZSBpZCA9IDE2MlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5leHBvcnRzLmkocmVxdWlyZShcIi0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIXN0eWxlcy92YXJpYWJsZXMuY3NzXCIpLCBcIlwiKTtcblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGV4dGFyZWEtd3JhcF8xQlRKVSB7XFxuICBtYXJnaW46IDEwcHggMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLnRleHRhcmVhXzJ4U3h2IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogNXB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JheSk7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgaGVpZ2h0OiAxMDBweDtcXG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAuM3M7XFxufVxcblxcbi50ZXh0YXJlYV8yeFN4djpmb2N1cyB7XFxuICBib3JkZXItY29sb3I6IHZhcigtLWJsdWUpO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJ0ZXh0YXJlYS13cmFwXCI6IFwidGV4dGFyZWEtd3JhcF8xQlRKVVwiLFxuXHRcInRleHRhcmVhXCI6IFwidGV4dGFyZWFfMnhTeHZcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vcG9zdGNzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvVGV4dGFyZWEvVGV4dGFyZWEuY3NzXG4gKiogbW9kdWxlIGlkID0gMTYzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC8qIGNvbG9ycyAqL1xcbiAgLS10ZXh0OiAjNjY2O1xcbiAgLS10ZXh0LWRhcms6ICMzMzM7XFxuICAtLXRleHQtbGlnaHQ6ICM5OTk7XFxuICAtLWJsdWU6ICMxQjI2N0Y7XFxuICAtLXNoaW55LWJsdWU6ICMxQjI2N0Y7XFxuICAtLWRhcmstYmx1ZTogIzA0MDgyRTtcXG4gIC0tZ3JheTogI2RkZDtcXG5cXG4gIC0tYnJhbmRpbmctaGVpZ2h0OiA2MHB4O1xcbiAgLS1zaWRlYmFyLXdpZHRoOiAzMDBweDtcXG4gIC0taW5wdXQtbGluZS1oZWlnaHQ6IDI1cHg7XFxuICAtLWlucHV0LXBhZGRpbmc6IDVweDtcXG4gIC0tcmVhZGluZy13aWR0aDogNzAwcHg7XFxuXFxuICAvKiBzdHlsZSB2YWx1ZXMgKi9cXG4gIC0tZm9udC1zaXplLXJvb3Q6IDE2cHg7XFxuICAtLWJvcmRlci1yYWRpdXM6IDNweDtcXG4gIC0tZm9udC1mYW1pbHk6IEhlbHZldGljYSwgQXJpYWwsIFxcXCJIaXJhZ2lubyBTYW5zIEdCXFxcIiwgXFxcIkhpcmFnaW5vIFNhbnMgR0IgVzNcXFwiLCBcXFwiTWljcm9zb2Z0IFlhaGVpXFxcIiwgc2Fucy1zZXJpZjtcXG4gIC0tZm9udC1mYW1pbHktbW9ubzogQ29uc29sYXMsIFxcXCJMaWJlcmF0aW9uIE1vbm9cXFwiLCBNZW5sbywgQ291cmllciwgbW9ub3NwYWNlO1xcblxcbiAgLS1zaGFkb3ctejE6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI0KTtcXG4gIC0tc2hhZG93LXoyOiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxuICAtLXNoYWRvdy16MzogMCAxMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxuICAtLXNoYWRvdy16NDogMCAxNHB4IDI4cHggcmdiYSgwLCAwLCAwLCAwLjI1KSwgMCAxMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIyKTtcXG4gIC0tc2hhZG93LXo1OiAwIDE5cHggMzhweCByZ2JhKDAsIDAsIDAsIDAuMyksIDAgMTVweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4yMik7XFxuXFxuICAtLXNoYWRvdy15MTogMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMzIpO1xcblxcbiAgXFxcXC0tcGFnZS10aXRsZToge1xcbiAgICBtYXJnaW46IDM1cHggMDtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBjb2xvcjogIzMzMztcXG4gIH07XFxuXFxuICAvKiB6LWluZGV4ICovXFxuICAtLXotc2VsZWN0aXplLW9wdGlvbnM6IDkwMDtcXG4gIC0tei1kcm9wZG93bi1tZW51OiA5MDA7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9wb3N0Y3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9zdHlsZXMvdmFyaWFibGVzLmNzc1xuICoqIG1vZHVsZSBpZCA9IDE2NFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiXG4gICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UhLi9Nb2RhbEZvb3Rlci5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxGb290ZXIuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE2NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubW9kYWwtZm9vdGVyX0ZhSGlVIGJ1dHRvbiB7XFxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJtb2RhbC1mb290ZXJcIjogXCJtb2RhbC1mb290ZXJfRmFIaVVcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxGb290ZXIuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE2NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgQnJhbmRpbmcgZnJvbSAnLi4vY29tcG9uZW50cy9CcmFuZGluZyc7XG5pbXBvcnQgQ29sb3Bob24gZnJvbSAnLi4vY29tcG9uZW50cy9Db2xvcGhvbic7XG5pbXBvcnQgeyBmZXRjaFNoZWxmLCB1c2VyTG9nb3V0IH0gZnJvbSAnLi4vc3RvcmUvYWN0aW9ucyc7XG5pbXBvcnQgKiBhcyBzZWxlY3RvcnMgZnJvbSAnLi4vc3RvcmUvc2VsZWN0b3JzJztcbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLmhhbmRsZUxvZ291dCA9IHRoaXMuaGFuZGxlTG9nb3V0LmJpbmQodGhpcyk7XG4gICAgfVxuICAgIGhhbmRsZUxvZ291dCgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy51c2VyTG9nb3V0KCk7XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5zZXNzaW9uLnVzZXIucm9sZSAhPT0gJ3Zpc2l0b3InKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmZldGNoU2hlbGYoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICBjb25zdCB1c2VyTG9nZ2VkSW4gPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlID09PSAndmlzaXRvcidcbiAgICAgICAgICAgICYmIG5leHRQcm9wcy5zZXNzaW9uLnVzZXIucm9sZSAhPT0gJ3Zpc2l0b3InO1xuICAgICAgICBpZiAodXNlckxvZ2dlZEluKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmZldGNoU2hlbGYoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBpc0FkbWluID0gZmFsc2U7XG4gICAgICAgIGxldCB1c2VybmFtZSA9IG51bGw7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlICE9PSAndmlzaXRvcicpIHtcbiAgICAgICAgICAgIGlzQWRtaW4gPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlID09PSAnYWRtaW4nO1xuICAgICAgICAgICAgdXNlcm5hbWUgPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci51c2VybmFtZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IGJvb2tTaGVsZiB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgYm9va1NoZWxmTGlzdCA9IGJvb2tTaGVsZlxuICAgICAgICAgICAgLm1hcChib29rID0+ICh7XG4gICAgICAgICAgICB0aXRsZTogYm9vay50aXRsZSxcbiAgICAgICAgICAgIGlkOiBib29rLmlkXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJyYW5kaW5nLCB7IHJlY2VudFJlYWRpbmc6IGJvb2tTaGVsZkxpc3QsIGlzQWRtaW46IGlzQWRtaW4sIHVzZXJuYW1lOiB1c2VybmFtZSwgb25Mb2dvdXQ6IHRoaXMuaGFuZGxlTG9nb3V0IH0pLFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29sb3Bob24sIG51bGwpKSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChzdGF0ZSA9PiAoe1xuICAgIG5vdGlmaWNhdGlvbjogc3RhdGUuY29tcG9uZW50cy5ub3RpZmljYXRpb24sXG4gICAgc2Vzc2lvbjogc3RhdGUuc2Vzc2lvbixcbiAgICBib29rU2hlbGY6IHNlbGVjdG9ycy5zaGVsZkJvb2tzKCkoc3RhdGUpXG59KSwgeyBmZXRjaFNoZWxmLCB1c2VyTG9nb3V0IH0pKEFwcCk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvQXBwLnRzeFxuICoqLyIsImltcG9ydCBCcmFuZGluZyBmcm9tICcuL0JyYW5kaW5nJztcbmV4cG9ydCBkZWZhdWx0IEJyYW5kaW5nO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0JyYW5kaW5nL2luZGV4LnRzeFxuICoqLyIsInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDb250YWluZXIgfSBmcm9tICcuLi8uLi9lbGVtZW50cy9sYXlvdXQnO1xuaW1wb3J0IHsgRHJvcGRvd24sIERyb3Bkb3duSXRlbSwgRHJvcGRvd25JdGVtU2VwIH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvRHJvcGRvd24nO1xuaW1wb3J0IExvZ28gZnJvbSAnLi4vTG9nbyc7XG5pbXBvcnQgQ1NTTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vQnJhbmRpbmcuc2NzcycpO1xubGV0IEJyYW5kaW5nID0gY2xhc3MgQnJhbmRpbmcgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oYW5kbGVMb2dvdXRDbGljayA9IHRoaXMuaGFuZGxlTG9nb3V0Q2xpY2suYmluZCh0aGlzKTtcbiAgICB9XG4gICAgdG9nZ2xlRHJvcGRvd25NZW51KCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogIXRoaXMuc3RhdGUuaXNEcm9wZG93bk1lbnVWaXNpYmxlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBoYW5kbGVMb2dvdXRDbGljayhlKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25Mb2dvdXQoKTtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBpc0FkbWluID0gdGhpcy5wcm9wcy5pc0FkbWluID8gdGhpcy5wcm9wcy5pc0FkbWluIDogZmFsc2U7XG4gICAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIHJlY2VudFJlYWRpbmcgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogYGJyYW5kaW5nICR7dGhpcy5wcm9wcy5jbGFzc05hbWUgPyB0aGlzLnByb3BzLmNsYXNzTmFtZSA6ICcnfWAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCB7IGNsYXNzTmFtZTogXCJjbGVhcmZpeFwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImxlZnRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2dvLCBudWxsKSksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibGVmdFwiLCBzdHlsZU5hbWU6IFwibmF2XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7IHN0eWxlTmFtZTogXCJuYXYtbGlua3NcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IHN0eWxlTmFtZTogXCJuYXYtaXRlbVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyBzdHlsZU5hbWU6IFwibmF2LWxpbmtcIiwgdG86IFwiL2Jyb3dzZVwiIH0sIFwiXFx1NkQ0RlxcdTg5QzhcIikpKSksXG4gICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcIm5hdi0tdXNlclwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjZW50UmVhZGluZy5sZW5ndGggIT09IDAgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd24sIHsgc3R5bGVOYW1lOiBcImRyb3Bkb3duLXJlY2VudC1yZWFkaW5nXCIsIHRpdGxlOiBcIuacgOi/kemYheivu1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY2VudFJlYWRpbmcuc2xpY2UoMCwgNSkubWFwKChib29rLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgeyBrZXk6IGluZGV4IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHRvOiBgL3ZpZXdlci9ib29rLyR7Ym9vay5pZH1gIH0sIGJvb2sudGl0bGUpKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbVNlcCwgbnVsbCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHRvOiBgL3VzZXIvc2hlbGZgIH0sIFwiXFx1NjdFNVxcdTc3MEJcXHU1MTY4XFx1OTBFOFwiKSkpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duLCB7IHRpdGxlOiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNBZG1pbiAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJiYWRnZVwiIH0sIFwiXFx1N0JBMVxcdTc0MDZcXHU1NDU4XCIpKSkgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNBZG1pbiA9PT0gdHJ1ZSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93bkl0ZW0sIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IFwiL2NvbnNvbGVcIiB9LCBcIlxcdTYzQTdcXHU1MjM2XFx1NTNGMFwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogYC91c2VyL3NoZWxmYCB9LCBcIlxcdTRFNjZcXHU2N0I2XCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93bkl0ZW0sIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IGAvdXNlci9wcm9maWxlYCB9LCBcIlxcdTRFMkFcXHU0RUJBXFx1NEUzQlxcdTk4NzVcIikpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogYC91c2VyL3ByZWZlcmVuY2VgIH0sIFwiXFx1OEJCRVxcdTdGNkVcIikpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbVNlcCwgbnVsbCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgeyBvbkNsaWNrOiB0aGlzLmhhbmRsZUxvZ291dENsaWNrLCBocmVmOiBcIiNcIiB9LCBcIlxcdTkwMDBcXHU1MUZBXCIpKSkpKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJuYXYtLXVzZXJcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7IHN0eWxlTmFtZTogXCJuYXYtbGlua3NcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgeyBzdHlsZU5hbWU6IFwibmF2LWl0ZW1cIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHN0eWxlTmFtZTogXCJuYXYtbGlua1wiLCB0bzogXCIvc2lnbmluXCIgfSwgXCJcXHU3NjdCXFx1NUY1NVwiKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IHN0eWxlTmFtZTogXCJuYXYtaXRlbVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgc3R5bGVOYW1lOiBcIm5hdi1saW5rXCIsIHRvOiBcIi9zaWdudXBcIiB9LCBcIlxcdTZDRThcXHU1MThDXCIpKSkpKSkpKSk7XG4gICAgfVxufTtcbkJyYW5kaW5nID0gX19kZWNvcmF0ZShbXG4gICAgQ1NTTW9kdWxlcyhzdHlsZXMsIHtcbiAgICAgICAgYWxsb3dNdWx0aXBsZTogdHJ1ZVxuICAgIH0pXG5dLCBCcmFuZGluZyk7XG5leHBvcnQgZGVmYXVsdCBCcmFuZGluZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9CcmFuZGluZy9CcmFuZGluZy50c3hcbiAqKi8iLCJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vQ29udGFpbmVyJztcbmV4cG9ydCB7IENvbnRhaW5lciB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9sYXlvdXQudHNcbiAqKi8iLCJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vQ29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IENvbnRhaW5lcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQ29udGFpbmVyL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmNsYXNzIENvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgY2xhc3NOYW1lID0gKHRoaXMucHJvcHMuaXNGbHVpZCA/ICdjb250YWluZXItZmx1aWQnIDogJ2NvbnRhaW5lcicpICsgKHRoaXMucHJvcHMuY2xhc3NOYW1lID8gYCAke3RoaXMucHJvcHMuY2xhc3NOYW1lfWAgOiAnJyk7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBDb250YWluZXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0NvbnRhaW5lci9Db250YWluZXIudHN4XG4gKiovIiwiaW1wb3J0IERyb3Bkb3duIGZyb20gJy4vRHJvcGRvd24nO1xuaW1wb3J0IERyb3Bkb3duSXRlbSBmcm9tICcuL0Ryb3Bkb3duSXRlbSc7XG5pbXBvcnQgRHJvcGRvd25JdGVtU2VwIGZyb20gJy4vRHJvcGRvd25JdGVtU2VwJztcbmV4cG9ydCB7IERyb3Bkb3duSXRlbSwgRHJvcGRvd24sIERyb3Bkb3duSXRlbVNlcCB9O1xuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL2luZGV4LnRzXG4gKiovIiwidmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmltcG9ydCBpc0Rlc2NlbmRhbnQgZnJvbSAnLi4vLi4vdXRpbHMvZG9tL2lzRGVzY2VuZGFudCc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0Ryb3Bkb3duLnNjc3MnKTtcbmxldCBEcm9wZG93biA9IGNsYXNzIERyb3Bkb3duIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzaG93TWVudTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oYW5kbGVHbG9iYWxDbGljayA9IHRoaXMuaGFuZGxlR2xvYmFsQ2xpY2suYmluZCh0aGlzKTtcbiAgICB9XG4gICAgaGFuZGxlR2xvYmFsQ2xpY2soZSkge1xuICAgICAgICAvLyDmo4Dmn6Xngrnlh7vnmoQgZG9tIOaYr+WQpuaYryBkcm9wZG93biDnmoTlrZDlhYPntKBcbiAgICAgICAgLy8g5aaC5p6c5piv6YKj5LmI5bCx5LiN5YGa5aSE55CG77yM6ICMIHRvZ2dsZURyb3Bkb3duIOS8muWTjeW6lFxuICAgICAgICAvLyDop6PlhrPkuobpobXpnaLkuIrlkIzml7bnlKjkuKTkuKogZHJvcGRvd24g5pe277yM5YW25Lit5LiA5Liq5bGV5byA77yM54K55Ye75Y+m5LiA5Liq5YmN6ICF5LiN5ZCI5LiK55qE6Zeu6aKYXG4gICAgICAgIGlmICghaXNEZXNjZW5kYW50KHRoaXMuZHJvcGRvd24sIGUudGFyZ2V0KSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc2hvd01lbnU6IGZhbHNlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIOWmguaenOS9v+eUqOS6huWOn+eUn+S6i+S7tu+8jOWwvemHj+S4jeimgea3t+WQiOS9v+eUqCBzeW50aGV0aWMg5LqL5Lu277yMcmVhY3Qg55qE55Sf5Lqn54mI5pys5Ly85LmO5Lya5Ye6546w55u45YWz55qEIGJ1Z1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc2hvd01lbnU6ICF0aGlzLnN0YXRlLnNob3dNZW51XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVHbG9iYWxDbGljayk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZUdsb2JhbENsaWNrKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNsYXNzTmFtZSwgc3R5bGUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJlZjogcmVmID0+IHsgdGhpcy5kcm9wZG93biA9IHJlZjsgfSwgc3R5bGVOYW1lOiBcImRyb3Bkb3duXCIsIGNsYXNzTmFtZTogY2xhc3NOYW1lIHx8ICcnIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImRyb3Bkb3duLXRvZ2dsZVwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgdGhpcy5wcm9wcy50aXRsZSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBzdHlsZU5hbWU6IFwiZHJvcGRvd24tY2FyZXRcIiB9KSksXG4gICAgICAgICAgICB0aGlzLnN0YXRlLnNob3dNZW51ICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBzdHlsZSA9PT0gJ2RhcmsnID8gJ2Ryb3Bkb3duLW1lbnUtLWRhcmsnIDogJ2Ryb3Bkb3duLW1lbnUnIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIG51bGwsIHRoaXMucHJvcHMuY2hpbGRyZW4pKSkpKTtcbiAgICB9XG59O1xuRHJvcGRvd24gPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIERyb3Bkb3duKTtcbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bi50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0Ryb3Bkb3duLnNjc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTc1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5kcm9wZG93bi1pdGVtXzJDMWR6IHtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIG92ZXJmbG93OiBoaWRkZW47IH1cXG5cXG4ubGlnaHQtbGlua18yUURlQSB7XFxuICBjb2xvcjogI2RkZDsgfVxcbiAgLmxpZ2h0LWxpbmtfMlFEZUE6aG92ZXIge1xcbiAgICBjb2xvcjogI2ZmZjsgfVxcblxcbi5kcm9wZG93bl9TWmZ5cCB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cXG5cXG4uZHJvcGRvd24tdG9nZ2xlXzM0UWZkIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgbWF4LWhlaWdodDogMTAwJTsgfVxcblxcbi5kcm9wZG93bi1tZW51XzFIZ2JTIHtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjIpO1xcbiAgbGluZS1oZWlnaHQ6IDIuMjtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxuICBiYWNrZ3JvdW5kOiAjMjIyO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDA7XFxuICB3aWR0aDogMTUwcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcGFkZGluZzogNXB4IDA7XFxuICB6LWluZGV4OiA5MDA7IH1cXG5cXG4uZHJvcGRvd24tY2FyZXRfRmNCV0kge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDA7XFxuICBoZWlnaHQ6IDA7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBib3JkZXI6IDRweCBzb2xpZDtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1sZWZ0LWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIG1hcmdpbi1sZWZ0OiA1cHg7IH1cXG5cXG4uZHJvcGRvd24taXRlbV8yQzFkeiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBhZGRpbmc6IDAgMjVweDtcXG4gIHRyYW5zaXRpb246IGFsbCAwczsgfVxcbiAgLmRyb3Bkb3duLWl0ZW1fMkMxZHo6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kOiAjM2MzYzNjOyB9XFxuICAuZHJvcGRvd24taXRlbV8yQzFkejphY3RpdmUge1xcbiAgICBiYWNrZ3JvdW5kOiAjM2MzYzNjOyB9XFxuXFxuLnNlcF8xMFkwbyB7XFxuICBtYXJnaW46IDVweCAwO1xcbiAgaGVpZ2h0OiAxcHg7XFxuICBiYWNrZ3JvdW5kOiAjM2MzYzNjOyB9XFxuXFxuLmRyb3Bkb3duLW1lbnUtLWRhcmtfNmVWUFgge1xcbiAgYmFja2dyb3VuZDogIzFCMjY3RjsgfVxcbiAgLmRyb3Bkb3duLW1lbnUtLWRhcmtfNmVWUFggLnNlcF8xMFkwbyB7XFxuICAgIGJhY2tncm91bmQ6ICMxZjJjOTQ7IH1cXG4gIC5kcm9wZG93bi1tZW51LS1kYXJrXzZlVlBYIC5kcm9wZG93bi1pdGVtXzJDMWR6OmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZDogIzFmMmM5NDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImRyb3Bkb3duLWl0ZW1cIjogXCJkcm9wZG93bi1pdGVtXzJDMWR6IGxpZ2h0LWxpbmtfMlFEZUFcIixcblx0XCJsaWdodC1saW5rXCI6IFwibGlnaHQtbGlua18yUURlQVwiLFxuXHRcImRyb3Bkb3duXCI6IFwiZHJvcGRvd25fU1pmeXBcIixcblx0XCJkcm9wZG93bi10b2dnbGVcIjogXCJkcm9wZG93bi10b2dnbGVfMzRRZmRcIixcblx0XCJkcm9wZG93bi1tZW51XCI6IFwiZHJvcGRvd24tbWVudV8xSGdiU1wiLFxuXHRcImRyb3Bkb3duLWNhcmV0XCI6IFwiZHJvcGRvd24tY2FyZXRfRmNCV0lcIixcblx0XCJzZXBcIjogXCJzZXBfMTBZMG9cIixcblx0XCJkcm9wZG93bi1tZW51LS1kYXJrXCI6IFwiZHJvcGRvd24tbWVudS0tZGFya182ZVZQWCBkcm9wZG93bi1tZW51XzFIZ2JTXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL0Ryb3Bkb3duLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNzZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0Ryb3Bkb3duLnNjc3MnKTtcbmZ1bmN0aW9uIERyb3Bkb3duSXRlbShwcm9wcykge1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIHR5cGVvZiBwcm9wcy5jaGlsZHJlbiA9PT0gJ3N0cmluZydcbiAgICAgICAgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzWydkcm9wZG93bi1pdGVtJ10gfSwgcHJvcHMuY2hpbGRyZW4pKVxuICAgICAgICA6IFJlYWN0LmNsb25lRWxlbWVudChwcm9wcy5jaGlsZHJlbiwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXNbJ2Ryb3Bkb3duLWl0ZW0nXVxuICAgICAgICB9KSkpO1xufVxuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd25JdGVtO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bkl0ZW0udHN4XG4gKiovIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vRHJvcGRvd24uc2NzcycpO1xuZnVuY3Rpb24gRHJvcGRvd25JdGVtU2VwKHByb3BzKSB7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgeyBjbGFzc05hbWU6IHN0eWxlc1snc2VwJ10gfSkpO1xufVxuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd25JdGVtU2VwO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bkl0ZW1TZXAudHN4XG4gKiovIiwiaW1wb3J0IExvZ28gZnJvbSAnLi9Mb2dvJztcbmV4cG9ydCBkZWZhdWx0IExvZ287XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9pbmRleC50c1xuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vTG9nby5jc3MnKTtcbmZ1bmN0aW9uIExvZ28ocHJvcHMpIHtcbiAgICBjb25zdCB7IGRhcmssIHRvIH0gPSBwcm9wcztcbiAgICBjb25zdCBzdHlsZU5hbWUgPSBkYXJrID8gJ2xvZ28tLWRhcmsnIDogJ2xvZ28nO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImgxXCIsIHsgY2xhc3NOYW1lOiBzdHlsZXNbJ2xvZ28td3JhcCddIH0sXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyBjbGFzc05hbWU6IHN0eWxlc1tzdHlsZU5hbWVdLCB0bzogdG8gfSwgXCJyZWFkclwiKSkpO1xufVxuTG9nb1snZGVmYXVsdFByb3BzJ10gPSB7XG4gICAgdG86ICcvJ1xufTtcbmV4cG9ydCBkZWZhdWx0IExvZ287XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9Mb2dvLnRzeFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vTG9nby5jc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0xvZ28vTG9nby5jc3NcbiAqKiBtb2R1bGUgaWQgPSAxODFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS1icmFuZGluZy1oZWlnaHQ6IDYwcHg7XFxufVxcblxcbi5sb2dvLXdyYXBfQ1A1UDkge1xcbiAgbWFyZ2luOiAwO1xcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWJyYW5kaW5nLWhlaWdodCk7XFxuICBjb2xvcjogI2ZmZjtcXG4gIG1hcmdpbi10b3A6IC0zcHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcblxcbi5sb2dvXzNxY2JWIHtcXG4gIGJhY2tncm91bmQ6IHVybChcIiArIHJlcXVpcmUoXCJhc3NldHMvaW1nL2xvZ28ucG5nXCIpICsgXCIpIG5vLXJlcGVhdCBsZWZ0O1xcbiAgd2lkdGg6IDcwcHg7XFxuICBoZWlnaHQ6IHZhcigtLWJyYW5kaW5nLWhlaWdodCk7XFxuICBiYWNrZ3JvdW5kLXNpemU6IDcwcHg7XFxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG4ubG9nby0tZGFya18zOEYtSCB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoXCIgKyByZXF1aXJlKFwiYXNzZXRzL2ltZy9sb2dvLWRhcmsucG5nXCIpICsgXCIpIG5vLXJlcGVhdCBsZWZ0O1xcbiAgYmFja2dyb3VuZC1zaXplOiA3MHB4O1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJsb2dvLXdyYXBcIjogXCJsb2dvLXdyYXBfQ1A1UDlcIixcblx0XCJsb2dvXCI6IFwibG9nb18zcWNiVlwiLFxuXHRcImxvZ28tLWRhcmtcIjogXCJsb2dvLS1kYXJrXzM4Ri1IIGxvZ29fM3FjYlZcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vcG9zdGNzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Mb2dvL0xvZ28uY3NzXG4gKiogbW9kdWxlIGlkID0gMTgyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWcvbG9nby44MWViODNkN2Y3LnBuZ1wiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvYXNzZXRzL2ltZy9sb2dvLnBuZ1xuICoqIG1vZHVsZSBpZCA9IDE4M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL2xvZ28tZGFyay40NzU0ZThhYTc4LnBuZ1wiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvYXNzZXRzL2ltZy9sb2dvLWRhcmsucG5nXG4gKiogbW9kdWxlIGlkID0gMTg0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0JyYW5kaW5nLnNjc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0JyYW5kaW5nL0JyYW5kaW5nLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxODVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm5hdi1saW5rXzNYMFQ4IHtcXG4gIGNvbG9yOiAjZmZmOyB9XFxuICAubmF2LWxpbmtfM1gwVDg6aG92ZXIge1xcbiAgICBjb2xvcjogI2RkZDsgfVxcblxcbi5icmFuZGluZ184RVZBdCB7XFxuICBtaW4taGVpZ2h0OiA2MHB4O1xcbiAgYmFja2dyb3VuZDogIzIyMjsgfVxcblxcbi5kcm9wZG93bi1tZW51XzVTYzUwIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogNjBweDtcXG4gIHJpZ2h0OiAwO1xcbiAgei1pbmRleDogOTk5OyB9XFxuXFxuLnVzZXJuYW1lXzNNbTZ6LFxcbi5uYXYtbGlua3NfMndUWVkge1xcbiAgbGluZS1oZWlnaHQ6IDYwcHg7IH1cXG5cXG4ubmF2XzFvajF6LCAubmF2LS11c2VyXzFMN0xiIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgcGFkZGluZzogMCAxMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDYwcHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cXG5cXG4uZHJvcGRvd24tcmVjZW50LXJlYWRpbmdfMm95akgge1xcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XFxuXFxuLm5hdi0tdXNlcl8xTDdMYiB7XFxuICBmbG9hdDogcmlnaHQ7IH1cXG5cXG4ubmF2LWxpbmtfM1gwVDgge1xcbiAgcGFkZGluZzogMCA1cHg7IH1cXG5cXG4ubmF2LWl0ZW1fZjgzYmgge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XFxuXFxuLnJlY2VudC1yZWFkaW5nXzFrSktoIHtcXG4gIG1hcmdpbi1yaWdodDogMTVweDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcIm5hdi1saW5rXCI6IFwibmF2LWxpbmtfM1gwVDhcIixcblx0XCJicmFuZGluZ1wiOiBcImJyYW5kaW5nXzhFVkF0XCIsXG5cdFwiZHJvcGRvd24tbWVudVwiOiBcImRyb3Bkb3duLW1lbnVfNVNjNTBcIixcblx0XCJ1c2VybmFtZVwiOiBcInVzZXJuYW1lXzNNbTZ6XCIsXG5cdFwibmF2LWxpbmtzXCI6IFwibmF2LWxpbmtzXzJ3VFlZXCIsXG5cdFwibmF2XCI6IFwibmF2XzFvajF6XCIsXG5cdFwibmF2LS11c2VyXCI6IFwibmF2LS11c2VyXzFMN0xiXCIsXG5cdFwiZHJvcGRvd24tcmVjZW50LXJlYWRpbmdcIjogXCJkcm9wZG93bi1yZWNlbnQtcmVhZGluZ18yb3lqSFwiLFxuXHRcIm5hdi1pdGVtXCI6IFwibmF2LWl0ZW1fZjgzYmhcIixcblx0XCJyZWNlbnQtcmVhZGluZ1wiOiBcInJlY2VudC1yZWFkaW5nXzFrSktoXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE4NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IENvbG9waG9uIGZyb20gJy4vQ29sb3Bob24nO1xuZXhwb3J0IGRlZmF1bHQgQ29sb3Bob247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IENvbnRhaW5lciBmcm9tICcuLi8uLi9lbGVtZW50cy9Db250YWluZXInO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9Db2xvcGhvbi5zY3NzJyk7XG5sZXQgQ29sb3Bob24gPSBjbGFzcyBDb2xvcGhvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiY29sb3Bob25cIiwgc3R5bGVOYW1lOiBcImNvbG9waG9uXCIgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFwiXFx1MDBBOSAyMDE1XFx1RkYwRDIwMTYgcmVhZHJ3ZWIuY29tLCBhbGwgcmlnaHRzIHJlc2VydmVkXCIpKSkpO1xuICAgIH1cbn07XG5Db2xvcGhvbiA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgQ29sb3Bob24pO1xuZXhwb3J0IGRlZmF1bHQgQ29sb3Bob247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24udHN4XG4gKiovIiwiXG4gICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UhLi9Db2xvcGhvbi5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db2xvcGhvbi9Db2xvcGhvbi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTg5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb2xvcGhvbl8zY1FKMCB7XFxuICBmb250LXNpemU6IDFyZW07XFxuICBwYWRkaW5nOiAyMHB4IDA7XFxuICBjb2xvcjogIzk5OTsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImNvbG9waG9uXCI6IFwiY29sb3Bob25fM2NRSjBcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db2xvcGhvbi9Db2xvcGhvbi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTkwXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gJy4uL2VsZW1lbnRzL2xheW91dCc7XG5pbXBvcnQgQ29uc29sZUJyYW5kaW5nIGZyb20gJy4uL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nJztcbmltcG9ydCB7IHVzZXJBdXRoLCBzZW5kTm90aWZpY2F0aW9uLCB1c2VyTG9nb3V0IH0gZnJvbSAnLi4vc3RvcmUvYWN0aW9ucyc7XG5pbXBvcnQgQ29uc29sZVNpZGViYXIgZnJvbSAnLi4vY29tcG9uZW50cy9Db25zb2xlU2lkZWJhcic7XG5pbXBvcnQgbWVudXMgZnJvbSAnLi4vY29udGVudC9tZW51cyc7XG5pbXBvcnQgRG9jQ29udGFpbmVyIGZyb20gJy4uL2NvbnRhaW5lcnMvRG9jQ29udGFpbmVyJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uL2hlbHBlcnMnO1xuY2xhc3MgQ29uc29sZSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLmhhbmRsZUxvZ291dCA9IHRoaXMuaGFuZGxlTG9nb3V0LmJpbmQodGhpcyk7XG4gICAgfVxuICAgIHJlZGlyZWN0SWZOb3RBZG1pbihwcm9wcyA9IHRoaXMucHJvcHMpIHtcbiAgICAgICAgaWYgKHByb3BzLnNlc3Npb24udXNlci5yb2xlICE9PSAnYWRtaW4nKSB7XG4gICAgICAgICAgICBoZWxwZXJzLnJlZGlyZWN0KCcvJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlTG9nb3V0KCkge1xuICAgICAgICB0aGlzLnByb3BzLnVzZXJMb2dvdXQoKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgY29uc3QgdXNlclJvbGVDaGFuZ2VkID0gdGhpcy5wcm9wcy5zZXNzaW9uLnVzZXIucm9sZSAhPT0gbmV4dFByb3BzLnNlc3Npb24udXNlci5yb2xlO1xuICAgICAgICBpZiAodXNlclJvbGVDaGFuZ2VkKSB7XG4gICAgICAgICAgICB0aGlzLnJlZGlyZWN0SWZOb3RBZG1pbihuZXh0UHJvcHMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGlzQWRtaW4gPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlID09PSAnYWRtaW4nO1xuICAgICAgICBsZXQgdXNlcm5hbWUgPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci51c2VybmFtZTtcbiAgICAgICAgbGV0IHBhdGhuYW1lID0gdGhpcy5wcm9wcy5yb3V0aW5nLmxvY2F0aW9uQmVmb3JlVHJhbnNpdGlvbnNcbiAgICAgICAgICAgID8gdGhpcy5wcm9wcy5yb3V0aW5nLmxvY2F0aW9uQmVmb3JlVHJhbnNpdGlvbnMucGF0aG5hbWVcbiAgICAgICAgICAgIDogJ2NvbnNvbGUnO1xuICAgICAgICBjb25zdCBjb250ZW50U3R5bGUgPSB7XG4gICAgICAgICAgICBtYXJnaW5MZWZ0OiAzMjAsXG4gICAgICAgICAgICBwYWRkaW5nVG9wOiA2MFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gKGlzQWRtaW5cbiAgICAgICAgICAgID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jQ29udGFpbmVyLCB7IGJvZHlDbGFzczogXCJjb25zb2xlXCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnNvbGVCcmFuZGluZywgeyBpc0FkbWluOiBpc0FkbWluLCB1c2VybmFtZTogdXNlcm5hbWUsIG9uTG9nb3V0OiB0aGlzLmhhbmRsZUxvZ291dCB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRhaW5lciwgeyBpc0ZsdWlkOiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uc29sZVNpZGViYXIsIHsgbWVudU1hcHBpbmc6IG1lbnVzLCBjdXJyZW50UGF0aDogcGF0aG5hbWUgfSksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZTogY29udGVudFN0eWxlIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pKSkpXG4gICAgICAgICAgICA6IChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHsgdGV4dEFsaWduOiAnY2VudGVyJywgbWFyZ2luOiAnMjBweCAwJyB9IH0sIFwiQUNDRVNTIERFTklFRCFcIikpKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KHN0YXRlID0+ICh7XG4gICAgbm90aWZpY2F0aW9uczogc3RhdGUuY29tcG9uZW50cy5ub3RpZmljYXRpb25zLFxuICAgIHNlc3Npb246IHN0YXRlLnNlc3Npb24sXG4gICAgcm91dGluZzogc3RhdGUucm91dGluZ1xufSksIHsgc2VuZE5vdGlmaWNhdGlvbiwgdXNlckF1dGgsIHVzZXJMb2dvdXQgfSkoQ29uc29sZSk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvQ29uc29sZS50c3hcbiAqKi8iLCJpbXBvcnQgQ29uc29sZUJyYW5kaW5nIGZyb20gJy4vQ29uc29sZUJyYW5kaW5nJztcbmV4cG9ydCBkZWZhdWx0IENvbnNvbGVCcmFuZGluZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlQnJhbmRpbmcvaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgQ29udGFpbmVyIGZyb20gJy4uLy4uL2VsZW1lbnRzL0NvbnRhaW5lcic7XG5pbXBvcnQgeyBEcm9wZG93biwgRHJvcGRvd25JdGVtLCBEcm9wZG93bkl0ZW1TZXAgfSBmcm9tICcuLi8uLi9lbGVtZW50cy9Ecm9wZG93bic7XG5pbXBvcnQgQ1NTTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7XG5pbXBvcnQgTG9nbyBmcm9tICcuLi9Mb2dvJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vQ29uc29sZUJyYW5kaW5nLnNjc3MnKTtcbmxldCBDb25zb2xlQnJhbmRpbmcgPSBjbGFzcyBDb25zb2xlQnJhbmRpbmcgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oYW5kbGVMb2dvdXRDbGljayA9IHRoaXMuaGFuZGxlTG9nb3V0Q2xpY2suYmluZCh0aGlzKTtcbiAgICB9XG4gICAgaGFuZGxlTG9nb3V0Q2xpY2soZSkge1xuICAgICAgICB0aGlzLnByb3BzLm9uTG9nb3V0KCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gICAgdG9nZ2xlRHJvcGRvd25NZW51KCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogIXRoaXMuc3RhdGUuaXNEcm9wZG93bk1lbnVWaXNpYmxlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB1c2VybmFtZSA9IHRoaXMucHJvcHMudXNlcm5hbWU7XG4gICAgICAgIGxldCBpc0FkbWluID0gdGhpcy5wcm9wcy5pc0FkbWluID8gdGhpcy5wcm9wcy5pc0FkbWluIDogJ2ZhbHNlJztcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImJyYW5kaW5nXCIgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCB7IGlzRmx1aWQ6IHRydWUsIGNsYXNzTmFtZTogXCJjbGVhcmZpeFwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImxlZnRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2dvLCB7IHRvOiBcIi9jb25zb2xlXCIgfSkpLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcInN1Yi1uYW1lXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgc3R5bGVOYW1lOiBcInN1YlwiIH0sIFwiXFx1NjNBN1xcdTUyMzZcXHU1M0YwXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJuYXYgcmlnaHRcIiB9LCB1c2VybmFtZSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93biwgeyBzdHlsZTogXCJkYXJrXCIsIHRpdGxlOiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0FkbWluICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcImJhZGdlIGJhZGdlLS1kYXJrXCIgfSwgXCJcXHU3QkExXFx1NzQwNlxcdTU0NThcIikpKSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93bkl0ZW0sIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHRvOiBcIi9cIiB9LCBcIlxcdTU2REVcXHU1MjMwIFJlYWRyXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogYC91c2VyL3Byb2ZpbGVgIH0sIFwiXFx1NEUyQVxcdTRFQkFcXHU0RTNCXFx1OTg3NVwiKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IGAvdXNlci9wcmVmZXJlbmNlYCB9LCBcIlxcdThCQkVcXHU3RjZFXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtU2VwLCBudWxsKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHsgb25DbGljazogdGhpcy5oYW5kbGVMb2dvdXRDbGljaywgaHJlZjogXCIjXCIgfSwgXCJcXHU5MDAwXFx1NTFGQVwiKSkpKSkpKSkpO1xuICAgIH1cbn07XG5Db25zb2xlQnJhbmRpbmcgPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIENvbnNvbGVCcmFuZGluZyk7XG5leHBvcnQgZGVmYXVsdCBDb25zb2xlQnJhbmRpbmc7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL0NvbnNvbGVCcmFuZGluZy50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0NvbnNvbGVCcmFuZGluZy5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlQnJhbmRpbmcvQ29uc29sZUJyYW5kaW5nLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxOTRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuZXhwb3J0cy5pKHJlcXVpcmUoXCItIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuLi9CcmFuZGluZy9CcmFuZGluZy5zY3NzXCIpLCB1bmRlZmluZWQpO1xuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5icmFuZGluZ18zZ29SRyB7XFxuICBiYWNrZ3JvdW5kOiAjMUIyNjdGO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgei1pbmRleDogODAwO1xcbiAgaGVpZ2h0OiA2MHB4OyB9XFxuXFxuLnNlcF9BVDZHbCB7XFxuICBtYXJnaW46IDAgMTBweDtcXG4gIG9wYWNpdHk6IC42O1xcbiAgZm9udC1zaXplOiAxcmVtOyB9XFxuXFxuLnN1Yl9JeWhtcyB7XFxuICBvcGFjaXR5OiAuODtcXG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIG1hcmdpbi10b3A6IC0zcHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cXG5cXG4ucmlnaHRfMVpBUVAge1xcbiAgZmxvYXQ6IHJpZ2h0OyB9XFxuXFxuLnN1Yi1uYW1lXzJUOGFoIHtcXG4gIGZsb2F0OiBsZWZ0O1xcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7IH1cXG4gIC5zdWItbmFtZV8yVDhhaCBzcGFuIHtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICBsaW5lLWhlaWdodDogNjBweDtcXG4gICAgaGVpZ2h0OiA2MHB4O1xcbiAgICBjb2xvcjogI2ZmZjsgfVxcblxcbi5uYXZfMTB5bjQge1xcbiAgY29sb3I6ICNmZmY7XFxuICBsaW5lLWhlaWdodDogNjBweDtcXG4gIGhlaWdodDogNjBweDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImJyYW5kaW5nXCI6IFwiYnJhbmRpbmdfM2dvUkdcIixcblx0XCJzZXBcIjogXCJzZXBfQVQ2R2xcIixcblx0XCJzdWJcIjogXCJzdWJfSXlobXNcIixcblx0XCJyaWdodFwiOiBcInJpZ2h0XzFaQVFQXCIsXG5cdFwic3ViLW5hbWVcIjogXCJzdWItbmFtZV8yVDhhaFwiLFxuXHRcIm5hdlwiOiBcIm5hdl8xMHluNCBcIiArIHJlcXVpcmUoXCItIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuLi9CcmFuZGluZy9CcmFuZGluZy5zY3NzXCIpLmxvY2Fsc1tcIm5hdlwiXSArIFwiXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL0NvbnNvbGVCcmFuZGluZy5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTk1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgQ29uc29sZVNpZGViYXIgZnJvbSAnLi9Db25zb2xlU2lkZWJhcic7XG5leHBvcnQgZGVmYXVsdCBDb25zb2xlU2lkZWJhcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9pbmRleC50c1xuICoqLyIsInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBJY29uIGZyb20gJy4uLy4uL2VsZW1lbnRzL0ljb24nO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9Db25zb2xlU2lkZWJhci5jc3MnKTtcbmxldCBDb25zb2xlU2lkZWJhciA9IGNsYXNzIENvbnNvbGVTaWRlYmFyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgbWVudU1hcHBpbmcsIGN1cnJlbnRQYXRoIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgY3VycmVudE1lbnUgPSB7XG4gICAgICAgICAgICByb290SW5kZXg6IDAsXG4gICAgICAgICAgICBzdWJJbmRleDogMFxuICAgICAgICB9O1xuICAgICAgICBtZW51TWFwcGluZy5mb3JFYWNoKChtZW51LCByb290SW5kZXgpID0+IHtcbiAgICAgICAgICAgIGxldCBzdWJJbmRleDtcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBtZW51LnN1Yk1lbnUuZmlsdGVyKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLnBhdGggPT09IGN1cnJlbnRQYXRoKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YkluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudE1lbnUucm9vdEluZGV4ID0gcm9vdEluZGV4O1xuICAgICAgICAgICAgICAgIGN1cnJlbnRNZW51LnN1YkluZGV4ID0gc3ViSW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBsZXQgcm9vdE1lbnUgPSAoUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIHsgc3R5bGVOYW1lOiBcIm5hdi1zaWRlLXJvb3RcIiB9LCBtZW51TWFwcGluZy5tYXAoKG1lbnUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGtleTogaW5kZXgsIHN0eWxlTmFtZTogaW5kZXggIT09IGN1cnJlbnRNZW51LnJvb3RJbmRleCA/ICdyb290LWl0ZW0nIDogJ3Jvb3QtaXRlbS0tY3VycmVudCcgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IG1lbnUucGF0aCB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEljb24sIHsgc2l6ZTogMjUsIHN0eWxlTmFtZTogXCJpY29uXCIsIG5hbWU6IG1lbnUuY29tcG9uZW50IH0pKSkpO1xuICAgICAgICB9KSkpO1xuICAgICAgICBsZXQgc3ViTWVudSA9IChSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgeyBzdHlsZU5hbWU6IFwibmF2LXNpZGUtc3ViXCIgfSwgbWVudU1hcHBpbmdbY3VycmVudE1lbnUucm9vdEluZGV4XS5zdWJNZW51Lm1hcCgobWVudSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHsga2V5OiBpbmRleCwgc3R5bGVOYW1lOiBpbmRleCAhPT0gY3VycmVudE1lbnUuc3ViSW5kZXggPyAnc3ViLWl0ZW0nIDogJ3N1Yi1pdGVtLS1jdXJyZW50JyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogbWVudS5wYXRoIH0sIG1lbnUuZGlzcGxheU5hbWUpKSk7XG4gICAgICAgIH0pKSk7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJzaWRlYmFyLWxlZnRcIiB9LFxuICAgICAgICAgICAgcm9vdE1lbnUsXG4gICAgICAgICAgICBzdWJNZW51KSk7XG4gICAgfVxufTtcbkNvbnNvbGVTaWRlYmFyID0gX19kZWNvcmF0ZShbXG4gICAgQ1NTTW9kdWxlcyhzdHlsZXMsIHtcbiAgICAgICAgYWxsb3dNdWx0aXBsZTogdHJ1ZVxuICAgIH0pXG5dLCBDb25zb2xlU2lkZWJhcik7XG5leHBvcnQgZGVmYXVsdCBDb25zb2xlU2lkZWJhcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9Db25zb2xlU2lkZWJhci50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0NvbnNvbGVTaWRlYmFyLmNzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZVNpZGViYXIvQ29uc29sZVNpZGViYXIuY3NzXG4gKiogbW9kdWxlIGlkID0gMTk4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcbmV4cG9ydHMuaShyZXF1aXJlKFwiLSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2Uhc3R5bGVzL3ZhcmlhYmxlcy5jc3NcIiksIFwiXCIpO1xuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tbmF2LXJvb3Qtd2lkdGg6IDgwcHg7XFxuICAtLWl0ZW0tbGluZS1oZWlnaHQ6IDUwcHg7XFxufVxcblxcbi5zaWRlYmFyLWxlZnRfMk5mdmEge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgbGVmdDogMDtcXG4gIHRvcDogdmFyKC0tYnJhbmRpbmctaGVpZ2h0KTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiB2YXIoLS1zaWRlYmFyLXdpZHRoKTtcXG4gIGJhY2tncm91bmQ6ICNFNEU0RTQ7XFxufVxcblxcbi5uYXYtc2lkZV8zTDhmNiB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OiAwO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4ubmF2LXNpZGUtcm9vdF8xX1BCZyB7XFxuICB3aWR0aDogdmFyKC0tbmF2LXJvb3Qtd2lkdGgpO1xcbiAgYmFja2dyb3VuZDogIzA0MDgyRTtcXG59XFxuXFxuLm5hdi1zaWRlLXJvb3QtLWN1cnJlbnRfM0JWNXQge1xcbiAgYmFja2dyb3VuZDogcmVkO1xcbn1cXG5cXG4ubmF2LXNpZGUtc3ViXzVRX2Y1IHtcXG4gIHdpZHRoOiBjYWxjKHZhcigtLXNpZGViYXItd2lkdGgpIC0gdmFyKC0tbmF2LXJvb3Qtd2lkdGgpKTtcXG4gIGxlZnQ6IHZhcigtLW5hdi1yb290LXdpZHRoKTtcXG59XFxuXFxuLyogaXRlbSAqL1xcbi5uYXYtaXRlbV8ycjF6biB7XFxuICBoZWlnaHQ6IHZhcigtLWl0ZW0tbGluZS1oZWlnaHQpO1xcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWl0ZW0tbGluZS1oZWlnaHQpO1xcblxcbiAgJiBhIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHBhZGRpbmc6IDAgMTVweDtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGhlaWdodDogdmFyKC0taXRlbS1saW5lLWhlaWdodCk7XFxuICB9XFxufVxcblxcbi5pY29uXzI2UHdHIHtcXG4gIG1hcmdpbi10b3A6IDEycHg7XFxufVxcblxcbi5yb290LWl0ZW1fVlB3dU0ge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcblxcbiAgJiBhOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZDogY29sb3IodmFyKC0tZGFyay1ibHVlKSBsKCsgMTAlKSk7XFxuICB9XFxufVxcblxcbi5yb290LWl0ZW0tLWN1cnJlbnRfM0xNbkQge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tYmx1ZSk7XFxufVxcblxcbi5zdWItaXRlbV93YUEtTyB7XFxuXFxuICAmIGEge1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dCk7XFxuICB9XFxuICAmIGE6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kOiBncmF5KDIwMCk7XFxuICB9XFxufVxcblxcbi5zdWItaXRlbS0tY3VycmVudF8zQ3ptTSB7XFxuXFxuICAmIGEsXFxuICAmIGE6aG92ZXIge1xcbiAgICBjb2xvcjogdmFyKC0tYmx1ZSk7XFxuICAgIGJhY2tncm91bmQ6ICNmZmY7XFxuICB9XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNpZGViYXItbGVmdFwiOiBcInNpZGViYXItbGVmdF8yTmZ2YVwiLFxuXHRcIm5hdi1zaWRlXCI6IFwibmF2LXNpZGVfM0w4ZjZcIixcblx0XCJuYXYtc2lkZS1yb290XCI6IFwibmF2LXNpZGUtcm9vdF8xX1BCZyBuYXYtc2lkZV8zTDhmNlwiLFxuXHRcIm5hdi1zaWRlLXJvb3QtLWN1cnJlbnRcIjogXCJuYXYtc2lkZS1yb290LS1jdXJyZW50XzNCVjV0IG5hdi1zaWRlLXJvb3RfMV9QQmcgbmF2LXNpZGVfM0w4ZjZcIixcblx0XCJuYXYtc2lkZS1zdWJcIjogXCJuYXYtc2lkZS1zdWJfNVFfZjUgbmF2LXNpZGVfM0w4ZjZcIixcblx0XCJuYXYtaXRlbVwiOiBcIm5hdi1pdGVtXzJyMXpuXCIsXG5cdFwiaWNvblwiOiBcImljb25fMjZQd0dcIixcblx0XCJyb290LWl0ZW1cIjogXCJyb290LWl0ZW1fVlB3dU0gbmF2LWl0ZW1fMnIxem5cIixcblx0XCJyb290LWl0ZW0tLWN1cnJlbnRcIjogXCJyb290LWl0ZW0tLWN1cnJlbnRfM0xNbkQgcm9vdC1pdGVtX1ZQd3VNIG5hdi1pdGVtXzJyMXpuXCIsXG5cdFwic3ViLWl0ZW1cIjogXCJzdWItaXRlbV93YUEtTyBuYXYtaXRlbV8ycjF6blwiLFxuXHRcInN1Yi1pdGVtLS1jdXJyZW50XCI6IFwic3ViLWl0ZW0tLWN1cnJlbnRfM0N6bU0gc3ViLWl0ZW1fd2FBLU8gbmF2LWl0ZW1fMnIxem5cIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vcG9zdGNzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9Db25zb2xlU2lkZWJhci5jc3NcbiAqKiBtb2R1bGUgaWQgPSAxOTlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImNvbnN0IG1lbnVzID0gW1xuICAgIHtcbiAgICAgICAgY29tcG9uZW50OiAnYm9va3MnLFxuICAgICAgICBkaXNwbGF5TmFtZTogJycsXG4gICAgICAgIHBhdGg6ICcvY29uc29sZS9ib29rcycsXG4gICAgICAgIHN1Yk1lbnU6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb21wb25lbnQ6ICdtYW5hZ2Vib29rcycsXG4gICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6ICfkuabnsY3nrqHnkIYnLFxuICAgICAgICAgICAgICAgIHBhdGg6ICcvY29uc29sZS9ib29rcydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAvLyAgIGNvbXBvbmVudDogJ2FkZGJvb2snLFxuICAgICAgICAgICAgLy8gICBkaXNwbGF5TmFtZTogJ+a3u+WKoOS5puexjScsXG4gICAgICAgICAgICAvLyAgIHBhdGg6ICcvY29uc29sZS9ib29rcy9uZXcnXG4gICAgICAgICAgICAvLyB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbXBvbmVudDogJ2FkZGNvbGxlY3Rpb24nLFxuICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiAn5re75Yqg5ZCI6ZuGJyxcbiAgICAgICAgICAgICAgICBwYXRoOiAnL2NvbnNvbGUvY29sbGVjdGlvbnMvbmV3J1xuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNvbXBvbmVudDogJ3VzZXJzJyxcbiAgICAgICAgZGlzcGxheU5hbWU6ICcnLFxuICAgICAgICBwYXRoOiAnL2NvbnNvbGUvdXNlcnMnLFxuICAgICAgICBzdWJNZW51OiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29tcG9uZW50OiAnbWFuYWdldXNlcnMnLFxuICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiAn55So5oi3566h55CGJyxcbiAgICAgICAgICAgICAgICBwYXRoOiAnL2NvbnNvbGUvdXNlcnMnXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuXTtcbmV4cG9ydCBkZWZhdWx0IG1lbnVzO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb250ZW50L21lbnVzLnRzXG4gKiovIiwidmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB3aXRoU2lkZUVmZmVjdCBmcm9tICdyZWFjdC1zaWRlLWVmZmVjdCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3QgZGVmYXVsdFRpdGxlID0gJ1JlYWRyJztcbmxldCBEb2NDb250YWluZXIgPSBjbGFzcyBEb2NDb250YWluZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjbGFzc05hbWUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoY2xhc3NOYW1lXG4gICAgICAgICAgICA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnZ2ItZG9jLWNvbnRhaW5lcicgKyBjbGFzc05hbWUgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbikpXG4gICAgICAgICAgICA6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiZ2ItZG9jLWNvbnRhaW5lclwiIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pKTtcbiAgICB9XG59O1xuRG9jQ29udGFpbmVyID0gX19kZWNvcmF0ZShbXG4gICAgd2l0aFNpZGVFZmZlY3QocmVkdWNlUHJvcHNUb1N0YXRlLCBoYW5kbGVTdGF0ZUNoYW5nZU9uQ2xpZW50KVxuXSwgRG9jQ29udGFpbmVyKTtcbmZ1bmN0aW9uIHJlZHVjZVByb3BzVG9TdGF0ZShwcm9wc0xpc3QpIHtcbiAgICBjb25zdCBpbm5lcm1vc3RQcm9wcyA9IHByb3BzTGlzdFtwcm9wc0xpc3QubGVuZ3RoIC0gMV07XG4gICAgbGV0IGRhdGEgPSB7fTtcbiAgICBpZiAoaW5uZXJtb3N0UHJvcHMpIHtcbiAgICAgICAgZGF0YSA9IF8ucGljayhpbm5lcm1vc3RQcm9wcywgWyd0aXRsZScsICdib2R5Q2xhc3MnXSk7XG4gICAgICAgIGlmIChkYXRhLnRpdGxlICYmICFpbm5lcm1vc3RQcm9wcy51c2VBc01hc3RlclRpdGxlKSB7XG4gICAgICAgICAgICBkYXRhLnRpdGxlID0gYCR7ZGF0YS50aXRsZX0gfCAke2RlZmF1bHRUaXRsZX1gO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZGF0YS50aXRsZSA9IGRhdGEudGl0bGUgfHwgZGVmYXVsdFRpdGxlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRhdGEuYm9keUNsYXNzID0gcHJvcHNMaXN0XG4gICAgICAgIC5maWx0ZXIocHJvcCA9PiBwcm9wLmJvZHlDbGFzcylcbiAgICAgICAgLm1hcChwcm9wID0+IHByb3AuYm9keUNsYXNzKVxuICAgICAgICAuam9pbignICcpO1xuICAgIHJldHVybiBkYXRhO1xufVxuZnVuY3Rpb24gaGFuZGxlU3RhdGVDaGFuZ2VPbkNsaWVudChwcm9wTGlzdCkge1xuICAgIGNvbnN0IHsgdGl0bGUsIGJvZHlDbGFzcyB9ID0gcHJvcExpc3Q7XG4gICAgaWYgKHR5cGVvZiBib2R5Q2xhc3MgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lID0gYm9keUNsYXNzO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVBdHRyaWJ1dGUoJ2NsYXNzJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGl0bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gdGl0bGU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBkb2N1bWVudC50aXRsZSA9IGRlZmF1bHRUaXRsZTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBEb2NDb250YWluZXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvRG9jQ29udGFpbmVyLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXNpZGUtZWZmZWN0XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWFjdC1zaWRlLWVmZmVjdFwiXG4gKiogbW9kdWxlIGlkID0gMjAyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgKiBhcyBhcGkgZnJvbSAnLi9hcGknO1xuZXhwb3J0ICogZnJvbSAnLi9hcGknO1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbih7fSwgYXBpKTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc2VydmljZXMvYXBpL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IGNhbGxBcGkgZnJvbSAnLi4vdXRpbHMvY2FsbEFwaSc7XG5pbXBvcnQgaGVscGVycyBmcm9tICcuLi8uLi9oZWxwZXJzJztcbmltcG9ydCBub3JtYWxpemVSZXNwb25zZSBmcm9tICcuLi91dGlscy9ub3JtYWxpemVSZXNwb25zZSc7XG5pbXBvcnQgc2NoZW1hcyBmcm9tICcuLi9zY2hlbWFzJztcbmltcG9ydCB1dGlscyBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgRE9VQkFOX0FQSV9ST09UIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL2NvbW1vbic7XG5jb25zdCBBUElfUk9PVCA9IGhlbHBlcnMuZ2V0QXBpUm9vdCgpO1xuLyoqXG4gKiBnZW5lcmFsIGhlbHBlciBmdW5jdGlvbnNcbiAqL1xuY29uc3QgcGFyc2VFbmRwb2ludFdpdGhPcHRpb25zID0gKGVuZHBvaW50LCBvcHRpb25zKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gdXRpbHMucGFyc2VVcmxlbmNvZGVkKG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gYCR7ZW5kcG9pbnR9PyR7cXVlcnlTdHJpbmd9YDtcbiAgICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGZldGNoTm9ybWFsaXplZChlbmRwb2ludCwgc2NoZW1hLCBmZXRjaE9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChlbmRwb2ludC5pbmRleE9mKCdodHRwOi8vJykgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBub3JtYWxpemVSZXNwb25zZShjYWxsQXBpKGVuZHBvaW50LCBmZXRjaE9wdGlvbnMpLCBzY2hlbWEpO1xuICAgIH1cbiAgICByZXR1cm4gbm9ybWFsaXplUmVzcG9uc2UoY2FsbEFwaShgJHtBUElfUk9PVH0vJHtlbmRwb2ludH1gLCBmZXRjaE9wdGlvbnMpLCBzY2hlbWEpO1xufVxuLyoqXG4gKiBzcGVjaWZpYyBhcGkgc2VydmljZXNcbiAqL1xuZXhwb3J0IGNvbnN0IGZldGNoQm9va1Byb2dyZXNzID0gaWQgPT4ge1xuICAgIHJldHVybiBmZXRjaE5vcm1hbGl6ZWQoYHVzZXIvYm9va3MvJHtpZH0vcHJvZ3Jlc3NgLCBzY2hlbWFzLkJPT0tfUFJPR1JFU1MpO1xufTtcbmV4cG9ydCBjb25zdCBmZXRjaEJvb2sgPSBpZCA9PiB7XG4gICAgcmV0dXJuIGZldGNoTm9ybWFsaXplZChgYm9va3MvJHtpZH1gLCBzY2hlbWFzLkJPT0spO1xufTtcbmV4cG9ydCBjb25zdCBmZXRjaEJvb2tDb250ZW50ID0gaWQgPT4ge1xuICAgIHJldHVybiBmZXRjaE5vcm1hbGl6ZWQoYGJvb2tzLyR7aWR9L2NvbnRlbnRgLCBzY2hlbWFzLkJPT0tfQ09OVEVOVCk7XG59O1xuZXhwb3J0IGNvbnN0IGZldGNoQm9va3MgPSAob3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgY29uc3QgeyB3aXRoQ29udGVudCB9ID0gb3B0aW9ucztcbiAgICBsZXQgYXBpT3B0aW9ucyA9ICF3aXRoQ29udGVudFxuICAgICAgICA/IHtcbiAgICAgICAgICAgIGV4Y2x1ZGU6ICdjb250ZW50J1xuICAgICAgICB9XG4gICAgICAgIDoge307XG4gICAgYXBpT3B0aW9ucyA9IF8uYXNzaWduKHt9LCBfLm9taXQob3B0aW9ucywgWyd3aXRoQ29udGVudCddKSwgYXBpT3B0aW9ucyk7XG4gICAgcmV0dXJuIGZldGNoTm9ybWFsaXplZChwYXJzZUVuZHBvaW50V2l0aE9wdGlvbnMoJ2Jvb2tzJywgYXBpT3B0aW9ucyksIHNjaGVtYXMuQk9PS19BUlJBWSk7XG59O1xuZXhwb3J0IGNvbnN0IGZldGNoVXNlcnMgPSAob3B0aW9ucykgPT4ge1xuICAgIHJldHVybiBmZXRjaE5vcm1hbGl6ZWQocGFyc2VFbmRwb2ludFdpdGhPcHRpb25zKCd1c2VycycsIG9wdGlvbnMpLCBzY2hlbWFzLlVTRVJfQVJSQVkpO1xufTtcbi8vIGV4dGVybmFsIGFwaXNcbmV4cG9ydCBjb25zdCBmZXRjaERvdWJhbkJvb2tzID0ga2V5d29yZCA9PiBjYWxsQXBpKGAke0RPVUJBTl9BUElfUk9PVH0vYm9vay9zZWFyY2g/Y291bnQ9MTAmcT0ke2tleXdvcmR9YCwge1xuICAgIHVzZUpzb25wOiB0cnVlXG59KTtcbmV4cG9ydCBjb25zdCB1c2VyTG9naW4gPSAoZGF0YSkgPT4gY2FsbEFwaShgJHtBUElfUk9PVH0vYXV0aGAsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBkYXRhXG59KTtcbmV4cG9ydCBjb25zdCB1c2VyU2lnbnVwID0gKGRhdGEpID0+IGNhbGxBcGkoYCR7QVBJX1JPT1R9L3VzZXJzYCwge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGRhdGFcbn0pO1xuZXhwb3J0IGNvbnN0IGF1dGggPSAoKSA9PiB7XG4gICAgcmV0dXJuIGNhbGxBcGkoYCR7QVBJX1JPT1R9L2F1dGhgLCB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCdcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgbG9nb3V0ID0gKCkgPT4ge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9hdXRoL3Jldm9rZWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUFVUJ1xuICAgIH0pO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBhZGRDb2xsZWN0aW9uKGRhdGEpIHtcbiAgICByZXR1cm4gY2FsbEFwaShgJHtBUElfUk9PVH0vY29sbGVjdGlvbnNgLCB7IG1ldGhvZDogJ1BPU1QnLCBkYXRhIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZEJvb2soZGF0YSkge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9ib29rc2AsIHsgbWV0aG9kOiAnUE9TVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZWRpdEJvb2tNZXRhKGJvb2tJZCwgZGF0YSkge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9ib29rcy8ke2Jvb2tJZH1gLCB7IG1ldGhvZDogJ1BVVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYWRkQXV0aG9yKGRhdGEpIHtcbiAgICByZXR1cm4gY2FsbEFwaShgJHtBUElfUk9PVH0vYXV0aG9yc2AsIHsgbWV0aG9kOiAnUE9TVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0UHJvZ3Jlc3MoYm9va0lkLCBkYXRhKSB7XG4gICAgY2FsbEFwaShgJHtBUElfUk9PVH0vdXNlci9ib29rcy8ke2Jvb2tJZH0vcHJvZ3Jlc3NgLCB7IG1ldGhvZDogJ1BVVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlQm9vayhpZCkge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9ib29rcy8ke2lkfWAsIHtcbiAgICAgICAgbWV0aG9kOiAnREVMRVRFJ1xuICAgIH0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy9hcGkvYXBpLnRzXG4gKiovIiwiaW1wb3J0ICdpc29tb3JwaGljLWZldGNoJztcbmltcG9ydCBwYXJzZVVybGVuY29kZWQgZnJvbSAnLi4vLi4vdXRpbHMvcGFyc2VVcmxlbmNvZGVkJztcbmltcG9ydCBqc29ucCBmcm9tICcuL2pzb25wJztcbmNvbnN0IGRlZmF1bHRPcHRpb25zID0ge1xuICAgIGRhdGFUeXBlOiAnanNvbicsXG4gICAgbWV0aG9kOiAnR0VUJyxcbiAgICBjcmVkZW50aWFsczogJ3NhbWUtb3JpZ2luJ1xufTtcbi8vIHJldHVybiBmZXRjaCBvcHRpb25zXG5jb25zdCBwYXJzZU9wdGlvbnMgPSAob3JpZ2luYW5PcHRpb25zKSA9PiB7XG4gICAgbGV0IHsgbWV0aG9kLCBkYXRhLCBjcmVkZW50aWFscywgZGF0YVR5cGUsIHVzZUpzb25wIH0gPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0T3B0aW9ucywgb3JpZ2luYW5PcHRpb25zKTtcbiAgICBsZXQgZmV0Y2hPcHRpb25zID0ge307XG4gICAgaWYgKHVzZUpzb25wKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICB1c2VKc29ucDogdHJ1ZVxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAobWV0aG9kKSB7XG4gICAgICAgIGZldGNoT3B0aW9ucy5tZXRob2QgPSBtZXRob2Q7XG4gICAgfVxuICAgIGlmIChjcmVkZW50aWFscykge1xuICAgICAgICBmZXRjaE9wdGlvbnMuY3JlZGVudGlhbHMgPSBjcmVkZW50aWFscztcbiAgICB9XG4gICAgLy8gaGFuZGxlIHJlcXVlc3QgaGVhZGVycyBhbmQgYm9keVxuICAgIGlmIChtZXRob2QgPT09ICdQT1NUJyB8fCBtZXRob2QgPT09ICdQVVQnKSB7XG4gICAgICAgIGxldCBjb250ZW50VHlwZTtcbiAgICAgICAgbGV0IGJvZHk7XG4gICAgICAgIGlmIChkYXRhVHlwZSA9PT0gJ2pzb24nKSB7XG4gICAgICAgICAgICBjb250ZW50VHlwZSA9ICdhcHBsaWNhdGlvbi9qc29uJztcbiAgICAgICAgICAgIGJvZHkgPSBKU09OLnN0cmluZ2lmeShkYXRhKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlID0gJ2FwcGxpY2F0aW9uL3gtd3d3LWZvcm0tdXJsZW5jb2RlZCc7XG4gICAgICAgICAgICBib2R5ID0gcGFyc2VVcmxlbmNvZGVkKGRhdGEpO1xuICAgICAgICAgICAgaWYgKGRhdGFUeXBlICE9PSAndXJsZW5jb2RlZCcpIHtcbiAgICAgICAgICAgICAgICBjb25zb2xlLndhcm4oJ1Vuc3VwcG9ydGVkIGRhdGFUeXBlIHVzZWQgXCJ1cmxlbmNvZGVkXCIgaW5zdGVhZCEnKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBmZXRjaE9wdGlvbnMuaGVhZGVycyA9IHtcbiAgICAgICAgICAgICdDb250ZW50LVR5cGUnOiBjb250ZW50VHlwZSxcbiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LU1ldGhvZCc6IG1ldGhvZFxuICAgICAgICB9O1xuICAgICAgICBmZXRjaE9wdGlvbnMuYm9keSA9IGJvZHk7XG4gICAgfVxuICAgIGlmIChtZXRob2QgPT09ICdERUxFVEUnKSB7XG4gICAgICAgIGZldGNoT3B0aW9ucy5oZWFkZXJzID0ge1xuICAgICAgICAgICAgJ0FjY2Vzcy1Db250cm9sLVJlcXVlc3QtTWV0aG9kJzogJ0RFTEVURSdcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIGZldGNoT3B0aW9ucztcbn07XG4vLyB0eXBlIFJlc3VsdCA9IHtcbi8vICAganNvbjogYW55XG4vLyAgIHJlc3BvbnNlOiBhbnlcbi8vIH1cbmV4cG9ydCBmdW5jdGlvbiBjYWxsQXBpKGZ1bGxVcmwsIG9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChvcHRpb25zLnVzZUpzb25wKSB7XG4gICAgICAgIHJldHVybiBqc29ucChmdWxsVXJsKTtcbiAgICB9XG4gICAgcmV0dXJuIGZldGNoKGZ1bGxVcmwsIHBhcnNlT3B0aW9ucyhvcHRpb25zKSlcbiAgICAgICAgLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICBpZiAocmVzcG9uc2Uuc3RhdHVzICE9PSAyMDQpIHtcbiAgICAgICAgICAgIHJldHVybiByZXNwb25zZS5qc29uKCkudGhlbihqc29uID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3BvbnNlLm9rKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChqc29uKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHsganNvbiwgX3Jlc3BvbnNlOiByZXNwb25zZSB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIHsganNvbjoge30sIF9yZXNwb25zZTogcmVzcG9uc2UgfTtcbiAgICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGNhbGxBcGk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3V0aWxzL2NhbGxBcGkudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJpc29tb3JwaGljLWZldGNoXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJpc29tb3JwaGljLWZldGNoXCJcbiAqKiBtb2R1bGUgaWQgPSAyMDZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGpzb25wKGZ1bGxVcmwpIHtcbiAgICBpZiAoZnVsbFVybC5pbmRleE9mKCdkb3ViYW4nKSAhPT0gLTEpIHtcbiAgICAgICAgbGV0IGlkID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7XG4gICAgICAgIGxldCBqc29ucElkID0gJ2pzb25wLScgKyBpZDtcbiAgICAgICAgbGV0IGpzb25wQ2FsbGJhY2sgPSAnanNvbnBDYWxsYmFjaycgKyBpZDtcbiAgICAgICAgbGV0IGpzb25wQ2FsbGJhY2tEYXRhID0gYF9fSlNPTlBfREFUQV8ke2lkfV9fYDtcbiAgICAgICAgd2luZG93W2pzb25wQ2FsbGJhY2tdID0gZnVuY3Rpb24gKGRhdGEpIHtcbiAgICAgICAgICAgIHdpbmRvd1tqc29ucENhbGxiYWNrRGF0YV0gPSBkYXRhO1xuICAgICAgICB9O1xuICAgICAgICBsZXQgc2NyaXB0ID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnc2NyaXB0Jyk7XG4gICAgICAgIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ3NyYycsIGAke2Z1bGxVcmx9JmNhbGxiYWNrPSR7anNvbnBDYWxsYmFja31gKTtcbiAgICAgICAgc2NyaXB0LnNldEF0dHJpYnV0ZSgnaWQnLCBqc29ucElkKTtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5hcHBlbmRDaGlsZChzY3JpcHQpO1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgICBzY3JpcHQub25sb2FkID0gZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIGRvY3VtZW50LmJvZHkucmVtb3ZlQ2hpbGQoZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoanNvbnBJZCkpO1xuICAgICAgICAgICAgICAgIHJlc29sdmUoeyBqc29uOiB3aW5kb3dbanNvbnBDYWxsYmFja0RhdGFdIH0pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9qc29ucC50c1xuICoqLyIsImltcG9ydCBoYW5kbGVSZXNwb25zZSBmcm9tICcuL2hhbmRsZVJlc3BvbnNlJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIG5vcm1hbGl6ZVJlc3BvbnNlKHJlc3VsdFByb21pc2UsIHNjaGVtYSkge1xuICAgIHJldHVybiByZXN1bHRQcm9taXNlLnRoZW4ocmVzcG9uc2UgPT4gKHsgcmVzcG9uc2U6IGhhbmRsZVJlc3BvbnNlKHJlc3BvbnNlLCBzY2hlbWEpIH0pLCBlcnJvciA9PiAoeyBlcnJvciB9KSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3V0aWxzL25vcm1hbGl6ZVJlc3BvbnNlLnRzXG4gKiovIiwiaW1wb3J0IHsgbm9ybWFsaXplIH0gZnJvbSAnbm9ybWFsaXpyJztcbmltcG9ydCBwYXJzZVF1ZXJ5IGZyb20gJy4uLy4uL3V0aWxzL3BhcnNlUXVlcnknO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBodW1wcyBmcm9tICdodW1wcyc7XG5jb25zdCBwYXJzZUhlYWRlclBhZ2VMaW5rQnlSZWwgPSAobGlua3MsIHJlbCkgPT4ge1xuICAgIGNvbnN0IGxpbmsgPSBsaW5rcy5zcGxpdCgnLCcpLmZpbmQocyA9PiBzLmluZGV4T2YoYHJlbD1cIiR7cmVsfVwiYCkgPiAtMSk7XG4gICAgaWYgKCFsaW5rKSB7XG4gICAgICAgIHJldHVybiB1bmRlZmluZWQ7XG4gICAgfVxuICAgIGNvbnN0IHVybCA9IGxpbmsuc3BsaXQoJzsnKVswXS50cmltKCkuc2xpY2UoMSwgLTEpO1xuICAgIHJldHVybiB7XG4gICAgICAgIC8vIHRvZG9cbiAgICAgICAgcGFnZTogcGFyc2VJbnQoXy5nZXQocGFyc2VRdWVyeSh1cmwuc3BsaXQoJz8nKVsxXSB8fCAnJyksICdwYWdlJywgMCksIDEwKSxcbiAgICAgICAgdXJsXG4gICAgfTtcbn07XG5mdW5jdGlvbiBwYXJzZVJlc0hlYWRlclRvUGFnaW5hdGlvbihyZXNwb25zZSkge1xuICAgIGlmICghcmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICBjb25zdCBsaW5rcyA9IHJlc3BvbnNlLmhlYWRlcnMuZ2V0KCdsaW5rJyk7XG4gICAgaWYgKCFsaW5rcykge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IG5leHQgPSBwYXJzZUhlYWRlclBhZ2VMaW5rQnlSZWwobGlua3MsICduZXh0Jyk7XG4gICAgY29uc3QgbGFzdCA9IHBhcnNlSGVhZGVyUGFnZUxpbmtCeVJlbChsaW5rcywgJ2xhc3QnKTtcbiAgICByZXR1cm4ge1xuICAgICAgICBuZXh0LFxuICAgICAgICBsYXN0XG4gICAgfTtcbn1cbmZ1bmN0aW9uIGhhbmRsZVJlc3BvbnNlKHsganNvbiwgX3Jlc3BvbnNlIH0sIHNjaGVtYSkge1xuICAgIGNvbnN0IGNhbWVsaXplZEpzb24gPSBodW1wcy5jYW1lbGl6ZUtleXMoanNvbik7XG4gICAgY29uc3QgeyBuZXh0LCBsYXN0IH0gPSBwYXJzZVJlc0hlYWRlclRvUGFnaW5hdGlvbihfcmVzcG9uc2UpO1xuICAgIGlmICh0eXBlb2Ygc2NoZW1hICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIG5vcm1hbGl6ZShjYW1lbGl6ZWRKc29uLCBzY2hlbWEpLCB7XG4gICAgICAgICAgICBfbmV4dDogbmV4dCxcbiAgICAgICAgICAgIF9sYXN0OiBsYXN0XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gY2FtZWxpemVkSnNvbjtcbn1cbmV4cG9ydCBkZWZhdWx0IGhhbmRsZVJlc3BvbnNlO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9oYW5kbGVSZXNwb25zZS50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9WaWV3ZXInKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1ZpZXdlci9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZHV4XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWR1eFwiXG4gKiogbW9kdWxlIGlkID0gMjEyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0Jvb2tQYWdlLnNjc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL2NvbXBvbmVudHMvQm9va1BhZ2Uuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDIyMlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuY29udGVudF9kZVlTNCB7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIHdpZHRoOiA1NTBweDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIG92ZXJmbG93OiBoaWRkZW47XFxuICBsaW5lLWhlaWdodDogMS45OyB9XFxuICAuY29udGVudF9kZVlTNCBwIHtcXG4gICAgbWFyZ2luOiAwO1xcbiAgICBtaW4taGVpZ2h0OiAyNXB4OyB9XFxuXFxuLnBhZ2VfMjZKajcge1xcbiAgZGlzcGxheTogYmxvY2s7XFxuICB3aWR0aDogMTAwJTtcXG4gIG92ZXJmbG93OiBoaWRkZW47IH1cXG5cXG4ucGFnZS0tZmx1aWRfMjBlUU0geyB9XFxuICAucGFnZS0tZmx1aWRfMjBlUU0gLmNvbnRlbnRfZGVZUzQge1xcbiAgICB3aWR0aDogMTAwJTtcXG4gICAgcGFkZGluZzogMCAyMHB4OyB9XFxuXFxuLnBhZ2UtLWluaXRfMVZIVk0ge1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgaGVpZ2h0OiBhdXRvOyB9XFxuICAucGFnZS0taW5pdF8xVkhWTSAuY29udGVudF9kZVlTNCB7XFxuICAgIGhlaWdodDogYXV0bzsgfVxcblxcbi5nYi1saW5lXzNSWXFLIHtcXG4gIG92ZXJmbG93OiBoaWRkZW47IH1cXG5cXG4ucGFnZS1ub18yXzE4NyB7XFxuICBwb3NpdGlvbjogYWJzb2x1dGU7XFxuICBsZWZ0OiAwO1xcbiAgdG9wOiAwO1xcbiAgYm9yZGVyLXRvcDogMXB4IHNvbGlkICNlNmU2ZTY7XFxuICBwYWRkaW5nOiAwIDEwcHg7XFxuICBjb2xvcjogI2U2ZTZlNjtcXG4gIGZvbnQtc2l6ZTogMC44cmVtOyB9XFxuXFxuLndoaXRlXzFUVk85IHtcXG4gIGNvbG9yOiAjMzMzOyB9XFxuXFxuLm5pZ2h0XzNhbGg4IHtcXG4gIGNvbG9yOiAjZWVlOyB9XFxuICAubmlnaHRfM2FsaDggYSB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICB0ZXh0LWRlY29yYXRpb246IHVuZGVybGluZTsgfVxcblxcbi5zZXBpYV8xQ0Y2OSB7XFxuICBjb2xvcjogIzUwMzIyMDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImNvbnRlbnRcIjogXCJjb250ZW50X2RlWVM0XCIsXG5cdFwicGFnZVwiOiBcInBhZ2VfMjZKajdcIixcblx0XCJwYWdlLS1mbHVpZFwiOiBcInBhZ2UtLWZsdWlkXzIwZVFNIHBhZ2VfMjZKajdcIixcblx0XCJwYWdlLS1pbml0XCI6IFwicGFnZS0taW5pdF8xVkhWTVwiLFxuXHRcImdiLWxpbmVcIjogXCJnYi1saW5lXzNSWXFLXCIsXG5cdFwicGFnZS1ub1wiOiBcInBhZ2Utbm9fMl8xODdcIixcblx0XCJ3aGl0ZVwiOiBcIndoaXRlXzFUVk85XCIsXG5cdFwibmlnaHRcIjogXCJuaWdodF8zYWxoOFwiLFxuXHRcInNlcGlhXCI6IFwic2VwaWFfMUNGNjlcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1ZpZXdlci9jb21wb25lbnRzL0Jvb2tQYWdlLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAyMjNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydCBjb25zdCBUSEVNRVMgPSB7XG4gICAgV0hJVEU6ICdXSElURScsXG4gICAgTklHSFQ6ICdOSUdIVCcsXG4gICAgU0VQSUE6ICdTRVBJQSdcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnN0YW50cy92aWV3ZXJEZWZzLnRzXG4gKiovIiwiaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi4vLi4vaGVscGVycyc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL2NvbXBvbmVudHMvQm9va1BhZ2Uuc2NzcycpO1xuLy8g5pqC5LiN5pSv5oyB5YyF5ZCr5Zu+54mH55qE6K6h566XXG4vLyDorqHnrpfmsqHmnInnrYnlvoXlm77niYfliqDovb3lrozmiJDvvIzmiYDku6Xnu5PmnpzmmK/kuI3mraPnoa7nmoRcbmV4cG9ydCBmdW5jdGlvbiBnZXROb2RlSGVpZ2h0cyhub2Rlcykge1xuICAgIGxldCBub2Rlc0hlaWdodCA9IFtdO1xuICAgIEFycmF5LnByb3RvdHlwZS5mb3JFYWNoLmNhbGwobm9kZXMsIChub2RlLCBpbmRleCkgPT4ge1xuICAgICAgICBpZiAobm9kZS5jbGFzc05hbWUgIT09IHN0eWxlc1snZ2ItbGluZSddKSB7XG4gICAgICAgICAgICBjb25zb2xlLmVycm9yKCdVbnN1cHBvcnRlZCBjb250ZW50IGZvdW5kIScpO1xuICAgICAgICB9XG4gICAgICAgIG5vZGVzSGVpZ2h0LnB1c2gobm9kZS5jbGllbnRIZWlnaHQpO1xuICAgIH0pO1xuICAgIHJldHVybiBub2Rlc0hlaWdodDtcbn1cbi8vIGxvbmcgcGFyYWdyYXBoIHNpdHVhdGlvbiBkb2Vzbid0IHNlZW0gdG8gYWZmZWN0IHRoaXMgZnVuY3Rpb25cbi8vIG9mZnNldCBkaXN0YW5jZSBpcyBhbHdheXMgbmVndGl2ZSBvciB6ZXJvXG4vLyB0aGUgaW5kZXggd2lsbCBiZSBvZiB0aGUgcGFyYWdyYXBoIHdpdGggdGhpcyBvZmZzZXQgYXQgdGhlIGVuZFxuZnVuY3Rpb24gZ2V0UGFnZU9mZnNldCh7IHBhZ2VJbmRleCwgcGFnZUhlaWdodCwgbm9kZUhlaWdodHMgfSkge1xuICAgIGxldCBvZmZzZXQgPSAwO1xuICAgIGxldCBub2RlSW5kZXggPSAwO1xuICAgIGxldCBub2RlU3RhcnRJbmRleDtcbiAgICBpZiAocGFnZUluZGV4ICE9PSAwKSB7XG4gICAgICAgIGxldCBub2RlSGVpZ2h0U3VtID0gMDtcbiAgICAgICAgd2hpbGUgKG5vZGVIZWlnaHRTdW0gPD0gcGFnZUhlaWdodCAqIHBhZ2VJbmRleCkge1xuICAgICAgICAgICAgbm9kZUhlaWdodFN1bSArPSBub2RlSGVpZ2h0c1tub2RlSW5kZXhdO1xuICAgICAgICAgICAgbm9kZUluZGV4Kys7XG4gICAgICAgIH1cbiAgICAgICAgb2Zmc2V0ID0gbm9kZUhlaWdodFN1bSAtIG5vZGVIZWlnaHRzW25vZGVJbmRleCAtIDFdIC0gcGFnZUluZGV4ICogcGFnZUhlaWdodDtcbiAgICAgICAgbm9kZVN0YXJ0SW5kZXggPSBub2RlSW5kZXggLSAxO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbm9kZVN0YXJ0SW5kZXggPSAwO1xuICAgIH1cbiAgICByZXR1cm4geyBvZmZzZXQsIG5vZGVTdGFydEluZGV4IH07XG59XG5mdW5jdGlvbiBnZXROb2Rlc09mUGFnZSh7IHBhZ2VJbmRleCwgbm9kZXMsIHBhZ2VIZWlnaHQsIG5vZGVIZWlnaHRzIH0pIHtcbiAgICBsZXQgeyBvZmZzZXQsIG5vZGVTdGFydEluZGV4IH0gPSBnZXRQYWdlT2Zmc2V0KHsgcGFnZUluZGV4LCBwYWdlSGVpZ2h0LCBub2RlSGVpZ2h0cyB9KTtcbiAgICBsZXQgbm9kZUluZGV4ID0gbm9kZVN0YXJ0SW5kZXg7XG4gICAgbGV0IG5vZGVFbmRJbmRleDtcbiAgICBsZXQgcGFnZU5vZGVzID0gW107XG4gICAgbGV0IG5vZGVIZWlnaHRTdW0gPSBvZmZzZXQgKyBub2RlSGVpZ2h0c1tub2RlU3RhcnRJbmRleF07XG4gICAgbm9kZUluZGV4Kys7XG4gICAgaWYgKG5vZGVIZWlnaHRTdW0gPCBwYWdlSGVpZ2h0KSB7XG4gICAgICAgIHdoaWxlIChub2RlSGVpZ2h0U3VtIDw9IHBhZ2VIZWlnaHQgJiYgbm9kZUluZGV4ICE9PSBub2Rlcy5sZW5ndGgpIHtcbiAgICAgICAgICAgIG5vZGVIZWlnaHRTdW0gKz0gbm9kZUhlaWdodHNbbm9kZUluZGV4XTtcbiAgICAgICAgICAgIG5vZGVJbmRleCsrO1xuICAgICAgICB9XG4gICAgICAgIG5vZGVFbmRJbmRleCA9IG5vZGVJbmRleCAtIDE7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBub2RlRW5kSW5kZXggPSBub2RlU3RhcnRJbmRleDtcbiAgICB9XG4gICAgZm9yIChsZXQgaSA9IG5vZGVTdGFydEluZGV4OyBpIDw9IG5vZGVFbmRJbmRleCAmJiBpIDw9IG5vZGVzLmxlbmd0aCAtIDE7IGkrKykge1xuICAgICAgICBwYWdlTm9kZXMucHVzaChub2Rlc1tpXSk7XG4gICAgfVxuICAgIHJldHVybiB7IHBhZ2VOb2Rlcywgb2Zmc2V0IH07XG59XG5leHBvcnQgZnVuY3Rpb24gZ3JvdXBOb2Rlc0J5UGFnZShub2Rlcywgbm9kZUhlaWdodHMsIHBhZ2VIZWlnaHQsIHBhZ2VTdGFydEZyb20gPSAwLCBjaGFwdGVySWQpIHtcbiAgICBsZXQgcGFnZXMgPSBbXTtcbiAgICBsZXQgcGFnZUhlaWdodFN1bSA9IG5vZGVIZWlnaHRzLnJlZHVjZSgoYSwgYikgPT4gKGEgKyBiKSwgMCk7XG4gICAgbGV0IHBhZ2VTdW0gPSBNYXRoLmNlaWwocGFnZUhlaWdodFN1bSAvIHBhZ2VIZWlnaHQpO1xuICAgIGlmIChub2RlSGVpZ2h0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgcmV0dXJuIFt7XG4gICAgICAgICAgICAgICAgbm9kZXMsXG4gICAgICAgICAgICAgICAgbWV0YToge1xuICAgICAgICAgICAgICAgICAgICBwYWdlTm86IDEgKyBwYWdlU3RhcnRGcm9tLFxuICAgICAgICAgICAgICAgICAgICBvZmZzZXQ6IDAsXG4gICAgICAgICAgICAgICAgICAgIGNoYXB0ZXJJZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1dO1xuICAgIH1cbiAgICAvLyBmaW5hbGx5XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYWdlU3VtOyBpKyspIHtcbiAgICAgICAgY29uc3QgeyBwYWdlTm9kZXMsIG9mZnNldCB9ID0gZ2V0Tm9kZXNPZlBhZ2UoeyBwYWdlSW5kZXg6IGksIG5vZGVzLCBub2RlSGVpZ2h0cywgcGFnZUhlaWdodCB9KTtcbiAgICAgICAgY29uc3QgZmluZElkT2ZIVGFncyA9IChtZE5vZGUpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHBhdHRlcm4gPSAvPGhcXGQgaWQ9XCIoLiopXCI+KC4qKTxcXC9oXFxkPi87XG4gICAgICAgICAgICBjb25zdCByZXN1bHQgPSBtZE5vZGUubWF0Y2gocGF0dGVybik7XG4gICAgICAgICAgICBpZiAocmVzdWx0KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdFsxXTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBudWxsO1xuICAgICAgICB9O1xuICAgICAgICBjb25zdCBoYXNoID0gcGFnZU5vZGVzXG4gICAgICAgICAgICAubWFwKG5vZGUgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGZpbmRJZE9mSFRhZ3Mobm9kZSk7XG4gICAgICAgIH0pXG4gICAgICAgICAgICAuZmlsdGVyKGlkID0+IEJvb2xlYW4oaWQpKTtcbiAgICAgICAgcGFnZXMucHVzaCh7XG4gICAgICAgICAgICBub2RlczogcGFnZU5vZGVzLFxuICAgICAgICAgICAgbWV0YToge1xuICAgICAgICAgICAgICAgIHBhZ2VObzogcGFnZVN0YXJ0RnJvbSArIGkgKyAxLFxuICAgICAgICAgICAgICAgIG9mZnNldCxcbiAgICAgICAgICAgICAgICBjaGFwdGVySWQsXG4gICAgICAgICAgICAgICAgaGFzaFxuICAgICAgICAgICAgfSxcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBwYWdlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiBncm91cFBhZ2VGcm9tQ2hhcHRlcnMoY29udGVudE9mQ2hhcHRlcnMsIG5vZGVIZWlnaHRzT2ZDaGFwdGVycywgcGFnZUhlaWdodCkge1xuICAgIGxldCBwYWdlU3RhcnRGcm9tID0gMDtcbiAgICBsZXQgYWxsUGFnZXMgPSBbXTtcbiAgICBjb25zdCB0MCA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgIGNvbnRlbnRPZkNoYXB0ZXJzLmZvckVhY2goKGNoYXB0ZXIsIGluZGV4KSA9PiB7XG4gICAgICAgIGNvbnN0IHBhZ2VzID0gZ3JvdXBOb2Rlc0J5UGFnZShjaGFwdGVyLm1hcmtkb3duLnNwbGl0KCdcXG5cXG4nKSwgbm9kZUhlaWdodHNPZkNoYXB0ZXJzW2luZGV4XS5ub2RlSGVpZ2h0cywgcGFnZUhlaWdodCwgcGFnZVN0YXJ0RnJvbSwgY2hhcHRlci5pZCk7XG4gICAgICAgIGFsbFBhZ2VzID0gYWxsUGFnZXMuY29uY2F0KHBhZ2VzKTtcbiAgICAgICAgcGFnZVN0YXJ0RnJvbSA9IHBhZ2VTdGFydEZyb20gKyBwYWdlcy5sZW5ndGg7XG4gICAgfSk7XG4gICAgY29uc3QgdDEgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcbiAgICBoZWxwZXJzLnByaW50KGBHcm91cGluZyBub2RlcyB0YWtlcyAke3QxIC0gdDB9bXNgKTtcbiAgICByZXR1cm4gYWxsUGFnZXM7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVzb2x2ZUJvb2tMb2NhdGlvbihocmVmLCBjb21wdXRlZFBhZ2VzKSB7XG4gICAgY29uc3QgY2hhcHRlcklkID0gaHJlZi5zcGxpdCgnJCcpWzBdO1xuICAgIGNvbnN0IGhhc2ggPSBocmVmLnNwbGl0KCckJylbMV07XG4gICAgbGV0IGkgPSAwO1xuICAgIGxldCBmb3VuZENoYXB0ZXJQYWdlO1xuICAgIHdoaWxlIChpIDwgY29tcHV0ZWRQYWdlcy5sZW5ndGgpIHtcbiAgICAgICAgY29uc3QgcGFnZSA9IGNvbXB1dGVkUGFnZXNbaV07XG4gICAgICAgIGlmIChgIyR7cGFnZS5tZXRhLmNoYXB0ZXJJZH1gID09PSBjaGFwdGVySWQpIHtcbiAgICAgICAgICAgIGZvdW5kQ2hhcHRlclBhZ2UgPSBwYWdlLm1ldGEucGFnZU5vO1xuICAgICAgICAgICAgaWYgKGhhc2gpIHtcbiAgICAgICAgICAgICAgICBpZiAocGFnZS5tZXRhLmhhc2ggJiYgcGFnZS5tZXRhLmhhc2guaW5kZXhPZihoYXNoKSAhPT0gLTEpIHtcbiAgICAgICAgICAgICAgICAgICAgaGVscGVycy5wcmludCgnd2l0aCBoYXNoJywgcGFnZS5tZXRhLnBhZ2VObyk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYWdlLm1ldGEucGFnZU5vO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGhlbHBlcnMucHJpbnQoJ3dpdGhvdXQgaGFzaCcsIHBhZ2UubWV0YS5wYWdlTm8pO1xuICAgICAgICAgICAgICAgIHJldHVybiBwYWdlLm1ldGEucGFnZU5vO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGkrKztcbiAgICB9XG4gICAgaWYgKCFmb3VuZENoYXB0ZXJQYWdlKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcign5pyq5om+5Yiw5L2N572u77yBJyk7XG4gICAgfVxuICAgIGNvbnNvbGUud2Fybign5omA5Zyo56ug6IqC5pyq5om+5Yiw5L2N572u77yM5bey6Lez6L2s6Iez56ug6IqC77yBJyk7XG4gICAgaGVscGVycy5wcmludCgnZm91bmRDaGFwdGVyUGFnZScsIGZvdW5kQ2hhcHRlclBhZ2UpO1xuICAgIHJldHVybiBmb3VuZENoYXB0ZXJQYWdlO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL1ZpZXdlci51dGlscy50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9UZXN0UGxhY2UnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1Rlc3RQbGFjZS9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9BcHBIb21lJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9BcHBIb21lL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL0Jyb3dzZScpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQnJvd3NlL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL0Jvb2tEZXRhaWwnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0Jvb2tEZXRhaWwvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vQ29sbGVjdGlvbnMnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0NvbGxlY3Rpb25zL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL0NvbGxlY3Rpb25EZXRhaWwnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0NvbGxlY3Rpb25EZXRhaWwvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vU2lnbmluJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9TaWduaW4vaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vU2lnbnVwJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9TaWdudXAvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vU2hlbGYnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1NoZWxmL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL1ByZWZlcmVuY2UnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1ByZWZlcmVuY2UvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vUHJvZmlsZScpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvUHJvZmlsZS9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9NYW5hZ2VCb29rcycpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvTWFuYWdlQm9va3MvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vTWFuYWdlVXNlcnMnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL01hbmFnZVVzZXJzL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL0FkZEJvb2snKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0FkZEJvb2svaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vQWRkQ29sbGVjdGlvbicpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQWRkQ29sbGVjdGlvbi9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9Ob01hdGNoJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9Ob01hdGNoL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IEFwcEVycm9yIGZyb20gJy4vQXBwRXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgQXBwRXJyb3I7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuaW1wb3J0IExvZ28gZnJvbSAnLi4vLi4vY29tcG9uZW50cy9Mb2dvJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vQXBwRXJyb3Iuc2NzcycpO1xubGV0IEFwcEVycm9yID0gY2xhc3MgQXBwRXJyb3IgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyB0aXRsZSwgbWVzc2FnZSB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImhlYWRlclwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2dvLCB7IGRhcms6IHRydWUgfSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJib2R5XCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaDFcIiwgeyBzdHlsZU5hbWU6IFwidGl0bGVcIiB9LCB0aXRsZSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCBtZXNzYWdlKSkpKTtcbiAgICB9XG59O1xuQXBwRXJyb3IgPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcylcbl0sIEFwcEVycm9yKTtcbmV4cG9ydCBkZWZhdWx0IEFwcEVycm9yO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0FwcEVycm9yL0FwcEVycm9yLnRzeFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vQXBwRXJyb3Iuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3Iuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDM1N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIuaGVhZGVyXzNqQXVRIHtcXG4gIHRleHQtYWxpZ246IGNlbnRlcjsgfVxcblxcbi50aXRsZV8xN0ZTNSB7XFxuICBmb250LXNpemU6IDEuNnJlbTtcXG4gIGNvbG9yOiAjMjIyOyB9XFxuXFxuLmJvZHlfM3YtaGoge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcbiAgd2lkdGg6IDUwMHB4O1xcbiAgbWFyZ2luOiAwIGF1dG87XFxuICBwYWRkaW5nOiAxNTBweCAwO1xcbiAgZm9udC1zaXplOiAxLjFyZW07IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJoZWFkZXJcIjogXCJoZWFkZXJfM2pBdVFcIixcblx0XCJ0aXRsZVwiOiBcInRpdGxlXzE3RlM1XCIsXG5cdFwiYm9keVwiOiBcImJvZHlfM3YtaGpcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9BcHBFcnJvci9BcHBFcnJvci5zY3NzXG4gKiogbW9kdWxlIGlkID0gMzU4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgZ2V0U3RvcmUgZnJvbSAnLi9nZXQtc3RvcmUnO1xuaW1wb3J0IG1hdGNoUm91dGUgZnJvbSAnLi9tYXRjaC1yb3V0ZSc7XG5pbXBvcnQgcmVuZGVySHRtbCBmcm9tICcuL3JlbmRlci1odG1sJztcbmltcG9ydCByZW5kZXI1MDAgZnJvbSAnLi9yZW5kZXI1MDAnO1xuZXhwb3J0IHsgZ2V0U3RvcmUsIG1hdGNoUm91dGUsIHJlbmRlckh0bWwsIHJlbmRlcjUwMCB9O1xuZXhwb3J0IGRlZmF1bHQgcmVuZGVySHRtbDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9yZW5kZXIvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgcm9vdFNhZ2EgZnJvbSAnLi4vLi4vaXNvbW9ycGhpYy9zdG9yZS9zYWdhcyc7XG4vKipcbiAqIEdldCBSZWR1eCBzdG9yZSB0cmVlIHdpdGggaW5pdGlhbCBmZXRjaGVkIGRhdGFcbiAqL1xuZnVuY3Rpb24gZ2V0U3RvcmUocmVuZGVyUHJvcHMsIGZldGNoRGF0YSwgdXNlclNlc3Npb24sIHN0b3JlKSB7XG4gICAgaWYgKGZldGNoRGF0YSA9PT0gdHJ1ZSkge1xuICAgICAgICBjb25zdCBwYXJhbXMgPSByZW5kZXJQcm9wcy5wYXJhbXM7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gcmVuZGVyUHJvcHMubG9jYXRpb24ucXVlcnk7XG4gICAgICAgIGNvbnN0IGZldGNoRGF0YUZucyA9IHJlbmRlclByb3BzLmNvbXBvbmVudHNcbiAgICAgICAgICAgIC5tYXAoY29tcCA9PiB7XG4gICAgICAgICAgICByZXR1cm4gY29tcC5mZXRjaERhdGEgfHwgbnVsbDtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5maWx0ZXIoY29tcCA9PiBCb29sZWFuKGNvbXApKTtcbiAgICAgICAgc3RvcmUucnVuU2FnYShyb290U2FnYSk7XG4gICAgICAgIGlmIChmZXRjaERhdGFGbnMubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoZmV0Y2hEYXRhRm5zLm1hcChmZXRjaERhdGFGbiA9PiB7XG4gICAgICAgICAgICAgICAgLy8g6L+Z6L655bqU6K+l5piv5a+5IHN0b3JlIOWBmuS6hiBtdXRhdGlvblxuICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGZldGNoRGF0YUZuKHsgc3RvcmUsIHBhcmFtcywgcXVlcnksIHVzZXJTZXNzaW9uIH0pO1xuICAgICAgICAgICAgICAgIC8vIHRvZG86IOmBh+WIsOivt+axguaVsOe7hOS8muaKpemUmVxuICAgICAgICAgICAgICAgIGlmIChBcnJheS5pc0FycmF5KHJlc3VsdCkpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UuYWxsKHJlc3VsdCkudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICAgICAgfSwgZXJyb3IgPT4gZXJyb3IpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAvLyB0b2RvXG4gICAgICAgICAgICAgICAgLy8g57uT5p6c5LiN5pivIFByb21pc2UsIHNhZ2Eg55qEIGFjdGlvbiDmmoLml7bov5nkuYjlpITnkIZcbiAgICAgICAgICAgICAgICBpZiAoIXJlc3VsdCB8fCAhcmVzdWx0LnRoZW4pIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQudGhlbigoKSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgIH0sIGVycm9yID0+IGVycm9yKTtcbiAgICAgICAgICAgIH0pKS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RvcmU7XG4gICAgICAgICAgICB9LCBlcnJvciA9PiBlcnJvcik7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzdG9yZSk7XG4gICAgfVxuICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoc3RvcmUpO1xufVxuZXhwb3J0IGRlZmF1bHQgZ2V0U3RvcmU7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcmVuZGVyL2dldC1zdG9yZS50c1xuICoqLyIsImltcG9ydCB7IGZvcmsgfSBmcm9tICdyZWR1eC1zYWdhL2VmZmVjdHMnO1xuaW1wb3J0IHdhdGNoQWxsTG9hZFJlcXVlc3RzIGZyb20gJy4vbG9hZFJlcXVlc3RzJztcbmltcG9ydCB3YXRjaExvZ2luRmxvdyBmcm9tICcuL2xvZ2luRmxvdyc7XG5pbXBvcnQgd2F0Y2hWaWV3ZXIgZnJvbSAnLi92aWV3ZXJUYXNrcyc7XG5pbXBvcnQgd2F0Y2hUZXN0LCB7IHdhdGNoVGVzdDIgfSBmcm9tICcuL3Rlc3QnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24qIHJvb3RTYWdhKCkge1xuICAgIHlpZWxkIFtcbiAgICAgICAgZm9yayh3YXRjaEFsbExvYWRSZXF1ZXN0cyksXG4gICAgICAgIGZvcmsod2F0Y2hMb2dpbkZsb3cpLFxuICAgICAgICBmb3JrKHdhdGNoVmlld2VyKSxcbiAgICAgICAgZm9yayh3YXRjaFRlc3QyKSxcbiAgICAgICAgZm9yayh3YXRjaFRlc3QpXG4gICAgXTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWR1eC1zYWdhL2VmZmVjdHNcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlZHV4LXNhZ2EvZWZmZWN0c1wiXG4gKiogbW9kdWxlIGlkID0gMzYyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgeyB0YWtlLCBjYWxsLCBmb3JrIH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcbmltcG9ydCAqIGFzIGFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucyc7XG5pbXBvcnQgYXBpIGZyb20gJy4uLy4uL3NlcnZpY2VzL2FwaSc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgZmV0Y2hFbnRpdHkgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCAqIGFzIEFDVElPTl9UWVBFUyBmcm9tICcuLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuY29uc3QgT1BUSU9OUyA9ICdvcHRpb25zJztcbmNvbnN0IElEID0gJ2lkJztcbmNvbnN0IERBVEEgPSAnZGF0YSc7XG5jb25zdCBUWVBFID0gJ3R5cGUnO1xuZXhwb3J0IGNvbnN0IEFQSV9DT05GSUdfS0VZUyA9IFtPUFRJT05TLCBJRCwgREFUQV07XG5leHBvcnQgY29uc3QgUkVTRVJWRURfQUNUSU9OX0tZRVMgPSBbVFlQRSwgLi4uQVBJX0NPTkZJR19LRVlTXTtcbmNvbnN0IGZldGNoQm9vayA9IGZldGNoRW50aXR5LmJpbmQobnVsbCwgYWN0aW9ucy5ib29rLCBhcGkuZmV0Y2hCb29rKTtcbmNvbnN0IGZldGNoQm9va0NvbnRlbnQgPSBmZXRjaEVudGl0eS5iaW5kKG51bGwsIGFjdGlvbnMuYm9va0NvbnRlbnQsIGFwaS5mZXRjaEJvb2tDb250ZW50KTtcbmNvbnN0IGZldGNoQm9va3MgPSBmZXRjaEVudGl0eS5iaW5kKG51bGwsIGFjdGlvbnMuYm9va3MsIGFwaS5mZXRjaEJvb2tzKTtcbmNvbnN0IGZldGNoVXNlcnMgPSBmZXRjaEVudGl0eS5iaW5kKG51bGwsIGFjdGlvbnMudXNlcnMsIGFwaS5mZXRjaFVzZXJzKTtcbmZ1bmN0aW9uKiBoYW5kbGVMb2FkKGZldGNoRm4sIHBhcnNlZEFjdGlvbiwgY2FsbEFwaSkge1xuICAgIGNvbnN0IHsgYXBpQ29uZmlnLCBwYXlsb2FkIH0gPSBwYXJzZWRBY3Rpb247XG4gICAgLy8g5Zyo5qOA5p+l5piv5ZCm5pyJ5pWw5o2u55qE566X5rOV5a6M5oiQ5LmL5YmN6buY6K6k55u05o6lIGNhbGwgYXBpXG4gICAgaWYgKHR5cGVvZiBjYWxsQXBpID09PSAndW5kZWZpbmVkJyB8fCBjYWxsQXBpID09PSB0cnVlKSB7XG4gICAgICAgIHlpZWxkIGNhbGwoZmV0Y2hGbiwgYXBpQ29uZmlnLCBwYXlsb2FkKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogd2F0Y2hBbGxMb2FkUmVxdWVzdHMoKSB7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3QgYWN0aW9uID0geWllbGQgdGFrZShhY3Rpb25zLkxPQURfQUNUSU9OUyk7XG4gICAgICAgIGNvbnN0IGFwaUNvbmZpZyA9IF8ucGljayhhY3Rpb24sIEFQSV9DT05GSUdfS0VZUyk7XG4gICAgICAgIC8vIOWmguaenOebtOaOpeS9v+eUqCBwYXlsb2FkIOWPr+iDveWcqCBwYWdpbmF0aW9uIOS5i+exu+eahCByZWR1Y2VyIOmHjOmdouS8muacieS4gOS6m+m6u+eDplxuICAgICAgICAvLyDlm6DkuLrlj6/og73mr5TovoPpmr7liKTmlq3lk6rkuKrmmK8ga2V5XG4gICAgICAgIGNvbnN0IHBheWxvYWQgPSBfLm9taXQoYWN0aW9uLCBSRVNFUlZFRF9BQ1RJT05fS1lFUyk7XG4gICAgICAgIGNvbnN0IHBhcnNlZEFjdGlvbiA9IHsgYXBpQ29uZmlnLCBwYXlsb2FkIH07XG4gICAgICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLkxPQURfVVNFUlM6XG4gICAgICAgICAgICAgICAgeWllbGQgZm9yayhoYW5kbGVMb2FkLCBmZXRjaFVzZXJzLCBwYXJzZWRBY3Rpb24pO1xuICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgY2FzZSBBQ1RJT05fVFlQRVMuTE9BRF9CT09LUzpcbiAgICAgICAgICAgICAgICB5aWVsZCBmb3JrKGhhbmRsZUxvYWQsIGZldGNoQm9va3MsIHBhcnNlZEFjdGlvbik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5MT0FEX0JPT0s6XG4gICAgICAgICAgICAgICAgeWllbGQgZm9yayhoYW5kbGVMb2FkLCBmZXRjaEJvb2ssIHBhcnNlZEFjdGlvbik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5MT0FEX0JPT0tfQ09OVEVOVDpcbiAgICAgICAgICAgICAgICB5aWVsZCBmb3JrKGhhbmRsZUxvYWQsIGZldGNoQm9va0NvbnRlbnQsIHBhcnNlZEFjdGlvbik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBkZWZhdWx0OlxuICAgICAgICB9XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zYWdhcy9sb2FkUmVxdWVzdHMudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBjYWNoZSBmcm9tICcuLi8uLi9kYXRhL2NhY2hlJztcbmltcG9ydCB7IHB1dCwgY2FsbCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGFwcENvbmZpZyBmcm9tICcuLi8uLi8uLi9hcHAuY29uZmlnJztcbmNvbnN0IE9QVElPTlMgPSAnb3B0aW9ucyc7XG5jb25zdCBJRCA9ICdpZCc7XG5jb25zdCBEQVRBID0gJ2RhdGEnO1xuY29uc3QgVFlQRSA9ICd0eXBlJztcbmV4cG9ydCBjb25zdCBBUElfQ09ORklHX0tFWVMgPSBbT1BUSU9OUywgSUQsIERBVEFdO1xuZXhwb3J0IGNvbnN0IFJFU0VSVkVEX0FDVElPTl9LWUVTID0gW1RZUEUsIC4uLkFQSV9DT05GSUdfS0VZU107XG4vLyBUT0RPXG4vLyDkvLzkuY7pnIDopoHkvJjljJbvvIznvJPlrZjnmoTpgLvovpHlkozojrflj5bnmoTogKblkIjlpKrmt7HkuoZcbmV4cG9ydCBmdW5jdGlvbiogZmV0Y2hFbnRpdHkoZW50aXR5LCBhcGlGbiwgYXBpQ29uZmlnLCBwYXlsb2FkKSB7XG4gICAgY29uc3QgZnVsbFBheWxvYWQgPSBfLmFzc2lnbih7fSwgYXBpQ29uZmlnLCBwYXlsb2FkKTtcbiAgICBjb25zdCBpZCA9IGFwaUNvbmZpZ1tJRF07XG4gICAgY29uc3Qgb3B0aW9ucyA9IGFwaUNvbmZpZ1tPUFRJT05TXTtcbiAgICBjb25zdCBhcGlBcmdzID0gW2lkLCBvcHRpb25zXS5maWx0ZXIoYXJnID0+ICFfLmlzVW5kZWZpbmVkKGFyZykpO1xuICAgIGxldCBoYXNDYWNoZTtcbiAgICBsZXQgY2FjaGVJZDtcbiAgICBpZiAoaWQgJiYgYXBwQ29uZmlnLmVuYWJsZUVudGl0eUNhY2hlKSB7XG4gICAgICAgIGNhY2hlSWQgPSBjYWNoZS5jcmVhdGVDYWNoZUlkKGFwaUZuICsgaWQgKyBvcHRpb25zKTtcbiAgICAgICAgbGV0IGNhY2hlQ29udGVudCA9IGNhY2hlLmdldENhY2hlKGNhY2hlSWQpO1xuICAgICAgICBoYXNDYWNoZSA9IEJvb2xlYW4oY2FjaGVDb250ZW50KTtcbiAgICAgICAgaWYgKGhhc0NhY2hlKSB7XG4gICAgICAgICAgICBsZXQgYWN0aW9uID0gZW50aXR5LmxvYWRDYWNoZShjYWNoZUNvbnRlbnQsIGZ1bGxQYXlsb2FkKTtcbiAgICAgICAgICAgIHlpZWxkIHB1dChlbnRpdHkucmVxdWVzdChmdWxsUGF5bG9hZCkpO1xuICAgICAgICAgICAgeWllbGQgcHV0KGFjdGlvbik7XG4gICAgICAgICAgICByZXR1cm4gYWN0aW9uO1xuICAgICAgICB9XG4gICAgfVxuICAgIHlpZWxkIHB1dChlbnRpdHkucmVxdWVzdChmdWxsUGF5bG9hZCkpO1xuICAgIGNvbnN0IHsgcmVzcG9uc2UsIGVycm9yIH0gPSB5aWVsZCBjYWxsKGFwaUZuLCAuLi5hcGlBcmdzKTtcbiAgICBpZiAocmVzcG9uc2UpIHtcbiAgICAgICAgLy8g5aaC5p6c5pivIHVuZGVmaW5lZCDkuZ/kuI3kvJrmnInku7vkvZXlpITnkIZcbiAgICAgICAgaWYgKGhhc0NhY2hlID09PSBmYWxzZSkge1xuICAgICAgICAgICAgY2FjaGUuc2V0Q2FjaGUoY2FjaGVJZCwgcmVzcG9uc2UpO1xuICAgICAgICB9XG4gICAgICAgIGxldCBhY3Rpb24gPSBlbnRpdHkuc3VjY2VzcyhyZXNwb25zZSwgZnVsbFBheWxvYWQpO1xuICAgICAgICB5aWVsZCBwdXQoYWN0aW9uKTtcbiAgICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGxldCBhY3Rpb24gPSBlbnRpdHkuZmFpbHVyZShlcnJvciwgZnVsbFBheWxvYWQpO1xuICAgICAgICB5aWVsZCBwdXQoYWN0aW9uKTtcbiAgICAgICAgcmV0dXJuIGFjdGlvbjtcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3NhZ2FzL3V0aWxzLnRzXG4gKiovIiwiaW1wb3J0IG1kNSBmcm9tICcuLi8uLi92ZW5kb3JfbW9kdWxlcy9tZDUnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmV4cG9ydCBmdW5jdGlvbiBjcmVhdGVDYWNoZUlkKGlkZW50aWZpZXIpIHtcbiAgICBpZiAoXy5pc0VtcHR5KGlkZW50aWZpZXIpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcign57yT5a2Y5qCH6K+G56ym5LiN6IO95Li656m677yBJyk7XG4gICAgfVxuICAgIHJldHVybiBtZDUoaWRlbnRpZmllci50b1N0cmluZygpKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRDYWNoZShrZXkpIHtcbiAgICBpZiAodHlwZW9mIGtleSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOYW1lIHNob3VsZCBiZSBzdHJpbmchJyk7XG4gICAgfVxuICAgIGxldCBjb250ZW50ID0gbG9jYWxTdG9yYWdlLmdldEl0ZW0oa2V5KTtcbiAgICBpZiAoIWNvbnRlbnQpIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgdHJ5IHtcbiAgICAgICAgY29udGVudCA9IEpTT04ucGFyc2UoY29udGVudCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICB0aHJvdyBlcnJvcjtcbiAgICB9XG4gICAgcmV0dXJuIGNvbnRlbnQ7XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0Q2FjaGUoa2V5LCBjb250ZW50KSB7XG4gICAgaWYgKHR5cGVvZiBrZXkgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignTmFtZSBzaG91bGQgYmUgc3RyaW5nIScpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgIT09ICdvYmplY3QnKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignQ2FjaGUgY29udGVudCB0eXBlIHNob3VsZCBiZSBvYmplY3QhJyk7XG4gICAgfVxuICAgIGNvbnN0IHNhdmUgPSAoKSA9PiB7XG4gICAgICAgIGxvY2FsU3RvcmFnZS5zZXRJdGVtKGtleSwgSlNPTi5zdHJpbmdpZnkoY29udGVudCkpO1xuICAgIH07XG4gICAgdHJ5IHtcbiAgICAgICAgc2F2ZSgpO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgaWYgKGVycm9yLm5hbWUgPT09ICdRdW90YUV4Y2VlZGVkRXJyb3InKSB7XG4gICAgICAgICAgICAvLyBUT0RPOiDog73lkKblj6rmuIXpmaTmnIDml6fnmoRcbiAgICAgICAgICAgIGNvbnNvbGUud2Fybign5pys5Zyw57yT5a2Y5bey5ruh77yM5pen55qE57yT5a2Y5bCG6KKr5riF6Zmk77yBJyk7XG4gICAgICAgICAgICBsb2NhbFN0b3JhZ2UuY2xlYXIoKTtcbiAgICAgICAgICAgIHNhdmUoKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiB0cnVlO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9kYXRhL2NhY2hlLnRzXG4gKiovIiwiY29uc3QgbWQ1ID0gcmVxdWlyZSgnLi9tZDUuanMnKTtcbmV4cG9ydCBkZWZhdWx0IG1kNTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3ZlbmRvcl9tb2R1bGVzL21kNS9pbmRleC50c1xuICoqLyIsIi8qXG4gKiBKYXZhU2NyaXB0IE1ENVxuICogaHR0cHM6Ly9naXRodWIuY29tL2JsdWVpbXAvSmF2YVNjcmlwdC1NRDVcbiAqXG4gKiBDb3B5cmlnaHQgMjAxMSwgU2ViYXN0aWFuIFRzY2hhblxuICogaHR0cHM6Ly9ibHVlaW1wLm5ldFxuICpcbiAqIExpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZTpcbiAqIGh0dHA6Ly93d3cub3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvTUlUXG4gKlxuICogQmFzZWQgb25cbiAqIEEgSmF2YVNjcmlwdCBpbXBsZW1lbnRhdGlvbiBvZiB0aGUgUlNBIERhdGEgU2VjdXJpdHksIEluYy4gTUQ1IE1lc3NhZ2VcbiAqIERpZ2VzdCBBbGdvcml0aG0sIGFzIGRlZmluZWQgaW4gUkZDIDEzMjEuXG4gKiBWZXJzaW9uIDIuMiBDb3B5cmlnaHQgKEMpIFBhdWwgSm9obnN0b24gMTk5OSAtIDIwMDlcbiAqIE90aGVyIGNvbnRyaWJ1dG9yczogR3JlZyBIb2x0LCBBbmRyZXcgS2VwZXJ0LCBZZG5hciwgTG9zdGluZXRcbiAqIERpc3RyaWJ1dGVkIHVuZGVyIHRoZSBCU0QgTGljZW5zZVxuICogU2VlIGh0dHA6Ly9wYWpob21lLm9yZy51ay9jcnlwdC9tZDUgZm9yIG1vcmUgaW5mby5cbiAqL1xuXG4vKmdsb2JhbCB1bmVzY2FwZSwgZGVmaW5lLCBtb2R1bGUgKi9cblxuOyhmdW5jdGlvbiAoJCkge1xuICAndXNlIHN0cmljdCdcblxuICAvKlxuICAqIEFkZCBpbnRlZ2Vycywgd3JhcHBpbmcgYXQgMl4zMi4gVGhpcyB1c2VzIDE2LWJpdCBvcGVyYXRpb25zIGludGVybmFsbHlcbiAgKiB0byB3b3JrIGFyb3VuZCBidWdzIGluIHNvbWUgSlMgaW50ZXJwcmV0ZXJzLlxuICAqL1xuICBmdW5jdGlvbiBzYWZlX2FkZCAoeCwgeSkge1xuICAgIHZhciBsc3cgPSAoeCAmIDB4RkZGRikgKyAoeSAmIDB4RkZGRilcbiAgICB2YXIgbXN3ID0gKHggPj4gMTYpICsgKHkgPj4gMTYpICsgKGxzdyA+PiAxNilcbiAgICByZXR1cm4gKG1zdyA8PCAxNikgfCAobHN3ICYgMHhGRkZGKVxuICB9XG5cbiAgLypcbiAgKiBCaXR3aXNlIHJvdGF0ZSBhIDMyLWJpdCBudW1iZXIgdG8gdGhlIGxlZnQuXG4gICovXG4gIGZ1bmN0aW9uIGJpdF9yb2wgKG51bSwgY250KSB7XG4gICAgcmV0dXJuIChudW0gPDwgY250KSB8IChudW0gPj4+ICgzMiAtIGNudCkpXG4gIH1cblxuICAvKlxuICAqIFRoZXNlIGZ1bmN0aW9ucyBpbXBsZW1lbnQgdGhlIGZvdXIgYmFzaWMgb3BlcmF0aW9ucyB0aGUgYWxnb3JpdGhtIHVzZXMuXG4gICovXG4gIGZ1bmN0aW9uIG1kNV9jbW4gKHEsIGEsIGIsIHgsIHMsIHQpIHtcbiAgICByZXR1cm4gc2FmZV9hZGQoYml0X3JvbChzYWZlX2FkZChzYWZlX2FkZChhLCBxKSwgc2FmZV9hZGQoeCwgdCkpLCBzKSwgYilcbiAgfVxuICBmdW5jdGlvbiBtZDVfZmYgKGEsIGIsIGMsIGQsIHgsIHMsIHQpIHtcbiAgICByZXR1cm4gbWQ1X2NtbigoYiAmIGMpIHwgKCh+YikgJiBkKSwgYSwgYiwgeCwgcywgdClcbiAgfVxuICBmdW5jdGlvbiBtZDVfZ2cgKGEsIGIsIGMsIGQsIHgsIHMsIHQpIHtcbiAgICByZXR1cm4gbWQ1X2NtbigoYiAmIGQpIHwgKGMgJiAofmQpKSwgYSwgYiwgeCwgcywgdClcbiAgfVxuICBmdW5jdGlvbiBtZDVfaGggKGEsIGIsIGMsIGQsIHgsIHMsIHQpIHtcbiAgICByZXR1cm4gbWQ1X2NtbihiIF4gYyBeIGQsIGEsIGIsIHgsIHMsIHQpXG4gIH1cbiAgZnVuY3Rpb24gbWQ1X2lpIChhLCBiLCBjLCBkLCB4LCBzLCB0KSB7XG4gICAgcmV0dXJuIG1kNV9jbW4oYyBeIChiIHwgKH5kKSksIGEsIGIsIHgsIHMsIHQpXG4gIH1cblxuICAvKlxuICAqIENhbGN1bGF0ZSB0aGUgTUQ1IG9mIGFuIGFycmF5IG9mIGxpdHRsZS1lbmRpYW4gd29yZHMsIGFuZCBhIGJpdCBsZW5ndGguXG4gICovXG4gIGZ1bmN0aW9uIGJpbmxfbWQ1ICh4LCBsZW4pIHtcbiAgICAvKiBhcHBlbmQgcGFkZGluZyAqL1xuICAgIHhbbGVuID4+IDVdIHw9IDB4ODAgPDwgKGxlbiAlIDMyKVxuICAgIHhbKCgobGVuICsgNjQpID4+PiA5KSA8PCA0KSArIDE0XSA9IGxlblxuXG4gICAgdmFyIGlcbiAgICB2YXIgb2xkYVxuICAgIHZhciBvbGRiXG4gICAgdmFyIG9sZGNcbiAgICB2YXIgb2xkZFxuICAgIHZhciBhID0gMTczMjU4NDE5M1xuICAgIHZhciBiID0gLTI3MTczMzg3OVxuICAgIHZhciBjID0gLTE3MzI1ODQxOTRcbiAgICB2YXIgZCA9IDI3MTczMzg3OFxuXG4gICAgZm9yIChpID0gMDsgaSA8IHgubGVuZ3RoOyBpICs9IDE2KSB7XG4gICAgICBvbGRhID0gYVxuICAgICAgb2xkYiA9IGJcbiAgICAgIG9sZGMgPSBjXG4gICAgICBvbGRkID0gZFxuXG4gICAgICBhID0gbWQ1X2ZmKGEsIGIsIGMsIGQsIHhbaV0sIDcsIC02ODA4NzY5MzYpXG4gICAgICBkID0gbWQ1X2ZmKGQsIGEsIGIsIGMsIHhbaSArIDFdLCAxMiwgLTM4OTU2NDU4NilcbiAgICAgIGMgPSBtZDVfZmYoYywgZCwgYSwgYiwgeFtpICsgMl0sIDE3LCA2MDYxMDU4MTkpXG4gICAgICBiID0gbWQ1X2ZmKGIsIGMsIGQsIGEsIHhbaSArIDNdLCAyMiwgLTEwNDQ1MjUzMzApXG4gICAgICBhID0gbWQ1X2ZmKGEsIGIsIGMsIGQsIHhbaSArIDRdLCA3LCAtMTc2NDE4ODk3KVxuICAgICAgZCA9IG1kNV9mZihkLCBhLCBiLCBjLCB4W2kgKyA1XSwgMTIsIDEyMDAwODA0MjYpXG4gICAgICBjID0gbWQ1X2ZmKGMsIGQsIGEsIGIsIHhbaSArIDZdLCAxNywgLTE0NzMyMzEzNDEpXG4gICAgICBiID0gbWQ1X2ZmKGIsIGMsIGQsIGEsIHhbaSArIDddLCAyMiwgLTQ1NzA1OTgzKVxuICAgICAgYSA9IG1kNV9mZihhLCBiLCBjLCBkLCB4W2kgKyA4XSwgNywgMTc3MDAzNTQxNilcbiAgICAgIGQgPSBtZDVfZmYoZCwgYSwgYiwgYywgeFtpICsgOV0sIDEyLCAtMTk1ODQxNDQxNylcbiAgICAgIGMgPSBtZDVfZmYoYywgZCwgYSwgYiwgeFtpICsgMTBdLCAxNywgLTQyMDYzKVxuICAgICAgYiA9IG1kNV9mZihiLCBjLCBkLCBhLCB4W2kgKyAxMV0sIDIyLCAtMTk5MDQwNDE2MilcbiAgICAgIGEgPSBtZDVfZmYoYSwgYiwgYywgZCwgeFtpICsgMTJdLCA3LCAxODA0NjAzNjgyKVxuICAgICAgZCA9IG1kNV9mZihkLCBhLCBiLCBjLCB4W2kgKyAxM10sIDEyLCAtNDAzNDExMDEpXG4gICAgICBjID0gbWQ1X2ZmKGMsIGQsIGEsIGIsIHhbaSArIDE0XSwgMTcsIC0xNTAyMDAyMjkwKVxuICAgICAgYiA9IG1kNV9mZihiLCBjLCBkLCBhLCB4W2kgKyAxNV0sIDIyLCAxMjM2NTM1MzI5KVxuXG4gICAgICBhID0gbWQ1X2dnKGEsIGIsIGMsIGQsIHhbaSArIDFdLCA1LCAtMTY1Nzk2NTEwKVxuICAgICAgZCA9IG1kNV9nZyhkLCBhLCBiLCBjLCB4W2kgKyA2XSwgOSwgLTEwNjk1MDE2MzIpXG4gICAgICBjID0gbWQ1X2dnKGMsIGQsIGEsIGIsIHhbaSArIDExXSwgMTQsIDY0MzcxNzcxMylcbiAgICAgIGIgPSBtZDVfZ2coYiwgYywgZCwgYSwgeFtpXSwgMjAsIC0zNzM4OTczMDIpXG4gICAgICBhID0gbWQ1X2dnKGEsIGIsIGMsIGQsIHhbaSArIDVdLCA1LCAtNzAxNTU4NjkxKVxuICAgICAgZCA9IG1kNV9nZyhkLCBhLCBiLCBjLCB4W2kgKyAxMF0sIDksIDM4MDE2MDgzKVxuICAgICAgYyA9IG1kNV9nZyhjLCBkLCBhLCBiLCB4W2kgKyAxNV0sIDE0LCAtNjYwNDc4MzM1KVxuICAgICAgYiA9IG1kNV9nZyhiLCBjLCBkLCBhLCB4W2kgKyA0XSwgMjAsIC00MDU1Mzc4NDgpXG4gICAgICBhID0gbWQ1X2dnKGEsIGIsIGMsIGQsIHhbaSArIDldLCA1LCA1Njg0NDY0MzgpXG4gICAgICBkID0gbWQ1X2dnKGQsIGEsIGIsIGMsIHhbaSArIDE0XSwgOSwgLTEwMTk4MDM2OTApXG4gICAgICBjID0gbWQ1X2dnKGMsIGQsIGEsIGIsIHhbaSArIDNdLCAxNCwgLTE4NzM2Mzk2MSlcbiAgICAgIGIgPSBtZDVfZ2coYiwgYywgZCwgYSwgeFtpICsgOF0sIDIwLCAxMTYzNTMxNTAxKVxuICAgICAgYSA9IG1kNV9nZyhhLCBiLCBjLCBkLCB4W2kgKyAxM10sIDUsIC0xNDQ0NjgxNDY3KVxuICAgICAgZCA9IG1kNV9nZyhkLCBhLCBiLCBjLCB4W2kgKyAyXSwgOSwgLTUxNDAzNzg0KVxuICAgICAgYyA9IG1kNV9nZyhjLCBkLCBhLCBiLCB4W2kgKyA3XSwgMTQsIDE3MzUzMjg0NzMpXG4gICAgICBiID0gbWQ1X2dnKGIsIGMsIGQsIGEsIHhbaSArIDEyXSwgMjAsIC0xOTI2NjA3NzM0KVxuXG4gICAgICBhID0gbWQ1X2hoKGEsIGIsIGMsIGQsIHhbaSArIDVdLCA0LCAtMzc4NTU4KVxuICAgICAgZCA9IG1kNV9oaChkLCBhLCBiLCBjLCB4W2kgKyA4XSwgMTEsIC0yMDIyNTc0NDYzKVxuICAgICAgYyA9IG1kNV9oaChjLCBkLCBhLCBiLCB4W2kgKyAxMV0sIDE2LCAxODM5MDMwNTYyKVxuICAgICAgYiA9IG1kNV9oaChiLCBjLCBkLCBhLCB4W2kgKyAxNF0sIDIzLCAtMzUzMDk1NTYpXG4gICAgICBhID0gbWQ1X2hoKGEsIGIsIGMsIGQsIHhbaSArIDFdLCA0LCAtMTUzMDk5MjA2MClcbiAgICAgIGQgPSBtZDVfaGgoZCwgYSwgYiwgYywgeFtpICsgNF0sIDExLCAxMjcyODkzMzUzKVxuICAgICAgYyA9IG1kNV9oaChjLCBkLCBhLCBiLCB4W2kgKyA3XSwgMTYsIC0xNTU0OTc2MzIpXG4gICAgICBiID0gbWQ1X2hoKGIsIGMsIGQsIGEsIHhbaSArIDEwXSwgMjMsIC0xMDk0NzMwNjQwKVxuICAgICAgYSA9IG1kNV9oaChhLCBiLCBjLCBkLCB4W2kgKyAxM10sIDQsIDY4MTI3OTE3NClcbiAgICAgIGQgPSBtZDVfaGgoZCwgYSwgYiwgYywgeFtpXSwgMTEsIC0zNTg1MzcyMjIpXG4gICAgICBjID0gbWQ1X2hoKGMsIGQsIGEsIGIsIHhbaSArIDNdLCAxNiwgLTcyMjUyMTk3OSlcbiAgICAgIGIgPSBtZDVfaGgoYiwgYywgZCwgYSwgeFtpICsgNl0sIDIzLCA3NjAyOTE4OSlcbiAgICAgIGEgPSBtZDVfaGgoYSwgYiwgYywgZCwgeFtpICsgOV0sIDQsIC02NDAzNjQ0ODcpXG4gICAgICBkID0gbWQ1X2hoKGQsIGEsIGIsIGMsIHhbaSArIDEyXSwgMTEsIC00MjE4MTU4MzUpXG4gICAgICBjID0gbWQ1X2hoKGMsIGQsIGEsIGIsIHhbaSArIDE1XSwgMTYsIDUzMDc0MjUyMClcbiAgICAgIGIgPSBtZDVfaGgoYiwgYywgZCwgYSwgeFtpICsgMl0sIDIzLCAtOTk1MzM4NjUxKVxuXG4gICAgICBhID0gbWQ1X2lpKGEsIGIsIGMsIGQsIHhbaV0sIDYsIC0xOTg2MzA4NDQpXG4gICAgICBkID0gbWQ1X2lpKGQsIGEsIGIsIGMsIHhbaSArIDddLCAxMCwgMTEyNjg5MTQxNSlcbiAgICAgIGMgPSBtZDVfaWkoYywgZCwgYSwgYiwgeFtpICsgMTRdLCAxNSwgLTE0MTYzNTQ5MDUpXG4gICAgICBiID0gbWQ1X2lpKGIsIGMsIGQsIGEsIHhbaSArIDVdLCAyMSwgLTU3NDM0MDU1KVxuICAgICAgYSA9IG1kNV9paShhLCBiLCBjLCBkLCB4W2kgKyAxMl0sIDYsIDE3MDA0ODU1NzEpXG4gICAgICBkID0gbWQ1X2lpKGQsIGEsIGIsIGMsIHhbaSArIDNdLCAxMCwgLTE4OTQ5ODY2MDYpXG4gICAgICBjID0gbWQ1X2lpKGMsIGQsIGEsIGIsIHhbaSArIDEwXSwgMTUsIC0xMDUxNTIzKVxuICAgICAgYiA9IG1kNV9paShiLCBjLCBkLCBhLCB4W2kgKyAxXSwgMjEsIC0yMDU0OTIyNzk5KVxuICAgICAgYSA9IG1kNV9paShhLCBiLCBjLCBkLCB4W2kgKyA4XSwgNiwgMTg3MzMxMzM1OSlcbiAgICAgIGQgPSBtZDVfaWkoZCwgYSwgYiwgYywgeFtpICsgMTVdLCAxMCwgLTMwNjExNzQ0KVxuICAgICAgYyA9IG1kNV9paShjLCBkLCBhLCBiLCB4W2kgKyA2XSwgMTUsIC0xNTYwMTk4MzgwKVxuICAgICAgYiA9IG1kNV9paShiLCBjLCBkLCBhLCB4W2kgKyAxM10sIDIxLCAxMzA5MTUxNjQ5KVxuICAgICAgYSA9IG1kNV9paShhLCBiLCBjLCBkLCB4W2kgKyA0XSwgNiwgLTE0NTUyMzA3MClcbiAgICAgIGQgPSBtZDVfaWkoZCwgYSwgYiwgYywgeFtpICsgMTFdLCAxMCwgLTExMjAyMTAzNzkpXG4gICAgICBjID0gbWQ1X2lpKGMsIGQsIGEsIGIsIHhbaSArIDJdLCAxNSwgNzE4Nzg3MjU5KVxuICAgICAgYiA9IG1kNV9paShiLCBjLCBkLCBhLCB4W2kgKyA5XSwgMjEsIC0zNDM0ODU1NTEpXG5cbiAgICAgIGEgPSBzYWZlX2FkZChhLCBvbGRhKVxuICAgICAgYiA9IHNhZmVfYWRkKGIsIG9sZGIpXG4gICAgICBjID0gc2FmZV9hZGQoYywgb2xkYylcbiAgICAgIGQgPSBzYWZlX2FkZChkLCBvbGRkKVxuICAgIH1cbiAgICByZXR1cm4gW2EsIGIsIGMsIGRdXG4gIH1cblxuICAvKlxuICAqIENvbnZlcnQgYW4gYXJyYXkgb2YgbGl0dGxlLWVuZGlhbiB3b3JkcyB0byBhIHN0cmluZ1xuICAqL1xuICBmdW5jdGlvbiBiaW5sMnJzdHIgKGlucHV0KSB7XG4gICAgdmFyIGlcbiAgICB2YXIgb3V0cHV0ID0gJydcbiAgICB2YXIgbGVuZ3RoMzIgPSBpbnB1dC5sZW5ndGggKiAzMlxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGgzMjsgaSArPSA4KSB7XG4gICAgICBvdXRwdXQgKz0gU3RyaW5nLmZyb21DaGFyQ29kZSgoaW5wdXRbaSA+PiA1XSA+Pj4gKGkgJSAzMikpICYgMHhGRilcbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dFxuICB9XG5cbiAgLypcbiAgKiBDb252ZXJ0IGEgcmF3IHN0cmluZyB0byBhbiBhcnJheSBvZiBsaXR0bGUtZW5kaWFuIHdvcmRzXG4gICogQ2hhcmFjdGVycyA+MjU1IGhhdmUgdGhlaXIgaGlnaC1ieXRlIHNpbGVudGx5IGlnbm9yZWQuXG4gICovXG4gIGZ1bmN0aW9uIHJzdHIyYmlubCAoaW5wdXQpIHtcbiAgICB2YXIgaVxuICAgIHZhciBvdXRwdXQgPSBbXVxuICAgIG91dHB1dFsoaW5wdXQubGVuZ3RoID4+IDIpIC0gMV0gPSB1bmRlZmluZWRcbiAgICBmb3IgKGkgPSAwOyBpIDwgb3V0cHV0Lmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBvdXRwdXRbaV0gPSAwXG4gICAgfVxuICAgIHZhciBsZW5ndGg4ID0gaW5wdXQubGVuZ3RoICogOFxuICAgIGZvciAoaSA9IDA7IGkgPCBsZW5ndGg4OyBpICs9IDgpIHtcbiAgICAgIG91dHB1dFtpID4+IDVdIHw9IChpbnB1dC5jaGFyQ29kZUF0KGkgLyA4KSAmIDB4RkYpIDw8IChpICUgMzIpXG4gICAgfVxuICAgIHJldHVybiBvdXRwdXRcbiAgfVxuXG4gIC8qXG4gICogQ2FsY3VsYXRlIHRoZSBNRDUgb2YgYSByYXcgc3RyaW5nXG4gICovXG4gIGZ1bmN0aW9uIHJzdHJfbWQ1IChzKSB7XG4gICAgcmV0dXJuIGJpbmwycnN0cihiaW5sX21kNShyc3RyMmJpbmwocyksIHMubGVuZ3RoICogOCkpXG4gIH1cblxuICAvKlxuICAqIENhbGN1bGF0ZSB0aGUgSE1BQy1NRDUsIG9mIGEga2V5IGFuZCBzb21lIGRhdGEgKHJhdyBzdHJpbmdzKVxuICAqL1xuICBmdW5jdGlvbiByc3RyX2htYWNfbWQ1IChrZXksIGRhdGEpIHtcbiAgICB2YXIgaVxuICAgIHZhciBia2V5ID0gcnN0cjJiaW5sKGtleSlcbiAgICB2YXIgaXBhZCA9IFtdXG4gICAgdmFyIG9wYWQgPSBbXVxuICAgIHZhciBoYXNoXG4gICAgaXBhZFsxNV0gPSBvcGFkWzE1XSA9IHVuZGVmaW5lZFxuICAgIGlmIChia2V5Lmxlbmd0aCA+IDE2KSB7XG4gICAgICBia2V5ID0gYmlubF9tZDUoYmtleSwga2V5Lmxlbmd0aCAqIDgpXG4gICAgfVxuICAgIGZvciAoaSA9IDA7IGkgPCAxNjsgaSArPSAxKSB7XG4gICAgICBpcGFkW2ldID0gYmtleVtpXSBeIDB4MzYzNjM2MzZcbiAgICAgIG9wYWRbaV0gPSBia2V5W2ldIF4gMHg1QzVDNUM1Q1xuICAgIH1cbiAgICBoYXNoID0gYmlubF9tZDUoaXBhZC5jb25jYXQocnN0cjJiaW5sKGRhdGEpKSwgNTEyICsgZGF0YS5sZW5ndGggKiA4KVxuICAgIHJldHVybiBiaW5sMnJzdHIoYmlubF9tZDUob3BhZC5jb25jYXQoaGFzaCksIDUxMiArIDEyOCkpXG4gIH1cblxuICAvKlxuICAqIENvbnZlcnQgYSByYXcgc3RyaW5nIHRvIGEgaGV4IHN0cmluZ1xuICAqL1xuICBmdW5jdGlvbiByc3RyMmhleCAoaW5wdXQpIHtcbiAgICB2YXIgaGV4X3RhYiA9ICcwMTIzNDU2Nzg5YWJjZGVmJ1xuICAgIHZhciBvdXRwdXQgPSAnJ1xuICAgIHZhciB4XG4gICAgdmFyIGlcbiAgICBmb3IgKGkgPSAwOyBpIDwgaW5wdXQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIHggPSBpbnB1dC5jaGFyQ29kZUF0KGkpXG4gICAgICBvdXRwdXQgKz0gaGV4X3RhYi5jaGFyQXQoKHggPj4+IDQpICYgMHgwRikgK1xuICAgICAgaGV4X3RhYi5jaGFyQXQoeCAmIDB4MEYpXG4gICAgfVxuICAgIHJldHVybiBvdXRwdXRcbiAgfVxuXG4gIC8qXG4gICogRW5jb2RlIGEgc3RyaW5nIGFzIHV0Zi04XG4gICovXG4gIGZ1bmN0aW9uIHN0cjJyc3RyX3V0ZjggKGlucHV0KSB7XG4gICAgcmV0dXJuIHVuZXNjYXBlKGVuY29kZVVSSUNvbXBvbmVudChpbnB1dCkpXG4gIH1cblxuICAvKlxuICAqIFRha2Ugc3RyaW5nIGFyZ3VtZW50cyBhbmQgcmV0dXJuIGVpdGhlciByYXcgb3IgaGV4IGVuY29kZWQgc3RyaW5nc1xuICAqL1xuICBmdW5jdGlvbiByYXdfbWQ1IChzKSB7XG4gICAgcmV0dXJuIHJzdHJfbWQ1KHN0cjJyc3RyX3V0ZjgocykpXG4gIH1cbiAgZnVuY3Rpb24gaGV4X21kNSAocykge1xuICAgIHJldHVybiByc3RyMmhleChyYXdfbWQ1KHMpKVxuICB9XG4gIGZ1bmN0aW9uIHJhd19obWFjX21kNSAoaywgZCkge1xuICAgIHJldHVybiByc3RyX2htYWNfbWQ1KHN0cjJyc3RyX3V0ZjgoayksIHN0cjJyc3RyX3V0ZjgoZCkpXG4gIH1cbiAgZnVuY3Rpb24gaGV4X2htYWNfbWQ1IChrLCBkKSB7XG4gICAgcmV0dXJuIHJzdHIyaGV4KHJhd19obWFjX21kNShrLCBkKSlcbiAgfVxuXG4gIGZ1bmN0aW9uIG1kNSAoc3RyaW5nLCBrZXksIHJhdykge1xuICAgIGlmICgha2V5KSB7XG4gICAgICBpZiAoIXJhdykge1xuICAgICAgICByZXR1cm4gaGV4X21kNShzdHJpbmcpXG4gICAgICB9XG4gICAgICByZXR1cm4gcmF3X21kNShzdHJpbmcpXG4gICAgfVxuICAgIGlmICghcmF3KSB7XG4gICAgICByZXR1cm4gaGV4X2htYWNfbWQ1KGtleSwgc3RyaW5nKVxuICAgIH1cbiAgICByZXR1cm4gcmF3X2htYWNfbWQ1KGtleSwgc3RyaW5nKVxuICB9XG5cbiAgaWYgKHR5cGVvZiBkZWZpbmUgPT09ICdmdW5jdGlvbicgJiYgZGVmaW5lLmFtZCkge1xuICAgIGRlZmluZShmdW5jdGlvbiAoKSB7XG4gICAgICByZXR1cm4gbWQ1XG4gICAgfSlcbiAgfSBlbHNlIGlmICh0eXBlb2YgbW9kdWxlID09PSAnb2JqZWN0JyAmJiBtb2R1bGUuZXhwb3J0cykge1xuICAgIG1vZHVsZS5leHBvcnRzID0gbWQ1XG4gIH0gZWxzZSB7XG4gICAgJC5tZDUgPSBtZDVcbiAgfVxufSh0aGlzKSlcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3ZlbmRvcl9tb2R1bGVzL21kNS9tZDUuanNcbiAqKi8iLCJpbXBvcnQgeyB0YWtlLCBwdXQsIGNhbGwgfSBmcm9tICdyZWR1eC1zYWdhL2VmZmVjdHMnO1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zJztcbmltcG9ydCBhcGkgZnJvbSAnLi4vLi4vc2VydmljZXMvYXBpJztcbmltcG9ydCAqIGFzIEFDVElPTl9UWVBFUyBmcm9tICcuLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24qIHdhdGNoTG9naW5GbG93KCkge1xuICAgIC8vIOS9v+eUqCBmZXRjaEVudGl0eSDkvJrmm7Tlpb3kuYjvvJ9cbiAgICAvLyDnm67liY3lm6DkuLrov5nnp40gcHV0IOexu+Wei+eahOivt+axgueahOi/lOWbnuWAvOWSjOS4gOiIrOeahCBlbnRpdHkg5LiN5LiA5qC35omA5Lul5LiN6IO955u05o6l5L2/55SoXG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgeWllbGQgdGFrZShBQ1RJT05fVFlQRVMuVVNFUl9MT0dPVVQpO1xuICAgICAgICB5aWVsZCBwdXQoYWN0aW9ucy5sb2dvdXQucmVxdWVzdCgpKTtcbiAgICAgICAgdHJ5IHtcbiAgICAgICAgICAgIHlpZWxkIGNhbGwoYXBpLmxvZ291dCk7XG4gICAgICAgICAgICB5aWVsZCBwdXQoYWN0aW9ucy5sb2dvdXQuc3VjY2VzcygpKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHlpZWxkIHB1dChhY3Rpb25zLmxvZ291dC5mYWlsdXJlKGVycm9yKSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3NhZ2FzL2xvZ2luRmxvdy50c1xuICoqLyIsImltcG9ydCB7IHRha2VFdmVyeSB9IGZyb20gJ3JlZHV4LXNhZ2EnO1xuaW1wb3J0IHsgdGFrZSwgcHV0LCBjYWxsLCBzZWxlY3QsIGZvcmssIGNhbmNlbGxlZCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMnO1xuaW1wb3J0ICogYXMgQUNUSU9OX1RZUEVTIGZyb20gJy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5pbXBvcnQgYXBpIGZyb20gJy4uLy4uL3NlcnZpY2VzL2FwaSc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0ICogYXMgc2VsZWN0b3JzIGZyb20gJy4uLy4uL3N0b3JlL3NlbGVjdG9ycyc7XG5pbXBvcnQgeyBST0xFUyB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9jb21tb24nO1xuaW1wb3J0IHsgZmV0Y2hFbnRpdHkgfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uLy4uL2hlbHBlcnMnO1xuaW1wb3J0ICogYXMgdmlld2VyVXRpbHMgZnJvbSAnLi4vLi4vcm91dGVzL1ZpZXdlci9WaWV3ZXIudXRpbHMnO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uLy4uL3V0aWxzJztcbmNvbnN0IERFRkFVTFRfUEFHRV9IRUlHSFQgPSA5MDA7XG5jb25zdCBERUZBVUxUX0ZPTlRfU0laRSA9IDE2O1xuY29uc3QgZmV0Y2hCb29rUHJvZ3Jlc3MgPSBmZXRjaEVudGl0eS5iaW5kKG51bGwsIGFjdGlvbnMucHJvZ3Jlc3MsIGFwaS5mZXRjaEJvb2tQcm9ncmVzcyk7XG5mdW5jdGlvbiogc2V0Vmlld2VyKGJvb2tJZCwgY29uZmlnID0ge30pIHtcbiAgICBjb25zdCB2aWV3ZXJXaWR0aCA9IHV0aWxzLmdldFNjcmVlbkluZm8oKS52aWV3LndpZHRoO1xuICAgIGNvbnN0IGlzU21hbGxTY3JlZW4gPSB2aWV3ZXJXaWR0aCA8IDcwMDtcbiAgICBsZXQgaW5pdGlhbGl6ZWQgPSB7XG4gICAgICAgIGJvb2tJZCxcbiAgICAgICAgaXNDYWxjTW9kZTogdHJ1ZSxcbiAgICAgICAgZmx1aWQ6IGlzU21hbGxTY3JlZW4sXG4gICAgICAgIGlzVG91Y2hNb2RlOiBpc1NtYWxsU2NyZWVuLFxuICAgICAgICBwYWdlSGVpZ2h0OiBERUZBVUxUX1BBR0VfSEVJR0hULFxuICAgICAgICBmb250U2l6ZTogREVGQVVMVF9GT05UX1NJWkUsXG4gICAgICAgIHdpZHRoOiBpc1NtYWxsU2NyZWVuXG4gICAgICAgICAgICA/IHZpZXdlcldpZHRoXG4gICAgICAgICAgICA6ICdtYXgnXG4gICAgfTtcbiAgICBjb25zdCBjb21wdXRlZCA9IHlpZWxkIHNlbGVjdChzZWxlY3RvcnMudmlld2VyLmNvbXB1dGVkKGJvb2tJZCkpO1xuICAgIGlmIChjb21wdXRlZC5sZW5ndGggPiAwKSB7XG4gICAgICAgIGluaXRpYWxpemVkLmlzQ2FsY01vZGUgPSBmYWxzZTtcbiAgICB9XG4gICAgaW5pdGlhbGl6ZWQgPSBfLm1lcmdlKHt9LCBpbml0aWFsaXplZCwgY29uZmlnKTtcbiAgICB5aWVsZCBwdXQoYWN0aW9ucy5jb25maWdWaWV3ZXIoYm9va0lkLCBpbml0aWFsaXplZCkpO1xufVxuZnVuY3Rpb24qIHNldFZpZXdlcldpdGhBY3Rpb24oYWN0aW9uKSB7XG4gICAgY29uc3QgYm9va0lkID0gYWN0aW9uLmJvb2tJZDtcbiAgICBjb25zdCBjb25maWcgPSBhY3Rpb24uY29uZmlnO1xuICAgIHlpZWxkIHNldFZpZXdlcihib29rSWQsIGNvbmZpZyk7XG59XG5mdW5jdGlvbiogd2F0Y2hJbml0Vmlld2VyKCkge1xuICAgIHlpZWxkKiB0YWtlRXZlcnkoQUNUSU9OX1RZUEVTLlZJRVdFUi5JTklUSUFMSVpFX0NPTkZJRywgc2V0Vmlld2VyV2l0aEFjdGlvbik7XG59XG5mdW5jdGlvbiBjYWxjQm9vayh3cmFwLCBmbGVzaCkge1xuICAgIGNvbnN0IHN0YXJ0Q2FsY0h0bWxUaW1lID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7XG4gICAgY29uc3QgY29tcHV0ZWRDaGFwdGVycyA9IEFycmF5LnByb3RvdHlwZVxuICAgICAgICAubWFwLmNhbGwod3JhcC5jaGlsZE5vZGVzLCBjaGlsZCA9PiB7XG4gICAgICAgIGNvbnN0IGNoaWxkRGl2ID0gY2hpbGQ7XG4gICAgICAgIGNvbnN0IGlkID0gY2hpbGREaXYuZ2V0QXR0cmlidXRlKCdpZCcpO1xuICAgICAgICBjb25zdCBub2RlSGVpZ2h0cyA9IHZpZXdlclV0aWxzLmdldE5vZGVIZWlnaHRzKGNoaWxkRGl2LnF1ZXJ5U2VsZWN0b3IoJy5saW5lcycpLmNoaWxkTm9kZXMpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgaWQsXG4gICAgICAgICAgICBub2RlSGVpZ2h0c1xuICAgICAgICB9O1xuICAgIH0pO1xuICAgIGNvbnN0IGVuZENhbGNIdG1sVGltZSA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgIGhlbHBlcnMucHJpbnQoYENhbGN1bGF0aW5nIGh0bWwgdGFrZXMgJHtlbmRDYWxjSHRtbFRpbWUgLSBzdGFydENhbGNIdG1sVGltZX1tc2ApO1xuICAgIGNvbnN0IGNvbXB1dGVkUGFnZXMgPSB2aWV3ZXJVdGlscy5ncm91cFBhZ2VGcm9tQ2hhcHRlcnMoZmxlc2gsIGNvbXB1dGVkQ2hhcHRlcnMsIDkwMCk7XG4gICAgcmV0dXJuIGNvbXB1dGVkUGFnZXM7XG59XG5mdW5jdGlvbiogdXBkYXRlUHJvZ3Jlc3MoYm9va0lkLCBwZXJjZW50YWdlKSB7XG4gICAgdHJ5IHtcbiAgICAgICAgeWllbGQgY2FsbChhcGkuc2V0UHJvZ3Jlc3MsIGJvb2tJZCwge1xuICAgICAgICAgICAgcGVyY2VudGFnZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgaWYgKHlpZWxkIGNhbmNlbGxlZCgpKSB7XG4gICAgICAgICAgICBoZWxwZXJzLnByaW50KCd1cGRhdGVQcm9ncmVzcyBjYW5jZWxlZCcpO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24qIHdhdGNoQ2FsY0Jvb2soKSB7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3QgeyBib29rSWQsIHdyYXAgfSA9IHlpZWxkIHRha2UoQUNUSU9OX1RZUEVTLlZJRVdFUi5DQUxDX1NUQVJUKTtcbiAgICAgICAgY29uc3QgYm9va0NvbnRlbnQgPSB5aWVsZCBzZWxlY3Qoc2VsZWN0b3JzLmNvbW1vbi5lbnRpdHkoJ2Jvb2tDb250ZW50cycsIGJvb2tJZCkpO1xuICAgICAgICBjb25zdCBmbGVzaCA9IGJvb2tDb250ZW50LmZsZXNoIHx8IHt9O1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgY29tcHV0ZWQgPSBjYWxjQm9vayh3cmFwLCBmbGVzaCk7XG4gICAgICAgICAgICB5aWVsZCBwdXQoYWN0aW9ucy5jYWxjQm9va1N1Y2Nlc3MoYm9va0lkLCBjb21wdXRlZCkpO1xuICAgICAgICAgICAgeWllbGQgcHV0KGFjdGlvbnMuY29uZmlnVmlld2VyKGJvb2tJZCwge1xuICAgICAgICAgICAgICAgIGlzQ2FsY01vZGU6IGZhbHNlXG4gICAgICAgICAgICB9KSk7XG4gICAgICAgIH1cbiAgICAgICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgICAgICB5aWVsZCBwdXQoYWN0aW9ucy5jYWxjQm9va0ZhaWx1cmUoYm9va0lkLCBlcnJvcikpO1xuICAgICAgICB9XG4gICAgfVxufVxuZnVuY3Rpb24qIHdhdGNoUHJvZ3Jlc3NPcGVyYXRpb25zKCkge1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IHlpZWxkIHRha2UoW0FDVElPTl9UWVBFUy5WSUVXRVIuQk9PS19QUk9HUkVTU19VUERBVEUsIEFDVElPTl9UWVBFUy5MT0FEX0JPT0tfUFJPR1JFU1NdKTtcbiAgICAgICAgY29uc3Qgc2Vzc2lvbiA9IHlpZWxkIHNlbGVjdChzZWxlY3RvcnMuY29tbW9uLnNlc3Npb24pO1xuICAgICAgICBjb25zdCB1c2VyUm9sZSA9IF8uZ2V0KHNlc3Npb24sICd1c2VyLnJvbGUnKTtcbiAgICAgICAgaWYgKHVzZXJSb2xlICE9PSBST0xFUy5WSVNJVE9SKSB7XG4gICAgICAgICAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5MT0FEX0JPT0tfUFJPR1JFU1MpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCBjYWxsKGZldGNoQm9va1Byb2dyZXNzLCB7IGlkOiBhY3Rpb24uaWQgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5WSUVXRVIuQk9PS19QUk9HUkVTU19VUERBVEUpIHtcbiAgICAgICAgICAgICAgICB5aWVsZCB1cGRhdGVQcm9ncmVzcyhhY3Rpb24uaWQsIGFjdGlvbi5wZXJjZW50YWdlKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIGhlbHBlcnMucHJpbnQoJ05vdCBsb2dnZWQgaW4sIHByb2dyZXNzIHdpbGwgbm90IGJlIGZldGNoZWQhJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbioganVtcFRvKGFjdGlvbikge1xuICAgIGNvbnN0IHsgcGVyY2VudGFnZSB9ID0gYWN0aW9uO1xuICAgIGNvbnN0IHsgYm9va0lkLCBwYWdlSGVpZ2h0LCBpc1Njcm9sbE1vZGUgfSA9IHlpZWxkIHNlbGVjdChzZWxlY3RvcnMudmlld2VyLmNvbmZpZyk7XG4gICAgY29uc3QgYWxsUGFnZXMgPSB5aWVsZCBzZWxlY3Qoc2VsZWN0b3JzLnZpZXdlci5jb21wdXRlZChib29rSWQpKTtcbiAgICBjb25zdCBwYWdlQ291bnQgPSBhbGxQYWdlcy5sZW5ndGg7XG4gICAgY29uc3QgdG90YWxIZWlnaHQgPSBwYWdlQ291bnQgKiBwYWdlSGVpZ2h0O1xuICAgIGlmIChpc1Njcm9sbE1vZGUpIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5zY3JvbGxUb3AgPSBwZXJjZW50YWdlXG4gICAgICAgICAgICA/IHRvdGFsSGVpZ2h0ICogcGVyY2VudGFnZVxuICAgICAgICAgICAgOiAwO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgeWllbGQgcHV0KGFjdGlvbnMudXBkYXRlQm9va1Byb2dyZXNzKHBlcmNlbnRhZ2UpKTtcbiAgICB9XG59XG5mdW5jdGlvbiogd2F0Y2hKdW1wUmVxdWVzdCgpIHtcbiAgICB5aWVsZCogdGFrZUV2ZXJ5KEFDVElPTl9UWVBFUy5WSUVXRVIuSlVNUCwganVtcFRvKTtcbn1cbmZ1bmN0aW9uKiBmZXRjaFByb2dyZXNzQW5kSnVtcChib29rSWQpIHtcbiAgICB5aWVsZCBwdXQoYWN0aW9ucy5sb2FkQm9va1Byb2dyZXNzKGJvb2tJZCkpO1xuICAgIHlpZWxkIHRha2UoQUNUSU9OX1RZUEVTLkJPT0tfUFJPR1JFU1MuU1VDQ0VTUyk7XG4gICAgY29uc3QgeyBwZXJjZW50YWdlIH0gPSB5aWVsZCBzZWxlY3Qoc2VsZWN0b3JzLmNvbW1vbi5lbnRpdHkoJ2Jvb2tQcm9ncmVzcycsIGJvb2tJZCkpO1xuICAgIHlpZWxkIHB1dChhY3Rpb25zLnZpZXdlckp1bXBUbyhwZXJjZW50YWdlKSk7XG59XG5mdW5jdGlvbiogaW5pdGlhbGl6ZVZpZXdlcigpIHtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBjb25zdCB7IGJvb2tJZCB9ID0geWllbGQgdGFrZShBQ1RJT05fVFlQRVMuVklFV0VSLklOSVRJQUxJWkUpO1xuICAgICAgICBjb25zdCBjb21wdXRlZCA9IHlpZWxkIHNlbGVjdChzZWxlY3RvcnMudmlld2VyLmNvbXB1dGVkKGJvb2tJZCkpO1xuICAgICAgICBpZiAoXy5pc0VtcHR5KGNvbXB1dGVkKSkge1xuICAgICAgICAgICAgeWllbGQgW3B1dChhY3Rpb25zLmxvYWRCb29rKGJvb2tJZCkpLCBwdXQoYWN0aW9ucy5sb2FkQm9va0NvbnRlbnQoYm9va0lkKSldO1xuICAgICAgICAgICAgeWllbGQgcHV0KGFjdGlvbnMuaW5pdGlhbGl6ZVZpZXdlckNvbmZpZyhib29rSWQpKTtcbiAgICAgICAgICAgIHlpZWxkIHRha2UoQUNUSU9OX1RZUEVTLlZJRVdFUi5DQUxDX1NVQ0NFU1MpO1xuICAgICAgICAgICAgeWllbGQgZmV0Y2hQcm9ncmVzc0FuZEp1bXAoYm9va0lkKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHlpZWxkIGZldGNoUHJvZ3Jlc3NBbmRKdW1wKGJvb2tJZCk7XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogd2F0Y2hWaWV3ZXIoKSB7XG4gICAgeWllbGQgW1xuICAgICAgICBmb3JrKHdhdGNoUHJvZ3Jlc3NPcGVyYXRpb25zKSxcbiAgICAgICAgZm9yayh3YXRjaENhbGNCb29rKSxcbiAgICAgICAgZm9yayh3YXRjaEluaXRWaWV3ZXIpLFxuICAgICAgICBmb3JrKHdhdGNoSnVtcFJlcXVlc3QpLFxuICAgICAgICBmb3JrKGluaXRpYWxpemVWaWV3ZXIpXG4gICAgXTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvdmlld2VyVGFza3MudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWR1eC1zYWdhXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWR1eC1zYWdhXCJcbiAqKiBtb2R1bGUgaWQgPSAzNzBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB7IHRha2UsIHB1dCwgY2FuY2VsbGVkLCBmb3JrLCBjYW5jZWwgfSBmcm9tICdyZWR1eC1zYWdhL2VmZmVjdHMnO1xuZnVuY3Rpb24gc29tZUFzeW5jVGFzaygpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnbG9hZGVkJyk7XG4gICAgICAgICAgICByZXNvbHZlKCdsb2FkIGRvbmUnKTtcbiAgICAgICAgICAgIC8vIHlpZWxkIHB1dCh7IHR5cGU6ICdMT0FERUQnfSlcbiAgICAgICAgfSwgMTAwMCk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiBkb0xvYWQoKSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlKSA9PiB7XG4gICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgcmVzb2x2ZSgnbG9hZCBkb25lJyk7XG4gICAgICAgIH0sIDMwMDApO1xuICAgIH0pO1xufVxuZnVuY3Rpb24qIGRvTG9hZFdpdGhDYW5jZWwoKSB7XG4gICAgLy8gd2hpbGUgKHRydWUpIHtcbiAgICB0cnkge1xuICAgICAgICBjb25zdCByZXMgPSB5aWVsZCBzb21lQXN5bmNUYXNrKCk7XG4gICAgICAgIHlpZWxkIHB1dCh7IHR5cGU6ICdkb25lJywgcmVzIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICB9XG4gICAgZmluYWxseSB7XG4gICAgICAgIGlmICh5aWVsZCBjYW5jZWxsZWQoKSkge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ2NhbmNlbGVkJyk7XG4gICAgICAgICAgICB5aWVsZCBwdXQoeyB0eXBlOiAnQ0FOQ0VMX0xPQUQnIH0pO1xuICAgICAgICB9XG4gICAgfVxuICAgIC8vIH1cbn1cbmZ1bmN0aW9uIGRvU2F2ZSgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXNvbHZlKCdzYXZlIGRvbmUnKTtcbiAgICAgICAgfSwgMzAwMCk7XG4gICAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogd2F0Y2hUZXN0KCkge1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IGFjdGlvbiA9IHlpZWxkIHRha2UoWydMT0FEJywgJ1NBVkUnXSk7XG4gICAgICAgIGxldCByZXM7XG4gICAgICAgIGlmIChhY3Rpb24udHlwZSA9PT0gJ0xPQUQnKSB7XG4gICAgICAgICAgICByZXMgPSB5aWVsZCBkb0xvYWQoKTtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKHJlcyk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGFjdGlvbi50eXBlID09PSAnU0FWRScpIHtcbiAgICAgICAgICAgIHJlcyA9IHlpZWxkIGRvU2F2ZSgpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBmdW5jdGlvbiogd2F0Y2hUZXN0MigpIHtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBjb25zdCBsb2FkQWN0aW9uID0geWllbGQgdGFrZSgnTE9BRCcpO1xuICAgICAgICBjb25zdCBsb2FkVGFzayA9IHlpZWxkIGZvcmsoZG9Mb2FkV2l0aENhbmNlbCk7XG4gICAgICAgIGNvbnN0IHNhdmVBY3Rpb24gPSB5aWVsZCB0YWtlKCdTQVZFJyk7XG4gICAgICAgIGlmIChzYXZlQWN0aW9uLnR5cGUgPT09ICdTQVZFJykge1xuICAgICAgICAgICAgY29uc29sZS5sb2coJ3NhdmU/Jyk7XG4gICAgICAgICAgICB5aWVsZCBjYW5jZWwobG9hZFRhc2spO1xuICAgICAgICB9XG4gICAgICAgIHlpZWxkIHB1dCh7IHR5cGU6ICd0aGVuIHdoYXQnIH0pO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvdGVzdC50c1xuICoqLyIsImltcG9ydCB7IG1hdGNoIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5mdW5jdGlvbiBtYXRjaFJvdXRlKHJvdXRlcywgcmVxVXJsLCBoaXN0b3J5KSB7XG4gICAgcmV0dXJuIG5ldyBQcm9taXNlKChyZXNvbHZlLCByZWplY3QpID0+IHtcbiAgICAgICAgbWF0Y2goeyBoaXN0b3J5LCByb3V0ZXMsIGxvY2F0aW9uOiByZXFVcmwgfSwgKGVycm9yLCByZWRpcmVjdExvY2F0aW9uLCByZW5kZXJQcm9wcykgPT4ge1xuICAgICAgICAgICAgaWYgKGVycm9yKSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KGVycm9yKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKHJlZGlyZWN0TG9jYXRpb24pIHtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHsgcmVkaXJlY3RMb2NhdGlvbiwgc3RhdHVzQ29kZTogMzAyIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVuZGVyUHJvcHMpIHtcbiAgICAgICAgICAgICAgICBjb25zdCB3cmFwcGVkQ29tcG9uZW50ID0gXy5sYXN0KHJlbmRlclByb3BzLmNvbXBvbmVudHMpWydXcmFwcGVkQ29tcG9uZW50J107XG4gICAgICAgICAgICAgICAgY29uc3Qgc3RhdHVzQ29kZSA9IHdyYXBwZWRDb21wb25lbnRcbiAgICAgICAgICAgICAgICAgICAgPyAyMDBcbiAgICAgICAgICAgICAgICAgICAgOiA0MDQ7XG4gICAgICAgICAgICAgICAgcmVzb2x2ZSh7IHJlbmRlclByb3BzLCBzdGF0dXNDb2RlIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgcmVqZWN0KG5ldyBFcnJvcigncm91dGVzIOmHjOS4jeWtmOWcqOWvuSA0MDQg55qE5aSE55CGJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IG1hdGNoUm91dGU7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcmVuZGVyL21hdGNoLXJvdXRlLnRzXG4gKiovIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IHJlbmRlclRvU3RhdGljTWFya3VwLCByZW5kZXJUb1N0cmluZyB9IGZyb20gJ3JlYWN0LWRvbS9zZXJ2ZXInO1xuaW1wb3J0IHsgc3luY0hpc3RvcnlXaXRoU3RvcmUgfSBmcm9tICdyZWFjdC1yb3V0ZXItcmVkdXgnO1xuaW1wb3J0IHsgY3JlYXRlTWVtb3J5SGlzdG9yeSB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgZ2V0U3RvcmUgZnJvbSAnLi9nZXQtc3RvcmUnO1xuaW1wb3J0IG1hdGNoUm91dGUgZnJvbSAnLi9tYXRjaC1yb3V0ZSc7XG5pbXBvcnQgUGFnZSBmcm9tICcuL2NvbXBvbmVudHMvUGFnZSc7XG5pbXBvcnQgRG9jQ29udGFpbmVyIGZyb20gJy4uLy4uL2lzb21vcnBoaWMvY29udGFpbmVycy9Eb2NDb250YWluZXInO1xuaW1wb3J0IFNlcnZlclNpZGVBcHBSb290IGZyb20gJy4vY29tcG9uZW50cy9TZXJ2ZXJTaWRlQXBwUm9vdCc7XG5pbXBvcnQgY29uZmlndXJlU3RvcmUgZnJvbSAnLi4vLi4vaXNvbW9ycGhpYy9zdG9yZS9jb25maWd1cmVTdG9yZSc7XG5pbXBvcnQgeyBFTkFCTEVfU0VSVkVSX1JPVVRJTkcgfSBmcm9tICcuLi8uLi9pc29tb3JwaGljL2NvbnN0YW50cy9jb21tb24nO1xuZnVuY3Rpb24gcmVuZGVySHRtbChjb25maWcpIHtcbiAgICBpZiAoIWNvbmZpZykge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHJlbmRlclRvU3RhdGljTWFya3VwKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFnZSwgbnVsbCkpKTtcbiAgICB9XG4gICAgY29uc3QgeyByZXFVcmwsIHJvdXRlcywgaXNQcm9kLCBmZXRjaERhdGEsIGlzSG90LCB1c2VyU2Vzc2lvbiB9ID0gY29uZmlnO1xuICAgIGNvbnN0IG1lbW9yeUhpc3RvcnkgPSBjcmVhdGVNZW1vcnlIaXN0b3J5KHJlcVVybCk7XG4gICAgY29uc3Qgc3RvcmUgPSBjb25maWd1cmVTdG9yZSgpO1xuICAgIGNvbnN0IGhpc3RvcnkgPSBzeW5jSGlzdG9yeVdpdGhTdG9yZShtZW1vcnlIaXN0b3J5LCBzdG9yZSk7XG4gICAgcmV0dXJuIG1hdGNoUm91dGUocm91dGVzLCByZXFVcmwsIGhpc3RvcnkpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgY29uc3QgeyByZW5kZXJQcm9wcywgcmVkaXJlY3RMb2NhdGlvbiwgc3RhdHVzQ29kZSB9ID0gcmVzdWx0O1xuICAgICAgICBpZiAocmVkaXJlY3RMb2NhdGlvbikge1xuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZSh7IHJlZGlyZWN0TG9jYXRpb24gfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGdldFN0b3JlKHJlbmRlclByb3BzLCBmZXRjaERhdGEsIHVzZXJTZXNzaW9uLCBzdG9yZSkudGhlbihzdG9yZVdpdGhGZXRjaGVkRGF0YSA9PiB7XG4gICAgICAgICAgICBjb25zdCBnZW5QYWdlQ29tcCA9IChib2R5Q2xhc3MsIHRpdGxlLCBhcHBNYXJrdXApID0+IChSZWFjdC5jcmVhdGVFbGVtZW50KFBhZ2UsIHsgdGl0bGU6IHRpdGxlLCBzdG9yZTogc3RvcmVXaXRoRmV0Y2hlZERhdGEsIGlzUHJvZDogaXNQcm9kLCBib2R5Q2xhc3M6IGJvZHlDbGFzcywgYXBwTWFya3VwOiBhcHBNYXJrdXAsIHNjcmlwdERhdGE6IHtcbiAgICAgICAgICAgICAgICAgICAgW0VOQUJMRV9TRVJWRVJfUk9VVElOR106IHRydWVcbiAgICAgICAgICAgICAgICB9IH0pKTtcbiAgICAgICAgICAgIGNvbnN0IGFwcFJvb3QgPSAoUmVhY3QuY3JlYXRlRWxlbWVudChTZXJ2ZXJTaWRlQXBwUm9vdCwgeyByZW5kZXJQYWdlQ29udGVudDogZmV0Y2hEYXRhLCByZW5kZXJQcm9wczogcmVzdWx0LnJlbmRlclByb3BzLCBzdG9yZTogc3RvcmVXaXRoRmV0Y2hlZERhdGEgfSkpO1xuICAgICAgICAgICAgLy8gcmV3aW5kIOW/hemhu+WcqCByZW5kZXIg5LmL5ZCO6LCD55So77yM5omA5Lul5Y+q6IO96LCD55So5Lik5qyhIHJlbmRlclxuICAgICAgICAgICAgLy8g5rKh5pyJ5pu05aW955qE5pa55rOV5LmL5YmN5YWI6L+Z5qC3XG4gICAgICAgICAgICByZW5kZXJUb1N0YXRpY01hcmt1cChhcHBSb290KTtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEgPSBEb2NDb250YWluZXJbJ3Jld2luZCddKCkgfHwge307XG4gICAgICAgICAgICBsZXQgYXBwUm9vdE1hcmt1cDtcbiAgICAgICAgICAgIGlmIChmZXRjaERhdGEpIHtcbiAgICAgICAgICAgICAgICBhcHBSb290TWFya3VwID0gcmVuZGVyVG9TdHJpbmcoYXBwUm9vdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICBhcHBSb290TWFya3VwID0gcmVuZGVyVG9TdGF0aWNNYXJrdXAoYXBwUm9vdCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjb25zdCBodG1sID0gcmVuZGVyVG9TdGF0aWNNYXJrdXAoZ2VuUGFnZUNvbXAoZGF0YS5ib2R5Q2xhc3MsIGRhdGEudGl0bGUsIGFwcFJvb3RNYXJrdXApKTtcbiAgICAgICAgICAgIHJldHVybiB7IGh0bWwsIHN0YXR1c0NvZGUgfTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCByZW5kZXJIdG1sO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JlbmRlci9yZW5kZXItaHRtbC50c3hcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZWFjdC1kb20vc2VydmVyXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWFjdC1kb20vc2VydmVyXCJcbiAqKiBtb2R1bGUgaWQgPSAzNzRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXJvdXRlci1yZWR1eFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVhY3Qtcm91dGVyLXJlZHV4XCJcbiAqKiBtb2R1bGUgaWQgPSAzNzVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgSHRtbCBmcm9tICcuL0h0bWwnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBwcmludCBmcm9tICcuLi8uLi91dGlscy9wcmludCc7XG5pbXBvcnQgZnMgZnJvbSAnZnMnO1xuY29uc3QgREVGQVVMVF9USVRMRSA9ICdSZWFkcic7XG5jb25zdCBTQ1JJUFRfQ09OVEVOVF9JRCA9ICdzY3JpcHQtZGF0YSc7XG5jb25zdCBBU1NFVF9QQVRIID0gJy9idWlsdCc7XG5jb25zdCBBU1NFVF9QQVRIX1BST0QgPSAnL2J1aWx0X3Byb2QnO1xuY29uc3QgU0NSSVBUU19QUk9EID0gWydyZWFjdF9raXQuanMnLCAndXRpbHMuanMnLCAnYXBwLmpzJ107XG5jb25zdCBTQ1JJUFRTX0RFViA9IFsncmVhY3Rfa2l0LmRsbC5qcycsICd1dGlscy5kbGwuanMnLCAnYXBwLmpzJ107XG5jb25zdCBHTE9CQUxfU1RZTEVTID0gWydiYXNlLmdsb2JhbC5jc3MnLCAndmVuZG9yLmdsb2JhbC5jc3MnLCAnbW9kaWZpZXJzLmdsb2JhbC5jc3MnXTtcbmNvbnN0IExPQ0FMX1NUWUxFUyA9IFsnYXBwLmNzcyddO1xuY29uc3QgQ1NTX01BTklGRVNUX1BBVEggPSBgJHtwcm9jZXNzLmN3ZCgpfS9wdWJsaWMvYnVpbHRfcHJvZC9jc3MubWFuaWZlc3QuanNvbmA7XG5jb25zdCBDSFVOS1NfTUFOSUZFU1RfUEFUSCA9IGAke3Byb2Nlc3MuY3dkKCl9L3B1YmxpYy9idWlsdF9wcm9kL2NodW5rcy5tYW5pZmVzdC5qc29uYDtcbmNvbnN0IGdldE1hbmlmZXN0ID0gKCkgPT4ge1xuICAgIGxldCBjaHVua01hbmlmZXN0ID0ge307XG4gICAgbGV0IGNzc01hbmlmZXN0ID0ge307XG4gICAgdHJ5IHtcbiAgICAgICAgY3NzTWFuaWZlc3QgPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhDU1NfTUFOSUZFU1RfUEFUSCwgJ3V0ZjgnKSk7XG4gICAgICAgIGNodW5rTWFuaWZlc3QgPSBKU09OLnBhcnNlKGZzLnJlYWRGaWxlU3luYyhDSFVOS1NfTUFOSUZFU1RfUEFUSCwgJ3V0ZjgnKSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBwcmludC5lcnJvcihlcnJvci5tZXNzYWdlKTtcbiAgICB9XG4gICAgcmV0dXJuIF8uYXNzaWduKHt9LCBjaHVua01hbmlmZXN0LCBjc3NNYW5pZmVzdCk7XG59O1xuY29uc3QgZ2V0SGFzaGVkRmlsZW5hbWUgPSBtYW5pZmVzdCA9PiB7XG4gICAgcmV0dXJuIGZpbGVuYW1lID0+IHtcbiAgICAgICAgaWYgKG1hbmlmZXN0W2ZpbGVuYW1lXSkge1xuICAgICAgICAgICAgcmV0dXJuIG1hbmlmZXN0W2ZpbGVuYW1lXTtcbiAgICAgICAgfVxuICAgICAgICBwcmludC5lcnJvcihgRmlsZSAoJHtmaWxlbmFtZX0pIG5vdCBpbmNsdWRlZCBpbiBtYW5pZmVzdCwgd2lsbCB1c2Ugb3JpZ2luYWwgZmlsZW5hbWUgaW5zdGVhZCFgKTtcbiAgICAgICAgcmV0dXJuIGZpbGVuYW1lO1xuICAgIH07XG59O1xuZnVuY3Rpb24gUGFnZShwcm9wcykge1xuICAgIGNvbnN0IHsgdGl0bGUsIHN0b3JlLCBpbmNsdWRlTG9jYWxTdHlsZXNoZWV0cywgYm9keUNsYXNzLCBhcHBNYXJrdXAsIHNjcmlwdERhdGEsIGlzUHJvZCwgbm9TY3JpcHQgfSA9IHByb3BzO1xuICAgIGxldCBtYW5pZmVzdDtcbiAgICBpZiAoaXNQcm9kKSB7XG4gICAgICAgIG1hbmlmZXN0ID0gZ2V0TWFuaWZlc3QoKTtcbiAgICB9XG4gICAgbGV0IHNjcmlwdHMgPSBpc1Byb2RcbiAgICAgICAgPyBTQ1JJUFRTX1BST0QubWFwKGdldEhhc2hlZEZpbGVuYW1lKG1hbmlmZXN0KSlcbiAgICAgICAgOiBTQ1JJUFRTX0RFVjtcbiAgICBjb25zdCBzdHlsZXMgPSBpc1Byb2RcbiAgICAgICAgPyBHTE9CQUxfU1RZTEVTLmNvbmNhdChMT0NBTF9TVFlMRVMpLm1hcChnZXRIYXNoZWRGaWxlbmFtZShtYW5pZmVzdCkpXG4gICAgICAgIDogKGluY2x1ZGVMb2NhbFN0eWxlc2hlZXRzXG4gICAgICAgICAgICA/IEdMT0JBTF9TVFlMRVMuY29uY2F0KExPQ0FMX1NUWUxFUylcbiAgICAgICAgICAgIDogR0xPQkFMX1NUWUxFUyk7XG4gICAgbGV0IHNjcmlwdENvbnRlbnQgPSBfLm1hcChzY3JpcHREYXRhLCAodmFsLCBrZXkpID0+IHtcbiAgICAgICAgcmV0dXJuIGB2YXIgJHtrZXl9ID0gJHt2YWx9O2A7XG4gICAgfSkuam9pbignJyk7XG4gICAgaWYgKG5vU2NyaXB0KSB7XG4gICAgICAgIHNjcmlwdHMgPSBbXTtcbiAgICAgICAgc2NyaXB0Q29udGVudCA9ICcnO1xuICAgIH1cbiAgICBjb25zdCBhc3NldFBhdGggPSBpc1Byb2QgPyBBU1NFVF9QQVRIX1BST0QgOiBBU1NFVF9QQVRIO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChIdG1sLCB7IHRpdGxlOiB0aXRsZSwgc3R5bGVzOiBzdHlsZXMsIHNjcmlwdHM6IHNjcmlwdHMsIGluaXRpYWxTdGF0ZTogc3RvcmUgJiYgc3RvcmUuZ2V0U3RhdGUoKSwgYm9keUNsYXNzOiBib2R5Q2xhc3MgfHwgbnVsbCwgYXBwTWFya3VwOiBhcHBNYXJrdXAsIHNjcmlwdENvbnRlbnRJZDogU0NSSVBUX0NPTlRFTlRfSUQsIHNjcmlwdENvbnRlbnQ6IHNjcmlwdENvbnRlbnQsIGFzc2V0UGF0aDogYXNzZXRQYXRoIH0pKTtcbn1cblBhZ2VbJ2RlZmF1bHRQcm9wcyddID0ge1xuICAgIHRpdGxlOiBERUZBVUxUX1RJVExFLFxuICAgIGluY2x1ZGVMb2NhbFN0eWxlc2hlZXRzOiB0cnVlXG59O1xuZXhwb3J0IGRlZmF1bHQgUGFnZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9yZW5kZXIvY29tcG9uZW50cy9QYWdlLnRzeFxuICoqLyIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IElOSVRJQUxfU1RBVEUgfSBmcm9tICcuLi8uLi8uLi9pc29tb3JwaGljL2NvbnN0YW50cy9jb21tb24nO1xuZnVuY3Rpb24gU3R5bGVMaW5rKHByb3BzKSB7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7IHJlbDogXCJzdHlsZXNoZWV0XCIsIGhyZWY6IGAke3Byb3BzLmFzc2V0UGF0aCB8fCAnJ30vJHtwcm9wcy5maWxlbmFtZX1gIH0pKTtcbn1cbmZ1bmN0aW9uIFNjcmlwdChwcm9wcykge1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7IHNyYzogYCR7cHJvcHMuYXNzZXRQYXRoIHx8ICcnfS8ke3Byb3BzLmZpbGVuYW1lfWAgfSkpO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gSHRtbChwcm9wcykge1xuICAgIGNvbnN0IHsgdGl0bGUsIHN0eWxlcywgc2NyaXB0cywgaW5pdGlhbFN0YXRlLCBib2R5Q2xhc3MsIGFwcE1hcmt1cCwgdXNlRmF2aWNvbiwgc2NyaXB0Q29udGVudCwgc2NyaXB0Q29udGVudElkLCBhc3NldFBhdGggfSA9IHByb3BzO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImh0bWxcIiwgbnVsbCxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImhlYWRcIiwgbnVsbCxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJtZXRhXCIsIHsgaHR0cEVxdWl2OiBcIlgtVUEtQ29tcGF0aWJsZVwiLCBjb250ZW50OiBcIklFPWVkZ2UsY2hyb21lPTFcIiB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJtZXRhXCIsIHsgbmFtZTogXCJ2aWV3cG9ydFwiLCBjb250ZW50OiBcIndpZHRoPWRldmljZS13aWR0aCwgaW5pdGlhbC1zY2FsZT0xLCB1c2VyLXNjYWxhYmxlPW5vXCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibWV0YVwiLCB7IG5hbWU6IFwiZGVzY3JpcHRpb25cIiwgY29udGVudDogXCJUaGUgbmV4dCBnZW5lcmF0aW9uIG9ubGluZSByZWFkaW5nIGFwcC5cIiB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHsgcmVsOiBcInNob3J0Y3V0IGljb25cIiwgdHlwZTogXCJpbWFnZS9wbmdcIiwgaHJlZjogXCIvc3RhdGljL2FwcGxlLXRvdWNoLWljb24tNjB4NjAtMS5wbmdcIiB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHsgcmVsOiBcImFwcGxlLXRvdWNoLWljb25cIiwgc2l6ZXM6IFwiNjB4NjBcIiwgaHJlZjogXCIvc3RhdGljL2FwcGxlLXRvdWNoLWljb24tNjB4NjAtMS5wbmdcIiB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHsgcmVsOiBcImFwcGxlLXRvdWNoLWljb25cIiwgc2l6ZXM6IFwiMTIweDEyMFwiLCBocmVmOiBcIi9zdGF0aWMvYXBwbGUtdG91Y2gtaWNvbi0xMjB4MTIwLnBuZ1wiIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImxpbmtcIiwgeyByZWw6IFwiYXBwbGUtdG91Y2gtaWNvblwiLCBzaXplczogXCIxODB4MTgwXCIsIGhyZWY6IFwiL3N0YXRpYy9hcHBsZS10b3VjaC1pY29uLTE4MHgxODAucG5nXCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwidGl0bGVcIiwgbnVsbCwgdGl0bGUgfHwgJycpLFxuICAgICAgICAgICAgc3R5bGVzICYmIHN0eWxlcy5tYXAoKHN0eWxlc2hlZXROYW1lLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFN0eWxlTGluaywgeyBhc3NldFBhdGg6IGFzc2V0UGF0aCwgZmlsZW5hbWU6IHN0eWxlc2hlZXROYW1lLCBrZXk6IGluZGV4IH0pO1xuICAgICAgICAgICAgfSkpLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiYm9keVwiLCBfX2Fzc2lnbih7fSwgYm9keUNsYXNzICYmIHsgY2xhc3NOYW1lOiBib2R5Q2xhc3MgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgaWQ6IFwicm9vdFwiLCBkYW5nZXJvdXNseVNldElubmVySFRNTDogeyBfX2h0bWw6IGFwcE1hcmt1cCB8fCAnJyB9IH0pLFxuICAgICAgICAgICAgc2NyaXB0Q29udGVudCAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7IGlkOiBzY3JpcHRDb250ZW50SWQsIGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogc2NyaXB0Q29udGVudCB9IH0pKSxcbiAgICAgICAgICAgIGluaXRpYWxTdGF0ZSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNjcmlwdFwiLCB7IGRhbmdlcm91c2x5U2V0SW5uZXJIVE1MOiB7IF9faHRtbDogYHZhciAke0lOSVRJQUxfU1RBVEV9ID0gJHtKU09OLnN0cmluZ2lmeShpbml0aWFsU3RhdGUpfWAgfSB9KSksXG4gICAgICAgICAgICBzY3JpcHRzICYmIHNjcmlwdHMubWFwKChzY3JpcHROYW1lLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jcmVhdGVFbGVtZW50KFNjcmlwdCwgeyBhc3NldFBhdGg6IGFzc2V0UGF0aCwgZmlsZW5hbWU6IHNjcmlwdE5hbWUsIGtleTogaW5kZXggfSk7XG4gICAgICAgICAgICB9KSkpKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9yZW5kZXIvY29tcG9uZW50cy9IdG1sLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImZzXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJmc1wiXG4gKiogbW9kdWxlIGlkID0gMzc4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgfVxuICAgIHJldHVybiB0O1xufTtcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBQcm92aWRlciB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IFJvdXRlckNvbnRleHQgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmZ1bmN0aW9uIFNlcnZlclNpZGVBcHBSb290KHByb3BzKSB7XG4gICAgY29uc3QgeyBzdG9yZSwgcmVuZGVyUHJvcHMsIHJlbmRlclBhZ2VDb250ZW50IH0gPSBwcm9wcztcbiAgICByZXR1cm4gKCFfLmlzRW1wdHkocmVuZGVyUHJvcHMpICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFByb3ZpZGVyLCB7IHN0b3JlOiBzdG9yZSB9LCByZW5kZXJQYWdlQ29udGVudFxuICAgICAgICA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlckNvbnRleHQsIF9fYXNzaWduKHt9LCByZW5kZXJQcm9wcykpKVxuICAgICAgICA6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwidGV4dC1sb2FkaW5nXCIgfSwgXCJcXHU1MkEwXFx1OEY3RFxcdTRFMkQgLi4uXCIpKSkpO1xufVxuZXhwb3J0IGRlZmF1bHQgU2VydmVyU2lkZUFwcFJvb3Q7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcmVuZGVyL2NvbXBvbmVudHMvU2VydmVyU2lkZUFwcFJvb3QudHN4XG4gKiovIiwiaW1wb3J0IHsgY3JlYXRlU3RvcmUsIGFwcGx5TWlkZGxld2FyZSB9IGZyb20gJ3JlZHV4JztcbmltcG9ydCB0aHVuayBmcm9tICdyZWR1eC10aHVuayc7XG5pbXBvcnQgcm9vdFJlZHVjZXIgZnJvbSAnLi9yZWR1Y2Vycyc7XG5pbXBvcnQgYXBpIGZyb20gJy4vbWlkZGxld2FyZS9hcGknO1xuaW1wb3J0IG1vZGlmeVJlc3BvbnNlIGZyb20gJy4vbWlkZGxld2FyZS9tb2RpZnlSZXNwb25zZSc7XG5pbXBvcnQgaGFuZGxlU2VydmVyU3RvcmUgZnJvbSAnLi9taWRkbGV3YXJlL2hhbmRsZVNlcnZlclN0b3JlJztcbmltcG9ydCBoYW5kbGVJbml0aWFsU3RhdGUgZnJvbSAnLi9oYW5kbGVJbml0aWFsU3RhdGUnO1xuaW1wb3J0IGxvZ0FjdGlvblR5cGVzIGZyb20gJy4vbWlkZGxld2FyZS9sb2dBY3Rpb25UeXBlcyc7XG5pbXBvcnQgY3JlYXRlTG9nZ2VyIGZyb20gJ3JlZHV4LWxvZ2dlcic7XG5pbXBvcnQgbWlkZGxld2FyZSBmcm9tICcuL21pZGRsZXdhcmUnO1xuaW1wb3J0IGNyZWF0ZVNhZ2FNaWRkbGV3YXJlLCB7IEVORCB9IGZyb20gJ3JlZHV4LXNhZ2EnO1xuaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi4vaGVscGVycyc7XG5jb25zdCBzYWdhTWlkZGxld2FyZSA9IGNyZWF0ZVNhZ2FNaWRkbGV3YXJlKCk7XG5jb25zdCBTRVJWRVJfTUlERExFV0FSRVNfREVWID0gW2hhbmRsZVNlcnZlclN0b3JlLCBzYWdhTWlkZGxld2FyZSwgYXBpLCBtaWRkbGV3YXJlLmNhY2hlLCBtb2RpZnlSZXNwb25zZSwgdGh1bmssIGxvZ0FjdGlvblR5cGVzXTtcbmNvbnN0IFNFUlZFUl9NSURETEVXQVJFU19QUk9EID0gW2hhbmRsZVNlcnZlclN0b3JlLCBzYWdhTWlkZGxld2FyZSwgYXBpLCBtaWRkbGV3YXJlLmNhY2hlLCBtb2RpZnlSZXNwb25zZSwgdGh1bmtdO1xuY29uc3QgTUlERExFV0FSRVNfREVWID0gW3NhZ2FNaWRkbGV3YXJlLCBhcGksIG1pZGRsZXdhcmUuY2FjaGUsIG1vZGlmeVJlc3BvbnNlLCB0aHVuaywgY3JlYXRlTG9nZ2VyKHsgY29sbGFwc2VkOiB0cnVlIH0pXTtcbmNvbnN0IE1JRERMRVdBUkVTX1BST0QgPSBbc2FnYU1pZGRsZXdhcmUsIGFwaSwgbWlkZGxld2FyZS5jYWNoZSwgbW9kaWZ5UmVzcG9uc2UsIHRodW5rXTtcbmNvbnN0IGhhbmRsZVN0b3JlID0gKG1pZGRsZXdhcmVzKSA9PiB7XG4gICAgcmV0dXJuIGNyZWF0ZVN0b3JlKHJvb3RSZWR1Y2VyLCBoYW5kbGVJbml0aWFsU3RhdGUoKSwgYXBwbHlNaWRkbGV3YXJlLmFwcGx5KG51bGwsIG1pZGRsZXdhcmVzKSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29uZmlndXJlU3RvcmUoKSB7XG4gICAgbGV0IHN0b3JlID0ge307XG4gICAgaWYgKGhlbHBlcnMuaXNTZXJ2ZXJFbnYoKSkge1xuICAgICAgICAvLyBzZXJ2ZXIgc2lkZVxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgc3RvcmUgPSBoYW5kbGVTdG9yZShTRVJWRVJfTUlERExFV0FSRVNfUFJPRCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdG9yZSA9IGhhbmRsZVN0b3JlKFNFUlZFUl9NSURETEVXQVJFU19ERVYpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICAvLyBjbGllbnQgc2lkZVxuICAgICAgICBpZiAocHJvY2Vzcy5lbnYuTk9ERV9FTlYgPT09ICdwcm9kdWN0aW9uJykge1xuICAgICAgICAgICAgc3RvcmUgPSBoYW5kbGVTdG9yZShNSURETEVXQVJFU19QUk9EKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHN0b3JlID0gaGFuZGxlU3RvcmUoTUlERExFV0FSRVNfREVWKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAobW9kdWxlLmhvdCkge1xuICAgICAgICBtb2R1bGUuaG90LmFjY2VwdCgnLi9yZWR1Y2VycycsICgpID0+IHtcbiAgICAgICAgICAgIGNvbnNvbGUuaW5mbygnaG90IHVwZGF0aW5nIHJlZHVjZXJzJyk7XG4gICAgICAgICAgICBjb25zdCBuZXh0Um9vdFJlZHVjZXIgPSByZXF1aXJlKCcuL3JlZHVjZXJzJykuZGVmYXVsdDtcbiAgICAgICAgICAgIHN0b3JlLnJlcGxhY2VSZWR1Y2VyKG5leHRSb290UmVkdWNlcik7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBzdG9yZVsncnVuU2FnYSddID0gc2FnYU1pZGRsZXdhcmUucnVuO1xuICAgIHN0b3JlWydjbG9zZSddID0gKCkgPT4gc3RvcmUuZGlzcGF0Y2goRU5EKTtcbiAgICByZXR1cm4gc3RvcmU7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL2NvbmZpZ3VyZVN0b3JlLnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVkdXgtdGh1bmtcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlZHV4LXRodW5rXCJcbiAqKiBtb2R1bGUgaWQgPSAzODFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBjb21iaW5lUmVkdWNlcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgeyByb3V0ZXJSZWR1Y2VyIGFzIHJvdXRpbmcgfSBmcm9tICdyZWFjdC1yb3V0ZXItcmVkdXgnO1xuaW1wb3J0IGNvbXBvbmVudHMgZnJvbSAnLi9jb21wb25lbnRzJztcbmltcG9ydCBwYWdpbmF0aW9uIGZyb20gJy4vcGFnaW5hdGlvbic7XG5pbXBvcnQgeyByZWR1Y2VyIGFzIGZvcm0gfSBmcm9tICdiZXR0ZXItcmVkdXgtZm9ybSc7XG5pbXBvcnQgKiBhcyBBY3Rpb25UeXBlcyBmcm9tICcuLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuZnVuY3Rpb24gZXJyb3JNZXNzYWdlKHN0YXRlID0gW10sIGFjdGlvbikge1xuICAgIGNvbnN0IHsgZXJyb3IgfSA9IGFjdGlvbjtcbiAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgcmV0dXJuIFsuLi5zdGF0ZSwgYWN0aW9uLmVycm9yLm1lc3NhZ2UgfHwgJ+WPkeeUn+acquefpemUmeivr++8gSddO1xuICAgIH1cbiAgICByZXR1cm4gc3RhdGU7XG59XG5leHBvcnQgZnVuY3Rpb24gZW50aXRpZXMoc3RhdGUgPSB7fSwgYWN0aW9uKSB7XG4gICAgaWYgKGFjdGlvbi5yZXNwb25zZSAmJiBhY3Rpb24ucmVzcG9uc2UuZW50aXRpZXMpIHtcbiAgICAgICAgcmV0dXJuIF8ubWVyZ2Uoe30sIHN0YXRlLCBhY3Rpb24ucmVzcG9uc2UuZW50aXRpZXMpO1xuICAgIH1cbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFjdGlvblR5cGVzLlJFTU9WRV9FTlRJVFkpIHtcbiAgICAgICAgY29uc3QgeyBuYW1lLCBpZCB9ID0gYWN0aW9uO1xuICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICBbbmFtZV06IF8ub21pdChzdGF0ZVtuYW1lXSwgW2lkXSlcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZTtcbn1cbmNvbnN0IERFRkFVTFRfVklTVE9SX1NUQVRFID0geyB1c2VyOiB7IHJvbGU6ICd2aXNpdG9yJyB9LCBpc0ZldGNoaW5nOiBmYWxzZSwgZGV0ZXJtaW5lZDogZmFsc2UgfTtcbmV4cG9ydCBmdW5jdGlvbiBzZXNzaW9uKHN0YXRlID0gREVGQVVMVF9WSVNUT1JfU1RBVEUsIGFjdGlvbikge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBBY3Rpb25UeXBlcy5BVVRILlJFUVVFU1Q6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBpc0ZldGNoaW5nOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBBY3Rpb25UeXBlcy5BVVRILlNVQ0NFU1M6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBpc0ZldGNoaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICBkZXRlcm1pbmVkOiB0cnVlLFxuICAgICAgICAgICAgICAgIHVzZXI6IGFjdGlvbi5yZXNwb25zZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgQWN0aW9uVHlwZXMuQVVUSC5GQUlMVVJFOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgaXNGZXRjaGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGV0ZXJtaW5lZDogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgQWN0aW9uVHlwZXMuTE9HT1VULlNVQ0NFU1M6XG4gICAgICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgREVGQVVMVF9WSVNUT1JfU1RBVEUsIHtcbiAgICAgICAgICAgICAgICBkZXRlcm1pbmVkOiB0cnVlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59XG5jb25zdCByb290UmVkdWNlciA9IGNvbWJpbmVSZWR1Y2Vycyh7XG4gICAgY29tcG9uZW50cyxcbiAgICBlbnRpdGllcyxcbiAgICBlcnJvck1lc3NhZ2UsXG4gICAgc2Vzc2lvbixcbiAgICByb3V0aW5nLFxuICAgIGZvcm0sXG4gICAgcGFnaW5hdGlvblxufSk7XG5leHBvcnQgZGVmYXVsdCByb290UmVkdWNlcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvcmVkdWNlcnMvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgeyBjb21iaW5lUmVkdWNlcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgKiBhcyBBQ1RJT05fVFlQRVMgZnJvbSAnLi4vLi4vLi4vY29uc3RhbnRzL2FjdGlvblR5cGVzJztcbmltcG9ydCB2aWV3ZXIgZnJvbSAnLi92aWV3ZXInO1xuZnVuY3Rpb24gbm90aWZpY2F0aW9ucyhzdGF0ZSA9IFtdLCBhY3Rpb24pIHtcbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5OT1RJRklDQVRJT04uSElERSkge1xuICAgICAgICByZXR1cm4gc3RhdGUubWFwKG4gPT4gbi5pZCA9PT0gYWN0aW9uLmlkID8gT2JqZWN0LmFzc2lnbih7fSwgbiwgeyB2aXNpYmxlOiBmYWxzZSB9KSA6IG4pO1xuICAgIH1cbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5OT1RJRklDQVRJT04uU0hPVykge1xuICAgICAgICByZXR1cm4gWy4uLnN0YXRlLCB7XG4gICAgICAgICAgICAgICAgdmlzaWJsZTogdHJ1ZSxcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiBhY3Rpb24ubWVzc2FnZSxcbiAgICAgICAgICAgICAgICB0eXBlOiBhY3Rpb24ubXNnVHlwZSxcbiAgICAgICAgICAgICAgICBpZDogYWN0aW9uLmlkXG4gICAgICAgICAgICB9XTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXRlO1xufVxuZnVuY3Rpb24gY29uZmlybU1vZGFsKHN0YXRlID0ge30sIGFjdGlvbikge1xuICAgIGlmIChhY3Rpb24udHlwZSA9PT0gQUNUSU9OX1RZUEVTLk9QRU5fQ09ORklSTV9NT0RBTCkge1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHsgb3BlbjogdHJ1ZSB9LCBhY3Rpb24uZGF0YSk7XG4gICAgfVxuICAgIGlmIChhY3Rpb24udHlwZSA9PT0gQUNUSU9OX1RZUEVTLkNMT1NFX0NPTkZJUk1fTU9EQUwpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9wZW46IGZhbHNlXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZTtcbn1cbmZ1bmN0aW9uIG1vZGFsKHN0YXRlID0ge30sIGFjdGlvbikge1xuICAgIGlmIChhY3Rpb24udHlwZSA9PT0gQUNUSU9OX1RZUEVTLk1PREFMLk9QRU4pIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7IG9wZW46IHRydWUgfSwgYWN0aW9uLmRhdGEpO1xuICAgIH1cbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5NT0RBTC5DTE9TRSkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgb3BlbjogZmFsc2VcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXRlO1xufVxuY29uc3QgY29tcG9uZW50cyA9IGNvbWJpbmVSZWR1Y2Vycyh7XG4gICAgbm90aWZpY2F0aW9ucyxcbiAgICBjb25maXJtTW9kYWwsXG4gICAgbW9kYWwsXG4gICAgdmlld2VyXG59KTtcbmV4cG9ydCBkZWZhdWx0IGNvbXBvbmVudHM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL2NvbXBvbmVudHMvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgeyBjb21iaW5lUmVkdWNlcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0ICogYXMgQUNUSU9OX1RZUEVTIGZyb20gJy4uLy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5pbXBvcnQgKiBhcyBDT05TVEFOVFMgZnJvbSAnLi4vLi4vLi4vY29uc3RhbnRzJztcbmNvbnN0IGdldEZsYWcgPSAocmVzZXQsIGN1cnJlbnRGbGFnKSA9PiB7XG4gICAgaWYgKHR5cGVvZiByZXNldCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuICFjdXJyZW50RmxhZztcbiAgICB9XG4gICAgcmV0dXJuIHJlc2V0O1xufTtcbmZ1bmN0aW9uIGNvbnRlbnRzKHN0YXRlID0ge30sIGFjdGlvbikge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBBQ1RJT05fVFlQRVMuVklFV0VSLkNBTENfU1VDQ0VTUzpcbiAgICAgICAgICAgIHJldHVybiBfLm1lcmdlKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIFthY3Rpb24uYm9va0lkXToge1xuICAgICAgICAgICAgICAgICAgICBjb21wdXRlZDogYWN0aW9uLmNvbXB1dGVkXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufVxuZnVuY3Rpb24gY29uZmlnKHN0YXRlID0geyB0aGVtZTogQ09OU1RBTlRTLlZJRVdFUl9ERUZTLlRIRU1FUy5XSElURSwgaXNTY3JvbGxNb2RlOiB0cnVlIH0sIGFjdGlvbikge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBBQ1RJT05fVFlQRVMuVklFV0VSLlNDUk9MTF9NT0RFX1RPR0dMRTpcbiAgICAgICAgICAgIGNvbnN0IHsgcmVzZXQgfSA9IGFjdGlvbjtcbiAgICAgICAgICAgIHJldHVybiBfLm1lcmdlKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIGlzU2Nyb2xsTW9kZTogZ2V0RmxhZyhyZXNldCwgc3RhdGUuaXNTY3JvbGxNb2RlKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5USEVNRV9DSEFOR0U6XG4gICAgICAgICAgICByZXR1cm4gXy5tZXJnZSh7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICB0aGVtZTogYWN0aW9uLnRoZW1lXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgY2FzZSBBQ1RJT05fVFlQRVMuVklFV0VSLkZPTlRfQ0hBTkdFOlxuICAgICAgICAgICAgcmV0dXJuIF8ubWVyZ2Uoe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgZm9udFNpemU6IGFjdGlvbi5mb250U2l6ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5DT05GSUc6XG4gICAgICAgICAgICByZXR1cm4gXy5tZXJnZSh7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBib29rSWQ6IGFjdGlvbi5ib29rSWRcbiAgICAgICAgICAgIH0sIGFjdGlvbi5wYXlsb2FkKTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59XG5mdW5jdGlvbiBwcm9ncmVzcyhzdGF0ZSA9IHt9LCBhY3Rpb24pIHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX1VQREFURTpcbiAgICAgICAgICAgIHJldHVybiBfLm1lcmdlKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIFthY3Rpb24uaWRdOiB7XG4gICAgICAgICAgICAgICAgICAgIGlzRmV0Y2hpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgICAgICBwZXJjZW50YWdlOiBhY3Rpb24ucGVyY2VudGFnZSxcbiAgICAgICAgICAgICAgICAgICAgcGFnZU5vOiBhY3Rpb24ucGFnZU5vXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX0RFU1RST1k6XG4gICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgW2FjdGlvbi5pZF06IHtcbiAgICAgICAgICAgICAgICAgICAgaXNGZXRjaGluZzogZmFsc2VcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59XG5jb25zdCBwYW5lbCA9IChzdGF0ZSA9IHsgc2hvdzogZmFsc2UgfSwgYWN0aW9uKSA9PiB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5WSUVXRVIuUEFORUxfVE9HR0xFOlxuICAgICAgICAgICAgY29uc3QgeyByZXNldCB9ID0gYWN0aW9uO1xuICAgICAgICAgICAgY29uc3QgYSA9IGdldEZsYWcocmVzZXQsIHN0YXRlLnNob3cpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzaG93OiBhXG4gICAgICAgICAgICB9O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn07XG5jb25zdCBwcmVmZXJlbmNlID0gKHN0YXRlID0geyBzaG93OiBmYWxzZSB9LCBhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5QUkVGRVJFTkNFX1RPR0dMRTpcbiAgICAgICAgICAgIGNvbnN0IHsgcmVzZXQgfSA9IGFjdGlvbjtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc2hvdzogZ2V0RmxhZyhyZXNldCwgc3RhdGUuc2hvdylcbiAgICAgICAgICAgIH07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufTtcbmNvbnN0IG5hdmlnYXRpb24gPSAoc3RhdGUgPSB7IHNob3c6IGZhbHNlIH0sIGFjdGlvbikgPT4ge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBBQ1RJT05fVFlQRVMuVklFV0VSLk5BVklHQVRJT05fVE9HR0xFOlxuICAgICAgICAgICAgY29uc3QgeyByZXNldCB9ID0gYWN0aW9uO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBzaG93OiBnZXRGbGFnKHJlc2V0LCBzdGF0ZS5zaG93KVxuICAgICAgICAgICAgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59O1xuY29uc3QgY29tcG9uZW50cyA9IGNvbWJpbmVSZWR1Y2Vycyh7XG4gICAgcGFuZWwsXG4gICAgcHJlZmVyZW5jZSxcbiAgICBuYXZpZ2F0aW9uXG59KTtcbmV4cG9ydCBkZWZhdWx0IGNvbWJpbmVSZWR1Y2Vycyh7XG4gICAgY29uZmlnLFxuICAgIGNvbnRlbnRzLFxuICAgIHByb2dyZXNzLFxuICAgIGNvbXBvbmVudHNcbn0pO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9yZWR1Y2Vycy9jb21wb25lbnRzL3ZpZXdlci50c1xuICoqLyIsImltcG9ydCAqIGFzIEFDVElPTl9UWVBFUyBmcm9tICcuL2FjdGlvblR5cGVzJztcbmltcG9ydCAqIGFzIENPTU1PTiBmcm9tICcuL2NvbW1vbic7XG5pbXBvcnQgKiBhcyBWSUVXRVJfREVGUyBmcm9tICcuL3ZpZXdlckRlZnMnO1xuZXhwb3J0IHsgQUNUSU9OX1RZUEVTLCBDT01NT04sIFZJRVdFUl9ERUZTIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnN0YW50cy9pbmRleC50c1xuICoqLyIsImltcG9ydCBwYWdpbmF0ZSBmcm9tICcuL3BhZ2luYXRlJztcbmltcG9ydCB7IGNvbWJpbmVSZWR1Y2VycyB9IGZyb20gJ3JlZHV4JztcbmltcG9ydCAqIGFzIEFjdGlvblR5cGVzIGZyb20gJy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5pbXBvcnQgeyBjb21wdXRlUGFnaW5hdGlvblN0YXRlLCBERUZBVUxUX1BBR0lOQVRJT05fU1RBVEUgfSBmcm9tICcuL3BhZ2luYXRlJztcbmNvbnN0IERFRkFVTFRfS0VZID0gJ2RlZmF1bHQnO1xuY29uc3QgU0VBUkNIX0tFWSA9ICdzZWFyY2gnO1xuY29uc3QgcGFyc2VUeXBlcyA9IGFjdGlvblR5cGVzID0+IHtcbiAgICByZXR1cm4gW1xuICAgICAgICBhY3Rpb25UeXBlcy5SRVFVRVNULFxuICAgICAgICBhY3Rpb25UeXBlcy5TVUNDRVNTLFxuICAgICAgICBhY3Rpb25UeXBlcy5GQUlMVVJFLFxuICAgIF07XG59O1xuY29uc3QgZ2VuZXJhbE1hcEFjdGlvblRvS2V5ID0gYWN0aW9uID0+IHtcbiAgICBjb25zdCB7IG9wdGlvbnMsIGtleSB9ID0gYWN0aW9uO1xuICAgIGNvbnN0IHsgcSB9ID0gb3B0aW9ucyB8fCB7fTtcbiAgICBpZiAoa2V5KSB7XG4gICAgICAgIHJldHVybiBrZXk7XG4gICAgfVxuICAgIGlmIChxKSB7XG4gICAgICAgIHJldHVybiBTRUFSQ0hfS0VZO1xuICAgIH1cbiAgICByZXR1cm4gREVGQVVMVF9LRVk7XG59O1xuZnVuY3Rpb24gcGFnaW5hdGlvbihzdGF0ZSA9IHt9LCBhY3Rpb24pIHtcbiAgICBjb25zdCBjb21iaW5lZFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMoe1xuICAgICAgICBib29rczogcGFnaW5hdGUoe1xuICAgICAgICAgICAgbWFwQWN0aW9uVG9LZXk6IGdlbmVyYWxNYXBBY3Rpb25Ub0tleSxcbiAgICAgICAgICAgIHR5cGVzOiBwYXJzZVR5cGVzKEFjdGlvblR5cGVzLkJPT0tTKVxuICAgICAgICB9KSxcbiAgICAgICAgdXNlcnM6IHBhZ2luYXRlKHtcbiAgICAgICAgICAgIG1hcEFjdGlvblRvS2V5OiBnZW5lcmFsTWFwQWN0aW9uVG9LZXksXG4gICAgICAgICAgICB0eXBlczogcGFyc2VUeXBlcyhBY3Rpb25UeXBlcy5VU0VSUylcbiAgICAgICAgfSksXG4gICAgICAgIGF1dGhvcnM6ICgpID0+IChzdGF0ZS5hdXRob3JzIHx8IHt9KSxcbiAgICAgICAgZG91YmFuQm9va3M6ICgpID0+IChzdGF0ZS5kb3ViYW5Cb29rcyB8fCB7fSksXG4gICAgICAgIGJvb2tTaGVsdmVzOiAoKSA9PiAoc3RhdGUuYm9va1NoZWx2ZXMgfHwge30pLFxuICAgIH0pO1xuICAgIHJldHVybiBjb21iaW5lZFJlZHVjZXIoc3RhdGUsIGFjdGlvbik7XG59XG4vLyBsZWdhY3kgcGFnaW5hdGlvbiBzdXBwb3J0XG5jb25zdCB1cGRhdGVQYWdpbmF0aW9uID0gKHN0YXRlID0gREVGQVVMVF9QQUdJTkFUSU9OX1NUQVRFLCBhY3Rpb24sIG1lcmdlKSA9PiB7XG4gICAgaWYgKCFhY3Rpb24ucmVzcG9uc2UpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICBpc0ZldGNoaW5nOiB0cnVlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmV0dXJuIGNvbXB1dGVQYWdpbmF0aW9uU3RhdGUoc3RhdGUsIGFjdGlvbik7XG4gICAgfVxufTtcbmZ1bmN0aW9uIGxlZ2FjeVBhZ2luYXRpb24oc3RhdGUgPSB7fSwgYWN0aW9uKSB7XG4gICAgaWYgKGFjdGlvbi5wYWdpbmF0aW9uKSB7XG4gICAgICAgIGNvbnN0IHsgbmFtZSwgcSwga2V5LCBtZXJnZSB9ID0gYWN0aW9uLnBhZ2luYXRpb247XG4gICAgICAgIGNvbnN0IHFLZXkgPSBxID8gU0VBUkNIX0tFWSA6IG51bGw7XG4gICAgICAgIGNvbnN0IGZpbmFsS2V5ID0gcUtleSB8fCBrZXkgfHwgREVGQVVMVF9LRVk7XG4gICAgICAgIGNvbnN0IG9yaWdpbmFsU3RhdGUgPSAoc3RhdGVbbmFtZV0gJiYgc3RhdGVbbmFtZV1bZmluYWxLZXldKSB8fCB1bmRlZmluZWQ7XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgW25hbWVdOiB7XG4gICAgICAgICAgICAgICAgW2ZpbmFsS2V5XTogdXBkYXRlUGFnaW5hdGlvbihvcmlnaW5hbFN0YXRlLCBhY3Rpb24sIG1lcmdlKVxuICAgICAgICAgICAgfVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXRlO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gY29tYmluZWQoc3RhdGUsIGFjdGlvbikge1xuICAgIHJldHVybiBwYWdpbmF0aW9uKGxlZ2FjeVBhZ2luYXRpb24oc3RhdGUsIGFjdGlvbiksIGFjdGlvbik7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL3BhZ2luYXRpb24udHNcbiAqKi8iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuZXhwb3J0IGNvbnN0IERFRkFVTFRfUEFHSU5BVElPTl9TVEFURSA9IHtcbiAgICBpc0ZldGNoaW5nOiBmYWxzZSxcbiAgICBwYWdlczoge30sXG4gICAgaWRzOiBbXSxcbiAgICBwYWdlQ291bnQ6IDAsXG59O1xuZXhwb3J0IGZ1bmN0aW9uIGNvbXB1dGVQYWdpbmF0aW9uU3RhdGUoc3RhdGUsIGFjdGlvbikge1xuICAgIGNvbnN0IGN1cnJlbnRQYWdlID0gYWN0aW9uLnJlc3BvbnNlLl9uZXh0XG4gICAgICAgID8gYWN0aW9uLnJlc3BvbnNlLl9uZXh0LnBhZ2UgLSAxXG4gICAgICAgIDogKGFjdGlvbi5yZXNwb25zZS5fbGFzdCAmJiBhY3Rpb24ucmVzcG9uc2UuX2xhc3QucGFnZSB8fCAxKTtcbiAgICBjb25zdCBwYWdlcyA9IF8uYXNzaWduKHt9LCB7XG4gICAgICAgIFtjdXJyZW50UGFnZV06IGFjdGlvbi5yZXNwb25zZS5yZXN1bHRcbiAgICB9KTtcbiAgICByZXR1cm4gXy5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgIGlzRmV0Y2hpbmc6IGZhbHNlLFxuICAgICAgICBwYWdlcyxcbiAgICAgICAgaWRzOiBfLnVuaW9uKHN0YXRlLmlkcywgYWN0aW9uLnJlc3BvbnNlLnJlc3VsdCksXG4gICAgICAgIC8vIOWmguaenOS4jeS9v+eUqCBudWxsIOWcqOWkluWxgueahCBtZXJnZSDkvJrlv73nlaUgdW5kZWZpbmVkIOS7juiAjOWvvOiHtOS4gOS6m+i+uee8mOmXrumimFxuICAgICAgICBuZXh0OiBhY3Rpb24ucmVzcG9uc2UuX25leHQgfHwgbnVsbCxcbiAgICAgICAgbGFzdDogYWN0aW9uLnJlc3BvbnNlLl9sYXN0IHx8IG51bGwsXG4gICAgICAgIHBhZ2VDb3VudDogc3RhdGUucGFnZUNvdW50ICsgMVxuICAgIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFnaW5hdGUoeyB0eXBlcywgbWFwQWN0aW9uVG9LZXkgfSkge1xuICAgIGlmICghQXJyYXkuaXNBcnJheSh0eXBlcykgfHwgdHlwZXMubGVuZ3RoICE9PSAzKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdHlwZXMgdG8gYmUgYW4gYXJyYXkgb2YgdGhyZWUgZWxlbWVudHMuJyk7XG4gICAgfVxuICAgIGlmICghdHlwZXMuZXZlcnkodCA9PiB0eXBlb2YgdCA9PT0gJ3N0cmluZycpKSB7XG4gICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQgdHlwZXMgdG8gYmUgc3RyaW5ncy4nKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBtYXBBY3Rpb25Ub0tleSAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIG1hcEFjdGlvblRvS2V5IHRvIGJlIGEgZnVuY3Rpb24uJyk7XG4gICAgfVxuICAgIGNvbnN0IFtyZXF1ZXN0VHlwZSwgc3VjY2Vzc1R5cGUsIGZhaWx1cmVUeXBlXSA9IHR5cGVzO1xuICAgIGZ1bmN0aW9uIHVwZGF0ZVBhZ2luYXRpb24oc3RhdGUgPSBERUZBVUxUX1BBR0lOQVRJT05fU1RBVEUsIGFjdGlvbikge1xuICAgICAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgICAgICBjYXNlIHJlcXVlc3RUeXBlOlxuICAgICAgICAgICAgICAgIHJldHVybiBfLmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgaXNGZXRjaGluZzogdHJ1ZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgY2FzZSBzdWNjZXNzVHlwZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gY29tcHV0ZVBhZ2luYXRpb25TdGF0ZShzdGF0ZSwgYWN0aW9uKTtcbiAgICAgICAgICAgIGNhc2UgZmFpbHVyZVR5cGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIF8uYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgICAgICBpc0ZldGNoaW5nOiBmYWxzZVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIGZ1bmN0aW9uIHVwZGF0ZVBhZ2luYXRpb25CeUtleShzdGF0ZSA9IHt9LCBhY3Rpb24pIHtcbiAgICAgICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICAgICAgY2FzZSByZXF1ZXN0VHlwZTpcbiAgICAgICAgICAgIGNhc2Ugc3VjY2Vzc1R5cGU6XG4gICAgICAgICAgICBjYXNlIGZhaWx1cmVUeXBlOlxuICAgICAgICAgICAgICAgIGNvbnN0IGtleSA9IG1hcEFjdGlvblRvS2V5KGFjdGlvbik7XG4gICAgICAgICAgICAgICAgaWYgKHR5cGVvZiBrZXkgIT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IG5ldyBFcnJvcignRXhwZWN0ZWQga2V5IHRvIGJlIGEgc3RyaW5nLicpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gXy5tZXJnZSh7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgW2tleV06IHVwZGF0ZVBhZ2luYXRpb24oc3RhdGVba2V5XSwgYWN0aW9uKVxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9yZWR1Y2Vycy9wYWdpbmF0ZS50c1xuICoqLyIsImltcG9ydCBjYWxsQXBpIGZyb20gJy4uLy4uL3NlcnZpY2VzL3V0aWxzL2NhbGxBcGknO1xuaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi4vLi4vaGVscGVycyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGhhbmRsZVJlc3BvbnNlIGZyb20gJy4uLy4uL3NlcnZpY2VzL3V0aWxzL2hhbmRsZVJlc3BvbnNlJztcbmV4cG9ydCBkZWZhdWx0IHN0b3JlID0+IG5leHQgPT4gYWN0aW9uID0+IHtcbiAgICBjb25zdCBDQUxMX0FQSSA9IGFjdGlvbi5DQUxMX0FQSTtcbiAgICBpZiAodHlwZW9mIENBTExfQVBJID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xuICAgIH1cbiAgICBsZXQgeyBlbmRwb2ludCwgYXBpVXJsLCBvcHRpb25zLCBwYWdpbmF0aW9uIH0gPSBDQUxMX0FQSTtcbiAgICBjb25zdCB7IHR5cGVzLCBzY2hlbWEgfSA9IENBTExfQVBJO1xuICAgIGNvbnN0IFtyZXF1ZXN0VHlwZSwgc3VjY2Vzc1R5cGUsIGZhaWx1cmVUeXBlXSA9IHR5cGVzO1xuICAgIGNvbnN0IGFjdGlvbldpdGggPSAoeyBkYXRhLCBoYXNQYWdpbmF0aW9uIH0pID0+IHtcbiAgICAgICAgbGV0IGZpbmFsQWN0aW9uID0gT2JqZWN0LmFzc2lnbih7fSwgYWN0aW9uLCBkYXRhKTtcbiAgICAgICAgZmluYWxBY3Rpb24gPSBfLm9taXQoZmluYWxBY3Rpb24sIFsnQ0FMTF9BUEknXSk7XG4gICAgICAgIGlmICghaGFzUGFnaW5hdGlvbikge1xuICAgICAgICAgICAgZmluYWxBY3Rpb24gPSBfLm9taXQoZmluYWxBY3Rpb24sIFsnQ0FMTF9BUEknLCAncGFnaW5hdGlvbiddKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZmluYWxBY3Rpb247XG4gICAgfTtcbiAgICBuZXh0KGFjdGlvbldpdGgoe1xuICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICB0eXBlOiByZXF1ZXN0VHlwZSxcbiAgICAgICAgICAgIHBhZ2luYXRpb25cbiAgICAgICAgfSxcbiAgICAgICAgaGFzUGFnaW5hdGlvbjogQm9vbGVhbihwYWdpbmF0aW9uKVxuICAgIH0pKTtcbiAgICBpZiAodHlwZW9mIGVuZHBvaW50ID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgIGVuZHBvaW50ID0gZW5kcG9pbnQoc3RvcmUuZ2V0U3RhdGUoKSk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgYXBpVXJsID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICBhcGlVcmwgPSBoZWxwZXJzLmdldEFwaVJvb3QoKTtcbiAgICB9XG4gICAgY29uc3QgZnVsbFVybCA9IGAke2FwaVVybH0vJHtlbmRwb2ludH1gO1xuICAgIHJldHVybiBjYWxsQXBpKGZ1bGxVcmwsIG9wdGlvbnMgfHwge30pLnRoZW4ocmVzcG9uc2UgPT4ge1xuICAgICAgICBjb25zdCBub3JtYWxpemVkUmVzID0gaGFuZGxlUmVzcG9uc2UocmVzcG9uc2UsIHNjaGVtYSk7XG4gICAgICAgIGxldCBmaW5hbEFjdGlvbiA9IHtcbiAgICAgICAgICAgIHJlc3BvbnNlOiBub3JtYWxpemVkUmVzLFxuICAgICAgICAgICAgdHlwZTogc3VjY2Vzc1R5cGUsXG4gICAgICAgICAgICBwYWdpbmF0aW9uXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiBuZXh0KGRpc3BhdGNoID0+IHtcbiAgICAgICAgICAgIGRpc3BhdGNoKGFjdGlvbldpdGgoeyBkYXRhOiBmaW5hbEFjdGlvbiwgaGFzUGFnaW5hdGlvbjogQm9vbGVhbihwYWdpbmF0aW9uKSB9KSk7XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIG9rOiB0cnVlLFxuICAgICAgICAgICAgICAgIHJlc3BvbnNlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9LCBlcnJvciA9PiBuZXh0KGRpc3BhdGNoID0+IHtcbiAgICAgICAgZGlzcGF0Y2goYWN0aW9uV2l0aCh7XG4gICAgICAgICAgICBkYXRhOiB7XG4gICAgICAgICAgICAgICAgdHlwZTogZmFpbHVyZVR5cGUsXG4gICAgICAgICAgICAgICAgcGFnaW5hdGlvbixcbiAgICAgICAgICAgICAgICBlcnJvclxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGhhc1BhZ2luYXRpb246IEJvb2xlYW4ocGFnaW5hdGlvbilcbiAgICAgICAgfSkpO1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgb2s6IGZhbHNlLFxuICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgfTtcbiAgICB9KSk7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9taWRkbGV3YXJlL2FwaS50c1xuICoqLyIsImltcG9ydCAqIGFzIEFDVElPTl9UWVBFUyBmcm9tICcuLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuZXhwb3J0IGRlZmF1bHQgc3RvcmUgPT4gbmV4dCA9PiBhY3Rpb24gPT4ge1xuICAgIGlmIChhY3Rpb24udHlwZSA9PT0gQUNUSU9OX1RZUEVTLkRPVUJBTl9CT09LUy5TVUNDRVNTKSB7XG4gICAgICAgIGFjdGlvbi5yZXNwb25zZS5yZXN1bHQgPSBhY3Rpb24ucmVzcG9uc2UucmVzdWx0LmJvb2tzO1xuICAgIH1cbiAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9tb2RpZnlSZXNwb25zZS50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IHN0b3JlID0+IG5leHQgPT4gYWN0aW9uID0+IHtcbiAgICBpZiAodHlwZW9mIGFjdGlvbi5TRVJWRVJfU1RPUkUgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBuZXh0KGFjdGlvbik7XG4gICAgfVxuICAgIGNvbnN0IGFjdGlvbkJvZHkgPSBuZXcgUHJvbWlzZShyZXNvbHZlID0+IHtcbiAgICAgICAgcmVzb2x2ZShhY3Rpb24uU0VSVkVSX1NUT1JFLmJvZHkpO1xuICAgIH0pO1xuICAgIHJldHVybiBhY3Rpb25Cb2R5LnRoZW4oYm9keSA9PiB7XG4gICAgICAgIHJldHVybiBuZXh0KGRpc3BhdGNoID0+IHtcbiAgICAgICAgICAgIGRpc3BhdGNoKGJvZHkpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBvazogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZXNwb25zZTogYWN0aW9uLmJvZHkucmVzcG9uc2VcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH0pO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9oYW5kbGVTZXJ2ZXJTdG9yZS50c1xuICoqLyIsImltcG9ydCB7IElOSVRJQUxfU1RBVEUgfSBmcm9tICcuLi9jb25zdGFudHMvY29tbW9uJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZUluaXRpYWxTdGF0ZSgpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIHt9O1xuICAgIH1cbiAgICByZXR1cm4gd2luZG93W0lOSVRJQUxfU1RBVEVdIHx8IHt9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9oYW5kbGVJbml0aWFsU3RhdGUudHNcbiAqKi8iLCJleHBvcnQgZGVmYXVsdCBzdG9yZSA9PiBuZXh0ID0+IGFjdGlvbiA9PiB7XG4gICAgY29uc29sZS5pbmZvKGFjdGlvbi50eXBlKTtcbiAgICBuZXh0KGFjdGlvbik7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9taWRkbGV3YXJlL2xvZ0FjdGlvblR5cGVzLnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVkdXgtbG9nZ2VyXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWR1eC1sb2dnZXJcIlxuICoqIG1vZHVsZSBpZCA9IDM5M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IGFwaSBmcm9tICcuL2FwaSc7XG5pbXBvcnQgbW9kaWZ5UmVzcG9uc2UgZnJvbSAnLi9tb2RpZnlSZXNwb25zZSc7XG5pbXBvcnQgaGFuZGxlU2VydmVyU3RvcmUgZnJvbSAnLi9oYW5kbGVTZXJ2ZXJTdG9yZSc7XG5pbXBvcnQgbG9nQWN0aW9uVHlwZXMgZnJvbSAnLi9sb2dBY3Rpb25UeXBlcyc7XG5pbXBvcnQgY2FjaGUgZnJvbSAnLi9jYWNoZSc7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgYXBpLFxuICAgIG1vZGlmeVJlc3BvbnNlLFxuICAgIGhhbmRsZVNlcnZlclN0b3JlLFxuICAgIGxvZ0FjdGlvblR5cGVzLFxuICAgIGNhY2hlXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9taWRkbGV3YXJlL2luZGV4LnRzXG4gKiovIiwiY29uc3QgU1VDQ0VTUyA9ICdTVUNDRVNTJztcbmNvbnN0IGlzU3VjY2Vzc0FjdGlvbiA9IGFjdGlvbiA9PiB7XG4gICAgLy8gY29uc29sZS5sb2coYWN0aW9uKVxuICAgIC8vIHJldHVybiB0cnVlXG4gICAgLy8gcmV0dXJuIF8ubGFzdChhY3Rpb24udHlwZS5zcGxpdCgnLycpKSA9PT0gU1VDQ0VTU1xufTtcbmNvbnN0IGNhY2hlUmVzcG9uc2VBY3Rpb24gPSBhY3Rpb24gPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKCdjYWNoZWQnKVxufTtcbmV4cG9ydCBkZWZhdWx0IHN0b3JlID0+IG5leHQgPT4gYWN0aW9uID0+IHtcbiAgICAvLyBpZiAoYWN0aW9uLmNhY2hlS2V5KSB7XG4gICAgLy8gICAvLyBmdW5jdGlvbiogZ2VuKCkge1xuICAgIC8vICAgLy8gICB5aWVsZCAxXG4gICAgLy8gICAvLyB9XG4gICAgLy8gICAvLyBjb25zdCBmdWNrID0gZ2VuKClcbiAgICAvLyAgIC8vIGNvbnNvbGUubG9nKGZ1Y2submV4dCgpKVxuICAgIC8vICAgbmV4dCh7XG4gICAgLy8gICAgIHR5cGU6ICdjYWNoZSdcbiAgICAvLyAgIH0pXG4gICAgLy8gICAvLyByZXR1cm4gZmFsc2VcbiAgICAvLyB9XG4gICAgLy8gaWYgKGFjdGlvbi5jYWNoZUtleSAmJiBpc1N1Y2Nlc3NBY3Rpb24oYWN0aW9uKSkge1xuICAgIC8vICAgY2FjaGVSZXNwb25zZUFjdGlvbihhY3Rpb24pXG4gICAgLy8gICBuZXh0KGFjdGlvbilcbiAgICAvLyAgIHJldHVybiBmYWxzZVxuICAgIC8vIH1cbiAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9jYWNoZS50c1xuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgRXJyb3JQYWdlIGZyb20gJy4vY29tcG9uZW50cy9FcnJvclBhZ2UnO1xuaW1wb3J0IHsgcmVuZGVyVG9TdGF0aWNNYXJrdXAgfSBmcm9tICdyZWFjdC1kb20vc2VydmVyJztcbmNvbnN0IEVSUk9SX0RPQ19USVRMRSA9ICfmnI3liqHlmajplJnor68nO1xuY29uc3QgRVJST1JfUEFHRV9USVRMRSA9ICfpop3vvIzkvLzkuY7lh7rkuobngrnnirblhrUnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcmVuZGVyNTAwKG1lc3NhZ2UsIGlzUHJvZCkge1xuICAgIHJldHVybiByZW5kZXJUb1N0YXRpY01hcmt1cChSZWFjdC5jcmVhdGVFbGVtZW50KEVycm9yUGFnZSwgeyBpc1Byb2Q6IGlzUHJvZCwgbWVzc2FnZTogbWVzc2FnZSwgdGl0bGU6IEVSUk9SX1BBR0VfVElUTEUsIGRvY1RpdGxlOiBFUlJPUl9ET0NfVElUTEUgfSkpO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JlbmRlci9yZW5kZXI1MDAudHN4XG4gKiovIiwiaW1wb3J0IFBhZ2UgZnJvbSAnLi9QYWdlJztcbmltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyByZW5kZXJUb1N0cmluZyB9IGZyb20gJ3JlYWN0LWRvbS9zZXJ2ZXInO1xuaW1wb3J0IEFwcEVycm9yIGZyb20gJy4uLy4uLy4uL2lzb21vcnBoaWMvY29tcG9uZW50cy9BcHBFcnJvcic7XG5mdW5jdGlvbiBFcnJvclBhZ2UocHJvcHMpIHtcbiAgICBjb25zdCB7IGlzUHJvZCwgbWVzc2FnZSwgZG9jVGl0bGUsIHRpdGxlIH0gPSBwcm9wcztcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFnZSwgeyBpc1Byb2Q6IGlzUHJvZCwgdGl0bGU6IGRvY1RpdGxlLCBub1NjcmlwdDogdHJ1ZSwgYXBwTWFya3VwOiByZW5kZXJUb1N0cmluZyhSZWFjdC5jcmVhdGVFbGVtZW50KEFwcEVycm9yLCB7IHRpdGxlOiB0aXRsZSwgbWVzc2FnZTogbWVzc2FnZSB9KSkgfSkpO1xufVxuZXhwb3J0IGRlZmF1bHQgRXJyb3JQYWdlO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JlbmRlci9jb21wb25lbnRzL0Vycm9yUGFnZS50c3hcbiAqKi8iLCJpbXBvcnQgYXBwQ29uZmlnIGZyb20gJy4uL2FwcC5jb25maWcnO1xuaW1wb3J0IHByaW50IGZyb20gJy4vdXRpbHMvcHJpbnQnO1xuY29uc3QgaHR0cCA9IHJlcXVpcmUoJ2h0dHAnKTtcbmNvbnN0IHBvcnQgPSBhcHBDb25maWcucG9ydDtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGJvb3RzdHJhcChhcHAsIHsgcHJvZHVjdGlvbiwgcmVuZGVyLCBob3QsIHJvdXRlIH0pIHtcbiAgICBsZXQgZmVhdHVyZXMgPSBbXTtcbiAgICBpZiAoaG90KSB7XG4gICAgICAgIGZlYXR1cmVzLnB1c2goJ2hvdCcpO1xuICAgIH1cbiAgICBpZiAocmVuZGVyKSB7XG4gICAgICAgIGZlYXR1cmVzLnB1c2goJ3NlcnZlciByZW5kZXJpbmcnKTtcbiAgICB9XG4gICAgZWxzZSBpZiAocm91dGUpIHtcbiAgICAgICAgZmVhdHVyZXMucHVzaCgnc2VydmVyIHJvdXRpbmcnKTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGZlYXR1cmVzLnB1c2goJ2hhc2ggcm91dGluZycpO1xuICAgIH1cbiAgICBhcHAuc2V0KCdwb3J0JywgcG9ydCk7XG4gICAgY29uc3Qgc2VydmVyID0gaHR0cC5jcmVhdGVTZXJ2ZXIoYXBwKTtcbiAgICBzZXJ2ZXIubGlzdGVuKHBvcnQpO1xuICAgIGZlYXR1cmVzID0gZmVhdHVyZXMubWFwKGZlYXR1cmUgPT4gYFske2ZlYXR1cmV9XWApLmpvaW4oJyAnKTtcbiAgICBwcmludC5pbmZvKGBTZXJ2ZXIgcnVubmluZyBpbiAke3Byb2R1Y3Rpb24gPyAncHJvZHVjdGlvbicgOiAnZGV2ZWxvcG1lbnQnfSAoJHtwb3J0fSkgJHtmZWF0dXJlc31gKTtcbiAgICBpZiAoaG90KSB7XG4gICAgICAgIGNvbnNvbGUuaW5mbygnd2VicGFjayBidWlsZGluZy4uLicpO1xuICAgIH1cbiAgICByZXR1cm4gYXBwO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Jvb3RzdHJhcC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImh0dHBcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImh0dHBcIlxuICoqIG1vZHVsZSBpZCA9IDM5OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IHdlYnBhY2sgZnJvbSAnd2VicGFjayc7XG5pbXBvcnQgd2VicGFja0NvbmZpZyBmcm9tICcuL3dlYnBhY2suaG90LmNvbmZpZyc7XG5pbXBvcnQgY29tYmluZU1pZGRsZXdhcmUgZnJvbSAnLi4vdXRpbHMvY29tYmluZS1taWRkbGV3YXJlJztcbmNvbnN0IHdlYnBhY2tEZXZNaWRkbGV3YXJlID0gcmVxdWlyZSgnd2VicGFjay1kZXYtbWlkZGxld2FyZScpO1xuY29uc3Qgd2VicGFja0hvdE1pZGRsZXdhcmUgPSByZXF1aXJlKCd3ZWJwYWNrLWhvdC1taWRkbGV3YXJlJyk7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBob3RNb2R1bGVSZXBsYWNlbWVudCgpIHtcbiAgICBjb25zdCBjb21waWxlciA9IHdlYnBhY2sod2VicGFja0NvbmZpZyk7XG4gICAgcmV0dXJuIGNvbWJpbmVNaWRkbGV3YXJlKFtcbiAgICAgICAgd2VicGFja0Rldk1pZGRsZXdhcmUoY29tcGlsZXIsIHsgbm9JbmZvOiB0cnVlLCBwdWJsaWNQYXRoOiB3ZWJwYWNrQ29uZmlnLm91dHB1dC5wdWJsaWNQYXRoIH0pLFxuICAgICAgICB3ZWJwYWNrSG90TWlkZGxld2FyZShjb21waWxlciksXG4gICAgXSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZGV2LXRvb2xzL2hvdC1tb2R1bGUtcmVwbGFjZW1lbnQudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJ3ZWJwYWNrXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJ3ZWJwYWNrXCJcbiAqKiBtb2R1bGUgaWQgPSA0MDFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB3ZWJwYWNrIGZyb20gJ3dlYnBhY2snO1xuY29uc3QgYmFzZSA9IHJlcXVpcmUoJy4uLy4uLy4uL3dlYnBhY2svYmFzZScpO1xuY29uc3QgcGF0aHMgPSBiYXNlLnZhcnMucGF0aHM7XG5jb25zdCBFeHRyYWN0VGV4dFBsdWdpbiA9IHJlcXVpcmUoJ2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbicpO1xuY29uc3QgY29uZmlnID0ge1xuICAgIGVudHJ5OiB7XG4gICAgICAgIGFwcDogW1xuICAgICAgICAgICAgLy8g6ZyA6KaB5pS+5Zyo56ys5LiA5LiqXG4gICAgICAgICAgICAncmVhY3QtaG90LWxvYWRlci9wYXRjaCcsXG4gICAgICAgICAgICAnd2VicGFjay1ob3QtbWlkZGxld2FyZS9jbGllbnQnLFxuICAgICAgICAgICAgJ2JhYmVsLXBvbHlmaWxsJyxcbiAgICAgICAgICAgIHBhdGhzLmlzb21vcnBoaWNcbiAgICAgICAgXVxuICAgIH0sXG4gICAgb3V0cHV0OiB7XG4gICAgICAgIHBhdGg6IHBhdGhzLmJ1aWx0LFxuICAgICAgICBmaWxlbmFtZTogJ1tuYW1lXS5qcycsXG4gICAgICAgIHB1YmxpY1BhdGg6ICdodHRwOi8vbG9jYWxob3N0OjMwMDAvYnVpbHQvJyxcbiAgICB9LFxuICAgIHBsdWdpbnM6IFtcbiAgICAgICAgYmFzZS5wbHVnaW5zLmRldkVudigpLFxuICAgICAgICAuLi5iYXNlLnBsdWdpbnMuZGxsUmVmZXJlbmNlcygpLFxuICAgICAgICBuZXcgd2VicGFjay5Ib3RNb2R1bGVSZXBsYWNlbWVudFBsdWdpbigpLFxuICAgICAgICBuZXcgd2VicGFjay5Ob0Vycm9yc1BsdWdpbigpLFxuICAgICAgICBuZXcgRXh0cmFjdFRleHRQbHVnaW4oJ1tuYW1lXS5jc3MnLCB7XG4gICAgICAgICAgICBhbGxDaHVua3M6IHRydWVcbiAgICAgICAgfSksXG4gICAgXSxcbiAgICBkZXZ0b29sOiAnaW5saW5lLXNvdXJjZS1tYXAnLFxuICAgIG1vZHVsZToge1xuICAgICAgICBsb2FkZXJzOiBbXG4gICAgICAgICAgICBiYXNlLmxvYWRlcnMuaW1hZ2UoKSxcbiAgICAgICAgICAgIGJhc2UubG9hZGVycy5zYXNzKHtcbiAgICAgICAgICAgICAgICBzb3VyY2VNYXA6IHRydWUsXG4gICAgICAgICAgICAgICAgZXh0cmFjdDogdHJ1ZSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYmFzZS5sb2FkZXJzLnBvc3Rjc3Moe1xuICAgICAgICAgICAgICAgIHNvdXJjZU1hcDogdHJ1ZSxcbiAgICAgICAgICAgICAgICBleHRyYWN0OiB0cnVlLFxuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBiYXNlLmxvYWRlcnMuYmFiZWwoKSxcbiAgICAgICAgICAgIGJhc2UubG9hZGVycy50eXBlc2NyaXB0KHtcbiAgICAgICAgICAgICAgICBvZmZpY2lhbExvYWRlcjogZmFsc2UsXG4gICAgICAgICAgICAgICAgaXNIb3Q6IHRydWVcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYmFzZS5sb2FkZXJzLmpzb24oKVxuICAgICAgICBdXG4gICAgfSxcbiAgICBzYXNzTG9hZGVyOiBiYXNlLmxvYWRlcnMubG9hZGVyQ29uZmlnLnNhc3NMb2FkZXIoKSxcbiAgICBwb3N0Y3NzOiBiYXNlLmxvYWRlcnMubG9hZGVyQ29uZmlnLnBvc3Rjc3MoKSxcbiAgICByZXNvbHZlOiBiYXNlLmNvbW1vbi5yZXNvbHZlXG59O1xuZXhwb3J0IGRlZmF1bHQgY29uZmlnO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Rldi10b29scy93ZWJwYWNrLmhvdC5jb25maWcudHNcbiAqKi8iLCJjb25zdCB2YXJzID0gcmVxdWlyZSgnLi92YXJpYWJsZXMnKVxuY29uc3QgbG9hZGVycyA9IHJlcXVpcmUoJy4vbG9hZGVycycpXG5jb25zdCBwbHVnaW5zID0gcmVxdWlyZSgnLi9wbHVnaW5zJylcbmNvbnN0IGNvbW1vbiA9IHJlcXVpcmUoJy4vY29tbW9uJylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHZhcnMsXG4gIGxvYWRlcnMsXG4gIHBsdWdpbnMsXG4gIGNvbW1vbixcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vd2VicGFjay9iYXNlL2luZGV4LmpzXG4gKiovIiwiY29uc3QgcGF0aCA9IHJlcXVpcmUoJ3BhdGgnKVxuXG5jb25zdCBwYXRoUHJlZml4ID0gcHJvY2Vzcy5jd2QoKVxuXG5jb25zdCBwYXRocyA9IHtcbiAgcm9vdDogcGF0aFByZWZpeCxcbiAgc3JjOiBwYXRoLmpvaW4ocGF0aFByZWZpeCwgJ3NyYycpLFxuICBidWlsdDogcGF0aC5qb2luKHBhdGhQcmVmaXgsICdwdWJsaWMvYnVpbHQnKSxcbiAgYnVpbHRQcm9kOiBwYXRoLmpvaW4ocGF0aFByZWZpeCwgJ3B1YmxpYy9idWlsdF9wcm9kJyksXG4gIGFzc2V0czogcGF0aC5qb2luKHBhdGhQcmVmaXgsICdzcmMvYXNzZXRzJyksXG4gIGlzb21vcnBoaWM6IHBhdGguam9pbihwYXRoUHJlZml4LCAnc3JjL2lzb21vcnBoaWMnKSxcbiAgc2VydmVyOiBwYXRoLmpvaW4ocGF0aFByZWZpeCwgJ3NyYy9zZXJ2ZXInKVxufVxuXG5jb25zdCBjc3NMb2NhbElkZW50TmFtZSA9ICdbbG9jYWxdX1toYXNoOmJhc2U2NDo1XSdcblxuY29uc3QgaW1hZ2VOYW1lID0gJ2ltZy9bbmFtZV0uW2hhc2g6MTBdLltleHRdJ1xuXG4vLyDmmrTpnLLliLDlhajlsYDlj5jph4/nmoTlkI3np7BcbmNvbnN0IHZlbmRvckxpYk5hbWUgPSAnX1tuYW1lXV9kbGwnXG5cbi8vIEhNUiBlbnRyeSDph4zpnaLnmoTkuIDkuKrmoIforrDvvIzlhbfkvZPkuI3mh4LjgILjgIJcbmNvbnN0IGhvdCA9ICd3ZWJwYWNrLWhvdC1taWRkbGV3YXJlL2NsaWVudCdcblxuLy8gd2VicGFjayDkvJrkvb/nlKjmlofku7blkI3kvZzkuLrlj5jph4/vvIzmiYDku6XkuI3og73kvb/nlKjluKbmnIkgLSDnmoTlkI3lrZdcbi8vIOi/mei+ueeahOmFjee9ruS8muWQjOaXtuW9seWTjeeUn+aIkOWSjOW8leeUqO+8jOaJgOS7peWPqumcgOWcqOi/mei+ueS/ruaUueWwseihjOS6hlxuY29uc3QgZGxsTmFtZXMgPSB7XG4gIHJlYWN0S2l0OiAncmVhY3Rfa2l0JyxcbiAgdXRpbHM6ICd1dGlscydcbn1cblxuLy8gY29kZSBzcGxpdHRpbmdcbmNvbnN0IGxpYnMgPSB7XG4gIHJlYWN0S2l0OiBbXG4gICAgJ3JlYWN0JyxcbiAgICAncmVhY3QtZG9tJyxcbiAgICAncmVhY3QtYWRkb25zLWNzcy10cmFuc2l0aW9uLWdyb3VwJyxcbiAgICAncmVkdXgnLFxuICAgICdyZWFjdC1yZWR1eCcsXG4gICAgJ3JlYWN0LXJvdXRlcicsXG4gICAgJ3JlZHV4LXRodW5rJyxcbiAgICAncmVhY3QtY3NzLW1vZHVsZXMnLFxuICAgICdyZWFjdC1zaWRlLWVmZmVjdCcsXG4gICAgJ3JlYWN0LXJvdXRlci1yZWR1eCcsXG4gICAgJ2ltbXV0YWJsZScsXG4gICAgJ3JlYWN0LW1vdGlvbicsXG4gICAgJ3Jlc2VsZWN0JyxcbiAgICAncmVkdXgtc2FnYSdcbiAgXSxcblxuICByZWFjdERldktpdDogW1xuICAgICdyZWR1eC1kZXZ0b29scy1sb2ctbW9uaXRvcicsXG4gICAgJ3JlZHV4LWRldnRvb2xzLWRvY2stbW9uaXRvcicsXG4gIF0sXG5cbiAgdXRpbHM6IFtcbiAgICAnbG9kYXNoJyxcbiAgICAnanF1ZXJ5JyxcbiAgICAnbm9ybWFsaXpyJyxcbiAgICAnaHVtcHMnLFxuICAgICdpc29tb3JwaGljLWZldGNoJyxcbiAgICAnY2xhc3NuYW1lcycsXG4gICAgJ21hcmtlZCcsXG4gICAgJ21vbWVudCcsXG4gIF1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHBhdGhQcmVmaXgsXG4gIHBhdGhzLFxuICBjc3NMb2NhbElkZW50TmFtZSxcbiAgaW1hZ2VOYW1lLFxuICB2ZW5kb3JMaWJOYW1lLFxuICBob3QsXG4gIGRsbE5hbWVzLFxuICBsaWJzXG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3dlYnBhY2svYmFzZS92YXJpYWJsZXMuanNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJwYXRoXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJwYXRoXCJcbiAqKiBtb2R1bGUgaWQgPSA0MDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImNvbnN0IHZhcnMgPSByZXF1aXJlKCcuL3ZhcmlhYmxlcycpXG5jb25zdCBFeHRyYWN0VGV4dFBsdWdpbiA9IHJlcXVpcmUoJ2V4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpbicpXG5cbmNvbnN0IHBhcnNlTG9hZGVyc0ZvckV4dHJhY3RUZXh0UGx1Z2luID0gbG9hZGVycyA9PiB7XG4gIHJldHVybiBbXG4gICAgbG9hZGVyc1swXSxcbiAgICBsb2FkZXJzLnNsaWNlKDEsIGxvYWRlcnMubGVuZ3RoKS5qb2luKCchJylcbiAgXVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgbG9hZGVyQ29uZmlnOiB7XG4gICAgc2Fzc0xvYWRlcigpIHtcbiAgICAgIHJldHVybiB7XG4gICAgICAgIC8vIOeUqOS6jiBzY3NzIOaWh+S7tumHjCBpbXBvcnQg5YW25a6D5paH5Lu2XG4gICAgICAgIGluY2x1ZGVQYXRoczogW1xuICAgICAgICAgIHZhcnMucGF0aHMuaXNvbW9ycGhpYyxcbiAgICAgICAgICB2YXJzLnBhdGhzLnN0YXRpY1xuICAgICAgICBdXG4gICAgICB9XG4gICAgfSxcblxuICAgIHBvc3Rjc3MoKSB7XG4gICAgICByZXR1cm4gW1xuICAgICAgICByZXF1aXJlKCdwb3N0Y3NzLWltcG9ydCcpKHtcbiAgICAgICAgICBwYXRoOiBbXG4gICAgICAgICAgICB2YXJzLnBhdGhzLmlzb21vcnBoaWNcbiAgICAgICAgICBdXG4gICAgICAgIH0pLFxuICAgICAgICByZXF1aXJlKCdwb3N0Y3NzLWNzc25leHQnKVxuICAgICAgXVxuICAgIH0sXG4gIH0sXG5cbiAganNvbigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGVzdDogL1xcLmpzb24kLyxcbiAgICAgIGxvYWRlcjogJ2pzb24nXG4gICAgfVxuICB9LFxuXG4gIGJhYmVsKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXN0OiAvXFwuanN4PyQvLFxuICAgICAgZXhjbHVkZTogLyhub2RlX21vZHVsZXN8Ym93ZXJfY29tcG9uZW50cykvLFxuICAgICAgbG9hZGVyOiAnYmFiZWwnXG4gICAgfVxuICB9LFxuXG4gIGltYWdlKHsgZW1pdEZpbGUgfSA9IHsgZW1pdEZpbGU6IHRydWUgfSkge1xuICAgIGNvbnN0IGVtaXRGaWxlQ29uZmlnID0gZW1pdEZpbGUgPyAnZW1pdEZpbGU9dHJ1ZScgOiAnZW1pdEZpbGU9ZmFsc2UnXG5cbiAgICByZXR1cm4ge1xuICAgICAgdGVzdDogL1xcLihqcGU/Z3xwbmd8Z2lmfHN2ZykkL2ksXG4gICAgICBsb2FkZXJzOiBbXG4gICAgICAgIGBmaWxlP25hbWU9JHt2YXJzLmltYWdlTmFtZX0mJHtlbWl0RmlsZUNvbmZpZ31gLFxuICAgICAgICAnaW1hZ2Utd2VicGFjaz9ieXBhc3NPbkRlYnVnJm9wdGltaXphdGlvbkxldmVsPTcmaW50ZXJsYWNlZD1mYWxzZSdcbiAgICAgIF1cbiAgICB9XG4gIH0sXG5cbiAgdHlwZXNjcmlwdCh7IG9mZmljaWFsTG9hZGVyLCBpc0hvdCB9ID0ge30pIHtcbiAgICBjb25zdCB0c0xvYWRlciA9IG9mZmljaWFsTG9hZGVyID8gJ3RzJyA6ICdhd2Vzb21lLXR5cGVzY3JpcHQnXG4gICAgY29uc3QgYmFiZWwgPSBpc0hvdFxuICAgICAgPyAnYmFiZWw/cGx1Z2lucz1yZWFjdC1ob3QtbG9hZGVyL2JhYmVsJ1xuICAgICAgOiAnYmFiZWwnXG5cbiAgICByZXR1cm4ge1xuICAgICAgdGVzdDogL1xcLnRzeD8kLyxcbiAgICAgIGxvYWRlcnM6IFtiYWJlbCwgYCR7dHNMb2FkZXJ9YF1cbiAgICB9XG4gIH0sXG5cbiAgc2Fzcyh7IGlzb21vcnBoaWMsIGdsb2JhbCwgZXh0cmFjdCwgc291cmNlTWFwIH0gPSB7fSkge1xuICAgIGNvbnN0IHN0eWxlTG9hZGVyID0gaXNvbW9ycGhpYyA/ICdpc29tb3JwaGljLXN0eWxlJyA6ICdzdHlsZSdcbiAgICBjb25zdCBzb3VyY2VNYXBDb25maWcgPSBzb3VyY2VNYXAgPyAnc291cmNlTWFwPXRydWUnIDogJ3NvdXJjZU1hcD1mYWxzZSdcbiAgICBjb25zdCBsb2NhbElkZW50TmFtZSA9IGdsb2JhbCA/ICdbbG9jYWxdJyA6IHZhcnMuY3NzTG9jYWxJZGVudE5hbWVcblxuICAgIGNvbnN0IGxvYWRlcnMgPSBbXG4gICAgICBgJHtzdHlsZUxvYWRlcn0/JHtzb3VyY2VNYXBDb25maWd9YCxcbiAgICAgIGBjc3M/JHtzb3VyY2VNYXBDb25maWd9Jm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPSR7bG9jYWxJZGVudE5hbWV9YCxcbiAgICAgIGBzYXNzPyR7c291cmNlTWFwQ29uZmlnfWAsXG4gICAgXVxuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRlc3Q6IC9cXC5zY3NzJC8sXG4gICAgICBsb2FkZXI6IGV4dHJhY3RcbiAgICAgICAgPyBFeHRyYWN0VGV4dFBsdWdpbi5leHRyYWN0LmFwcGx5KG51bGwsIHBhcnNlTG9hZGVyc0ZvckV4dHJhY3RUZXh0UGx1Z2luKGxvYWRlcnMpKVxuICAgICAgICA6IGxvYWRlcnMuam9pbignIScpXG4gICAgfVxuICB9LFxuXG4gIHBvc3Rjc3MoeyBnbG9iYWwsIGV4dHJhY3QsIHNvdXJjZU1hcCwgaXNvbW9ycGhpYyB9ID0ge30pIHtcbiAgICBjb25zdCBzdHlsZUxvYWRlciA9IGlzb21vcnBoaWMgPyAnaXNvbW9ycGhpYy1zdHlsZScgOiAnc3R5bGUnXG4gICAgY29uc3QgbG9jYWxJZGVudE5hbWUgPSBnbG9iYWwgPyAnW2xvY2FsXScgOiB2YXJzLmNzc0xvY2FsSWRlbnROYW1lXG4gICAgY29uc3Qgc291cmNlTWFwQ29uZmlnID0gc291cmNlTWFwID8gJ3NvdXJjZU1hcD10cnVlJyA6ICdzb3VyY2VNYXA9ZmFsc2UnXG5cbiAgICBjb25zdCBsb2FkZXJzID0gW1xuICAgICAgYCR7c3R5bGVMb2FkZXJ9PyR7c291cmNlTWFwQ29uZmlnfWAsXG4gICAgICBgY3NzPyR7c291cmNlTWFwQ29uZmlnfSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT0ke2xvY2FsSWRlbnROYW1lfWAsXG4gICAgICBgcG9zdGNzcz8ke3NvdXJjZU1hcENvbmZpZ31gLFxuICAgIF1cblxuICAgIHJldHVybiB7XG4gICAgICB0ZXN0OiAvXFwuY3NzJC8sXG4gICAgICBsb2FkZXI6IGV4dHJhY3RcbiAgICAgICAgPyBFeHRyYWN0VGV4dFBsdWdpbi5leHRyYWN0LmFwcGx5KG51bGwsIHBhcnNlTG9hZGVyc0ZvckV4dHJhY3RUZXh0UGx1Z2luKGxvYWRlcnMpKVxuICAgICAgICA6IGxvYWRlcnMuam9pbignIScpXG4gICAgfVxuICB9LFxuXG4gIC8vIOacque7j+a1i+ivlVxuICBjc3MoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRlc3Q6IC9cXC5jc3MkLyxcbiAgICAgIGxvYWRlcnM6IFtcbiAgICAgICAgJ3N0eWxlJyxcbiAgICAgICAgJ2Nzcz9tb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdJyxcbiAgICAgICAgJ3Jlc29sdmUtdXJsJyxcbiAgICAgIF1cbiAgICB9XG4gIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vd2VicGFjay9iYXNlL2xvYWRlcnMuanNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImV4dHJhY3QtdGV4dC13ZWJwYWNrLXBsdWdpblwiXG4gKiogbW9kdWxlIGlkID0gNDA3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJwb3N0Y3NzLWltcG9ydFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicG9zdGNzcy1pbXBvcnRcIlxuICoqIG1vZHVsZSBpZCA9IDQwOFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicG9zdGNzcy1jc3NuZXh0XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJwb3N0Y3NzLWNzc25leHRcIlxuICoqIG1vZHVsZSBpZCA9IDQwOVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiY29uc3Qgd2VicGFjayA9IHJlcXVpcmUoJ3dlYnBhY2snKVxuY29uc3QgZnMgPSByZXF1aXJlKCdmcycpXG5jb25zdCB2YXJzID0gcmVxdWlyZSgnLi92YXJpYWJsZXMnKVxuY29uc3QgXyA9IHJlcXVpcmUoJ2xvZGFzaCcpXG5cbi8qKlxuICogQHBhcmFtIG5hbWVzXG4gKiB7XG4gKiAgIFtuYW1lOiBzdHJpbmddOiBzdHJpbmdcbiAqIH1cbiAqL1xuY29uc3QgY3JlYXRlRGxsUmVmZXJlbmNlcyA9IChuYW1lcykgPT4ge1xuICB0cnkge1xuICAgIHJldHVybiBfLm1hcChuYW1lcywgbmFtZSA9PiB7XG4gICAgICByZXR1cm4gbmV3IHdlYnBhY2suRGxsUmVmZXJlbmNlUGx1Z2luKHtcbiAgICAgICAgY29udGV4dDogJy4nLFxuICAgICAgICBtYW5pZmVzdDogSlNPTi5wYXJzZShmcy5yZWFkRmlsZVN5bmMoYCR7dmFycy5wYXRocy5idWlsdH0vJHtuYW1lfS5kbGwubWFuaWZlc3QuanNvbmAsICd1dGY4JykpXG4gICAgICB9KVxuICAgIH0pXG4gIH0gY2F0Y2ggKGVycm9yKSB7XG4gICAgY29uc29sZS53YXJuKCdXQVJOSU5HOiAnLCBlcnJvci5tZXNzYWdlKVxuICAgIHJldHVybiBbXVxuICB9XG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwcm9kRW52KCkge1xuICAgIHJldHVybiBuZXcgd2VicGFjay5EZWZpbmVQbHVnaW4oe1xuICAgICAgJ3Byb2Nlc3MuZW52Lk5PREVfRU5WJzogJ1wicHJvZHVjdGlvblwiJyxcbiAgICB9KVxuICB9LFxuXG4gIGRldkVudigpIHtcbiAgICByZXR1cm4gbmV3IHdlYnBhY2suRGVmaW5lUGx1Z2luKHtcbiAgICAgICdwcm9jZXNzLmVudi5OT0RFX0VOVic6ICdcImRldmVsb3BtZW50XCInLFxuICAgIH0pXG4gIH0sXG5cbiAgbm9kZVNvdXJjZU1hcFN1cHBvcnQoKSB7XG4gICAgcmV0dXJuIG5ldyB3ZWJwYWNrLkJhbm5lclBsdWdpbihgcmVxdWlyZSgnc291cmNlLW1hcC1zdXBwb3J0JykuaW5zdGFsbCgpYCwge1xuICAgICAgcmF3OiB0cnVlLFxuICAgICAgZW50cnlPbmx5OiB0cnVlXG4gICAgfSlcbiAgfSxcblxuICBvY2N1cmVuY2VPcmRlcigpIHtcbiAgICByZXR1cm4gbmV3IHdlYnBhY2sub3B0aW1pemUuT2NjdXJlbmNlT3JkZXJQbHVnaW4oKVxuICB9LFxuXG4gIGRsbFJlZmVyZW5jZXMoKSB7XG4gICAgcmV0dXJuIGNyZWF0ZURsbFJlZmVyZW5jZXModmFycy5kbGxOYW1lcylcbiAgfSxcblxuICBkbGwoKSB7XG4gICAgcmV0dXJuIG5ldyB3ZWJwYWNrLkRsbFBsdWdpbih7XG4gICAgICBwYXRoOiBgJHt2YXJzLnBhdGhzLmJ1aWx0fS9bbmFtZV0uZGxsLm1hbmlmZXN0Lmpzb25gLFxuICAgICAgbmFtZTogdmFycy52ZW5kb3JMaWJOYW1lXG4gICAgfSlcbiAgfSxcblxuICB1Z2xpZnkoKSB7XG4gICAgcmV0dXJuIG5ldyB3ZWJwYWNrLm9wdGltaXplLlVnbGlmeUpzUGx1Z2luKHtcbiAgICAgIGNvbXByZXNzOiB7XG4gICAgICAgIHdhcm5pbmdzOiBmYWxzZVxuICAgICAgfVxuICAgIH0pXG4gIH0sXG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3dlYnBhY2svYmFzZS9wbHVnaW5zLmpzXG4gKiovIiwiY29uc3QgdmFycyA9IHJlcXVpcmUoJy4vdmFyaWFibGVzJylcblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIHJlc29sdmU6IHtcbiAgICAvLyDov5novrnlrprkuYnnmoQgcm9vdCDmmoLml7bmsqHnlKjvvIzlm6DkuLogdnMgY29kZSDph4zpnaLnm67liY3phY3nva7nmoTmmK/lj6rkvb/nlKjnm7jlr7not6/lvoRcbiAgICByb290OiB2YXJzLnBhdGhzLnNyYyxcbiAgICBhbGlhczoge1xuICAgICAgLy8g5pa55L6/5Zyo57uE5bu66YeM6Z2i5byV55So6YCa55So55qEIHNjc3Mg5paH5Lu277yI5Y+v6IO95LiN5Lya5aSq5bi455So77yJXG4gICAgICAvLyBjb21wb3NlcyDkvb/nlKjnmoTmmK8gd2VicGFjayByZXNvbHZlIOmHjOmdoueahOinhOWImVxuICAgICAgc3R5bGVzOiBgJHt2YXJzLnBhdGhzLmlzb21vcnBoaWN9L3N0eWxlc2AsXG4gICAgfSxcbiAgICBleHRlbnNpb25zOiBbJycsICcuanMnLCAnLmpzeCcsICcudHMnLCAnLnRzeCddLFxuICB9LFxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi93ZWJwYWNrL2Jhc2UvY29tbW9uLmpzXG4gKiovIiwiLyoqXG4gKiBDb21iaW5lIG11bHRpcGxlIG1pZGRsZXdhcmUgdG9nZXRoZXJcbiAqIFNvdXJjZTogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy8yMDI3NDQ4My9ob3ctZG8taS1jb21iaW5lLWNvbm5lY3QtbWlkZGxld2FyZS1pbnRvLW9uZS1taWRkbGV3YXJlXG4gKlxuICogQHBhcmFtIHtGdW5jdGlvbltdfSBtaWRzIGZ1bmN0aW9ucyBvZiBmb3JtOlxuICogICBmdW5jdGlvbihyZXEsIHJlcywgbmV4dCkgeyAuLi4gfVxuICogQHJldHVybiB7RnVuY3Rpb259IHNpbmdsZSBjb21iaW5lZCBtaWRkbGV3YXJlXG4gKi9cbi8qKlxuICogQ29tYmluZSBtdWx0aXBsZSBtaWRkbGV3YXJlIHRvZ2V0aGVyXG4gKiBTb3VyY2U6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjAyNzQ0ODMvaG93LWRvLWktY29tYmluZS1jb25uZWN0LW1pZGRsZXdhcmUtaW50by1vbmUtbWlkZGxld2FyZVxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb25bXX0gbWlkcyBmdW5jdGlvbnMgb2YgZm9ybTpcbiAqICAgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHsgLi4uIH1cbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBzaW5nbGUgY29tYmluZWQgbWlkZGxld2FyZVxuICovIGV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbWJpbmVNaWRkbGV3YXJlKG1pZHMpIHtcbiAgICByZXR1cm4gbWlkcy5yZWR1Y2UoKGEsIGIpID0+IHtcbiAgICAgICAgcmV0dXJuIChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICAgICAgYShyZXEsIHJlcywgZXJyID0+IHtcbiAgICAgICAgICAgICAgICBpZiAoZXJyKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBuZXh0KGVycik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBiKHJlcSwgcmVzLCBuZXh0KTtcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9O1xuICAgIH0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3V0aWxzL2NvbWJpbmUtbWlkZGxld2FyZS50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIndlYnBhY2stZGV2LW1pZGRsZXdhcmVcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIndlYnBhY2stZGV2LW1pZGRsZXdhcmVcIlxuICoqIG1vZHVsZSBpZCA9IDQxM1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwid2VicGFjay1ob3QtbWlkZGxld2FyZVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwid2VicGFjay1ob3QtbWlkZGxld2FyZVwiXG4gKiogbW9kdWxlIGlkID0gNDE0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJtb3JnYW5cIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIm1vcmdhblwiXG4gKiogbW9kdWxlIGlkID0gNDE1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjb29raWUtcGFyc2VyXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJjb29raWUtcGFyc2VyXCJcbiAqKiBtb2R1bGUgaWQgPSA0MTZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJvZHktcGFyc2VyXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJib2R5LXBhcnNlclwiXG4gKiogbW9kdWxlIGlkID0gNDE3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjb25uZWN0LW1vbmdvXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJjb25uZWN0LW1vbmdvXCJcbiAqKiBtb2R1bGUgaWQgPSA0MThcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyJdLCJzb3VyY2VSb290IjoiIn0=