require('source-map-support').install()
module.exports =
/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// object to store loaded chunks
/******/ 	// "1" means "already loaded"
/******/ 	var installedChunks = {
/******/ 		0:1
/******/ 	};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId])
/******/ 			return installedModules[moduleId].exports;
/******/
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			exports: {},
/******/ 			id: moduleId,
/******/ 			loaded: false
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.loaded = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/ 	// This file contains only the entry chunk.
/******/ 	// The chunk loading function for additional chunks
/******/ 	__webpack_require__.e = function requireEnsure(chunkId, callback) {
/******/ 		// "1" is the signal for "already loaded"
/******/ 		if(!installedChunks[chunkId]) {
/******/ 			var chunk = require("./" + chunkId + "." + ({}[chunkId]||chunkId) + ".js");
/******/ 			var moreModules = chunk.modules, chunkIds = chunk.ids;
/******/ 			for(var moduleId in moreModules) {
/******/ 				modules[moduleId] = moreModules[moduleId];
/******/ 			}
/******/ 			for(var i = 0; i < chunkIds.length; i++)
/******/ 				installedChunks[chunkIds[i]] = 1;
/******/ 		}
/******/ 		callback.call(null, __webpack_require__);
/******/ 	};
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(0);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ function(module, exports, __webpack_require__) {

	__webpack_require__(1);
	module.exports = __webpack_require__(2);


/***/ },
/* 1 */
/***/ function(module, exports) {

	module.exports = require("babel-polyfill");

/***/ },
/* 2 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _initialize = __webpack_require__(3);
	
	var _initialize2 = _interopRequireDefault(_initialize);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var baseDir = process.cwd();
	var app = (0, _initialize2.default)(baseDir);
	exports.default = app;

/***/ },
/* 3 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = initialize;
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	var _expressSession = __webpack_require__(5);
	
	var _expressSession2 = _interopRequireDefault(_expressSession);
	
	var _routes = __webpack_require__(6);
	
	var _routes2 = _interopRequireDefault(_routes);
	
	var _bootstrap = __webpack_require__(398);
	
	var _bootstrap2 = _interopRequireDefault(_bootstrap);
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _hotModuleReplacement = __webpack_require__(400);
	
	var _hotModuleReplacement2 = _interopRequireDefault(_hotModuleReplacement);
	
	var _options = __webpack_require__(86);
	
	var _options2 = _interopRequireDefault(_options);
	
	var _path = __webpack_require__(405);
	
	var _path2 = _interopRequireDefault(_path);
	
	var _middleware = __webpack_require__(8);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _morgan = __webpack_require__(415);
	
	var _morgan2 = _interopRequireDefault(_morgan);
	
	var _cookieParser = __webpack_require__(416);
	
	var _cookieParser2 = _interopRequireDefault(_cookieParser);
	
	var _bodyParser = __webpack_require__(417);
	
	var _bodyParser2 = _interopRequireDefault(_bodyParser);
	
	var _connectMongo = __webpack_require__(418);
	
	var _connectMongo2 = _interopRequireDefault(_connectMongo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var MongoStore = (0, _connectMongo2.default)(_expressSession2.default);
	var app = (0, _express2.default)();
	var PUBLIC_PATH_NAME = 'public';
	var SESSION_SECRET = 'key';
	// TODO: what happens when max age exceeds
	// const SESSION_MAX_AGE = 70 * 24 * 60 * 60 * 1000 // 70 days
	var REQ_SIZE_LIMIT = '5mb';
	var MONGO_STORE_URL = _app2.default.database.host + '/' + _app2.default.database.mongoStoreName;
	// todo: put it in locals
	var REQ_BASE_PATH = '__basePath';
	function initialize(basePath) {
	    app.use((0, _expressSession2.default)({
	        secret: SESSION_SECRET,
	        // cookie: {
	        //   maxAge: SESSION_MAX_AGE
	        // },
	        resave: true,
	        saveUninitialized: true,
	        store: new MongoStore({ url: MONGO_STORE_URL })
	    }));
	    // 需要放在开始的位置
	    if (_options2.default.hot) {
	        app.use((0, _hotModuleReplacement2.default)());
	    }
	    app.use(_bodyParser2.default.urlencoded({ limit: REQ_SIZE_LIMIT, extended: false }));
	    app.use(_bodyParser2.default.json({ limit: REQ_SIZE_LIMIT }));
	    app.use((0, _cookieParser2.default)());
	    app.use(_express2.default.static(_path2.default.join(basePath, PUBLIC_PATH_NAME)));
	    // set basePath
	    app.use(function (req, res, next) {
	        req[REQ_BASE_PATH] = basePath;
	        next();
	    });
	    // log error info
	    app.use((0, _morgan2.default)('dev', {
	        skip: function skip(req, res) {
	            return res.statusCode < 400;
	        }
	    }));
	    // api routing
	    app.use('/' + _app2.default.api.prefix, _routes2.default.api());
	    // frontend routing
	    app.use(_middleware2.default.parseContext, _routes2.default.pages);
	    return (0, _bootstrap2.default)(app, _options2.default);
	}

/***/ },
/* 4 */
/***/ function(module, exports) {

	module.exports = require("express");

/***/ },
/* 5 */
/***/ function(module, exports) {

	module.exports = require("express-session");

/***/ },
/* 6 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _apiRoutes = __webpack_require__(7);
	
	var _apiRoutes2 = _interopRequireDefault(_apiRoutes);
	
	var _pages = __webpack_require__(85);
	
	var _pages2 = _interopRequireDefault(_pages);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    api: _apiRoutes2.default,
	    pages: _pages2.default
	};

/***/ },
/* 7 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = setupApiApp;
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	var _middleware = __webpack_require__(8);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _endpoints = __webpack_require__(69);
	
	var endpoints = _interopRequireWildcard(_endpoints);
	
	var _common = __webpack_require__(52);
	
	var _multer = __webpack_require__(84);
	
	var _multer2 = _interopRequireDefault(_multer);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var FORM_DATA_FILE_KEY = 'file';
	var upload = (0, _multer2.default)();
	var authenticatePublic = [_middleware2.default.prepareApi, _middleware2.default.parseContext];
	var authenticatePrivate = [_middleware2.default.prepareApi, _middleware2.default.parseContext, _middleware2.default.requirePermissionsOf(_common.ROLES.USER)];
	var authenticateAdmin = [_middleware2.default.prepareApi, _middleware2.default.parseContext, _middleware2.default.requirePermissionsOf(_common.ROLES.ADMIN)];
	function apiRoutes() {
	    var router = _express2.default.Router();
	    // authors
	    router.get('/authors/:id', authenticatePublic, endpoints.author.findOne); // basic
	    router.get('/authors', authenticatePublic, endpoints.author.list); // basic
	    router.post('/authors', authenticatePublic, endpoints.author.add); // basic
	    router.put('/authors/:id', authenticatePublic, endpoints.author.update); // basic
	    router.delete('/authors/:id', authenticatePublic, endpoints.author.remove); // basic
	    // collections
	    router.get('/collections/:id', authenticatePublic, endpoints.collection.findOne); // basic
	    router.get('/collections', authenticatePublic, endpoints.listCollections);
	    router.post('/collections', authenticatePublic, endpoints.collection.add); // basic
	    router.put('/collections/:id', authenticatePublic, endpoints.collection.update); // basic
	    router.delete('/collections/:id', authenticatePublic, endpoints.collection.remove); // basic
	    // books
	    router.get('/books/:book', authenticatePublic, endpoints.findBook);
	    router.get('/books/:book/content', authenticatePublic, endpoints.resolveBookContent);
	    router.get('/books', authenticatePublic, endpoints.listBooks);
	    // router.post('/books', authenticateAdmin, endpoints.book.add) // basic
	    router.post('/books', authenticateAdmin, upload.single(FORM_DATA_FILE_KEY), _middleware2.default.logFile, endpoints.addBook); // 处理文件
	    router.put('/books/:book', authenticateAdmin, endpoints.editBookMeta);
	    router.delete('/books/:book', authenticateAdmin, endpoints.removeBook);
	    // tags
	    router.get('/tags/:id', authenticatePublic, endpoints.tag.findOne); // basic
	    router.get('/tags', authenticatePublic, endpoints.tag.list); // basic
	    router.post('/tags', authenticatePublic, endpoints.tag.add); // basic
	    router.put('/tags/:id', authenticatePublic, endpoints.tag.update); // basic
	    router.delete('/tags/:id', authenticatePublic, endpoints.tag.remove); // basic
	    // users
	    router.get('/users', authenticateAdmin, endpoints.user.list); // basic
	    router.post('/users', authenticatePublic, endpoints.addUser);
	    // user
	    router.get('/user/profile', authenticatePrivate, endpoints.findUser);
	    router.get('/user/books/shelf', authenticatePrivate, endpoints.listShelfBooks);
	    // progress
	    router.get('/user/books/:book/progress', authenticatePrivate, endpoints.getReadingProgress);
	    router.put('/user/books/:book/progress', authenticatePrivate, endpoints.setReadingProgress);
	    // file
	    router.get('/files/:file', authenticateAdmin, endpoints.readFile);
	    router.delete('/files/:file', authenticateAdmin, endpoints.delFile);
	    // auth
	    router.post('/auth', authenticatePublic, _middleware2.default.auth.basicAuth);
	    router.get('/auth', authenticatePublic, _middleware2.default.auth.check);
	    router.put('/auth/revoke', authenticatePublic, _middleware2.default.auth.revoke);
	    return router;
	}
	function setupApiApp() {
	    var apiApp = (0, _express2.default)();
	    apiApp.use(apiRoutes());
	    apiApp.use(_middleware2.default.handleApiNotFound);
	    apiApp.use(_middleware2.default.handleJSONResponse);
	    apiApp.use(_middleware2.default.handleError);
	    return apiApp;
	}

/***/ },
/* 8 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _parseContext = __webpack_require__(9);
	
	var _parseContext2 = _interopRequireDefault(_parseContext);
	
	var _auth = __webpack_require__(11);
	
	var _auth2 = _interopRequireDefault(_auth);
	
	var _requirePermissionsOf = __webpack_require__(51);
	
	var _requirePermissionsOf2 = _interopRequireDefault(_requirePermissionsOf);
	
	var _handleError = __webpack_require__(53);
	
	var _handleError2 = _interopRequireDefault(_handleError);
	
	var _handleJsonResponse = __webpack_require__(56);
	
	var _handleJsonResponse2 = _interopRequireDefault(_handleJsonResponse);
	
	var _logFile = __webpack_require__(66);
	
	var _logFile2 = _interopRequireDefault(_logFile);
	
	var _prepareApi = __webpack_require__(67);
	
	var _prepareApi2 = _interopRequireDefault(_prepareApi);
	
	var _handleApiNotFound = __webpack_require__(68);
	
	var _handleApiNotFound2 = _interopRequireDefault(_handleApiNotFound);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    parseContext: _parseContext2.default, auth: _auth2.default, requirePermissionsOf: _requirePermissionsOf2.default,
	    handleError: _handleError2.default, handleJSONResponse: _handleJsonResponse2.default, logFile: _logFile2.default, prepareApi: _prepareApi2.default,
	    handleApiNotFound: _handleApiNotFound2.default
	};

/***/ },
/* 9 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = parseContext;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function parseContext(req, res, next) {
	    if (req.session.user) {
	        req.context = {
	            user: _lodash2.default.omit(req.session.user, ['password', 'dateCreated', 'email'])
	        };
	    } else {
	        req.context = {
	            user: {
	                role: 'visitor'
	            }
	        };
	    }
	    next();
	}

/***/ },
/* 10 */
/***/ function(module, exports) {

	module.exports = require("lodash");

/***/ },
/* 11 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.basicAuth = basicAuth;
	exports.check = check;
	exports.revoke = revoke;
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function basicAuth(req, res, next) {
	    var user = new _model2.default(schemas.user);
	    var login = req.body.login ? req.body.login.toLowerCase() : undefined;
	    var password = req.body.password;
	    if (typeof login === 'undefined') {
	        next(new _errors2.default.ValidationError((0, _i18n2.default)('errors.validation.preCheck.missRequiredFields', 'login')));
	    }
	    if (typeof password === 'undefined') {
	        next(new _errors2.default.ValidationError((0, _i18n2.default)('errors.validation.preCheck.missRequiredFields', 'password')));
	    }
	    var query = { $or: [{ username: login, password: password }, { email: login, password: password }] };
	    user.findOne(query).then(function (result) {
	        req.session.user = _humps2.default.camelizeKeys(result);
	        req.apiResults = Promise.resolve({ ok: 1 });
	        next();
	    }, function (error) {
	        next(new _errors2.default.UnauthorizedError((0, _i18n2.default)('errors.middleware.auth.wrongCombination')));
	    });
	}
	function check(req, res) {
	    res.send(_humps2.default.decamelizeKeys(req.context.user));
	}
	function revoke(req, res) {
	    req.session.destroy();
	    res.status(204).send(null);
	}
	exports.default = { basicAuth: basicAuth, check: check, revoke: revoke };

/***/ },
/* 12 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _notFoundError = __webpack_require__(13);
	
	var _notFoundError2 = _interopRequireDefault(_notFoundError);
	
	var _validationError = __webpack_require__(15);
	
	var _validationError2 = _interopRequireDefault(_validationError);
	
	var _badRequestError = __webpack_require__(16);
	
	var _badRequestError2 = _interopRequireDefault(_badRequestError);
	
	var _internalServerError = __webpack_require__(17);
	
	var _internalServerError2 = _interopRequireDefault(_internalServerError);
	
	var _noPermissionError = __webpack_require__(18);
	
	var _noPermissionError2 = _interopRequireDefault(_noPermissionError);
	
	var _unauthorizedError = __webpack_require__(19);
	
	var _unauthorizedError2 = _interopRequireDefault(_unauthorizedError);
	
	var _requestTooLargeError = __webpack_require__(20);
	
	var _requestTooLargeError2 = _interopRequireDefault(_requestTooLargeError);
	
	var _unsupportedFileTypeError = __webpack_require__(21);
	
	var _unsupportedFileTypeError2 = _interopRequireDefault(_unsupportedFileTypeError);
	
	var _emailError = __webpack_require__(22);
	
	var _emailError2 = _interopRequireDefault(_emailError);
	
	var _methodNotAllowedError = __webpack_require__(23);
	
	var _methodNotAllowedError2 = _interopRequireDefault(_methodNotAllowedError);
	
	var _tooManyRequestsError = __webpack_require__(24);
	
	var _tooManyRequestsError2 = _interopRequireDefault(_tooManyRequestsError);
	
	var _tokenRevocationError = __webpack_require__(25);
	
	var _tokenRevocationError2 = _interopRequireDefault(_tokenRevocationError);
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    NotFoundError: _notFoundError2.default,
	    ValidationError: _validationError2.default,
	    BadRequestError: _badRequestError2.default,
	    InternalServerError: _internalServerError2.default,
	    NoPermissionError: _noPermissionError2.default,
	    UnauthorizedError: _unauthorizedError2.default,
	    RequestEntityTooLargeError: _requestTooLargeError2.default,
	    UnsupportedMediaTypeError: _unsupportedFileTypeError2.default,
	    EmailError: _emailError2.default,
	    MethodNotAllowedError: _methodNotAllowedError2.default,
	    TooManyRequestsError: _tooManyRequestsError2.default,
	    TokenRevocationError: _tokenRevocationError2.default,
	    GenericError: _genericError2.default
	};

/***/ },
/* 13 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NotFoundError = function (_GenericError) {
	    _inherits(NotFoundError, _GenericError);
	
	    function NotFoundError(message) {
	        _classCallCheck(this, NotFoundError);
	
	        var _this = _possibleConstructorReturn(this, (NotFoundError.__proto__ || Object.getPrototypeOf(NotFoundError)).call(this, message, 'NotFoundError'));
	
	        _this.statusCode = 404;
	        return _this;
	    }
	
	    return NotFoundError;
	}(_genericError2.default);
	
	exports.default = NotFoundError;

/***/ },
/* 14 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var GenericError = function GenericError(message, name) {
	    _classCallCheck(this, GenericError);
	
	    this.name = name || 'GenericError';
	    this.statusCode = 500;
	    this.message = message;
	    this.stack = new Error().stack;
	    this.type = this.name;
	};
	
	exports.default = GenericError;

/***/ },
/* 15 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ValidationError = function (_GenericError) {
	    _inherits(ValidationError, _GenericError);
	
	    function ValidationError(message, offendingProperty) {
	        _classCallCheck(this, ValidationError);
	
	        var _this = _possibleConstructorReturn(this, (ValidationError.__proto__ || Object.getPrototypeOf(ValidationError)).call(this, message, 'ValidationError'));
	
	        _this.statusCode = 422;
	        if (offendingProperty) {
	            _this.property = offendingProperty;
	        }
	        return _this;
	    }
	
	    return ValidationError;
	}(_genericError2.default);
	
	exports.default = ValidationError;

/***/ },
/* 16 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var BadRequestError = function (_GenericError) {
	    _inherits(BadRequestError, _GenericError);
	
	    function BadRequestError(message, code) {
	        _classCallCheck(this, BadRequestError);
	
	        var _this = _possibleConstructorReturn(this, (BadRequestError.__proto__ || Object.getPrototypeOf(BadRequestError)).call(this, message, 'BadRequestError'));
	
	        _this.statusCode = 400;
	        if (code) {
	            _this.code = code;
	        }
	        return _this;
	    }
	
	    return BadRequestError;
	}(_genericError2.default);
	
	exports.default = BadRequestError;

/***/ },
/* 17 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var InternalServerError = function (_GenericError) {
	    _inherits(InternalServerError, _GenericError);
	
	    function InternalServerError(message) {
	        _classCallCheck(this, InternalServerError);
	
	        var _this = _possibleConstructorReturn(this, (InternalServerError.__proto__ || Object.getPrototypeOf(InternalServerError)).call(this, message, 'InternalServerError'));
	
	        _this.statusCode = 500;
	        return _this;
	    }
	
	    return InternalServerError;
	}(_genericError2.default);
	
	exports.default = InternalServerError;

/***/ },
/* 18 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var NoPermissionError = function (_GenericError) {
	    _inherits(NoPermissionError, _GenericError);
	
	    function NoPermissionError(message) {
	        _classCallCheck(this, NoPermissionError);
	
	        var _this = _possibleConstructorReturn(this, (NoPermissionError.__proto__ || Object.getPrototypeOf(NoPermissionError)).call(this, message, 'NoPermissionError'));
	
	        _this.statusCode = 403;
	        return _this;
	    }
	
	    return NoPermissionError;
	}(_genericError2.default);
	
	exports.default = NoPermissionError;

/***/ },
/* 19 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UnauthorizedError = function (_GenericError) {
	    _inherits(UnauthorizedError, _GenericError);
	
	    function UnauthorizedError(message) {
	        _classCallCheck(this, UnauthorizedError);
	
	        var _this = _possibleConstructorReturn(this, (UnauthorizedError.__proto__ || Object.getPrototypeOf(UnauthorizedError)).call(this, message, 'UnauthorizedError'));
	
	        _this.statusCode = 401;
	        return _this;
	    }
	
	    return UnauthorizedError;
	}(_genericError2.default);
	
	exports.default = UnauthorizedError;

/***/ },
/* 20 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var RequestEntityTooLargeError = function (_GenericError) {
	    _inherits(RequestEntityTooLargeError, _GenericError);
	
	    function RequestEntityTooLargeError(message) {
	        _classCallCheck(this, RequestEntityTooLargeError);
	
	        var _this = _possibleConstructorReturn(this, (RequestEntityTooLargeError.__proto__ || Object.getPrototypeOf(RequestEntityTooLargeError)).call(this, message, 'RequestEntityTooLargeError'));
	
	        _this.statusCode = 413;
	        return _this;
	    }
	
	    return RequestEntityTooLargeError;
	}(_genericError2.default);
	
	exports.default = RequestEntityTooLargeError;

/***/ },
/* 21 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var UnsupportedFileTypeError = function (_GenericError) {
	    _inherits(UnsupportedFileTypeError, _GenericError);
	
	    function UnsupportedFileTypeError(message) {
	        _classCallCheck(this, UnsupportedFileTypeError);
	
	        var _this = _possibleConstructorReturn(this, (UnsupportedFileTypeError.__proto__ || Object.getPrototypeOf(UnsupportedFileTypeError)).call(this, message, 'UnsupportedFileTypeError'));
	
	        _this.statusCode = 415;
	        return _this;
	    }
	
	    return UnsupportedFileTypeError;
	}(_genericError2.default);
	
	exports.default = UnsupportedFileTypeError;

/***/ },
/* 22 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var EmailError = function (_GenericError) {
	    _inherits(EmailError, _GenericError);
	
	    function EmailError(message) {
	        _classCallCheck(this, EmailError);
	
	        var _this = _possibleConstructorReturn(this, (EmailError.__proto__ || Object.getPrototypeOf(EmailError)).call(this, message, 'EmailError'));
	
	        _this.statusCode = 500;
	        return _this;
	    }
	
	    return EmailError;
	}(_genericError2.default);
	
	exports.default = EmailError;

/***/ },
/* 23 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var MethodNotAllowedError = function (_GenericError) {
	    _inherits(MethodNotAllowedError, _GenericError);
	
	    function MethodNotAllowedError(message) {
	        _classCallCheck(this, MethodNotAllowedError);
	
	        var _this = _possibleConstructorReturn(this, (MethodNotAllowedError.__proto__ || Object.getPrototypeOf(MethodNotAllowedError)).call(this, message, 'MethodNotAllowedError'));
	
	        _this.statusCode = 405;
	        return _this;
	    }
	
	    return MethodNotAllowedError;
	}(_genericError2.default);
	
	exports.default = MethodNotAllowedError;

/***/ },
/* 24 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TooManyRequestsError = function (_GenericError) {
	    _inherits(TooManyRequestsError, _GenericError);
	
	    function TooManyRequestsError(message) {
	        _classCallCheck(this, TooManyRequestsError);
	
	        var _this = _possibleConstructorReturn(this, (TooManyRequestsError.__proto__ || Object.getPrototypeOf(TooManyRequestsError)).call(this, message, 'TooManyRequestsError'));
	
	        _this.statusCode = 429;
	        return _this;
	    }
	
	    return TooManyRequestsError;
	}(_genericError2.default);
	
	exports.default = TooManyRequestsError;

/***/ },
/* 25 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _genericError = __webpack_require__(14);
	
	var _genericError2 = _interopRequireDefault(_genericError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var TokenRevocationError = function (_GenericError) {
	    _inherits(TokenRevocationError, _GenericError);
	
	    function TokenRevocationError(message) {
	        _classCallCheck(this, TokenRevocationError);
	
	        var _this = _possibleConstructorReturn(this, (TokenRevocationError.__proto__ || Object.getPrototypeOf(TokenRevocationError)).call(this, message, 'TokenRevocationError'));
	
	        _this.statusCode = 503;
	        return _this;
	    }
	
	    return TokenRevocationError;
	}(_genericError2.default);
	
	exports.default = TokenRevocationError;

/***/ },
/* 26 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = i18n;
	
	var _cn = __webpack_require__(27);
	
	var _cn2 = _interopRequireDefault(_cn);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * referenced ghost i18n.js, it's a simplified version
	 * and I used js to store local translations instead of json
	 */
	function addPadding(str) {
	    if (!str) {
	        return '';
	    }
	    if (escape(str.substr(-1)).indexOf('%u') !== 0) {
	        return ' ' + str + ' ';
	    }
	    return str;
	}
	function getMatchingString(msgPath) {
	    var matchingString = _cn2.default;
	    var path = msgPath.split('.');
	    for (var i = 0; i < path.length; i++) {
	        if (matchingString[path[i]]) {
	            matchingString = matchingString[path[i]];
	        } else {
	            matchingString = null;
	            break;
	        }
	    }
	    return matchingString;
	}
	function addPunc(str, lang) {
	    // todo: lang
	    return str + '\uFF01';
	}
	function i18n(msgPath, value) {
	    var matchingString = getMatchingString(msgPath);
	    if (_lodash2.default.isNull(matchingString)) {
	        console.error('Unable to find matching path [' + msgPath + '] in locale file.\n');
	        matchingString = 'i18n error: path "' + msgPath + '" was not found.';
	    } else {
	        var placeholderIndex = matchingString.indexOf('{value}');
	        if (placeholderIndex !== -1) {
	            var before = matchingString.substring(0, placeholderIndex);
	            var after = matchingString.substr(placeholderIndex + 7);
	            var matchingValue = '';
	            if (typeof value !== 'undefined') {
	                matchingValue = getMatchingString('common.terms.' + value);
	                if (_lodash2.default.isNull(matchingValue)) {
	                    matchingValue = value;
	                }
	                matchingValue = addPadding(matchingValue);
	            }
	            matchingString = addPunc(before + matchingValue + after);
	        } else {
	            matchingString = addPunc(matchingString);
	        }
	    }
	    return matchingString.trim();
	}

/***/ },
/* 27 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    common: {
	        terms: {
	            id: 'ID',
	            username: '用户名',
	            password: '密码',
	            percentage: '进度百分比',
	            email: '邮箱',
	            login: '登录项',
	            description: '描述',
	            name: '名称',
	            creator: '创建者',
	            title: '标题',
	            progress: '进度',
	            user: '用户',
	            admin: '管理员',
	            file: '文件',
	            files: '文件',
	            book: '书籍',
	            books: '书籍'
	        }
	    },
	    errors: {
	        validation: {
	            valueLimit: {
	                notString: '{value}不是字符串',
	                stringOnly: '输入项类型只能为字符串',
	                alphanumeric: '{value}只能为字母或数字',
	                undefined: '{value}未定义',
	                invalidFormat: '{value}格式不对',
	                noPureNumber: '{value}不能为纯数字',
	                onlyStartWithLetters: '{value}只能以字母开头',
	                length: '长度不匹配',
	                minLength: '{value}长度不足',
	                maxLength: '{value}超出最大长度',
	                username: {
	                    allowedChars: '用户名只能包含字母，数字及以下字符 "-","_"'
	                }
	            },
	            preCheck: {
	                emptyObject: '提交数据不能为空',
	                missRequiredFields: '{value}为必填项',
	                unsupportedInput: '发现未知的输入项{value}',
	                inputEmpty: '{value}输入不能为空'
	            }
	        },
	        api: {
	            general: {
	                notFound: '{value}未找到',
	                notFoundIn: '在{value}中未找到',
	                exists: '{value}已存在'
	            },
	            auth: {
	                needPermissionsOf: '需要 {value} 权限',
	                loginRequired: '需要登录'
	            }
	        },
	        schema: {
	            unique: '{value}已存在'
	        },
	        middleware: {
	            auth: {
	                accessDenied: '访问被禁止',
	                wrongPassword: '密码错误',
	                wrongCombination: '用户名或密码错误'
	            },
	            oauth: {
	                tokenExpired: 'token 过期'
	            },
	            spamprevention: {
	                tooManyAttempts: '您的访问过于频繁',
	                noUsername: '无用户名',
	                noPassword: '无密码'
	            }
	        },
	        mail: {
	            failedSendingEmail: '邮件发送失败'
	        },
	        general: {
	            anErrorOccurred: '发生错误',
	            unknownErrorOccurred: '发生未知错误',
	            notFound: '{value}未找到'
	        }
	    }
	};

/***/ },
/* 28 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _database = __webpack_require__(29);
	
	var _database2 = _interopRequireDefault(_database);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _validate = __webpack_require__(42);
	
	var _validate2 = _interopRequireDefault(_validate);
	
	var _outputEmptyEntity = __webpack_require__(33);
	
	var _outputEmptyEntity2 = _interopRequireDefault(_outputEmptyEntity);
	
	var _paginate = __webpack_require__(43);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _helpers = __webpack_require__(44);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Model = function () {
	    _createClass(Model, null, [{
	        key: 'parseQuery',
	        value: function parseQuery(idOrQuery) {
	            if (typeof idOrQuery === 'undefined') {
	                throw new Error('Param idOrQuery is undefined!');
	            }
	            return typeof idOrQuery === 'string' ? { _id: idOrQuery } : idOrQuery;
	        }
	    }]);
	
	    function Model(schema) {
	        _classCallCheck(this, Model);
	
	        this._schema = schema;
	        this._tableName = schema.name;
	    }
	
	    _createClass(Model, [{
	        key: 'outputEmpty',
	        value: function outputEmpty(id) {
	            return (0, _outputEmptyEntity2.default)(this._schema.fields, id);
	        }
	    }, {
	        key: 'findOne',
	        value: function findOne(idOrQuery, raw) {
	            var _this = this;
	
	            var query = Model.parseQuery(idOrQuery);
	            return this.list({ raw: raw, disablePagination: true, query: query }).then(function (result) {
	                var entity = result[0];
	                if (!entity) {
	                    return Promise.reject((0, _helpers.notFoundIn)(_this._schema._baseTable));
	                }
	                return entity;
	            });
	        }
	    }, {
	        key: 'list',
	        value: function list() {
	            var _this2 = this;
	
	            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	            var raw = options.raw;
	            var page = options.page;
	            var disablePagination = options.disablePagination;
	            var filter = options.filter;
	            var mapping = options.mapping;
	            var query = options.query;
	
	            return (0, _database.connect)().then(function (connection) {
	                var doQuery = function doQuery() {
	                    var listRaw = function listRaw(listRawQuery) {
	                        return connection.collection(_this2._tableName).find(listRawQuery).toArray();
	                    };
	                    var rawResults = listRaw(query || {});
	                    if (raw) {
	                        return rawResults;
	                    } else {
	                        return rawResults.then(function (results) {
	                            return (0, _database.embedRef)(results, _this2._schema);
	                        });
	                    }
	                };
	                return doQuery().then(function (entities) {
	                    var modifiedEntities = entities.filter(filter || function () {
	                        return true;
	                    }).map(mapping || function (entity) {
	                        return entity;
	                    });
	                    connection.close();
	                    if (!disablePagination) {
	                        return (0, _paginate2.default)(modifiedEntities, {
	                            page: page || 1
	                        });
	                    }
	                    return modifiedEntities;
	                });
	            });
	        }
	    }, {
	        key: 'listRaw',
	        value: function listRaw() {
	            var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	            var filter = options.filter;
	            var mapping = options.mapping;
	            var query = options.query;
	
	            return this.list({
	                disablePagination: true,
	                raw: true,
	                filter: filter,
	                mapping: mapping,
	                query: query || {}
	            });
	        }
	    }, {
	        key: 'add',
	        value: function add(data) {
	            var _this3 = this;
	
	            var query = function query() {
	                var dataWithID = Object.assign({}, data, {
	                    _id: Math.random().toFixed(8).substr(2),
	                    date_created: new Date().toString()
	                });
	                // 检查是否需要确认唯一性
	                var dataToCheck = _this3._schema.fields.filter(function (field) {
	                    return Boolean(field.unique);
	                }).map(function (field) {
	                    return {
	                        key: field.name,
	                        value: data[field.name]
	                    };
	                }).filter(function (fileld) {
	                    return Boolean(fileld.value);
	                });
	                var exec = function exec() {
	                    return (0, _database.connect)().then(function (connection) {
	                        var result = connection.collection(_this3._tableName).insert([dataWithID]);
	                        connection.close();
	                        return result;
	                    });
	                };
	                // 过滤出和数据库中已存在数据相匹配的输入项
	                if (dataToCheck.length !== 0) {
	                    var checkingResult = Promise.all(dataToCheck.map(function (dataItem) {
	                        return _database2.default.getRowByMatch(_defineProperty({}, dataItem.key, dataItem.value), _this3._tableName).then(function (res) {
	                            if (res.length !== 0) {
	                                return dataItem;
	                            }
	                            return false;
	                        });
	                    })).then(function (res) {
	                        return res.filter(function (r) {
	                            return r !== false;
	                        });
	                    });
	                    return checkingResult.then(function (res) {
	                        if (res.length !== 0) {
	                            return Promise.reject(new _errors2.default.BadRequestError((0, _i18n2.default)('errors.schema.unique', res[0].key)));
	                        }
	                        return exec();
	                    });
	                }
	                return exec();
	            };
	            return _utils2.default.reduceTasks([(0, _validate2.default)(data, this._schema), query]);
	        }
	    }, {
	        key: 'update',
	        value: function update(idOrQuery, data) {
	            var _this4 = this;
	
	            var updateConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	            var multi = updateConfig.multi;
	            var upsert = updateConfig.upsert;
	
	            var query = Model.parseQuery(idOrQuery);
	            var doQuery = function doQuery() {
	                var data2 = Object.assign({}, data, {
	                    date_updated: new Date().toString()
	                });
	                var exec = function exec() {
	                    return (0, _database.connect)().then(function (connection) {
	                        var result = connection.collection(_this4._tableName).update(query, { $set: data2 }, {
	                            upsert: Boolean(upsert),
	                            multi: Boolean(multi)
	                        });
	                        connection.close();
	                        return result;
	                    });
	                };
	                if (!upsert) {
	                    return _this4.findOne(idOrQuery, true).then(function (result) {
	                        return exec();
	                    });
	                }
	                return exec();
	            };
	            return _utils2.default.reduceTasks([(0, _validate2.default)(data, this._schema, true), doQuery]);
	        }
	    }, {
	        key: 'remove',
	        value: function remove(idOrQuery) {
	            var _this5 = this;
	
	            var query = Model.parseQuery(idOrQuery);
	            return (0, _database.connect)().then(function (connection) {
	                var result = connection.collection(_this5._tableName).remove(query);
	                connection.close();
	                return result;
	            });
	        }
	    }]);
	
	    return Model;
	}();
	
	exports.default = Model;

/***/ },
/* 29 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.connect = connect;
	exports.getRowById = getRowById;
	exports.getRowByMatch = getRowByMatch;
	exports.embedRef = embedRef;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _outputEmptyEntity = __webpack_require__(33);
	
	var _outputEmptyEntity2 = _interopRequireDefault(_outputEmptyEntity);
	
	var _mongodb = __webpack_require__(34);
	
	var _mongodb2 = _interopRequireDefault(_mongodb);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var MongoClient = _mongodb2.default.MongoClient;
	function connect() {
	    return MongoClient.connect(_app2.default.database.host + '/' + _app2.default.database.name);
	}
	function getRowById(id, table) {
	    return getRowByMatch({ _id: id }, table);
	}
	function getRowByMatch(match, table) {
	    return connect().then(function (connection) {
	        var results = connection.collection(table).find(match).toArray();
	        connection.close();
	        return results;
	    });
	}
	var getRefFieldsWithIds = function getRefFieldsWithIds(rawResult, schema) {
	    return schema.fields.filter(function (field) {
	        return typeof field.ref !== 'undefined';
	    }).map(function (field) {
	        var ids = rawResult[field.name];
	        // 将 ids 通通转换为数组
	        // 这里包括本该传数组却得到字符串被转换的情况
	        if (!Array.isArray(ids)) {
	            ids = [ids];
	        }
	        return Object.assign({}, field, { ids: ids });
	    });
	};
	// 并且添加相应错误信息
	var handleRefResult = function handleRefResult(rawRefResult, refSchema, id) {
	    if ((typeof rawRefResult === 'undefined' ? 'undefined' : _typeof(rawRefResult)) === 'object') {
	        return rawRefResult;
	    }
	    return (0, _outputEmptyEntity2.default)(refSchema.fields, id);
	};
	var doesRefHaveRefInside = function doesRefHaveRefInside(ref) {
	    return _lodash2.default.filter(ref.fields, function (field) {
	        return Boolean(field.ref);
	    }).length !== 0;
	};
	function embedRef(rawResults, schema) {
	    if (rawResults.length === 0) {
	        return Promise.resolve([]);
	    }
	    // 获取 ref 数据，生成由 ref 字段组成的对象
	    var getRefFieldsWithData = function getRefFieldsWithData(fieldsWithRefIds) {
	        var fieldsWithData = fieldsWithRefIds.map(function (field) {
	            // 一个 field 里面的 ids 返回的查询结果
	            return Promise.all(field.ids.map(function (id) {
	                return getRowById(id, field.ref.name).then(function (results) {
	                    var isRefInRef = doesRefHaveRefInside(field.ref);
	                    var refSchema = field.ref;
	                    if (isRefInRef) {
	                        // 递归！！
	                        return embedRef(results, refSchema).then(function (reRefedResult) {
	                            return handleRefResult(reRefedResult[0], refSchema, id);
	                        });
	                    }
	                    return handleRefResult(results[0], refSchema, id);
	                });
	            })).then(function (refResults) {
	                // 处理单个 ref field 数据，都是数组形式，最终是否为数组取决于 ref field 的 type
	                var fieldData = refResults;
	                if (!field.type || !field.type.isArray()) {
	                    fieldData = refResults[0];
	                }
	                return {
	                    name: field.name,
	                    data: fieldData
	                };
	            });
	        });
	        return Promise.all(fieldsWithData).then(function (fields) {
	            return fields.reduce(function (fieldsObj, field) {
	                return Object.assign({}, fieldsObj, _defineProperty({}, field.name, field.data));
	            }, {});
	        });
	    };
	    return Promise.all(rawResults.map(function (rawResult) {
	        var fieldsWithIds = getRefFieldsWithIds(rawResult, schema);
	        return getRefFieldsWithData(fieldsWithIds).then(function (refObj) {
	            return _lodash2.default.assign({}, rawResult, refObj);
	        });
	    }));
	}
	exports.default = {
	    embedRef: embedRef,
	    getRowByMatch: getRowByMatch,
	    getRowById: getRowById
	};

/***/ },
/* 30 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _appConfig = __webpack_require__(31);
	
	var _appConfig2 = _interopRequireDefault(_appConfig);
	
	var _appConfig3 = __webpack_require__(32);
	
	var _appConfig4 = _interopRequireDefault(_appConfig3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var appConfig = _appConfig2.default;
	if (process.env.NODE_ENV === 'production') {
	    appConfig = _appConfig4.default;
	}
	exports.default = appConfig;

/***/ },
/* 31 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var appConfig = {
	    api: {
	        prefix: 'api'
	    },
	    database: {
	        host: 'mongodb://localhost:27017',
	        name: 'readr',
	        mongoStoreName: 'readr_session'
	    },
	    siteUrl: 'http://readrweb.com',
	    port: 3000,
	    enableEntityCache: false
	};
	exports.default = appConfig;

/***/ },
/* 32 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var appConfig = {
	    api: {
	        prefix: 'api'
	    },
	    database: {
	        host: 'mongodb://localhost:27017',
	        name: 'readr',
	        mongoStoreName: 'readr_session'
	    },
	    siteUrl: 'http://readrweb.com',
	    port: 3000,
	    enableEntityCache: true
	};
	exports.default = appConfig;

/***/ },
/* 33 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = outputEmptyEntity;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function outputEmptyEntity(fields) {
	    var idObjOrIdString = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    // id 可以为对象，此时会直接被扩展到输出结果里面
	    var idObj = idObjOrIdString;
	    if (typeof idObjOrIdString === 'string') {
	        idObj = { _id: idObjOrIdString };
	    }
	    var entity = {};
	    fields.forEach(function (field) {
	        // todo
	        // 添加类型判断
	        entity[field.name] = '';
	    });
	    return _lodash2.default.assign({}, entity, idObj);
	}

/***/ },
/* 34 */
/***/ function(module, exports) {

	module.exports = require("mongodb");

/***/ },
/* 35 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _validator = __webpack_require__(36);
	
	var _validator2 = _interopRequireDefault(_validator);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _pipeline = __webpack_require__(38);
	
	var _pipeline2 = _interopRequireDefault(_pipeline);
	
	var _reduceTasks = __webpack_require__(40);
	
	var _reduceTasks2 = _interopRequireDefault(_reduceTasks);
	
	var _sortByDate = __webpack_require__(41);
	
	var _sortByDate2 = _interopRequireDefault(_sortByDate);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = { validator: _validator2.default, i18n: _i18n2.default, pipeline: _pipeline2.default, reduceTasks: _reduceTasks2.default, sortByDate: _sortByDate2.default };

/***/ },
/* 36 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var validator = __webpack_require__(37);
	var additionalValidators = {
	    lengthMin: function lengthMin(len) {
	        return function (input) {
	            return input.length >= len;
	        };
	    },
	    lengthMax: function lengthMax(len) {
	        return function (input) {
	            return input.length <= len;
	        };
	    }
	};
	exports.default = Object.assign({}, validator, additionalValidators);

/***/ },
/* 37 */
/***/ function(module, exports) {

	module.exports = require("validator");

/***/ },
/* 38 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _bluebird = __webpack_require__(39);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function pipeline(tasks /* initial arguments */) {
	    var args = Array.prototype.slice.call(arguments, 1);
	    var _runTask = function runTask(task, args) {
	        // Self-optimizing function to run first task with multiple
	        // args using apply, but subsequent tasks via direct invocation
	        _runTask = function runTask(task, arg) {
	            return task(arg);
	        };
	        return task.apply(null, args);
	    };
	    // Resolve any promises for the arguments passed in first
	    return _bluebird2.default.all(args).then(function (args) {
	        // Iterate through the tasks passing args from one into the next
	        return _bluebird2.default.reduce(tasks, function (arg, task) {
	            return _runTask(task, arg);
	        }, args);
	    });
	} /**
	   * # Pipeline Utility (borrowed from Ghost)
	   *
	   * Based on pipeline.js from when.js:
	   * https://github.com/cujojs/when/blob/3.7.4/pipeline.js
	   */
	exports.default = pipeline;

/***/ },
/* 39 */
/***/ function(module, exports) {

	module.exports = require("bluebird");

/***/ },
/* 40 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = reduceTasks;
	
	var _bluebird = __webpack_require__(39);
	
	var _bluebird2 = _interopRequireDefault(_bluebird);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// tasks 可以是返回 Promise 的 fn
	// 也可以是 Promise
	function reduceTasks(tasks) {
	    var _this = this;
	
	    return _bluebird2.default.reduce(tasks, function (result, task) {
	        if (typeof task === 'function') {
	            return task.call(_this);
	        }
	        // 如果 task 是 Promise blue bird 貌似会自动把 promise resolve 出来，是 reject 直接就终止执行
	        // 所以 写 task()#then 会出错
	        return task;
	    });
	}

/***/ },
/* 41 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = sortByDate;
	// 最新的在前面
	// 最新的在前面
	function sortByDate() {
	    return function (a, b) {
	        return new Date(b.date_updated).valueOf() - new Date(a.date_updated).valueOf();
	    };
	}

/***/ },
/* 42 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = validate;
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var reduceTasks = _utils2.default.reduceTasks;
	var i18n = _utils2.default.i18n;
	function validate(data, schema, isEditing) {
	    if (typeof data === 'undefined') {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.emptyObject')));
	    }
	    var suppliedFields = Object.keys(data).filter(function (key) {
	        return !_lodash2.default.isUndefined(data[key]);
	    });
	    var suppliedFieldsInSchema = schema.fields.filter(function (field) {
	        return !_lodash2.default.isUndefined(data[field.name]);
	    });
	    var allFields = _lodash2.default.map(schema.fields, 'name');
	    var requiredFields = schema.fields.filter(function (field) {
	        return Boolean(field.required);
	    }).map(function (field) {
	        return field.name;
	    });
	    var unsupportedFields = suppliedFields.filter(function (key) {
	        return allFields.indexOf(key) === -1;
	    });
	    var missedFields = requiredFields.filter(function (key) {
	        return suppliedFields.indexOf(key) === -1;
	    });
	    if (unsupportedFields.length > 0) {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.unsupportedInput', unsupportedFields[0])));
	    }
	    if (missedFields.length > 0 && !isEditing) {
	        return Promise.reject(new _errors2.default.BadRequestError(i18n('errors.validation.preCheck.missRequiredFields', missedFields[0])));
	    }
	    // 验证 fields，因为每个 field 可能有不止一个 validator
	    var validateField = function validateField(val, validators) {
	        return reduceTasks(validators.map(function (validation) {
	            if (validation.fn(val)) {
	                return Promise.resolve(true);
	            }
	            return Promise.reject(new _errors2.default.BadRequestError(validation.errorMsg));
	        }));
	    };
	    // 所有 fields 验证一遍
	    return reduceTasks(suppliedFieldsInSchema.map(function (field) {
	        var validators = field.validators;
	        if (validators) {
	            return validateField(data[field.name], validators);
	        }
	        // 跳过未定义 validation 的 filed
	        return Promise.resolve(true);
	    }));
	}

/***/ },
/* 43 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = paginate;
	var defaultOptions = {
	    page: 1,
	    limit: 10,
	    order: 'new'
	};
	function paginate(results, options) {
	    var _Object$assign = Object.assign({}, defaultOptions, options);
	
	    var page = _Object$assign.page;
	    var limit = _Object$assign.limit;
	    var order = _Object$assign.order;
	    // query 里面传过来的都是 string
	
	    page = parseInt(page, 10);
	    // 如果 page 小于 0 则当做 1 来处理，大于最大页面则不管
	    // 此逻辑参照 GitHub api
	    page = page <= 0 ? 1 : page;
	    limit = parseInt(limit, 10);
	    if (order === 'new') {
	        results.reverse();
	    }
	    var startIndex = (page - 1) * limit;
	    return {
	        entities: results.slice(startIndex, limit + startIndex),
	        _pagination: {
	            current: page,
	            all: Math.ceil(results.length / limit) || 1
	        }
	    };
	}

/***/ },
/* 44 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.computeHash = undefined;
	exports.notFoundError = notFoundError;
	exports.notFoundIn = notFoundIn;
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _computeHash = __webpack_require__(45);
	
	var _computeHash2 = _interopRequireDefault(_computeHash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function notFoundError(itemName) {
	    return new _errors2.default.NotFoundError((0, _i18n2.default)('errors.api.general.notFound', itemName));
	}
	function notFoundIn(collectionName) {
	    return new _errors2.default.NotFoundError((0, _i18n2.default)('errors.api.general.notFoundIn', collectionName));
	}
	exports.computeHash = _computeHash2.default;

/***/ },
/* 45 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.default = computeHash;
	
	var _crypto = __webpack_require__(46);
	
	var _crypto2 = _interopRequireDefault(_crypto);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * source:
	 * http://stackoverflow.com/questions/6984139/how-can-i-get-the-sha1-hash-of-a-string-in-node-js
	 */
	function computeHash(buffer) {
	  var shasum = _crypto2.default.createHash('sha1');
	  shasum.update(buffer);
	  return shasum.digest('hex');
	}

/***/ },
/* 46 */
/***/ function(module, exports) {

	module.exports = require("crypto");

/***/ },
/* 47 */
/***/ function(module, exports) {

	module.exports = require("humps");

/***/ },
/* 48 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.collection = exports.book = exports.author = exports.tag = exports.progress = exports.file = exports.user = undefined;
	
	var _schema = __webpack_require__(49);
	
	var _schema2 = _interopRequireDefault(_schema);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _validator = __webpack_require__(36);
	
	var _validator2 = _interopRequireDefault(_validator);
	
	var _types = __webpack_require__(50);
	
	var _types2 = _interopRequireDefault(_types);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var user = exports.user = new _schema2.default('users', [{
	    name: 'username',
	    required: true,
	    unique: true,
	    validators: [{
	        fn: _validator2.default.lengthMin(5),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.minLength', 'name')
	    }, {
	        fn: _validator2.default.lengthMax(20),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.maxLength', 'name')
	    }]
	}, {
	    name: 'password',
	    required: true,
	    validators: [{
	        fn: _validator2.default.lengthMin(6),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.minLength', 'password')
	    }, {
	        fn: _validator2.default.lengthMax(20),
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.maxLength', 'password')
	    }]
	}, {
	    name: 'email',
	    required: true,
	    unique: true,
	    validators: [{
	        fn: _validator2.default.isEmail,
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.invalidFormat', 'email')
	    }]
	}, {
	    name: 'role',
	    required: true
	}]);
	var file = exports.file = new _schema2.default('files', [{
	    name: 'filename',
	    required: true
	}, {
	    name: 'content',
	    required: true
	}, {
	    name: 'mimetype'
	}, {
	    name: 'size'
	}, {
	    name: 'encoding'
	}, {
	    name: 'hash',
	    unique: true
	}]);
	var progress = exports.progress = new _schema2.default('reading_progress', [{
	    name: 'percentage',
	    required: true,
	    type: _types2.default.Number
	}, {
	    name: 'user_id',
	    type: _types2.default.ID
	}, {
	    name: 'book_id',
	    type: _types2.default.ID
	}]);
	var tag = exports.tag = new _schema2.default('tags', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'slug',
	    unique: true
	}, {
	    name: 'description'
	}]);
	var author = exports.author = new _schema2.default('authors', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'slug',
	    unique: true,
	    validators: [{
	        fn: _validator2.default.isAlphanumeric,
	        errorMsg: (0, _i18n2.default)('errors.validation.valueLimit.alphanumeric', 'slug')
	    }]
	}, {
	    name: 'description'
	}]);
	var book = exports.book = new _schema2.default('books', [{
	    name: 'title',
	    required: true
	}, {
	    name: 'authors',
	    ref: author,
	    type: (0, _types.arrayOf)(_types2.default.ID)
	}, {
	    name: 'description'
	}, {
	    name: 'cover'
	}, {
	    name: 'file',
	    ref: file,
	    required: true
	}]);
	var collection = exports.collection = new _schema2.default('collections', [{
	    name: 'name',
	    required: true
	}, {
	    name: 'items',
	    required: true,
	    ref: book,
	    type: (0, _types.arrayOf)(_types2.default.ID)
	}, {
	    name: 'description'
	}, {
	    name: 'creator',
	    required: true,
	    ref: user
	}]);

/***/ },
/* 49 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var Schema = function () {
	    function Schema(baseTable, fieldDefinition) {
	        _classCallCheck(this, Schema);
	
	        this._fieldDefinition = fieldDefinition;
	        this._baseTable = baseTable;
	    }
	
	    _createClass(Schema, [{
	        key: "name",
	        get: function get() {
	            return this._baseTable;
	        }
	    }, {
	        key: "fields",
	        get: function get() {
	            return this._fieldDefinition;
	        }
	    }]);
	
	    return Schema;
	}();
	
	exports.default = Schema;

/***/ },
/* 50 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var DataType = exports.DataType = function () {
	    function DataType(mark, isTypeArray) {
	        _classCallCheck(this, DataType);
	
	        this.mark = mark;
	        this.isTypeArray = typeof isTypeArray === 'undefined' ? false : isTypeArray;
	    }
	
	    _createClass(DataType, [{
	        key: 'isArray',
	        value: function isArray() {
	            if (typeof this.isTypeArray === 'undefined' || !this.isTypeArray) {
	                return false;
	            }
	            return true;
	        }
	    }, {
	        key: 'equals',
	        value: function equals(type) {
	            return type.mark === this.mark && type.isArray() === this.isTypeArray;
	        }
	    }]);
	
	    return DataType;
	}();
	
	var arrayOf = exports.arrayOf = function arrayOf(type) {
	    return new DataType(type.mark, true);
	};
	var DataTypes = {
	    String: new DataType('STRING'),
	    Number: new DataType('NUMBER'),
	    ID: new DataType('ID')
	};
	exports.default = DataTypes;

/***/ },
/* 51 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = requirePermissionsOf;
	
	var _common = __webpack_require__(52);
	
	var _errors = __webpack_require__(12);
	
	var _errors2 = _interopRequireDefault(_errors);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * 权限等级排序
	 * admin | user | visitor | none
	 */
	function requirePermissionsOf(userRole) {
	    return function (req, res, next) {
	        switch (userRole) {
	            case _common.ROLES.ADMIN:
	                if (req.context.user.role === _common.ROLES.ADMIN) {
	                    next();
	                    break;
	                }
	                next(new _errors2.default.NoPermissionError((0, _i18n2.default)('errors.api.auth.needPermissionsOf', 'admin')));
	                break;
	            case _common.ROLES.USER:
	                if (req.context.user.role === _common.ROLES.USER || req.context.user.role === _common.ROLES.ADMIN) {
	                    next();
	                    break;
	                }
	                next(new _errors2.default.NoPermissionError((0, _i18n2.default)('errors.api.auth.loginRequired')));
	                break;
	            default:
	                if (userRole !== _common.ROLES.VISITOR) {
	                    next(new Error('Undefined role!'));
	                    break;
	                }
	                next();
	        }
	    };
	}

/***/ },
/* 52 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	// 全局变量
	// 全局变量
	var ENABLE_SERVER_ROUTING = exports.ENABLE_SERVER_ROUTING = '__ENABLE_SERVER_ROUTING__';
	var INITIAL_STATE = exports.INITIAL_STATE = '__INITIAL_STATE__';
	// 其他常量
	var DOUBAN_API_ROOT = exports.DOUBAN_API_ROOT = 'https://api.douban.com/v2';
	var GITHUB_API_ROOT = exports.GITHUB_API_ROOT = 'https://api.github.com';
	var ROLES = exports.ROLES = {
	    USER: 'user',
	    ADMIN: 'admin',
	    VISITOR: 'visitor'
	};

/***/ },
/* 53 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleError;
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	var _i18n = __webpack_require__(26);
	
	var _i18n2 = _interopRequireDefault(_i18n);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function handleError(error, req, res, next) {
	    var statusCode = error.statusCode || 500;
	    var errorJson = error;
	    if (Error.prototype.isPrototypeOf(error)) {
	        errorJson = {
	            message: error.message || (0, _i18n2.default)('errors.general.unknownErrorOccurred'),
	            type: error.name
	        };
	    }
	    if (!error.statusCode) {
	        _print2.default.error(error);
	    }
	    res.status(statusCode).send(_lodash2.default.omit(errorJson, ['statusCode', 'name', 'stack']));
	}

/***/ },
/* 54 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var colors = __webpack_require__(55);
	var print = {
	    info: function info(message) {
	        console.info('\n' + colors.bgGreen.bold.white(' INFO '), colors.green(message));
	    },
	    test: function test(message) {
	        console.info('\n' + colors.bgCyan.bold.black(' INFO '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.cyan(message) : message);
	    },
	    warn: function warn(message) {
	        console.error('\n' + colors.bgYellow.bold.black(' WARNING '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.yellow(message) : message);
	    },
	    error: function error(message) {
	        console.error('\n' + colors.bgRed.bold.white(' ERROR '), (typeof message === 'undefined' ? 'undefined' : _typeof(message)) !== 'object' ? colors.red(message) : message);
	    }
	};
	exports.default = print;

/***/ },
/* 55 */
/***/ function(module, exports) {

	module.exports = require("colors/safe");

/***/ },
/* 56 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var API_ROOT = _helpers2.default.getApiRoot();
	function parsePagination(_ref, _ref2) {
	    var fullPath = _ref.fullPath;
	    var query = _ref.query;
	    var current = _ref2.current;
	    var all = _ref2.all;
	
	    var getLintByPage = function getLintByPage(page) {
	        return fullPath + '?' + (0, _parseUrlencoded2.default)(_lodash2.default.assign({}, query, { page: page }));
	    };
	    var links = {
	        first: getLintByPage(1),
	        last: getLintByPage(all),
	        prev: getLintByPage(current - 1),
	        next: getLintByPage(current + 1)
	    };
	    if (current > all) {
	        links.prev = links.last;
	    }
	    if (all === 1) {
	        if (current > 1) {
	            return _lodash2.default.omit(links, ['next']);
	        }
	        if (current === 1) {
	            return _lodash2.default.omit(links, ['prev', 'next']);
	        }
	    }
	    if (current <= 1) {
	        return _lodash2.default.omit(links, ['prev']);
	    }
	    if (current >= all) {
	        return _lodash2.default.omit(links, ['next']);
	    }
	    return links;
	}
	var handleSuccess = function handleSuccess(apiResults, req, res) {
	    if (req.method === 'POST') {
	        res.status(201).send(apiResults);
	    } else {
	        if (apiResults._pagination) {
	            var host = API_ROOT;
	            res.links(parsePagination({
	                fullPath: host + req.path,
	                query: req.query
	            }, apiResults._pagination));
	            res.status(200).send(apiResults.entities);
	            return false;
	        }
	        res.status(200).send(apiResults);
	    }
	};
	function handleJSONResponse(req, res, next) {
	    var apiResults = req.apiResults;
	
	    if (!apiResults) {
	        next(new Error('"apiResults" is not present!'));
	    }
	    apiResults.then(function (results) {
	        handleSuccess(results, req, res);
	    }, function (error) {
	        next(error);
	    });
	}
	exports.default = handleJSONResponse;

/***/ },
/* 57 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = parseUrlencoded;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// todo
	function parseUrlencoded(originalObj) {
	    if (_lodash2.default.isEmpty(originalObj)) {
	        return '';
	    }
	    var object = _lodash2.default.cloneDeep(originalObj);
	    var encodedurl = '';
	    for (var prop in object) {
	        if (_typeof(object[prop]) === 'object' && object[prop] !== null) {
	            object[prop] = object[prop].toString();
	        }
	        encodedurl = '' + encodedurl + prop + '=' + encodeURI(object[prop]) + '&';
	    }
	    return encodedurl.substr(0, encodedurl.length - 1);
	}

/***/ },
/* 58 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _lifecircle = __webpack_require__(59);
	
	var lifecircle = _interopRequireWildcard(_lifecircle);
	
	var _getApiRoot = __webpack_require__(60);
	
	var _getApiRoot2 = _interopRequireDefault(_getApiRoot);
	
	var _isServerRoutingEnabled = __webpack_require__(61);
	
	var _isServerRoutingEnabled2 = _interopRequireDefault(_isServerRoutingEnabled);
	
	var _redirect = __webpack_require__(62);
	
	var _redirect2 = _interopRequireDefault(_redirect);
	
	var _isServerEnv = __webpack_require__(64);
	
	var _isServerEnv2 = _interopRequireDefault(_isServerEnv);
	
	var _print = __webpack_require__(65);
	
	var _print2 = _interopRequireDefault(_print);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = Object.assign({}, lifecircle, {
	    getApiRoot: _getApiRoot2.default,
	    isServerRoutingEnabled: _isServerRoutingEnabled2.default,
	    redirect: _redirect2.default,
	    isServerEnv: _isServerEnv2.default,
	    print: _print2.default
	});

/***/ },
/* 59 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.onRoutingChange = undefined;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	// 检查 store 里面的 routing 是否变化
	var onRoutingChange = exports.onRoutingChange = function onRoutingChange(fn) {
	    return function (nextProps, currentProps) {
	        if (!currentProps.routing) {
	            console.error('routing 需要现在组件 props 里面声明！');
	            return false;
	        }
	        var hasPathParamChanged = !_lodash2.default.isEqual(nextProps.routing, currentProps.routing);
	        if (hasPathParamChanged) {
	            fn(nextProps.routing);
	        }
	    };
	};

/***/ },
/* 60 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getApiRoot;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getApiRoot() {
	    var host = typeof window !== 'undefined' ? window.location.origin : 'http://localhost:3000';
	    return host + '/' + _app2.default.api.prefix;
	}

/***/ },
/* 61 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isServerRoutingEnabled;
	
	var _common = __webpack_require__(52);
	
	function isServerRoutingEnabled() {
	    return Boolean(window[_common.ENABLE_SERVER_ROUTING]);
	}

/***/ },
/* 62 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = redirect;
	
	var _isServerRoutingEnabled = __webpack_require__(61);
	
	var _isServerRoutingEnabled2 = _interopRequireDefault(_isServerRoutingEnabled);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function redirect(url) {
	    if ((0, _isServerRoutingEnabled2.default)()) {
	        _reactRouter.browserHistory.push(url);
	    } else {
	        _reactRouter.hashHistory.push(url);
	    }
	}

/***/ },
/* 63 */
/***/ function(module, exports) {

	module.exports = require("react-router");

/***/ },
/* 64 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isServerEnv;
	function isServerEnv() {
	    return typeof window === 'undefined';
	}

/***/ },
/* 65 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = print;
	function print() {
	    if (process.env.NODE_ENV !== 'production') {
	        var style = 'color: blue;';
	
	        for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
	            args[_key] = arguments[_key];
	        }
	
	        var mergedArgs = [args.join(' ')];
	        var modArgs = mergedArgs.map(function (arg, index) {
	            if (index === 0) {
	                return '%c [DEV] ' + arg;
	            }
	        });
	        modArgs = modArgs.concat(style);
	        console.trace.apply(null, modArgs);
	    }
	}

/***/ },
/* 66 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = logFile;
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _helpers = __webpack_require__(44);
	
	var helpers = _interopRequireWildcard(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var fileModel = new _model2.default(schemas.file);
	// @req#loggedFileId
	function logFile(req, res, next) {
	    var file = req.file;
	    var hash = helpers.computeHash(file.buffer);
	    var data = {
	        filename: file.originalname,
	        // 会被转换为 binData 的 BSON type
	        content: file.buffer,
	        mimetype: file.mimetype,
	        size: file.size,
	        encoding: file.encoding,
	        hash: hash
	    };
	    fileModel.findOne({ hash: hash }).then(function (result) {
	        // req.loggedFileId = result._id
	        // TODO: 404 处理
	        var err = new Error('File already exists!');
	        next(err);
	    }, function (notFoundError) {
	        // TODO: 不使用 404
	        // 为了确定是未找到而不是其他错误需要做额外的判断
	        fileModel.add(data).then(function (result) {
	            var loggedFileId = _lodash2.default.get(result, ['ops', 0, '_id']);
	            if (!loggedFileId) {
	                // TODO
	                // throw new Error('File not Found!')
	                var err = new Error('File not Found!');
	                next(err);
	            } else {
	                req.loggedFileId = loggedFileId;
	                next();
	            }
	        }).catch(function (error) {
	            next(error);
	        });
	    });
	}

/***/ },
/* 67 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = prepareApi;
	function prepareApi(req, res, next) {
	    req.__apiTouched = true;
	    next();
	}

/***/ },
/* 68 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleApiNotFound;
	
	var _helpers = __webpack_require__(44);
	
	function handleApiNotFound(req, res, next) {
	    if (!req.__apiTouched) {
	        next((0, _helpers.notFoundError)('API'));
	    }
	    next();
	}

/***/ },
/* 69 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.listCollections = exports.delFile = exports.readFile = exports.setReadingProgress = exports.getReadingProgress = exports.listShelfBooks = exports.addUser = exports.findUser = exports.removeBook = exports.editBookMeta = exports.listBooks = exports.resolveBookContent = exports.findBook = exports.addBook = exports.user = exports.tag = exports.book = exports.collection = exports.author = undefined;
	
	var _api = __webpack_require__(70);
	
	var api = _interopRequireWildcard(_api);
	
	var _makeBasicEndpoint = __webpack_require__(83);
	
	var _makeBasicEndpoint2 = _interopRequireDefault(_makeBasicEndpoint);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// basic endpoints
	var author = exports.author = (0, _makeBasicEndpoint2.default)(api.author);
	var collection = exports.collection = (0, _makeBasicEndpoint2.default)(api.collection);
	var book = exports.book = (0, _makeBasicEndpoint2.default)(api.book);
	var tag = exports.tag = (0, _makeBasicEndpoint2.default)(api.tag);
	var user = exports.user = (0, _makeBasicEndpoint2.default)(api.user);
	// common endpoints
	// books
	var addBook = exports.addBook = function addBook(req, res, next) {
	    req.apiResults = api.addBook(req.body, req.loggedFileId);
	    next();
	};
	var findBook = exports.findBook = function findBook(req, res, next) {
	    req.apiResults = api.findBook(req.params.book);
	    next();
	};
	var resolveBookContent = exports.resolveBookContent = function resolveBookContent(req, res, next) {
	    req.apiResults = api.resolveBookContent(req.params.book);
	    next();
	};
	var listBooks = exports.listBooks = function listBooks(req, res, next) {
	    req.apiResults = api.listBooks(req.query.page || 1);
	    next();
	};
	var editBookMeta = exports.editBookMeta = function editBookMeta(req, res, next) {
	    req.apiResults = api.editBookMeta(req.params.book, req.body);
	    next();
	};
	var removeBook = exports.removeBook = function removeBook(req, res, next) {
	    req.apiResults = api.removeBook(req.params.book);
	    next();
	};
	// users
	var findUser = exports.findUser = function findUser(req, res, next) {
	    req.apiResults = api.findUser(req.context.user.id);
	    next();
	};
	var addUser = exports.addUser = function addUser(req, res, next) {
	    req.apiResults = api.addUser(req.body);
	    next();
	};
	// user
	var listShelfBooks = exports.listShelfBooks = function listShelfBooks(req, res, next) {
	    req.apiResults = api.listShelfBooks(req.context.user.id, req.query.page || 1);
	    next();
	};
	var getReadingProgress = exports.getReadingProgress = function getReadingProgress(req, res, next) {
	    req.apiResults = api.getReadingProgress(req.context.user.id, req.params.book);
	    next();
	};
	var setReadingProgress = exports.setReadingProgress = function setReadingProgress(req, res, next) {
	    req.apiResults = api.setReadingProgress(req.context.user.id, req.params.book, req.body);
	    next();
	};
	// file
	var readFile = exports.readFile = function readFile(req, res, next) {
	    req.apiResults = api.readFile(req.params.file);
	    next();
	};
	var delFile = exports.delFile = function delFile(req, res, next) {
	    req.apiResults = api.delFile(req.params.file);
	    next();
	};
	// other
	var listCollections = exports.listCollections = function listCollections(req, res, next) {
	    req.apiResults = api.listCollection(req.query.page || 1);
	    next();
	};

/***/ },
/* 70 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.user = exports.tag = exports.book = exports.collection = exports.author = undefined;
	
	var _file = __webpack_require__(71);
	
	Object.keys(_file).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _file[key];
	    }
	  });
	});
	
	var _books = __webpack_require__(72);
	
	Object.keys(_books).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _books[key];
	    }
	  });
	});
	
	var _user = __webpack_require__(79);
	
	Object.keys(_user).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _user[key];
	    }
	  });
	});
	
	var _users = __webpack_require__(80);
	
	Object.keys(_users).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _users[key];
	    }
	  });
	});
	
	var _collections = __webpack_require__(81);
	
	Object.keys(_collections).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _collections[key];
	    }
	  });
	});
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _basicApi = __webpack_require__(82);
	
	var _basicApi2 = _interopRequireDefault(_basicApi);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var author = exports.author = new _basicApi2.default(schemas.author);
	var collection = exports.collection = new _basicApi2.default(schemas.collection);
	var book = exports.book = new _basicApi2.default(schemas.book);
	var tag = exports.tag = new _basicApi2.default(schemas.tag);
	var user = exports.user = new _basicApi2.default(schemas.user);

/***/ },
/* 71 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.readFile = readFile;
	exports.delFile = delFile;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var fileModel = new _model2.default(schemas.file);
	function readFile(fileId, parser) {
	    return fileModel.findOne(fileId).then(function (fileResult) {
	        if (parser && typeof parser === 'function') {
	            var binaryFile = fileResult.content.buffer;
	            return parser(binaryFile).then(function (content) {
	                return _lodash2.default.assign({}, fileResult, {
	                    content: content
	                });
	            });
	        }
	        return fileResult;
	    });
	}
	// TODO
	function delFile(fileId) {
	    return fileModel.findOne(fileId).then(function (resultFile) {
	        return fileModel.remove(fileId);
	    }, function (error) {
	        if (error.type === 'NotFoundError') {
	            return {
	                message: 'File record not found, probably because it doesn\'t exist, or hasn\'t been created in the first place!'
	            };
	        }
	        return Promise.reject(error);
	    });
	}

/***/ },
/* 72 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.findBook = findBook;
	exports.addBook = addBook;
	exports.editBookMeta = editBookMeta;
	exports.resolveBookContent = resolveBookContent;
	exports.listBooks = listBooks;
	exports.listShelfBooks = listShelfBooks;
	exports.removeBook = removeBook;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _paginate = __webpack_require__(43);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _utils = __webpack_require__(35);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _helpers = __webpack_require__(44);
	
	var _file2 = __webpack_require__(71);
	
	var _parsers = __webpack_require__(73);
	
	var _parsers2 = _interopRequireDefault(_parsers);
	
	var _callApi = __webpack_require__(76);
	
	var _callApi2 = _interopRequireDefault(_callApi);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) {
	            try {
	                step(generator.next(value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function rejected(value) {
	            try {
	                step(generator["throw"](value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function step(result) {
	            result.done ? resolve(result.value) : new P(function (resolve) {
	                resolve(result.value);
	            }).then(fulfilled, rejected);
	        }
	        step((generator = generator.apply(thisArg, _arguments)).next());
	    });
	};
	
	var bookModel = new _model2.default(schemas.book);
	var fileModel = new _model2.default(schemas.file);
	var progressModel = new _model2.default(schemas.progress);
	var authorModel = new _model2.default(schemas.author);
	/**
	 * helpers
	 */
	function getAuthorId(authorName, description) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
	        var authorEntity, result;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	            while (1) {
	                switch (_context.prev = _context.next) {
	                    case 0:
	                        _context.prev = 0;
	                        _context.next = 3;
	                        return authorModel.findOne({ name: authorName });
	
	                    case 3:
	                        authorEntity = _context.sent;
	                        return _context.abrupt('return', authorEntity._id);
	
	                    case 7:
	                        _context.prev = 7;
	                        _context.t0 = _context['catch'](0);
	                        _context.next = 11;
	                        return authorModel.add({
	                            name: authorName,
	                            description: description
	                        });
	
	                    case 11:
	                        result = _context.sent;
	                        return _context.abrupt('return', result.ops[0]._id);
	
	                    case 13:
	                    case 'end':
	                        return _context.stop();
	                }
	            }
	        }, _callee, this, [[0, 7]]);
	    }));
	}
	/**
	 * 3rd party
	 */
	function fetchBookByTitle(title) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee2() {
	        var keyword, _ref, bookJson;
	
	        return regeneratorRuntime.wrap(function _callee2$(_context2) {
	            while (1) {
	                switch (_context2.prev = _context2.next) {
	                    case 0:
	                        keyword = title;
	                        _context2.next = 3;
	                        return (0, _callApi2.default)('https://api.douban.com/v2/book/search?q=' + encodeURI(keyword) + '&count=1');
	
	                    case 3:
	                        _ref = _context2.sent;
	                        bookJson = _ref.json;
	                        return _context2.abrupt('return', _lodash2.default.get(bookJson, ['books', 0], {}));
	
	                    case 6:
	                    case 'end':
	                        return _context2.stop();
	                }
	            }
	        }, _callee2, this);
	    }));
	}
	function fetchBookMetaByTitle(title) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee3() {
	        var book;
	        return regeneratorRuntime.wrap(function _callee3$(_context3) {
	            while (1) {
	                switch (_context3.prev = _context3.next) {
	                    case 0:
	                        _context3.next = 2;
	                        return fetchBookByTitle(title);
	
	                    case 2:
	                        book = _context3.sent;
	                        return _context3.abrupt('return', {
	                            cover: _lodash2.default.get(book, ['images', 'large']),
	                            description: _lodash2.default.get(book, 'summary'),
	                            authorInfo: _lodash2.default.get(book, 'author_intro')
	                        });
	
	                    case 4:
	                    case 'end':
	                        return _context3.stop();
	                }
	            }
	        }, _callee3, this);
	    }));
	}
	/**
	 * apis
	 */
	function findBook(id) {
	    return bookModel.findOne(id).then(function (result) {
	        var data = _lodash2.default.omit(result, ['file']);
	        var contentType = 'txt';
	        if (!result.file) {
	            contentType = '';
	        } else if (result.file.mimetype === 'application/epub+zip') {
	            contentType = 'epub';
	        }
	        return _lodash2.default.assign({}, data, {
	            content_type: contentType
	        });
	    });
	}
	function addBook(meta, fileId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee5() {
	        var mergeBookMeta, doSave, fileResult, file, parsedContent, authorName, _file, fileContentArray, title, _authorName;
	
	        return regeneratorRuntime.wrap(function _callee5$(_context5) {
	            while (1) {
	                switch (_context5.prev = _context5.next) {
	                    case 0:
	                        doSave = function doSave(title, authorName) {
	                            return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee4() {
	                                var bookMeta, authorId, bookData;
	                                return regeneratorRuntime.wrap(function _callee4$(_context4) {
	                                    while (1) {
	                                        switch (_context4.prev = _context4.next) {
	                                            case 0:
	                                                _context4.next = 2;
	                                                return fetchBookMetaByTitle(title);
	
	                                            case 2:
	                                                bookMeta = _context4.sent;
	                                                _context4.next = 5;
	                                                return getAuthorId(authorName, bookMeta.authorInfo);
	
	                                            case 5:
	                                                authorId = _context4.sent;
	                                                bookData = mergeBookMeta(title, authorId, _lodash2.default.omit(bookMeta, 'authorInfo'));
	                                                return _context4.abrupt('return', bookModel.add(bookData));
	
	                                            case 8:
	                                            case 'end':
	                                                return _context4.stop();
	                                        }
	                                    }
	                                }, _callee4, this);
	                            }));
	                        };
	
	                        mergeBookMeta = function mergeBookMeta(title, authorId, extMeta) {
	                            return _lodash2.default.assign({}, {
	                                title: title,
	                                authors: [authorId],
	                                file: fileId
	                            }, meta, extMeta);
	                        };
	
	                        if (!fileId) {
	                            _context5.next = 34;
	                            break;
	                        }
	
	                        _context5.next = 5;
	                        return (0, _file2.readFile)(fileId);
	
	                    case 5:
	                        fileResult = _context5.sent;
	
	                        if (!(fileResult.mimetype === 'application/epub+zip')) {
	                            _context5.next = 23;
	                            break;
	                        }
	
	                        _context5.prev = 7;
	                        _context5.next = 10;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.epub);
	
	                    case 10:
	                        file = _context5.sent;
	                        parsedContent = file.content;
	                        authorName = parsedContent.meta.author;
	                        return _context5.abrupt('return', doSave(parsedContent.meta.title, authorName));
	
	                    case 16:
	                        _context5.prev = 16;
	                        _context5.t0 = _context5['catch'](7);
	                        _context5.next = 20;
	                        return fileModel.remove(fileId);
	
	                    case 20:
	                        throw _context5.t0;
	
	                    case 21:
	                        _context5.next = 34;
	                        break;
	
	                    case 23:
	                        if (!(fileResult.mimetype === 'text/plain')) {
	                            _context5.next = 33;
	                            break;
	                        }
	
	                        _context5.next = 26;
	                        return (0, _file2.readFile)(fileId);
	
	                    case 26:
	                        _file = _context5.sent;
	                        fileContentArray = _file.content.buffer.toString('utf-8').split('\n');
	                        title = fileContentArray[0];
	                        _authorName = fileContentArray[1];
	                        return _context5.abrupt('return', doSave(title, _authorName));
	
	                    case 33:
	                        return _context5.abrupt('return', Promise.reject(new Error('Unsupported file type!')));
	
	                    case 34:
	                        return _context5.abrupt('return', bookModel.add(meta));
	
	                    case 35:
	                    case 'end':
	                        return _context5.stop();
	                }
	            }
	        }, _callee5, this, [[7, 16]]);
	    }));
	}
	function editBookMeta(bookId, meta) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee6() {
	        var _ref2, authorInfo, authorId, bookMeta;
	
	        return regeneratorRuntime.wrap(function _callee6$(_context6) {
	            while (1) {
	                switch (_context6.prev = _context6.next) {
	                    case 0:
	                        _context6.next = 2;
	                        return bookModel.findOne(bookId, true);
	
	                    case 2:
	                        _context6.next = 4;
	                        return fetchBookMetaByTitle(meta.authors);
	
	                    case 4:
	                        _ref2 = _context6.sent;
	                        authorInfo = _ref2.authorInfo;
	                        _context6.next = 8;
	                        return getAuthorId(meta.authors, authorInfo);
	
	                    case 8:
	                        authorId = _context6.sent;
	                        bookMeta = __assign({}, meta, {
	                            authors: [authorId]
	                        });
	                        return _context6.abrupt('return', bookModel.update(bookId, bookMeta, {
	                            upsert: false
	                        }));
	
	                    case 11:
	                    case 'end':
	                        return _context6.stop();
	                }
	            }
	        }, _callee6, this);
	    }));
	}
	function resolveBookContent(bookId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee7() {
	        var bookEntity, fileId, bookContent, fileResult, _fileResult;
	
	        return regeneratorRuntime.wrap(function _callee7$(_context7) {
	            while (1) {
	                switch (_context7.prev = _context7.next) {
	                    case 0:
	                        _context7.next = 2;
	                        return bookModel.findOne(bookId);
	
	                    case 2:
	                        bookEntity = _context7.sent;
	                        fileId = bookEntity.file._id;
	                        bookContent = void 0;
	
	                        if (fileId) {
	                            _context7.next = 7;
	                            break;
	                        }
	
	                        return _context7.abrupt('return', Promise.reject((0, _helpers.notFoundError)('book')));
	
	                    case 7:
	                        if (!(bookEntity.file.mimetype === 'application/epub+zip')) {
	                            _context7.next = 14;
	                            break;
	                        }
	
	                        _context7.next = 10;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.epub);
	
	                    case 10:
	                        fileResult = _context7.sent;
	
	                        bookContent = _lodash2.default.omit(fileResult.content, ['meta']);
	                        _context7.next = 22;
	                        break;
	
	                    case 14:
	                        if (!(bookEntity.file.mimetype === 'text/plain')) {
	                            _context7.next = 21;
	                            break;
	                        }
	
	                        _context7.next = 17;
	                        return (0, _file2.readFile)(fileId, _parsers2.default.txtContent);
	
	                    case 17:
	                        _fileResult = _context7.sent;
	
	                        bookContent = _fileResult.content;
	                        _context7.next = 22;
	                        break;
	
	                    case 21:
	                        return _context7.abrupt('return', Promise.reject(new Error('Unsupported file type!')));
	
	                    case 22:
	                        return _context7.abrupt('return', _lodash2.default.assign({}, bookContent, { _id: bookId, content_id: fileId }));
	
	                    case 23:
	                    case 'end':
	                        return _context7.stop();
	                }
	            }
	        }, _callee7, this);
	    }));
	}
	function listBooks(page) {
	    return bookModel.list({
	        page: page,
	        disablePagination: _lodash2.default.isNil(page),
	        mapping: function mapping(entity) {
	            return _lodash2.default.omit(entity, ['content', 'file']);
	        }
	    });
	}
	function listShelfBooks(userId, page) {
	    return progressModel.listRaw({ query: { user_id: userId } }).then(function (results) {
	        if (results.length === 0) {
	            return results;
	        }
	        return Promise.all(results.sort(_utils2.default.sortByDate()).map(function (result) {
	            return bookModel.findOne(result.book_id, true).then(function (res) {
	                return res;
	            }, function (error) {
	                // 如果错误不是 404 也输出空的 entity
	                return bookModel.outputEmpty(result.book_id);
	            });
	        })).then(function (res) {
	            return (0, _paginate2.default)(res.map(function (entity) {
	                return _lodash2.default.omit(entity, ['content']);
	            }), {
	                page: page
	            });
	        });
	    });
	}
	function removeBook(bookId) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee8() {
	        var book, fileId;
	        return regeneratorRuntime.wrap(function _callee8$(_context8) {
	            while (1) {
	                switch (_context8.prev = _context8.next) {
	                    case 0:
	                        _context8.next = 2;
	                        return bookModel.findOne(bookId, true);
	
	                    case 2:
	                        book = _context8.sent;
	                        fileId = book.file;
	                        _context8.next = 6;
	                        return bookModel.remove(bookId);
	
	                    case 6:
	                        return _context8.abrupt('return', (0, _file2.delFile)(fileId));
	
	                    case 7:
	                    case 'end':
	                        return _context8.stop();
	                }
	            }
	        }, _callee8, this);
	    }));
	}

/***/ },
/* 73 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _simpleEpubParser = __webpack_require__(74);
	
	var _simpleEpubParser2 = _interopRequireDefault(_simpleEpubParser);
	
	var _txtContent = __webpack_require__(75);
	
	var _txtContent2 = _interopRequireDefault(_txtContent);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = { epub: _simpleEpubParser2.default, txtContent: _txtContent2.default };

/***/ },
/* 74 */
/***/ function(module, exports) {

	module.exports = require("simple-epub-parser");

/***/ },
/* 75 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = txtContent;
	var __awaiter = undefined && undefined.__awaiter || function (thisArg, _arguments, P, generator) {
	    return new (P || (P = Promise))(function (resolve, reject) {
	        function fulfilled(value) {
	            try {
	                step(generator.next(value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function rejected(value) {
	            try {
	                step(generator["throw"](value));
	            } catch (e) {
	                reject(e);
	            }
	        }
	        function step(result) {
	            result.done ? resolve(result.value) : new P(function (resolve) {
	                resolve(result.value);
	            }).then(fulfilled, rejected);
	        }
	        step((generator = generator.apply(thisArg, _arguments)).next());
	    });
	};
	function txtContent(target) {
	    return __awaiter(this, void 0, void 0, regeneratorRuntime.mark(function _callee() {
	        var nav, content, buffer, flesh;
	        return regeneratorRuntime.wrap(function _callee$(_context) {
	            while (1) {
	                switch (_context.prev = _context.next) {
	                    case 0:
	                        nav = [{
	                            ref: 'part01',
	                            label: '第一章节',
	                            index: 0
	                        }];
	                        content = void 0;
	
	                        if (!(typeof target === 'string')) {
	                            _context.next = 7;
	                            break;
	                        }
	
	                        buffer = new Buffer(target, 'binary');
	
	                        content = buffer.toString();
	                        _context.next = 12;
	                        break;
	
	                    case 7:
	                        if (!Buffer.isBuffer(target)) {
	                            _context.next = 11;
	                            break;
	                        }
	
	                        content = target.toString();
	                        _context.next = 12;
	                        break;
	
	                    case 11:
	                        throw new Error('Only string or buffer is supported!');
	
	                    case 12:
	                        flesh = [{
	                            src: 'part01',
	                            markdown: content
	                        }];
	                        return _context.abrupt('return', { nav: nav, flesh: flesh });
	
	                    case 14:
	                    case 'end':
	                        return _context.stop();
	                }
	            }
	        }, _callee, this);
	    }));
	}

/***/ },
/* 76 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.callApi = callApi;
	
	__webpack_require__(77);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _jsonp = __webpack_require__(78);
	
	var _jsonp2 = _interopRequireDefault(_jsonp);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var defaultOptions = {
	    dataType: 'json',
	    method: 'GET',
	    credentials: 'same-origin'
	};
	// return fetch options
	var parseOptions = function parseOptions(originanOptions) {
	    var _Object$assign = Object.assign({}, defaultOptions, originanOptions);
	
	    var method = _Object$assign.method;
	    var data = _Object$assign.data;
	    var credentials = _Object$assign.credentials;
	    var dataType = _Object$assign.dataType;
	    var useJsonp = _Object$assign.useJsonp;
	
	    var fetchOptions = {};
	    if (useJsonp) {
	        return {
	            useJsonp: true
	        };
	    }
	    if (method) {
	        fetchOptions.method = method;
	    }
	    if (credentials) {
	        fetchOptions.credentials = credentials;
	    }
	    // handle request headers and body
	    if (method === 'POST' || method === 'PUT') {
	        var contentType = void 0;
	        var body = void 0;
	        if (dataType === 'json') {
	            contentType = 'application/json';
	            body = JSON.stringify(data);
	        } else {
	            contentType = 'application/x-www-form-urlencoded';
	            body = (0, _parseUrlencoded2.default)(data);
	            if (dataType !== 'urlencoded') {
	                console.warn('Unsupported dataType used "urlencoded" instead!');
	            }
	        }
	        fetchOptions.headers = {
	            'Content-Type': contentType,
	            'Access-Control-Request-Method': method
	        };
	        fetchOptions.body = body;
	    }
	    if (method === 'DELETE') {
	        fetchOptions.headers = {
	            'Access-Control-Request-Method': 'DELETE'
	        };
	    }
	    return fetchOptions;
	};
	// type Result = {
	//   json: any
	//   _response: any
	// }
	function callApi(fullUrl) {
	    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    if (options.useJsonp) {
	        return (0, _jsonp2.default)(fullUrl);
	    }
	    return fetch(fullUrl, parseOptions(options)).then(function (response) {
	        if (response.status !== 204) {
	            return response.json().then(function (json) {
	                if (!response.ok) {
	                    return Promise.reject(json);
	                }
	                return { json: json, _response: response };
	            });
	        }
	        return { json: {}, _response: response };
	    });
	}
	exports.default = callApi;

/***/ },
/* 77 */
/***/ function(module, exports) {

	module.exports = require("isomorphic-fetch");

/***/ },
/* 78 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.default = jsonp;
	function jsonp(fullUrl) {
	    if (fullUrl.indexOf('douban') !== -1) {
	        var _ret = function () {
	            var id = new Date().valueOf();
	            var jsonpId = 'jsonp-' + id;
	            var jsonpCallback = 'jsonpCallback' + id;
	            var jsonpCallbackData = '__JSONP_DATA_' + id + '__';
	            window[jsonpCallback] = function (data) {
	                window[jsonpCallbackData] = data;
	            };
	            var script = document.createElement('script');
	            script.setAttribute('src', fullUrl + '&callback=' + jsonpCallback);
	            script.setAttribute('id', jsonpId);
	            document.body.appendChild(script);
	            return {
	                v: new Promise(function (resolve) {
	                    script.onload = function () {
	                        document.body.removeChild(document.getElementById(jsonpId));
	                        resolve({ json: window[jsonpCallbackData] });
	                    };
	                })
	            };
	        }();
	
	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	}

/***/ },
/* 79 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getReadingProgress = getReadingProgress;
	exports.setReadingProgress = setReadingProgress;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var progressModel = new _model2.default(schemas.progress);
	function getReadingProgress(userId, bookId) {
	    var query = _humps2.default.decamelizeKeys({ userId: userId, bookId: bookId });
	    return progressModel.list({ disablePagination: true, raw: true, query: query }).then(function (res) {
	        if (res.length === 0) {
	            return progressModel.outputEmpty({
	                user_id: userId,
	                book_id: bookId
	            });
	        }
	        return res[0];
	    });
	}
	function setReadingProgress(userId, bookId, data) {
	    var query = _humps2.default.decamelizeKeys({ userId: userId, bookId: bookId });
	    return progressModel.update(query, data, {
	        upsert: true
	    });
	}

/***/ },
/* 80 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.findUser = findUser;
	exports.addUser = addUser;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var userModel = new _model2.default(schemas.user);
	function findUser(id) {
	    return userModel.findOne(id).then(function (entity) {
	        return _lodash2.default.omit(entity, ['password']);
	    });
	}
	function addUser(userInfo) {
	    return userModel.add(_lodash2.default.assign({}, userInfo, {
	        role: _common.ROLES.USER
	    }));
	}

/***/ },
/* 81 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.listCollection = listCollection;
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	var _schemas = __webpack_require__(48);
	
	var schemas = _interopRequireWildcard(_schemas);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var collectionModel = new _model2.default(schemas.collection);
	function listCollection(page) {
	    return collectionModel.list({
	        page: page,
	        disablePagination: _lodash2.default.isNil(page),
	        mapping: function mapping(entity) {
	            return _lodash2.default.assign({}, entity, {
	                items: entity['items'].map(function (item) {
	                    return _lodash2.default.omit(item, 'content');
	                })
	            });
	        }
	    });
	}

/***/ },
/* 82 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _model = __webpack_require__(28);
	
	var _model2 = _interopRequireDefault(_model);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	var BasicApi = function () {
	    function BasicApi(schema) {
	        _classCallCheck(this, BasicApi);
	
	        this._schema = schema;
	        this._model = new _model2.default(schema);
	    }
	
	    _createClass(BasicApi, [{
	        key: 'findOne',
	        value: function findOne(id) {
	            return this._model.findOne(id);
	        }
	    }, {
	        key: 'list',
	        value: function list(page, keyword) {
	            return this._model.list({
	                page: page,
	                disablePagination: _lodash2.default.isNil(page),
	                // TODO
	                filter: function filter(entity) {
	                    return true;
	                }
	            });
	        }
	    }, {
	        key: 'add',
	        value: function add(data) {
	            return this._model.add(data);
	        }
	    }, {
	        key: 'update',
	        value: function update(id, data) {
	            // todo
	            // 无法提前知道是否为 upsert，所以无法预先决定是否验证 fields
	            // 可能会造成 upsert 的数据 fields 不全的问题
	            return this._model.update(id, data);
	        }
	    }, {
	        key: 'remove',
	        value: function remove(id) {
	            return this._model.remove(id);
	        }
	    }]);
	
	    return BasicApi;
	}();
	
	exports.default = BasicApi;

/***/ },
/* 83 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var makeBasicEndpoint = function makeBasicEndpoint(apiFns) {
	    var findOne = function findOne(req, res, next) {
	        req.apiResults = apiFns.findOne(req.params.id);
	        next();
	    };
	    var list = function list(req, res, next) {
	        req.apiResults = apiFns.list(req.query.page || 1);
	        next();
	    };
	    var add = function add(req, res, next) {
	        req.apiResults = apiFns.add(req.body);
	        next();
	    };
	    var update = function update(req, res, next) {
	        req.apiResults = apiFns.update(req.params.id, req.body);
	        next();
	    };
	    var remove = function remove(req, res, next) {
	        req.apiResults = apiFns.remove(req.params.id);
	        next();
	    };
	    return { findOne: findOne, list: list, add: add, update: update, remove: remove };
	};
	exports.default = makeBasicEndpoint;

/***/ },
/* 84 */
/***/ function(module, exports) {

	module.exports = require("multer");

/***/ },
/* 85 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _options = __webpack_require__(86);
	
	var _options2 = _interopRequireDefault(_options);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _createRoutes = __webpack_require__(89);
	
	var _createRoutes2 = _interopRequireDefault(_createRoutes);
	
	var _render = __webpack_require__(359);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var PROD_ERROR_MSG = '稍安勿躁，工程师正在解决问题 ...';
	var isRoot = function isRoot(url) {
	    var urlParts = url.split('?')[0].split('/');
	    if (urlParts.length !== 2) {
	        return false;
	    }
	    if (_lodash2.default.last(urlParts) !== '') {
	        return false;
	    }
	    return true;
	};
	function pages(req, res) {
	    // 服务端路由关闭（仅限开发模式）
	    if (_options2.default.route === false) {
	        if (!isRoot(req.url)) {
	            res.status(404).send('\n        <div style="margin: 60px auto; width: 600px; padding: 5px 20px; border: 1px solid #222;">\n          <h1 style="font-weight: bold; font-size: 22px; margin: 10px 0;">404 Not Found</h1>\n          <p style="margin: 10px 0;">Dev mode with server routing disabled</p>\n        </div>\n      ');
	            return false;
	        }
	        (0, _render2.default)().then(function (result) {
	            res.send(result);
	        });
	        return false;
	    }
	    var isProd = _options2.default.production;
	    try {
	        (0, _render2.default)({
	            reqUrl: req.url,
	            routes: (0, _createRoutes2.default)({ request: req, response: res }),
	            isProd: isProd,
	            fetchData: _options2.default.render,
	            isHot: _options2.default.hot,
	            userSession: req.context.user
	        }).then(function (_ref) {
	            var html = _ref.html;
	            var redirectLocation = _ref.redirectLocation;
	            var statusCode = _ref.statusCode;
	
	            if (redirectLocation) {
	                res.redirect(302, redirectLocation.pathname + redirectLocation.search);
	            }
	            res.status(statusCode).send(html);
	        });
	    } catch (error) {
	        var errorMsg = isProd ? PROD_ERROR_MSG : error.message;
	        var htmlString = (0, _render.render500)(errorMsg, isProd);
	        res.status(500).send(htmlString);
	    }
	}
	exports.default = pages;

/***/ },
/* 86 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _parsedArgv = __webpack_require__(87);
	
	var _parsedArgv2 = _interopRequireDefault(_parsedArgv);
	
	var _express = __webpack_require__(4);
	
	var _express2 = _interopRequireDefault(_express);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Server 支持的选项
	 * --hot 热重载
	 * --production 生产环境
	 * --noRender 服务端渲染
	 * --noRoute 服务端路由
	 */
	var app = (0, _express2.default)();
	var appEnv = app.get('env');
	var render = !Boolean(_parsedArgv2.default['noRender']);
	var hot = Boolean(_parsedArgv2.default['hot']);
	var route = !Boolean(_parsedArgv2.default['noRoute']);
	if (route === false) {
	    render = false;
	}
	var production = Boolean(_parsedArgv2.default['production']);
	if (appEnv === 'production') {
	    production = true;
	}
	var options = {
	    hot: hot,
	    render: render,
	    route: route,
	    production: production
	};
	exports.default = options;

/***/ },
/* 87 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _minimist = __webpack_require__(88);
	
	var _minimist2 = _interopRequireDefault(_minimist);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var argv = (0, _minimist2.default)(process.argv.slice(2));
	exports.default = argv;

/***/ },
/* 88 */
/***/ function(module, exports) {

	module.exports = require("minimist");

/***/ },
/* 89 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Master = __webpack_require__(91);
	
	var _Master2 = _interopRequireDefault(_Master);
	
	var _App = __webpack_require__(170);
	
	var _App2 = _interopRequireDefault(_App);
	
	var _Console = __webpack_require__(194);
	
	var _Console2 = _interopRequireDefault(_Console);
	
	var _reactRouter = __webpack_require__(63);
	
	var _api = __webpack_require__(206);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	var createRoutes = function createRoutes() {
	    var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var request = context.request;
	    var response = context.response;
	
	    var handleConsoleEnter = function handleConsoleEnter(nextState, replace, callback) {
	        if (request) {
	            // 服务端校验方式
	            var role = request.context.user.role;
	
	            if (role !== _common.ROLES.ADMIN) {
	                response.redirect('/');
	            }
	            callback();
	        } else {
	            // 客户端校验方式
	            try {
	                _api2.default.auth().then(function (res) {
	                    if (res.json.role !== _common.ROLES.ADMIN) {
	                        replace('/');
	                    }
	                    callback();
	                });
	            } catch (error) {
	                alert('服务器异常，请稍后再试！');
	                console.error(error);
	            }
	        }
	    };
	    return _react2.default.createElement(_reactRouter.Route, { path: "/", component: _Master2.default }, _react2.default.createElement(_reactRouter.Route, __assign({ path: "viewer/book/:id" }, __webpack_require__(210))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "test" }, __webpack_require__(262))), _react2.default.createElement(_reactRouter.Route, { component: _App2.default }, _react2.default.createElement(_reactRouter.IndexRoute, __assign({}, __webpack_require__(264))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "browse" }, __webpack_require__(285))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "book/:id" }, __webpack_require__(289))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections" }, __webpack_require__(293))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections/:id" }, __webpack_require__(301))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "signin" }, __webpack_require__(305))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "signup" }, __webpack_require__(309))), _react2.default.createElement(_reactRouter.Route, { path: "user" }, _react2.default.createElement(_reactRouter.IndexRedirect, { to: "/user/profile" }), _react2.default.createElement(_reactRouter.Route, __assign({ path: "shelf" }, __webpack_require__(312))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "preference" }, __webpack_require__(319))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "profile" }, __webpack_require__(324))))), _react2.default.createElement(_reactRouter.Route, { onEnter: handleConsoleEnter, path: "console", component: _Console2.default }, _react2.default.createElement(_reactRouter.IndexRedirect, { to: "/console/books" }), _react2.default.createElement(_reactRouter.Route, __assign({ path: "books" }, __webpack_require__(328))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "users" }, __webpack_require__(344))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "books/new" }, __webpack_require__(346))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "collections/new" }, __webpack_require__(350)))), _react2.default.createElement(_reactRouter.Route, __assign({ path: "*" }, __webpack_require__(353))));
	};
	exports.default = createRoutes;

/***/ },
/* 90 */
/***/ function(module, exports) {

	module.exports = require("react");

/***/ },
/* 91 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(92);
	
	var _actions = __webpack_require__(93);
	
	var _Alert = __webpack_require__(119);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _Modal = __webpack_require__(137);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Master = function (_Component) {
	    _inherits(Master, _Component);
	
	    _createClass(Master, null, [{
	        key: 'fetchData',
	        value: function fetchData(_ref) {
	            var store = _ref.store;
	            var userSession = _ref.userSession;
	
	            return store.dispatch((0, _actions.userAuth)(userSession));
	        }
	    }]);
	
	    function Master(props) {
	        _classCallCheck(this, Master);
	
	        return _possibleConstructorReturn(this, (Master.__proto__ || Object.getPrototypeOf(Master)).call(this, props));
	    }
	
	    _createClass(Master, [{
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var hasNewErrorMsg = this.props.errorMessage.length !== nextProps.errorMessage.length;
	            var routerChanged = nextProps.routing.locationBeforeTransitions.pathname !== this.props.routing.locationBeforeTransitions.pathname;
	            if (hasNewErrorMsg) {
	                this.props.sendNotification(_lodash2.default.last(nextProps.errorMessage).toString(), 'error', 0);
	            }
	            if (routerChanged) {
	                // 返回顶部
	                window.document.body.scrollTop = 0;
	            }
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            this.props.userAuth();
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _props = this.props;
	            var confirmModal = _props.confirmModal;
	            var closeConfirmModal = _props.closeConfirmModal;
	            var modal = _props.modal;
	            var closeModal = _props.closeModal;
	
	            return _react2.default.createElement("div", { className: "app-root" }, _react2.default.createElement(_Modal.ConfirmModal, { open: confirmModal.open, title: confirmModal.title, onConfirm: confirmModal.onConfirm, onRequestClose: closeConfirmModal, width: 500 }, confirmModal.content), _react2.default.createElement(_Modal.ModalPlus, { open: modal.open, width: 500, onRequestClose: closeModal, title: modal.title }, modal.content), this.props.notifications.filter(function (noti) {
	                return noti.visible;
	            }).length > 0 && _react2.default.createElement(_Alert.Alerts, { onRequestClose: this.props.hideNotification, messages: this.props.notifications.map(function (noti) {
	                    return {
	                        content: noti.message || '发生错误！',
	                        type: noti.type,
	                        visible: noti.visible,
	                        id: noti.id
	                    };
	                }) }), this.props.children);
	        }
	    }]);
	
	    return Master;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notifications: state.components.notifications,
	        errorMessage: state.errorMessage,
	        confirmModal: state.components.confirmModal,
	        modal: state.components.modal,
	        routing: state.routing,
	        session: state.session
	    };
	}, { sendNotification: _actions.sendNotification, hideNotification: _actions.hideNotification, closeConfirmModal: _actions.closeConfirmModal, userAuth: _actions.userAuth, closeModal: _actions.closeModal })(Master);

/***/ },
/* 92 */
/***/ function(module, exports) {

	module.exports = require("react-redux");

/***/ },
/* 93 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.resetForm = exports.initializeForm = undefined;
	
	var _api = __webpack_require__(94);
	
	Object.keys(_api).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _api[key];
	    }
	  });
	});
	
	var _common = __webpack_require__(110);
	
	Object.keys(_common).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _common[key];
	    }
	  });
	});
	
	var _test = __webpack_require__(111);
	
	Object.keys(_test).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _test[key];
	    }
	  });
	});
	
	var _viewer = __webpack_require__(112);
	
	Object.keys(_viewer).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _viewer[key];
	    }
	  });
	});
	
	var _betterReduxForm = __webpack_require__(117);
	
	// form
	var initializeForm = exports.initializeForm = _betterReduxForm.actions.initialize;
	var resetForm = exports.resetForm = _betterReduxForm.actions.reset;

/***/ },
/* 94 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.LOAD_ACTIONS = exports.loadBookProgress = exports.progress = exports.userLogout = exports.logout = exports.loadUsers = exports.users = exports.loadBooks = exports.books = exports.loadBookContent = exports.bookContent = exports.loadBook = exports.book = exports.removeEntity = undefined;
	exports.fetchAuthors = fetchAuthors;
	exports.fetchCollections = fetchCollections;
	exports.fetchCollection = fetchCollection;
	exports.searchDoubanBooks = searchDoubanBooks;
	exports.fetchProfile = fetchProfile;
	exports.userAuth = userAuth;
	exports.fetchShelf = fetchShelf;
	
	var _utils = __webpack_require__(95);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _schemas = __webpack_require__(106);
	
	var _schemas2 = _interopRequireDefault(_schemas);
	
	var _common = __webpack_require__(52);
	
	var _utils3 = __webpack_require__(108);
	
	var _actionTypes = __webpack_require__(109);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var removeEntity = exports.removeEntity = function removeEntity(name, id) {
	    return { type: ActionTypes.REMOVE_ENTITY, name: name, id: id };
	};
	var book = exports.book = (0, _utils3.createActionEntity)(ActionTypes.BOOK);
	var loadBook = exports.loadBook = function loadBook(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK, { id: id });
	};
	var bookContent = exports.bookContent = (0, _utils3.createActionEntity)(ActionTypes.BOOK_CONTENT);
	var loadBookContent = exports.loadBookContent = function loadBookContent(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK_CONTENT, { id: id });
	};
	var books = exports.books = (0, _utils3.createActionEntity)(ActionTypes.BOOKS);
	var loadBooks = exports.loadBooks = function loadBooks(options, key) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOKS, { options: options, key: key });
	};
	var users = exports.users = (0, _utils3.createActionEntity)(ActionTypes.USERS);
	var loadUsers = exports.loadUsers = function loadUsers(options) {
	    return (0, _utils3.action)(ActionTypes.LOAD_USERS, { options: options });
	};
	var logout = exports.logout = (0, _utils3.createActionEntity)(ActionTypes.LOGOUT);
	var userLogout = exports.userLogout = function userLogout() {
	    return (0, _utils3.action)(ActionTypes.USER_LOGOUT);
	};
	var progress = exports.progress = (0, _utils3.createActionEntity)(ActionTypes.BOOK_PROGRESS);
	var loadBookProgress = exports.loadBookProgress = function loadBookProgress(id) {
	    return (0, _utils3.action)(ActionTypes.LOAD_BOOK_PROGRESS, { id: id });
	};
	// define load actions handled in sagas
	var LOAD_ACTIONS = exports.LOAD_ACTIONS = [ActionTypes.LOAD_BOOK, ActionTypes.LOAD_BOOK_CONTENT, ActionTypes.LOAD_BOOKS, ActionTypes.LOAD_USERS];
	/**
	 * legacy call api actions
	 */
	function fetchAuthors(options) {
	    var CALL_API = {
	        types: [ActionTypes.AUTHORS.REQUEST, ActionTypes.AUTHORS.SUCCESS, ActionTypes.AUTHORS.FAILURE],
	        endpoint: 'authors?' + _utils2.default.parseUrlencoded(options),
	        schema: _schemas2.default.AUTHOR_ARRAY,
	        pagination: {
	            name: 'authors',
	            q: options.q
	        }
	    };
	    return { CALL_API: CALL_API };
	}
	function fetchCollections() {
	    var flowType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'newest';
	
	    return {
	        flowType: flowType,
	        CALL_API: {
	            types: [ActionTypes.COLLECTIONS.REQUEST, ActionTypes.COLLECTIONS.SUCCESS, ActionTypes.COLLECTIONS.FAILURE],
	            endpoint: 'collections',
	            schema: _schemas2.default.COLLECTION_ARRAY
	        }
	    };
	}
	function fetchCollection(collectionId) {
	    return {
	        collectionId: collectionId,
	        CALL_API: {
	            types: [ActionTypes.COLLECTION.REQUEST, ActionTypes.COLLECTION.SUCCESS, ActionTypes.COLLECTION.FAILURE],
	            endpoint: 'collections/' + collectionId,
	            schema: _schemas2.default.COLLECTION
	        }
	    };
	}
	function searchDoubanBooks(q) {
	    var CALL_API = {
	        types: [ActionTypes.DOUBAN_BOOKS.REQUEST, ActionTypes.DOUBAN_BOOKS.SUCCESS, ActionTypes.DOUBAN_BOOKS.FAILURE],
	        endpoint: 'book/search?count=10&q=' + q,
	        apiUrl: _common.DOUBAN_API_ROOT,
	        schema: _schemas2.default.DOUBAN_BOOK_SEARCH_RESULTS,
	        options: { useJsonp: true },
	        pagination: {
	            name: 'doubanBooks',
	            q: q
	        }
	    };
	    return { q: q, CALL_API: CALL_API };
	}
	function fetchProfile() {
	    var CALL_API = {
	        types: [ActionTypes.PROFILE.REQUEST, ActionTypes.PROFILE.SUCCESS, ActionTypes.PROFILE.FAILURE],
	        endpoint: 'user/profile',
	        schema: _schemas2.default.PROFILE
	    };
	    return { CALL_API: CALL_API };
	}
	function userAuth(userSession) {
	    // 服务端渲染 session
	    if (userSession) {
	        return {
	            SERVER_STORE: {
	                body: {
	                    response: userSession,
	                    type: ActionTypes.AUTH.SUCCESS
	                }
	            }
	        };
	    }
	    return {
	        CALL_API: {
	            types: [ActionTypes.AUTH.REQUEST, ActionTypes.AUTH.SUCCESS, ActionTypes.AUTH.FAILURE],
	            endpoint: 'auth'
	        }
	    };
	}
	function fetchShelf() {
	    var CALL_API = {
	        types: [ActionTypes.SHELF.REQUEST, ActionTypes.SHELF.SUCCESS, ActionTypes.SHELF.FAILURE],
	        endpoint: 'user/books/shelf',
	        schema: _schemas2.default.SHELF_BOOK_ARRAY,
	        pagination: {
	            name: 'bookShelves'
	        }
	    };
	    return { CALL_API: CALL_API };
	}

/***/ },
/* 95 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getCurrentTime = __webpack_require__(96);
	
	var _getCurrentTime2 = _interopRequireDefault(_getCurrentTime);
	
	var _padNumberWithZero = __webpack_require__(97);
	
	var _padNumberWithZero2 = _interopRequireDefault(_padNumberWithZero);
	
	var _parseQuery = __webpack_require__(98);
	
	var _parseQuery2 = _interopRequireDefault(_parseQuery);
	
	var _parseUrlencoded = __webpack_require__(57);
	
	var _parseUrlencoded2 = _interopRequireDefault(_parseUrlencoded);
	
	var _dom = __webpack_require__(99);
	
	var _dom2 = _interopRequireDefault(_dom);
	
	var _browser = __webpack_require__(101);
	
	var _browser2 = _interopRequireDefault(_browser);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = Object.assign({
	    getCurrentTime: _getCurrentTime2.default,
	    padNumberWithZero: _padNumberWithZero2.default,
	    parseQuery: _parseQuery2.default,
	    parseUrlencoded: _parseUrlencoded2.default
	}, _dom2.default, _browser2.default);

/***/ },
/* 96 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getCurrentTime;
	
	var _padNumberWithZero = __webpack_require__(97);
	
	var _padNumberWithZero2 = _interopRequireDefault(_padNumberWithZero);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function getCurrentTime() {
	    var d = new Date();
	    var time = [d.getFullYear(), d.getMonth() + 1, d.getDate(), d.getHours(), d.getMinutes(), d.getSeconds()];
	    return time.map(function (t) {
	        return (0, _padNumberWithZero2.default)(t);
	    }).join('');
	}

/***/ },
/* 97 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = padNumberWithZero;
	function padNumberWithZero(num) {
	    var numStrWithZero = void 0;
	    if (num < 10) {
	        numStrWithZero = '0' + num.toString();
	    } else {
	        numStrWithZero = num.toString();
	    }
	    return numStrWithZero;
	}

/***/ },
/* 98 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = parseQuery;
	function parseQuery(queryString) {
	    var params = queryString.split('&');
	    var object = {};
	    params.forEach(function (param) {
	        var key = param.split('=')[0];
	        var val = param.split('=')[1];
	        object[key] = val;
	    });
	    return object;
	}

/***/ },
/* 99 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _isDescendant = __webpack_require__(100);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    isDescendant: _isDescendant2.default
	};

/***/ },
/* 100 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = isDescendant;
	function isDescendant(parent, child) {
	    var node = child.parentNode;
	    while (node != null) {
	        if (node === parent) {
	            return true;
	        }
	        node = node.parentNode;
	    }
	    return false;
	}

/***/ },
/* 101 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _getScreenInfo = __webpack_require__(102);
	
	var _getScreenInfo2 = _interopRequireDefault(_getScreenInfo);
	
	var _isIE = __webpack_require__(103);
	
	var _isIE2 = _interopRequireDefault(_isIE);
	
	var _lockScroll = __webpack_require__(104);
	
	var _lockScroll2 = _interopRequireDefault(_lockScroll);
	
	var _unlockScroll = __webpack_require__(105);
	
	var _unlockScroll2 = _interopRequireDefault(_unlockScroll);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    getScreenInfo: _getScreenInfo2.default,
	    isIE: _isIE2.default,
	    lockScroll: _lockScroll2.default,
	    unlockScroll: _unlockScroll2.default
	};

/***/ },
/* 102 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = getScreenInfo;
	function getScreenInfo() {
	    if (typeof window === 'undefined') {
	        console.error('window is undefined, empty info object will be returned!');
	        return {
	            view: {},
	            screen: {}
	        };
	    }
	    return {
	        view: {
	            width: window.innerWidth,
	            height: window.innerHeight,
	            aspectRatio: window.innerWidth / window.innerHeight
	        },
	        screen: window.screen
	    };
	}

/***/ },
/* 103 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.isIE = isIE;
	function isIE(ver) {
	    if (typeof ver === 'undefined') {
	        ver = null;
	    }
	    var b = document.createElement('b');
	    b.innerHTML = '<!--[if IE ' + ver + ']><i></i><![endif]-->';
	    return b.getElementsByTagName('i').length === 1;
	}

/***/ },
/* 104 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = lockScroll;
	function lockScroll() {
	    document.body.style.overflow = 'hidden';
	}

/***/ },
/* 105 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = unlockScroll;
	function unlockScroll() {
	    document.body.style.overflow = 'visible';
	}

/***/ },
/* 106 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _normalizr = __webpack_require__(107);
	
	var book = new _normalizr.Schema('books', {
	    idAttribute: 'id'
	});
	var bookContent = new _normalizr.Schema('bookContents', {
	    idAttribute: 'id'
	});
	var author = new _normalizr.Schema('authors', {
	    idAttribute: 'id'
	});
	var collection = new _normalizr.Schema('bookCollections', {
	    idAttribute: 'id'
	});
	collection.define({
	    items: (0, _normalizr.arrayOf)(book)
	});
	var profile = new _normalizr.Schema('profiles', {
	    idAttribute: 'id'
	});
	var user = new _normalizr.Schema('users', {
	    idAttribute: 'id'
	});
	var doubanBook = new _normalizr.Schema('doubanBooks', {
	    idAttribute: 'id'
	});
	var shelfBook = new _normalizr.Schema('shelfBooks', {
	    idAttribute: 'id'
	});
	var bookProgress = new _normalizr.Schema('bookProgress', {
	    idAttribute: 'bookId'
	});
	var matchedBooks = new _normalizr.Schema('books', {
	    idAttribute: 'bookId'
	});
	exports.default = {
	    BOOK: book,
	    BOOK_CONTENT: bookContent,
	    BOOK_PROGRESS: bookProgress,
	    BOOK_ARRAY: (0, _normalizr.arrayOf)(book),
	    DOUBAN_BOOK_SEARCH_RESULTS: { books: (0, _normalizr.arrayOf)(doubanBook) },
	    USER_ARRAY: (0, _normalizr.arrayOf)(user),
	    MATCHED_BOOK_ARRAY: (0, _normalizr.arrayOf)(matchedBooks),
	    COLLECTION: collection,
	    COLLECTION_ARRAY: (0, _normalizr.arrayOf)(collection),
	    PROFILE: profile,
	    AUTHOR: author,
	    AUTHOR_ARRAY: (0, _normalizr.arrayOf)(author),
	    SHELF_BOOK_ARRAY: (0, _normalizr.arrayOf)(shelfBook)
	};

/***/ },
/* 107 */
/***/ function(module, exports) {

	module.exports = require("normalizr");

/***/ },
/* 108 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var REQUEST = 'REQUEST';
	var SUCCESS = 'SUCCESS';
	var FAILURE = 'FAILURE';
	var LOAD_CACHE = 'LOAD_CACHE';
	var action = exports.action = function action(type) {
	    var payload = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	
	    return Object.assign({}, {
	        type: type
	    }, payload);
	};
	var createRequestTypes = exports.createRequestTypes = function createRequestTypes(base) {
	    return [REQUEST, SUCCESS, FAILURE, LOAD_CACHE].reduce(function (acc, type) {
	        acc[type] = 'api/' + base + '/' + type;
	        return acc;
	    }, {});
	};
	var createComponentActionType = exports.createComponentActionType = function createComponentActionType(name, operation) {
	    return 'components/' + name + '/' + operation;
	};
	var createSagaTriggerActionType = exports.createSagaTriggerActionType = function createSagaTriggerActionType(operation) {
	    return 'saga-triggers/' + operation;
	};
	var createActionEntity = exports.createActionEntity = function createActionEntity(requestTypes) {
	    return {
	        request: function request(payload) {
	            return action(requestTypes.REQUEST, payload);
	        },
	        success: function success(response, payload) {
	            return action(requestTypes.SUCCESS, Object.assign({}, { response: response }, payload));
	        },
	        // TODO
	        loadCache: function loadCache(response, payload) {
	            return action(requestTypes.SUCCESS, Object.assign({}, { response: response }, payload, { loadedFromCache: true }));
	        },
	        failure: function failure(error, payload) {
	            return action(requestTypes.FAILURE, Object.assign({}, { error: error }, payload));
	        }
	    };
	};

/***/ },
/* 109 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.VIEWER = exports.MODAL = exports.CLOSE_CONFIRM_MODAL = exports.OPEN_CONFIRM_MODAL = exports.NOTIFICATION = exports.SHELF = exports.AUTH = exports.PROFILE = exports.DOUBAN_BOOKS = exports.COLLECTION = exports.COLLECTIONS = exports.AUTHORS = exports.LOAD_BOOK_PROGRESS = exports.BOOK_PROGRESS = exports.USER_LOGOUT = exports.LOGOUT = exports.LOAD_USERS = exports.USERS = exports.LOAD_BOOKS = exports.BOOKS = exports.LOAD_BOOK_CONTENT = exports.BOOK_CONTENT = exports.LOAD_BOOK = exports.BOOK = exports.REMOVE_ENTITY = undefined;
	
	var _utils = __webpack_require__(108);
	
	/**
	 * api
	 */
	var REMOVE_ENTITY = exports.REMOVE_ENTITY = 'REMOVE_ENTITY';
	var BOOK = exports.BOOK = (0, _utils.createRequestTypes)('book');
	var LOAD_BOOK = exports.LOAD_BOOK = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK');
	var BOOK_CONTENT = exports.BOOK_CONTENT = (0, _utils.createRequestTypes)('book-content');
	var LOAD_BOOK_CONTENT = exports.LOAD_BOOK_CONTENT = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK_CONTENT');
	var BOOKS = exports.BOOKS = (0, _utils.createRequestTypes)('books');
	var LOAD_BOOKS = exports.LOAD_BOOKS = (0, _utils.createSagaTriggerActionType)('LOAD_BOOKS');
	var USERS = exports.USERS = (0, _utils.createRequestTypes)('users');
	var LOAD_USERS = exports.LOAD_USERS = (0, _utils.createSagaTriggerActionType)('LOAD_USERS');
	var LOGOUT = exports.LOGOUT = (0, _utils.createRequestTypes)('revoke');
	var USER_LOGOUT = exports.USER_LOGOUT = (0, _utils.createSagaTriggerActionType)('USER_LOGOUT');
	var BOOK_PROGRESS = exports.BOOK_PROGRESS = (0, _utils.createRequestTypes)('book-progress');
	var LOAD_BOOK_PROGRESS = exports.LOAD_BOOK_PROGRESS = (0, _utils.createSagaTriggerActionType)('LOAD_BOOK_PROGRESS');
	var AUTHORS = exports.AUTHORS = (0, _utils.createRequestTypes)('authors');
	var COLLECTIONS = exports.COLLECTIONS = (0, _utils.createRequestTypes)('collections');
	var COLLECTION = exports.COLLECTION = (0, _utils.createRequestTypes)('collection');
	var DOUBAN_BOOKS = exports.DOUBAN_BOOKS = (0, _utils.createRequestTypes)('douban-books');
	var PROFILE = exports.PROFILE = (0, _utils.createRequestTypes)('profile');
	var AUTH = exports.AUTH = (0, _utils.createRequestTypes)('auth');
	var SHELF = exports.SHELF = (0, _utils.createRequestTypes)('shelf');
	/**
	 * components
	 */
	// general
	var NOTIFICATION = exports.NOTIFICATION = {
	    SHOW: (0, _utils.createComponentActionType)('notification', 'SHOW'),
	    HIDE: (0, _utils.createComponentActionType)('notification', 'HIDE')
	};
	var OPEN_CONFIRM_MODAL = exports.OPEN_CONFIRM_MODAL = (0, _utils.createComponentActionType)('confirm-modal', 'OPEN');
	var CLOSE_CONFIRM_MODAL = exports.CLOSE_CONFIRM_MODAL = (0, _utils.createComponentActionType)('confirm-modal', 'CLOSE');
	var MODAL = exports.MODAL = {
	    OPEN: (0, _utils.createComponentActionType)('modal', 'SHOW'),
	    CLOSE: (0, _utils.createComponentActionType)('modal', 'HIDE')
	};
	// viewer
	var VIEWER = exports.VIEWER = {
	    INITIALIZE: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'INITIALIZE')),
	    INITIALIZE_CONFIG: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'INITIALIZE_CONFIG')),
	    CONFIG: (0, _utils.createComponentActionType)('viewer', 'CONFIG'),
	    CALC_START: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'CALC_START')),
	    CALC_SUCCESS: (0, _utils.createComponentActionType)('viewer', 'CALC_SUCCESS'),
	    CALC_FAILURE: (0, _utils.createComponentActionType)('viewer', 'CALC_FAILURE'),
	    BOOK_PROGRESS_UPDATE: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer/progress', 'UPDATE')),
	    // TODO: 这个好像没用
	    BOOK_PROGRESS_INITIALIZE: (0, _utils.createComponentActionType)('viewer/progress', 'INITIALIZE'),
	    // TODO: 这个好像也没用
	    BOOK_PROGRESS_DESTROY: (0, _utils.createComponentActionType)('viewer/progress', 'DESTROY'),
	    JUMP: (0, _utils.createSagaTriggerActionType)((0, _utils.createComponentActionType)('viewer', 'JUMP')),
	    FONT_CHANGE: (0, _utils.createComponentActionType)('viewer/preference', 'CHANGE_FONT_SIZE'),
	    PANEL_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/panel', 'TOGGLE'),
	    PREFERENCE_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/preference', 'TOGGLE'),
	    NAVIGATION_TOGGLE: (0, _utils.createComponentActionType)('viewer/components/navigation', 'TOGGLE'),
	    THEME_CHANGE: (0, _utils.createComponentActionType)('viewer/theme', 'CHANGE'),
	    SCROLL_MODE_TOGGLE: (0, _utils.createComponentActionType)('viewer/scroll-mode', 'TOGGLE')
	};

/***/ },
/* 110 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.sendNotification = undefined;
	exports.showNotification = showNotification;
	exports.hideNotification = hideNotification;
	exports.openConfirmModal = openConfirmModal;
	exports.closeConfirmModal = closeConfirmModal;
	exports.openModal = openModal;
	exports.closeModal = closeModal;
	
	var _actionTypes = __webpack_require__(109);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var sendNotification = exports.sendNotification = function sendNotification(message) {
	    var msgType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'success';
	    var t = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 2000;
	
	    return function (dispatch, getState) {
	        var id = Math.random().toFixed(8).substr(2);
	        dispatch(showNotification(id, message, msgType));
	        if (t !== 0) {
	            setTimeout(function () {
	                dispatch(hideNotification(id));
	            }, t);
	        }
	    };
	};
	function showNotification(id, message) {
	    var msgType = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'success';
	
	    return {
	        type: ActionTypes.NOTIFICATION.SHOW,
	        message: message,
	        msgType: msgType,
	        id: id
	    };
	}
	function hideNotification(id) {
	    return {
	        type: ActionTypes.NOTIFICATION.HIDE,
	        id: id
	    };
	}
	function openConfirmModal(data) {
	    return {
	        type: ActionTypes.OPEN_CONFIRM_MODAL,
	        data: data
	    };
	}
	function closeConfirmModal() {
	    return {
	        type: ActionTypes.CLOSE_CONFIRM_MODAL
	    };
	}
	function openModal(data) {
	    return {
	        type: ActionTypes.MODAL.OPEN,
	        data: data
	    };
	}
	function closeModal() {
	    return {
	        type: ActionTypes.MODAL.CLOSE
	    };
	}

/***/ },
/* 111 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var loadSomething = exports.loadSomething = function loadSomething() {
	    return {
	        type: 'LOAD'
	    };
	};
	var saveSomething = exports.saveSomething = function saveSomething() {
	    return {
	        type: 'SAVE'
	    };
	};

/***/ },
/* 112 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.toggleViewerScrollMode = exports.changeViewerTheme = exports.changeViewerFontSize = exports.toggleViewerNavigation = exports.toggleViewerPreference = exports.toggleViewerPanel = exports.viewerJumpTo = exports.destroyBookProgress = exports.updateBookProgress = exports.initializeBookProgress = exports.calcBookFailure = exports.calcBookSuccess = exports.calcBook = exports.configViewer = exports.initializeViewer = exports.initializeViewerConfig = undefined;
	
	var _selectors = __webpack_require__(113);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	// viewer
	var initializeViewerConfig = exports.initializeViewerConfig = function initializeViewerConfig(bookId) {
	    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    return { bookId: bookId, config: config, type: ACTION_TYPES.VIEWER.INITIALIZE_CONFIG };
	};
	var initializeViewer = exports.initializeViewer = function initializeViewer(bookId) {
	    return { bookId: bookId, type: ACTION_TYPES.VIEWER.INITIALIZE };
	};
	var configViewer = exports.configViewer = function configViewer(bookId, payload) {
	    return {
	        bookId: bookId,
	        payload: payload,
	        type: ACTION_TYPES.VIEWER.CONFIG
	    };
	};
	// book
	var calcBook = exports.calcBook = function calcBook(bookId, wrap) {
	    return {
	        bookId: bookId,
	        wrap: wrap,
	        type: ACTION_TYPES.VIEWER.CALC_START
	    };
	};
	var calcBookSuccess = exports.calcBookSuccess = function calcBookSuccess(bookId, computed) {
	    return {
	        bookId: bookId,
	        computed: computed,
	        type: ACTION_TYPES.VIEWER.CALC_SUCCESS
	    };
	};
	var calcBookFailure = exports.calcBookFailure = function calcBookFailure(bookId, error) {
	    return {
	        bookId: bookId,
	        error: error,
	        type: ACTION_TYPES.VIEWER.CALC_FAILURE
	    };
	};
	var initializeBookProgress = exports.initializeBookProgress = function initializeBookProgress() {
	    return { type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_INITIALIZE };
	};
	// progress
	var updateBookProgress = exports.updateBookProgress = function updateBookProgress(percentage) {
	    return function (dispatch, getState) {
	        _helpers2.default.print('Action updateBookProgress');
	        var state = getState();
	
	        var _selectors$viewer$con = selectors.viewer.config(state);
	
	        var bookId = _selectors$viewer$con.bookId;
	
	        var computed = selectors.viewer.computed(bookId)(state);
	        var pageNo = Math.floor(computed.length * percentage) + 1;
	        return dispatch({
	            id: bookId,
	            percentage: percentage,
	            pageNo: pageNo,
	            type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE
	        });
	    };
	};
	var destroyBookProgress = exports.destroyBookProgress = function destroyBookProgress() {
	    return {
	        type: ACTION_TYPES.VIEWER.BOOK_PROGRESS_DESTROY
	    };
	};
	var viewerJumpTo = exports.viewerJumpTo = function viewerJumpTo(percentage) {
	    return { type: ACTION_TYPES.VIEWER.JUMP, percentage: percentage };
	};
	// sub components
	var toggleViewerPanel = exports.toggleViewerPanel = function toggleViewerPanel(reset) {
	    return { type: ACTION_TYPES.VIEWER.PANEL_TOGGLE, reset: reset };
	};
	var toggleViewerPreference = exports.toggleViewerPreference = function toggleViewerPreference(reset) {
	    return { type: ACTION_TYPES.VIEWER.PREFERENCE_TOGGLE, reset: reset };
	};
	var toggleViewerNavigation = exports.toggleViewerNavigation = function toggleViewerNavigation(reset) {
	    return { type: ACTION_TYPES.VIEWER.NAVIGATION_TOGGLE, reset: reset };
	};
	// config
	var changeViewerFontSize = exports.changeViewerFontSize = function changeViewerFontSize(fontSizeInPixel) {
	    return { type: ACTION_TYPES.VIEWER.FONT_CHANGE, fontSize: fontSizeInPixel };
	};
	var changeViewerTheme = exports.changeViewerTheme = function changeViewerTheme(themeName) {
	    return { type: ACTION_TYPES.VIEWER.THEME_CHANGE, theme: themeName };
	};
	var toggleViewerScrollMode = exports.toggleViewerScrollMode = function toggleViewerScrollMode(reset) {
	    return { type: ACTION_TYPES.VIEWER.SCROLL_MODE_TOGGLE, reset: reset };
	};

/***/ },
/* 113 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.viewer = exports.form = exports.common = undefined;
	
	var _entities = __webpack_require__(114);
	
	Object.keys(_entities).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _entities[key];
	    }
	  });
	});
	
	var _common = __webpack_require__(116);
	
	var common = _interopRequireWildcard(_common);
	
	var _betterReduxForm = __webpack_require__(117);
	
	var _viewer = __webpack_require__(118);
	
	var viewer = _interopRequireWildcard(_viewer);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.common = common;
	exports.form = _betterReduxForm.selectors;
	exports.viewer = viewer;

/***/ },
/* 114 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.sessionUserId = exports.users = exports.booksAsOptions = exports.authorsAsOptions = exports.doubanBooksAsOptions = exports.books = exports.shelfBooks = exports.authors = exports.doubanBooks = undefined;
	
	var _reselect = __webpack_require__(115);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(116);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var doubanBooks = exports.doubanBooks = function doubanBooks(key) {
	    return (0, _reselect.createSelector)((0, _common.pagedEntities)({
	        entitiesName: 'doubanBooks',
	        paginationName: 'doubanBooks',
	        paginationKey: key
	    }), function (books) {
	        return books;
	    });
	};
	var authors = exports.authors = function authors(key) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'authors',
	        paginationName: 'authors',
	        paginationKey: key
	    });
	};
	var shelfBooks = exports.shelfBooks = function shelfBooks(key) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'shelfBooks',
	        paginationName: 'bookShelves',
	        paginationKey: key
	    });
	};
	var books = exports.books = function books(key, page) {
	    return (0, _common.pagedEntities)({
	        entitiesName: 'books',
	        paginationName: 'books',
	        paginationKey: key,
	        page: page
	    });
	};
	var doubanBooksAsOptions = exports.doubanBooksAsOptions = function doubanBooksAsOptions(key) {
	    return (0, _reselect.createSelector)(doubanBooks(key), function (selectedBooks) {
	        return selectedBooks.map(function (book) {
	            return {
	                name: book.title,
	                value: book.id,
	                additional: {
	                    description: book.summary,
	                    cover: book.images.large,
	                    author: book.author.join(', ')
	                }
	            };
	        });
	    });
	};
	var authorsAsOptions = exports.authorsAsOptions = function authorsAsOptions(key) {
	    return (0, _reselect.createSelector)(authors(key), function (items) {
	        return items.map(function (item) {
	            return {
	                name: item.name,
	                value: item.id
	            };
	        });
	    });
	};
	var booksAsOptions = exports.booksAsOptions = function booksAsOptions(key) {
	    return (0, _reselect.createSelector)(books(key), function (items) {
	        return items.map(function (item) {
	            return {
	                name: item.title,
	                value: item.id
	            };
	        });
	    });
	};
	var users = exports.users = (0, _common.pagedEntities)({
	    entitiesName: 'users',
	    paginationName: 'users'
	});
	var sessionUserId = exports.sessionUserId = function sessionUserId(state) {
	    return _lodash2.default.get(state, ['session', 'user', 'id']);
	};

/***/ },
/* 115 */
/***/ function(module, exports) {

	module.exports = require("reselect");

/***/ },
/* 116 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.pagedEntities = exports.entityPages = exports.currentPage = exports.nextPage = exports.paginationLinks = exports.paginationPages = exports.isPaginationFetching = exports.entity = exports.entities = exports.session = undefined;
	
	var _reselect = __webpack_require__(115);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DEFAULT_KEY = 'default';
	var session = exports.session = function session(state) {
	    return _lodash2.default.get(state, ['session'], {});
	};
	var entities = exports.entities = function entities(name) {
	    return function (state) {
	        return state.entities[name] || {};
	    };
	};
	var entity = exports.entity = function entity(name, id) {
	    return function (state) {
	        return _lodash2.default.get(state, ['entities', name, id], {});
	    };
	};
	var isPaginationFetching = exports.isPaginationFetching = function isPaginationFetching(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.get(state, ['pagination', name, key, 'isFetching'], true);
	    };
	};
	var paginationPages = exports.paginationPages = function paginationPages(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.get(state, ['pagination', name, key, 'pages'], {});
	    };
	};
	var paginationLinks = exports.paginationLinks = function paginationLinks(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return function (state) {
	        return _lodash2.default.pick(_lodash2.default.get(state.pagination, name + '.' + key, {}), ['next', 'last']);
	    };
	};
	var nextPage = exports.nextPage = function nextPage(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return (0, _reselect.createSelector)(paginationLinks(name, key), function (selectedPaginationLinks) {
	        return _lodash2.default.get(selectedPaginationLinks, 'next.page', 0);
	    });
	};
	var currentPage = exports.currentPage = function currentPage(name) {
	    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : DEFAULT_KEY;
	    return (0, _reselect.createSelector)(paginationLinks(name, key), function (selectedPaginationLinks) {
	        var next = _lodash2.default.get(selectedPaginationLinks, 'next.page');
	        var last = _lodash2.default.get(selectedPaginationLinks, 'last.page');
	        return next ? next - 1 : last;
	    });
	};
	var entityPages = exports.entityPages = function entityPages(options) {
	    var entitiesName = options.entitiesName;
	    var paginationName = options.paginationName;
	    var paginationKey = options.paginationKey;
	
	    return (0, _reselect.createSelector)(entities(entitiesName), paginationPages(paginationName, paginationKey), function (selectedEntities, pages) {
	        return _lodash2.default.mapValues(pages, function (ids) {
	            return ids.map(function (id) {
	                return selectedEntities[id];
	            }).filter(function (item) {
	                return Boolean(item);
	            });
	        });
	    });
	};
	var pagedEntities = exports.pagedEntities = function pagedEntities(options) {
	    var page = options.page;
	
	    return (0, _reselect.createSelector)(entityPages(options), function (pages) {
	        if (page) {
	            return _lodash2.default.get(pages, [page], []);
	        }
	        var allEntities = [];
	        _lodash2.default.keys(pages).forEach(function (p) {
	            allEntities = allEntities.concat(pages[p]);
	        });
	        return allEntities;
	    });
	};

/***/ },
/* 117 */
/***/ function(module, exports) {

	module.exports = require("better-redux-form");

/***/ },
/* 118 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.navigation = exports.preference = exports.panel = exports.progress = exports.navData = exports.computed = exports.config = exports.self = undefined;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(116);
	
	var common = _interopRequireWildcard(_common);
	
	var _reselect = __webpack_require__(115);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var self = exports.self = function self(state) {
	    return _lodash2.default.get(state, ['components', 'viewer'], {});
	};
	var config = exports.config = function config(state) {
	    return _lodash2.default.get(state, ['components', 'viewer', 'config'], {});
	};
	var computed = exports.computed = function computed(bookId) {
	    return function (state) {
	        return _lodash2.default.get(state, ['components', 'viewer', 'contents', bookId, 'computed'], []);
	    };
	};
	var navData = exports.navData = function navData(bookId) {
	    return function (state) {
	        var bookContent = common.entity('bookContents', bookId)(state);
	        return _lodash2.default.get(bookContent, 'nav', []);
	    };
	};
	var progress = exports.progress = function progress(bookId) {
	    return function (state) {
	        return _lodash2.default.get(state, ['components', 'viewer', 'progress', bookId], {});
	    };
	};
	// sub components
	var panel = exports.panel = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'panel'], {});
	});
	var preference = exports.preference = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'preference'], {});
	});
	var navigation = exports.navigation = (0, _reselect.createSelector)(self, function (_self) {
	    return _lodash2.default.get(_self, ['components', 'navigation'], {});
	});

/***/ },
/* 119 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Alert = exports.Alerts = undefined;
	
	var _Alert = __webpack_require__(120);
	
	var _Alert2 = _interopRequireDefault(_Alert);
	
	var _Alerts = __webpack_require__(136);
	
	var _Alerts2 = _interopRequireDefault(_Alerts);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Alerts = _Alerts2.default;
	exports.Alert = _Alert2.default;
	exports.default = _Alert2.default;

/***/ },
/* 120 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Icon = __webpack_require__(121);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(134);
	var Alert = function (_Component) {
	    _inherits(Alert, _Component);
	
	    function Alert() {
	        _classCallCheck(this, Alert);
	
	        return _possibleConstructorReturn(this, (Alert.__proto__ || Object.getPrototypeOf(Alert)).apply(this, arguments));
	    }
	
	    _createClass(Alert, [{
	        key: "render",
	        value: function render() {
	            var type = this.props.type ? this.props.type : 'success';
	            return _react2.default.createElement("div", null, this.props.visible && _react2.default.createElement("div", { styleName: "alert--" + type }, _react2.default.createElement("div", { styleName: "alert-close" }, _react2.default.createElement(_Icon2.default, { onClick: this.props.onRequestClose, name: "close", size: 15 })), _react2.default.createElement("div", { styleName: "content" }, this.props.message)));
	        }
	    }]);
	
	    return Alert;
	}(_react.Component);
	Alert = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Alert);
	exports.default = Alert;

/***/ },
/* 121 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Icon = __webpack_require__(122);
	
	var _Icon2 = _interopRequireDefault(_Icon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Icon2.default;

/***/ },
/* 122 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _classnames = __webpack_require__(123);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _svgIcons = __webpack_require__(124);
	
	var _svgIcons2 = _interopRequireDefault(_svgIcons);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(126);
	var Icon = function (_Component) {
	    _inherits(Icon, _Component);
	
	    function Icon(props) {
	        _classCallCheck(this, Icon);
	
	        return _possibleConstructorReturn(this, (Icon.__proto__ || Object.getPrototypeOf(Icon)).call(this, props));
	    }
	
	    _createClass(Icon, [{
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var name = _props.name;
	            var onClick = _props.onClick;
	            var size = _props.size;
	
	            var className = (0, _classnames2.default)('icon', "icon-" + name, this.props.className);
	            if (typeof _svgIcons2.default[name] === 'undefined') {
	                console.error('Icon name (%s) not found! ', name);
	            }
	            size = size || 30;
	            var svgWrapStyle = {
	                position: 'absolute',
	                top: '50%',
	                marginTop: -size / 2
	            };
	            return _react2.default.createElement("span", { styleName: "icon", style: { minWidth: size, minHeight: size }, className: className, onClick: onClick }, _react2.default.createElement("div", { style: svgWrapStyle }, _react2.default.createElement("svg", __assign({}, _svgIcons2.default[name].viewBox && { viewBox: _svgIcons2.default[name].viewBox }, { width: size, height: size, styleName: "svg-shape" }), _react2.default.createElement("path", { d: _svgIcons2.default[name].path }))));
	        }
	    }]);
	
	    return Icon;
	}(_react.Component);
	Icon = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Icon);
	exports.default = Icon;

/***/ },
/* 123 */
/***/ function(module, exports) {

	module.exports = require("classnames");

/***/ },
/* 124 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = {
	    close: {
	        path: 'M7.48 8l3.75 3.75-1.48 1.48L6 9.48l-3.75 3.75-1.48-1.48L4.52 8 .77 4.25l1.48-1.48L6 6.52l3.75-3.75 1.48 1.48z',
	        viewBox: '0 0 12 16'
	    },
	    star: {
	        path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z'
	    },
	    users: {
	        path: 'M16 11c1.66 0 2.99-1.34 2.99-3S17.66 5 16 5c-1.66 0-3 1.34-3 3s1.34 3 3 3zm-8 0c1.66 0 2.99-1.34 2.99-3S9.66 5 8 5C6.34 5 5 6.34 5 8s1.34 3 3 3zm0 2c-2.33 0-7 1.17-7 3.5V19h14v-2.5c0-2.33-4.67-3.5-7-3.5zm8 0c-.29 0-.62.02-.97.05 1.16.84 1.97 1.97 1.97 3.45V19h6v-2.5c0-2.33-4.67-3.5-7-3.5z'
	    },
	    folder: {
	        path: 'M10 4H4c-1.1 0-1.99.9-1.99 2L2 18c0 1.1.9 2 2 2h16c1.1 0 2-.9 2-2V8c0-1.1-.9-2-2-2h-8l-2-2z'
	    },
	    database: {
	        path: 'M20.2 5.9l.8-.8C19.6 3.7 17.8 3 16 3s-3.6.7-5 2.1l.8.8C13 4.8 14.5 4.2 16 4.2s3 .6 4.2 1.7zm-.9.8c-.9-.9-2.1-1.4-3.3-1.4s-2.4.5-3.3 1.4l.8.8c.7-.7 1.6-1 2.5-1 .9 0 1.8.3 2.5 1l.8-.8zM19 13h-2V9h-2v4H5c-1.1 0-2 .9-2 2v4c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2v-4c0-1.1-.9-2-2-2zM8 18H6v-2h2v2zm3.5 0h-2v-2h2v2zm3.5 0h-2v-2h2v2z'
	    },
	    statistics: {
	        path: 'M21 2H3c-1.1 0-2 .9-2 2v12c0 1.1.9 2 2 2h7v2H8v2h8v-2h-2v-2h7c1.1 0 2-.9 2-2V4c0-1.1-.9-2-2-2zm0 14H3V4h18v12z'
	    },
	    books: {
	        path: 'M20.54 5.23l-1.39-1.68C18.88 3.21 18.47 3 18 3H6c-.47 0-.88.21-1.16.55L3.46 5.23C3.17 5.57 3 6.02 3 6.5V19c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V6.5c0-.48-.17-.93-.46-1.27zM12 17.5L6.5 12H10v-2h4v2h3.5L12 17.5zM5.12 5l.81-1h12l.94 1H5.12z'
	    },
	    back: {
	        // path: 'M732 832l-55 55l-505 -505l505 -505l55 54l-451 451z'
	        // path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z',
	        path: 'm 26,25 c -0.467574,0 -0.909434,0.16865 -1.25,0.4375 C 24.555279,25.591215 6.6130516,42.546285 6.46875,42.71875 6.1782332,43.06596 6,43.51187 6,44 6,44.51946 6.2065566,44.98818 6.53125,45.34375 6.6683992,45.493941 24.625,62.4375 24.625,62.4375 c 0.759842,0.725152 2.121842,0.700421 2.84375,-0.0625 0.721908,-0.76293 0.672244,-2.125099 -0.09375,-2.84375 L 13.03125,46 64,46 c 13.888871,0 25.660392,11.63955 26,26.03125 0.0035,0.140557 0,0.77485 0,0.96875 0,1.108 0.892,2 2,2 1.108,0 2,-0.892 2,-2 l 0,-1.0625 C 93.610208,55.4194 80.118529,42 64,42 L 13.03125,42 C 13.03125,42 27.362732,28.495959 27.5,28.34375 27.81971,27.98925 28,27.51497 28,27 28,25.89543 27.104569,25 26,25 z',
	        viewBox: '0 0 100 125'
	    },
	    preference: {
	        path: 'M 17.78125 8.96875 A 2.0002 2.0002 0 0 0 16 11 L 16 56.25 C 12.008188 57.168302 9 60.741406 9 65 C 9 69.259224 12.007427 72.863534 16 73.78125 L 16 89 A 2.0002 2.0002 0 1 0 20 89 L 20 73.78125 C 23.992573 72.863534 27 69.259224 27 65 C 27 60.741406 23.991812 57.168302 20 56.25 L 20 11 A 2.0002 2.0002 0 0 0 17.78125 8.96875 z M 49.78125 8.96875 A 2.0002 2.0002 0 0 0 48 11 L 48 26.25 C 44.008188 27.168305 41 30.741423 41 35 C 41 39.25912 44.007427 42.863511 48 43.78125 L 48 89 A 2.0002 2.0002 0 1 0 52 89 L 52 43.78125 C 55.992573 42.863511 59 39.25912 59 35 C 59 30.741423 55.991812 27.168305 52 26.25 L 52 11 A 2.0002 2.0002 0 0 0 49.78125 8.96875 z M 81.78125 8.96875 A 2.0002 2.0002 0 0 0 80 11 L 80 56.25 C 76.008188 57.168302 73 60.741406 73 65 C 73 69.259224 76.007427 72.863534 80 73.78125 L 80 89 A 2.0002 2.0002 0 1 0 84 89 L 84 73.78125 C 87.992573 72.863534 91 69.259224 91 65 C 91 60.741406 87.991812 57.168302 84 56.25 L 84 11 A 2.0002 2.0002 0 0 0 81.78125 8.96875 z M 50 30 C 52.785116 30 55 32.21488 55 35 C 55 37.78512 52.785116 40 50 40 C 47.214884 40 45 37.78512 45 35 C 45 32.21488 47.214884 30 50 30 z M 18 60 C 20.785116 60 23 62.2149 23 65 C 23 67.7852 20.785116 70 18 70 C 15.214884 70 13 67.7852 13 65 C 13 62.2149 15.214884 60 18 60 z M 82 60 C 84.785116 60 87 62.2149 87 65 C 87 67.7852 84.785116 70 82 70 C 79.214884 70 77 67.7852 77 65 C 77 62.2149 79.214884 60 82 60 z ',
	        viewBox: '0 0 100 125'
	    },
	    font: {
	        // path: 'M14 8.77v-1.6l-1.94-.64-.45-1.09.88-1.84-1.13-1.13-1.81.91-1.09-.45-.69-1.92h-1.6l-.63 1.94-1.11.45-1.84-.88-1.13 1.13.91 1.81-.45 1.09L0 7.23v1.59l1.94.64.45 1.09-.88 1.84 1.13 1.13 1.81-.91 1.09.45.69 1.92h1.59l.63-1.94 1.11-.45 1.84.88 1.13-1.13-.92-1.81.47-1.09L14 8.75v.02zM7 11c-1.66 0-3-1.34-3-3s1.34-3 3-3 3 1.34 3 3-1.34 3-3 3z'
	        path: 'M14 6l-4.9-.64L7 1 4.9 5.36 0 6l3.6 3.26L2.67 14 7 11.67 11.33 14l-.93-4.74z'
	    },
	    arrowRight: {
	        path: 'M-290.9,430.1l-0.7-0.7l8.2-8.6l-8.2-8.2l0.7-0.7l8.9,8.9L-290.9,430.1z',
	        viewBox: '-292 411.9 11 18'
	    }
	};

/***/ },
/* 125 */
/***/ function(module, exports) {

	module.exports = require("react-css-modules");

/***/ },
/* 126 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(127);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 127 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".svg-shape_423Wb {\n  fill: currentColor;\n  overflow: hidden; }\n\n.icon_2s6T3 {\n  display: inline-block;\n  position: relative; }\n", ""]);
	
	// exports
	exports.locals = {
		"svg-shape": "svg-shape_423Wb",
		"icon": "icon_2s6T3"
	};

/***/ },
/* 128 */
/***/ function(module, exports) {

	/*
		MIT License http://www.opensource.org/licenses/mit-license.php
		Author Tobias Koppers @sokra
	*/
	// css base code, injected by the css-loader
	module.exports = function() {
		var list = [];
	
		// return the list of modules as css string
		list.toString = function toString() {
			var result = [];
			for(var i = 0; i < this.length; i++) {
				var item = this[i];
				if(item[2]) {
					result.push("@media " + item[2] + "{" + item[1] + "}");
				} else {
					result.push(item[1]);
				}
			}
			return result.join("");
		};
	
		// import a list of modules into the list
		list.i = function(modules, mediaQuery) {
			if(typeof modules === "string")
				modules = [[null, modules, ""]];
			var alreadyImportedModules = {};
			for(var i = 0; i < this.length; i++) {
				var id = this[i][0];
				if(typeof id === "number")
					alreadyImportedModules[id] = true;
			}
			for(i = 0; i < modules.length; i++) {
				var item = modules[i];
				// skip already imported module
				// this implementation is not 100% perfect for weird media query combinations
				//  when a module is imported multiple times with different media queries.
				//  I hope this will never occur (Hey this way we have smaller bundles)
				if(typeof item[0] !== "number" || !alreadyImportedModules[item[0]]) {
					if(mediaQuery && !item[2]) {
						item[2] = mediaQuery;
					} else if(mediaQuery) {
						item[2] = "(" + item[2] + ") and (" + mediaQuery + ")";
					}
					list.push(item);
				}
			}
		};
		return list;
	};


/***/ },
/* 129 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var _assign = __webpack_require__(130);
	
	var _assign2 = _interopRequireDefault(_assign);
	
	var _stringify = __webpack_require__(131);
	
	var _stringify2 = _interopRequireDefault(_stringify);
	
	var _slicedToArray2 = __webpack_require__(132);
	
	var _slicedToArray3 = _interopRequireDefault(_slicedToArray2);
	
	var _getIterator2 = __webpack_require__(133);
	
	var _getIterator3 = _interopRequireDefault(_getIterator2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Isomorphic CSS style loader for Webpack
	 *
	 * Copyright © 2015-2016 Kriasoft, LLC. All rights reserved.
	 *
	 * This source code is licensed under the MIT license found in the
	 * LICENSE.txt file in the root directory of this source tree.
	 */
	
	var prefix = 's';
	var inserted = {};
	
	// Base64 encoding and decoding - The "Unicode Problem"
	// https://developer.mozilla.org/en-US/docs/Web/API/WindowBase64/Base64_encoding_and_decoding#The_Unicode_Problem
	function b64EncodeUnicode(str) {
	  return btoa(encodeURIComponent(str).replace(/%([0-9A-F]{2})/g, function (match, p1) {
	    return String.fromCharCode('0x' + p1);
	  }));
	}
	
	/**
	 * Remove style/link elements for specified node IDs
	 * if they are no longer referenced by UI components.
	 */
	function removeCss(ids) {
	  var _iteratorNormalCompletion = true;
	  var _didIteratorError = false;
	  var _iteratorError = undefined;
	
	  try {
	    for (var _iterator = (0, _getIterator3.default)(ids), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {
	      var id = _step.value;
	
	      if (--inserted[id] <= 0) {
	        var elem = document.getElementById(prefix + id);
	        if (elem) {
	          elem.parentNode.removeChild(elem);
	        }
	      }
	    }
	  } catch (err) {
	    _didIteratorError = true;
	    _iteratorError = err;
	  } finally {
	    try {
	      if (!_iteratorNormalCompletion && _iterator.return) {
	        _iterator.return();
	      }
	    } finally {
	      if (_didIteratorError) {
	        throw _iteratorError;
	      }
	    }
	  }
	}
	
	/**
	 * Example:
	 *   // Insert CSS styles object generated by `css-loader` into DOM
	 *   var removeCss = insertCss([[1, 'body { color: red; }']]);
	 *
	 *   // Remove it from the DOM
	 *   removeCss();
	 */
	function insertCss(styles, options) {
	  var _Object$assign = (0, _assign2.default)({
	    replace: false,
	    prepend: false
	  }, options);
	
	  var replace = _Object$assign.replace;
	  var prepend = _Object$assign.prepend;
	
	
	  var ids = [];
	  for (var i = 0; i < styles.length; i++) {
	    var _styles$i = (0, _slicedToArray3.default)(styles[i], 4);
	
	    var moduleId = _styles$i[0];
	    var css = _styles$i[1];
	    var media = _styles$i[2];
	    var sourceMap = _styles$i[3];
	
	    var id = moduleId + '-' + i;
	
	    ids.push(id);
	
	    if (inserted[id]) {
	      if (!replace) {
	        inserted[id]++;
	        continue;
	      }
	    }
	
	    inserted[id] = 1;
	
	    var elem = document.getElementById(prefix + id);
	    var create = false;
	
	    if (!elem) {
	      create = true;
	
	      elem = document.createElement('style');
	      elem.setAttribute('type', 'text/css');
	      elem.id = prefix + id;
	
	      if (media) {
	        elem.setAttribute('media', media);
	      }
	    }
	
	    var cssText = css;
	    if (sourceMap) {
	      cssText += '\n/*# sourceMappingURL=data:application/json;base64,' + b64EncodeUnicode((0, _stringify2.default)(sourceMap)) + '*/';
	      cssText += '\n/*# sourceURL=' + sourceMap.file + '*/';
	    }
	
	    if ('textContent' in elem) {
	      elem.textContent = cssText;
	    } else {
	      elem.styleSheet.cssText = cssText;
	    }
	
	    if (create) {
	      if (prepend) {
	        document.head.insertBefore(elem, document.head.childNodes[0]);
	      } else {
	        document.head.appendChild(elem);
	      }
	    }
	  }
	
	  return removeCss.bind(null, ids);
	}
	
	module.exports = insertCss;

/***/ },
/* 130 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/object/assign");

/***/ },
/* 131 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/json/stringify");

/***/ },
/* 132 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/helpers/slicedToArray");

/***/ },
/* 133 */
/***/ function(module, exports) {

	module.exports = require("babel-runtime/core-js/get-iterator");

/***/ },
/* 134 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(135);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 135 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".alerts_lNYyS {\n  position: fixed;\n  width: 100%;\n  padding: 0 20px;\n  top: 10px;\n  left: 0;\n  z-index: 9999; }\n\n.alert_Tg6AL, .alert--success_ibIol, .alert--error_36iOd, .alert--warning_6_19X {\n  padding: 10px 0;\n  font-size: 16px;\n  text-align: center;\n  background: #fff;\n  position: relative;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.32);\n  font-size: 1rem;\n  font-weight: bold;\n  border-radius: 3px;\n  width: 700px;\n  margin: 0 auto 10px; }\n  @media (max-width: 540px) {\n    .alert_Tg6AL, .alert--success_ibIol, .alert--error_36iOd, .alert--warning_6_19X {\n      max-width: 100%; } }\n\n.content_2CILg {\n  overflow: hidden;\n  padding: 0 30px; }\n\n.alert-close_3Ckz- {\n  cursor: pointer;\n  position: absolute;\n  right: 10px;\n  top: 11px;\n  display: inline-block; }\n\n.alert--success_ibIol {\n  background: #72efa8;\n  color: #204d33; }\n\n.alert--error_36iOd {\n  background: #cc0000;\n  color: #fff; }\n\n.alert--warning_6_19X {\n  background: orange;\n  color: black; }\n", ""]);
	
	// exports
	exports.locals = {
		"alerts": "alerts_lNYyS",
		"alert": "alert_Tg6AL",
		"alert--success": "alert--success_ibIol",
		"alert--error": "alert--error_36iOd",
		"alert--warning": "alert--warning_6_19X",
		"content": "content_2CILg",
		"alert-close": "alert-close_3Ckz-"
	};

/***/ },
/* 136 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Alert = __webpack_require__(120);
	
	var _Alert2 = _interopRequireDefault(_Alert);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(134);
	function Alerts(props) {
	    return _react2.default.createElement("div", { className: styles.alerts }, props.messages.map(function (msg, index) {
	        return _react2.default.createElement(_Alert2.default, { key: index, type: msg.type, message: msg.content, visible: msg.visible, onRequestClose: function onRequestClose() {
	                props.onRequestClose(msg.id);
	            } });
	    }));
	}
	exports.default = Alerts;

/***/ },
/* 137 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.ConfirmModal = exports.ModalPlus = undefined;
	
	var _Modal = __webpack_require__(138);
	
	Object.keys(_Modal).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _Modal[key];
	    }
	  });
	});
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _ModalPlus = __webpack_require__(147);
	
	var _ModalPlus2 = _interopRequireDefault(_ModalPlus);
	
	var _ConfirmModal = __webpack_require__(148);
	
	var _ConfirmModal2 = _interopRequireDefault(_ConfirmModal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = _Modal2.default;
	exports.ModalPlus = _ModalPlus2.default;
	exports.ConfirmModal = _ConfirmModal2.default;

/***/ },
/* 138 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactDom = __webpack_require__(139);
	
	var _reactDom2 = _interopRequireDefault(_reactDom);
	
	var _utils = __webpack_require__(95);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _Fade = __webpack_require__(140);
	
	var _Fade2 = _interopRequireDefault(_Fade);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _Modal = __webpack_require__(145);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Modal = function (_Component) {
	    _inherits(Modal, _Component);
	
	    function Modal(props) {
	        _classCallCheck(this, Modal);
	
	        var _this = _possibleConstructorReturn(this, (Modal.__proto__ || Object.getPrototypeOf(Modal)).call(this, props));
	
	        _this.state = {
	            modalHeight: 0,
	            isModalHidden: false,
	            isModalVerticalCenter: true,
	            clicks: 0
	        };
	        _this.setView = _this.setView.bind(_this);
	        _this.hideModal = _this.hideModal.bind(_this);
	        return _this;
	    }
	
	    _createClass(Modal, [{
	        key: 'hideModal',
	        value: function hideModal() {
	            this.props.onRequestClose();
	            _utils2.default.unlockScroll();
	        }
	    }, {
	        key: 'setView',
	        value: function setView() {
	            var modalHeight = _reactDom2.default.findDOMNode(this.modal).clientHeight;
	            var isModalVerticalCenter = true;
	            var documentHeight = document.body.clientHeight;
	            if (window.innerHeight < modalHeight) {
	                isModalVerticalCenter = false;
	            }
	            if (window.innerHeight > document.body.clientHeight) {
	                documentHeight = window.innerHeight;
	            }
	            this.setState({
	                modalHeight: modalHeight,
	                isModalVerticalCenter: isModalVerticalCenter,
	                documentHeight: documentHeight
	            });
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {}
	    }, {
	        key: 'shouldComponentUpdate',
	        value: function shouldComponentUpdate(nextProps, nextState) {
	            return !_lodash2.default.isEqual(this.state, nextState) || !_lodash2.default.isEqual(this.props, nextProps);
	        }
	    }, {
	        key: 'componentDidUpdate',
	        value: function componentDidUpdate(prevProps) {
	            // modal show
	            if (!prevProps.open && this.props.open === true) {
	                this.setView();
	                _utils2.default.lockScroll();
	                window.addEventListener('resize', this.setView);
	            }
	            // modal hide
	            if (prevProps.open === true && this.props.open === false) {
	                window.removeEventListener('resize', this.setView);
	                _utils2.default.unlockScroll();
	            }
	        }
	    }, {
	        key: 'componentWillUnmount',
	        value: function componentWillUnmount() {
	            window.removeEventListener('resize', this.setView);
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var _this2 = this;
	
	            var open = this.props.open;
	
	            var defaultClass = 'modal';
	            var modalId = 'modal-' + new Date().valueOf();
	            var className = this.props.className ? defaultClass + ' ' + this.props.className : defaultClass;
	            var width = this.props.width ? this.props.width : 500;
	            var height = this.state.modalHeight;
	            var style = {
	                backdrop: {},
	                verticalCenter: {},
	                scroll: {},
	                modal: {}
	            };
	            style.backdrop = {
	                position: 'fixed',
	                height: '100%',
	                width: '100%',
	                left: 0,
	                top: 0,
	                background: 'rgba(0, 0, 0, 0.23)',
	                overflow: 'scroll'
	            };
	            style.verticalCenter = {
	                width: width,
	                marginTop: -height / 2,
	                marginLeft: -width / 2,
	                position: 'absolute',
	                left: '50%',
	                top: '50%'
	            };
	            style.scroll = {
	                width: width,
	                margin: '50px auto'
	            };
	            style.modal = {};
	            if (this.state.isModalVerticalCenter) {
	                style.modal = Object.assign({}, style.modal, style.verticalCenter);
	            } else {
	                style.modal = Object.assign({}, style.modal, style.scroll);
	            }
	            return _react2.default.createElement(_Fade2.default, null, open === true && _react2.default.createElement("div", { onClick: function onClick(e) {
	                    // 使用阻止冒泡会造成问题
	                    if (e.target.querySelector('#' + modalId)) {
	                        _this2.hideModal();
	                    }
	                }, className: _Modal2.default['modal-backdrop'], style: style.backdrop }, _react2.default.createElement("div", { id: modalId, style: style.modal, className: _Modal2.default['modal'] + ' ' + className, ref: function ref(_ref) {
	                    _this2.modal = _ref;
	                } }, this.props.children)));
	        }
	    }]);
	
	    return Modal;
	}(_react.Component);
	
	exports.default = Modal;

/***/ },
/* 139 */
/***/ function(module, exports) {

	module.exports = require("react-dom");

/***/ },
/* 140 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Fade = __webpack_require__(141);
	
	var _Fade2 = _interopRequireDefault(_Fade);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Fade2.default;

/***/ },
/* 141 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactAddonsCssTransitionGroup = __webpack_require__(142);
	
	var _reactAddonsCssTransitionGroup2 = _interopRequireDefault(_reactAddonsCssTransitionGroup);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(143);
	
	exports.default = function (props) {
	    return _react2.default.createElement(_reactAddonsCssTransitionGroup2.default, { component: "div", transitionName: styles, transitionEnterTimeout: 300, transitionLeaveTimeout: 300 }, props.children);
	};

/***/ },
/* 142 */
/***/ function(module, exports) {

	module.exports = require("react-addons-css-transition-group");

/***/ },
/* 143 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(144);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 144 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  --time: .3s; }\n\n.enter_b08lF {\n  opacity: 0.01;\n  transition: opacity var(--time) ease-in; }\n\n.enterActive_2lPGz {\n  opacity: 1; }\n\n.leave_3S2Q- {\n  opacity: 1;\n  transition: opacity var(--time) ease-in; }\n\n.leaveActive_2i4qH {\n  opacity: 0; }\n", ""]);
	
	// exports
	exports.locals = {
		"enter": "enter_b08lF",
		"enterActive": "enterActive_2lPGz",
		"leave": "leave_3S2Q-",
		"leaveActive": "leaveActive_2i4qH"
	};

/***/ },
/* 145 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(146);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 146 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".modal_20AZ1 {\n  background: #fff;\n  padding: 0;\n  box-shadow: 0 3px 10px rgba(0, 0, 0, 0.15);\n  border-radius: 3px; }\n  .modal_20AZ1 .icon-close_5uuLa {\n    cursor: pointer; }\n\n.modal-backdrop_3rq0k {\n  z-index: 900; }\n\n.modal-body_2gT23 {\n  margin: 10px 0 0; }\n\n.modal-header_2dz68 {\n  margin: 10px 0; }\n\n.modal-title_8pOfE {\n  font-size: 1.4rem;\n  font-weight: normal;\n  color: #333;\n  margin: 5px 0; }\n\n.modal-footer_fyZtS {\n  border-top: 3px solid #e9ebf2;\n  text-align: right;\n  overflow: hidden; }\n  .modal-footer_fyZtS .btn-red_3zomi {\n    float: left;\n    margin-left: 0; }\n  .modal-footer_fyZtS button {\n    margin: 5px 0 5px 10px; }\n\n.modal-content_3ZIHb {\n  margin: 15px 0;\n  line-height: 1.5; }\n\n.confirm-modal_k5GF0 {\n  background: #fff;\n  padding: 20px 30px; }\n  .confirm-modal_k5GF0 p {\n    font-size: 1.2rem; }\n\n.modal-plus_1_TST {\n  padding: 20px 30px; }\n", ""]);
	
	// exports
	exports.locals = {
		"modal": "modal_20AZ1",
		"icon-close": "icon-close_5uuLa",
		"modal-backdrop": "modal-backdrop_3rq0k",
		"modal-body": "modal-body_2gT23",
		"modal-header": "modal-header_2dz68",
		"modal-title": "modal-title_8pOfE",
		"modal-footer": "modal-footer_fyZtS",
		"btn-red": "btn-red_3zomi",
		"modal-content": "modal-content_3ZIHb",
		"confirm-modal": "confirm-modal_k5GF0",
		"modal-plus": "modal-plus_1_TST"
	};

/***/ },
/* 147 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Modal = __webpack_require__(138);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _Modal3 = __webpack_require__(145);
	
	var _Modal4 = _interopRequireDefault(_Modal3);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var ModalPlus = function (_Component) {
	    _inherits(ModalPlus, _Component);
	
	    function ModalPlus() {
	        _classCallCheck(this, ModalPlus);
	
	        return _possibleConstructorReturn(this, (ModalPlus.__proto__ || Object.getPrototypeOf(ModalPlus)).apply(this, arguments));
	    }
	
	    _createClass(ModalPlus, [{
	        key: 'render',
	        value: function render() {
	            var _props = this.props;
	            var title = _props.title;
	            var open = _props.open;
	            var onRequestClose = _props.onRequestClose;
	            var width = _props.width;
	            var actions = _props.actions;
	
	            return _react2.default.createElement(_Modal2.default, { open: open, onRequestClose: onRequestClose, width: width || 600 }, _react2.default.createElement("div", { className: _Modal4.default['modal-plus'] }, title && _react2.default.createElement("div", { className: _Modal4.default['modal-header'] }, _react2.default.createElement("h1", { className: _Modal4.default['modal-title'] }, title)), _react2.default.createElement("div", { className: _Modal4.default['modal-body'] }, this.props.children), actions && actions.map(function (action, index) {
	                return _react2.default.cloneElement(action, {
	                    key: index
	                });
	            })));
	        }
	    }]);
	
	    return ModalPlus;
	}(_react.Component);
	
	exports.default = ModalPlus;

/***/ },
/* 148 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Modal = __webpack_require__(137);
	
	var _Modal2 = _interopRequireDefault(_Modal);
	
	var _ModalFooter = __webpack_require__(149);
	
	var _ModalFooter2 = _interopRequireDefault(_ModalFooter);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(145);
	var Dialog = function (_Component) {
	    _inherits(Dialog, _Component);
	
	    function Dialog(props) {
	        _classCallCheck(this, Dialog);
	
	        return _possibleConstructorReturn(this, (Dialog.__proto__ || Object.getPrototypeOf(Dialog)).call(this, props));
	    }
	
	    _createClass(Dialog, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var onConfirm = _props.onConfirm;
	            var onRequestClose = _props.onRequestClose;
	            var open = _props.open;
	
	            return _react2.default.createElement(_Modal2.default, { open: open, onRequestClose: onRequestClose, width: this.props.width }, _react2.default.createElement("div", { styleName: "confirm-modal" }, this.props.title && _react2.default.createElement("div", { styleName: "modal-header" }, _react2.default.createElement("h1", { styleName: "modal-title" }, this.props.title)), _react2.default.createElement("div", { styleName: "modal-content" }, this.props.children), _react2.default.createElement(_ModalFooter2.default, { onConfirm: onConfirm, onCancel: onRequestClose })));
	        }
	    }]);
	
	    return Dialog;
	}(_react.Component);
	Dialog = __decorate([(0, _reactCssModules2.default)(styles)], Dialog);
	exports.default = Dialog;

/***/ },
/* 149 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _form = __webpack_require__(150);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(168);
	function ModalFooter(props) {
	    var onConfirm = props.onConfirm;
	    var onCancel = props.onCancel;
	
	    return _react2.default.createElement("div", { className: styles['modal-footer'] }, _react2.default.createElement(_form.Button, { color: "blue", onClick: onConfirm }, '\u786E\u8BA4'), onCancel && _react2.default.createElement(_form.Button, { color: "white", onClick: onCancel }, '\u53D6\u6D88'));
	}
	exports.default = ModalFooter;

/***/ },
/* 150 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Textarea = exports.SelectizeInput = exports.Input = exports.Button = undefined;
	
	var _Button = __webpack_require__(151);
	
	var _Button2 = _interopRequireDefault(_Button);
	
	var _Input = __webpack_require__(155);
	
	var _Input2 = _interopRequireDefault(_Input);
	
	var _SelectizeInput = __webpack_require__(159);
	
	var _SelectizeInput2 = _interopRequireDefault(_SelectizeInput);
	
	var _Textarea = __webpack_require__(163);
	
	var _Textarea2 = _interopRequireDefault(_Textarea);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Button = _Button2.default;
	exports.Input = _Input2.default;
	exports.SelectizeInput = _SelectizeInput2.default;
	exports.Textarea = _Textarea2.default;

/***/ },
/* 151 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Button = __webpack_require__(152);
	
	var _Button2 = _interopRequireDefault(_Button);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Button2.default;

/***/ },
/* 152 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _classnames2 = __webpack_require__(123);
	
	var _classnames3 = _interopRequireDefault(_classnames2);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(153);
	var Button = function (_Component) {
	    _inherits(Button, _Component);
	
	    function Button(props) {
	        _classCallCheck(this, Button);
	
	        var _this = _possibleConstructorReturn(this, (Button.__proto__ || Object.getPrototypeOf(Button)).call(this, props));
	
	        _this.state = {
	            isMouseOver: false
	        };
	        return _this;
	    }
	
	    _createClass(Button, [{
	        key: "render",
	        value: function render() {
	            var _classnames,
	                _this2 = this;
	
	            var _props = this.props;
	            var onClick = _props.onClick;
	            var className = _props.className;
	            var color = _props.color;
	            var size = _props.size;
	            var isFluid = _props.isFluid;
	            var width = _props.width;
	            var to = _props.to;
	
	            var style = {};
	            var styleName = (0, _classnames3.default)((_classnames = {
	                'btn': true,
	                'btn--hover': this.state.isMouseOver,
	                'btn--fluid': isFluid
	            }, _defineProperty(_classnames, "btn--" + color, Boolean(color)), _defineProperty(_classnames, "btn--" + size, Boolean(size)), _classnames));
	            if (this.props.to) {
	                onClick = function onClick(e) {
	                    e.preventDefault();
	                    _helpers2.default.redirect(to);
	                };
	            } else {
	                onClick = function onClick(e) {
	                    e.preventDefault();
	                    if (_this2.props.onClick) {
	                        _this2.props.onClick(e);
	                    }
	                };
	            }
	            if (typeof width !== 'undefined') {
	                style = {
	                    width: width
	                };
	            }
	            var props = (0, _lodash2.default)(this.props).omit(['to', 'color', 'size', 'isFluid', 'width', 'styles']).assign({}, {
	                className: className || '',
	                onClick: onClick,
	                style: style
	            }).value();
	            return _react2.default.createElement("button", __assign({}, props, { styleName: styleName, onMouseOver: function onMouseOver() {
	                    _this2.setState({
	                        isMouseOver: true
	                    });
	                }, onMouseOut: function onMouseOut() {
	                    _this2.setState({
	                        isMouseOver: false
	                    });
	                } }), this.props.children);
	        }
	    }]);
	
	    return Button;
	}(_react.Component);
	Button = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Button);
	Button.defaultProps = {
	    color: 'blue'
	};
	exports.default = Button;

/***/ },
/* 153 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(154);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 154 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".btn_M2NhQ {\n  color: #fff;\n  background-color: #1B267F;\n  border-color: #1B267F;\n  padding: 3px 12px;\n  font-size: 1rem;\n  border-radius: 3px;\n  transition: all 0.2s 0s;\n  outline: none;\n  border: 1px solid transparent;\n  display: inline-block;\n  margin: 5px 0;\n  cursor: pointer; }\n  .btn_M2NhQ:hover {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d; }\n  .btn_M2NhQ:focus, .btn_M2NhQ.focus_ptKD_ {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n  .btn_M2NhQ:active, .btn_M2NhQ.active_156lK {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n    .btn_M2NhQ:active:hover, .btn_M2NhQ:active:focus, .btn_M2NhQ:active.focus_ptKD_, .btn_M2NhQ.active_156lK:hover, .btn_M2NhQ.active_156lK:focus, .btn_M2NhQ.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #0c1138;\n      border-color: #050716;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9 !important; }\n  .btn_M2NhQ.disabled_2GlXh:focus, .btn_M2NhQ.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ:disabled:focus, .btn_M2NhQ:disabled.focus_ptKD_ {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.disabled_2GlXh:hover, .btn_M2NhQ:disabled:hover {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.disabled_2GlXh, .btn_M2NhQ:disabled {\n    cursor: not-allowed;\n    opacity: .65; }\n  .btn_M2NhQ:active:hover {\n    box-shadow: none; }\n\n.btn--hover_2KwUv {\n  box-shadow: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24); }\n\n.btn_M2NhQ.btn--blue_20YQo {\n  color: #fff;\n  background-color: #1B267F;\n  border-color: #1B267F; }\n  .btn_M2NhQ.btn--blue_20YQo:hover {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d; }\n  .btn_M2NhQ.btn--blue_20YQo:focus, .btn_M2NhQ.btn--blue_20YQo.focus_ptKD_ {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n  .btn_M2NhQ.btn--blue_20YQo:active, .btn_M2NhQ.btn--blue_20YQo.active_156lK {\n    color: #fff;\n    background-color: #121955;\n    border-color: #10174d;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9; }\n    .btn_M2NhQ.btn--blue_20YQo:active:hover, .btn_M2NhQ.btn--blue_20YQo:active:focus, .btn_M2NhQ.btn--blue_20YQo:active.focus_ptKD_, .btn_M2NhQ.btn--blue_20YQo.active_156lK:hover, .btn_M2NhQ.btn--blue_20YQo.active_156lK:focus, .btn_M2NhQ.btn--blue_20YQo.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #0c1138;\n      border-color: #050716;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #2433a9 !important; }\n  .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh:focus, .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--blue_20YQo:disabled:focus, .btn_M2NhQ.btn--blue_20YQo:disabled.focus_ptKD_ {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n  .btn_M2NhQ.btn--blue_20YQo.disabled_2GlXh:hover, .btn_M2NhQ.btn--blue_20YQo:disabled:hover {\n    background-color: #1B267F;\n    border-color: #1B267F; }\n\n.btn_M2NhQ.btn--orange_Ecn3s {\n  color: #fff;\n  background-color: #ee9333;\n  border-color: #ee9333; }\n  .btn_M2NhQ.btn--orange_Ecn3s:hover {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412; }\n  .btn_M2NhQ.btn--orange_Ecn3s:focus, .btn_M2NhQ.btn--orange_Ecn3s.focus_ptKD_ {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62; }\n  .btn_M2NhQ.btn--orange_Ecn3s:active, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK {\n    color: #fff;\n    background-color: #dc7a12;\n    border-color: #d27412;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62; }\n    .btn_M2NhQ.btn--orange_Ecn3s:active:hover, .btn_M2NhQ.btn--orange_Ecn3s:active:focus, .btn_M2NhQ.btn--orange_Ecn3s:active.focus_ptKD_, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK:hover, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK:focus, .btn_M2NhQ.btn--orange_Ecn3s.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #bb6710;\n      border-color: #95530c;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #f2ac62 !important; }\n  .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh:focus, .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--orange_Ecn3s:disabled:focus, .btn_M2NhQ.btn--orange_Ecn3s:disabled.focus_ptKD_ {\n    background-color: #ee9333;\n    border-color: #ee9333; }\n  .btn_M2NhQ.btn--orange_Ecn3s.disabled_2GlXh:hover, .btn_M2NhQ.btn--orange_Ecn3s:disabled:hover {\n    background-color: #ee9333;\n    border-color: #ee9333; }\n\n.btn_M2NhQ.btn--red_3EKC3 {\n  color: #fff;\n  background-color: #d42020;\n  border-color: #d42020; }\n  .btn_M2NhQ.btn--red_3EKC3:hover {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818; }\n  .btn_M2NhQ.btn--red_3EKC3:focus, .btn_M2NhQ.btn--red_3EKC3.focus_ptKD_ {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444; }\n  .btn_M2NhQ.btn--red_3EKC3:active, .btn_M2NhQ.btn--red_3EKC3.active_156lK {\n    color: #fff;\n    background-color: #a81919;\n    border-color: #9f1818;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444; }\n    .btn_M2NhQ.btn--red_3EKC3:active:hover, .btn_M2NhQ.btn--red_3EKC3:active:focus, .btn_M2NhQ.btn--red_3EKC3:active.focus_ptKD_, .btn_M2NhQ.btn--red_3EKC3.active_156lK:hover, .btn_M2NhQ.btn--red_3EKC3.active_156lK:focus, .btn_M2NhQ.btn--red_3EKC3.active_156lK.focus_ptKD_ {\n      color: #fff;\n      background-color: #891515;\n      border-color: #650f0f;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px #e34444 !important; }\n  .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh:focus, .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--red_3EKC3:disabled:focus, .btn_M2NhQ.btn--red_3EKC3:disabled.focus_ptKD_ {\n    background-color: #d42020;\n    border-color: #d42020; }\n  .btn_M2NhQ.btn--red_3EKC3.disabled_2GlXh:hover, .btn_M2NhQ.btn--red_3EKC3:disabled:hover {\n    background-color: #d42020;\n    border-color: #d42020; }\n\n.btn_M2NhQ.btn--white_3Rv2J {\n  color: #333;\n  background-color: #fff;\n  border-color: #fff; }\n  .btn_M2NhQ.btn--white_3Rv2J:hover {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0; }\n  .btn_M2NhQ.btn--white_3Rv2J:focus, .btn_M2NhQ.btn--white_3Rv2J.focus_ptKD_ {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px white; }\n  .btn_M2NhQ.btn--white_3Rv2J:active, .btn_M2NhQ.btn--white_3Rv2J.active_156lK {\n    color: #333;\n    background-color: #e6e6e6;\n    border-color: #e0e0e0;\n    background-image: none;\n    box-shadow: 0 0 0 1px #fff, 0 0 0 3px white; }\n    .btn_M2NhQ.btn--white_3Rv2J:active:hover, .btn_M2NhQ.btn--white_3Rv2J:active:focus, .btn_M2NhQ.btn--white_3Rv2J:active.focus_ptKD_, .btn_M2NhQ.btn--white_3Rv2J.active_156lK:hover, .btn_M2NhQ.btn--white_3Rv2J.active_156lK:focus, .btn_M2NhQ.btn--white_3Rv2J.active_156lK.focus_ptKD_ {\n      color: #333;\n      background-color: #d4d4d4;\n      border-color: #bfbfbf;\n      box-shadow: 0 0 0 1px #fff, 0 0 0 3px white !important; }\n  .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh:focus, .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh.focus_ptKD_, .btn_M2NhQ.btn--white_3Rv2J:disabled:focus, .btn_M2NhQ.btn--white_3Rv2J:disabled.focus_ptKD_ {\n    background-color: #fff;\n    border-color: #fff; }\n  .btn_M2NhQ.btn--white_3Rv2J.disabled_2GlXh:hover, .btn_M2NhQ.btn--white_3Rv2J:disabled:hover {\n    background-color: #fff;\n    border-color: #fff; }\n", ""]);
	
	// exports
	exports.locals = {
		"btn": "btn_M2NhQ",
		"focus": "focus_ptKD_",
		"active": "active_156lK",
		"disabled": "disabled_2GlXh",
		"btn--hover": "btn--hover_2KwUv",
		"btn--blue": "btn--blue_20YQo",
		"btn--orange": "btn--orange_Ecn3s",
		"btn--red": "btn--red_3EKC3",
		"btn--white": "btn--white_3Rv2J"
	};

/***/ },
/* 155 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Input = __webpack_require__(156);
	
	var _Input2 = _interopRequireDefault(_Input);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Input2.default;

/***/ },
/* 156 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _classnames = __webpack_require__(123);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(157);
	var Input = function (_Component) {
	    _inherits(Input, _Component);
	
	    function Input(props) {
	        _classCallCheck(this, Input);
	
	        return _possibleConstructorReturn(this, (Input.__proto__ || Object.getPrototypeOf(Input)).call(this, props));
	    }
	
	    _createClass(Input, [{
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var props = Object.assign({}, this.props);
	            delete props.className;
	            var _props = this.props;
	            var error = _props.error;
	            var touched = _props.touched;
	
	            var showError = error && touched;
	            return _react2.default.createElement("div", { styleName: (0, _classnames2.default)({ 'input-wrap': !showError, 'input-wrap--error': showError }), className: this.props.className || '' }, _react2.default.createElement("input", { styleName: "input", placeholder: this.props.placeholder, value: this.props.value, onChange: function onChange(e) {
	                    _this2.props.onChange(e);
	                }, type: this.props.type ? this.props.type : 'text', name: this.props.name ? this.props.name : null }), showError && _react2.default.createElement("div", { styleName: "error-msg" }, error));
	        }
	    }]);
	
	    return Input;
	}(_react.Component);
	Input = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Input);
	exports.default = Input;

/***/ },
/* 157 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(158);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 158 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".input-wrap_1uL9i, .input-wrap--error_oOHxx {\n  margin: 10px 0;\n  position: relative; }\n\n.input_c1thg {\n  width: 100%;\n  padding: 5px 5px;\n  border: 1px solid #ddd;\n  transition: border-color .3s;\n  line-height: 25px;\n  outline: none; }\n\n.input_c1thg:focus {\n  border-color: #1B267F; }\n\n.input-wrap--error_oOHxx .input_c1thg {\n  border-color: #cc0000; }\n\n.error-msg_1VjPs {\n  position: absolute;\n  right: 10px;\n  top: 6px;\n  line-height: 25px;\n  color: #cc0000; }\n", ""]);
	
	// exports
	exports.locals = {
		"input-wrap": "input-wrap_1uL9i",
		"input-wrap--error": "input-wrap--error_oOHxx",
		"input": "input_c1thg",
		"error-msg": "error-msg_1VjPs"
	};

/***/ },
/* 159 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _SelectizeInput = __webpack_require__(160);
	
	var _SelectizeInput2 = _interopRequireDefault(_SelectizeInput);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _SelectizeInput2.default;

/***/ },
/* 160 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Icon = __webpack_require__(121);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _classnames = __webpack_require__(123);
	
	var _classnames2 = _interopRequireDefault(_classnames);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _isDescendant = __webpack_require__(100);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(161);
	var SelectizeInput = function (_Component) {
	    _inherits(SelectizeInput, _Component);
	
	    function SelectizeInput(props) {
	        _classCallCheck(this, SelectizeInput);
	
	        var _this = _possibleConstructorReturn(this, (SelectizeInput.__proto__ || Object.getPrototypeOf(SelectizeInput)).call(this, props));
	
	        _this.state = {
	            showOptions: false,
	            focus: false,
	            value: '',
	            expendedOptionIndex: 0
	        };
	        _this.handleOutsideClick = _this.handleOutsideClick.bind(_this);
	        _this.focusInput = _this.focusInput.bind(_this);
	        _this.handleInputChange = _this.handleInputChange.bind(_this);
	        return _this;
	    }
	
	    _createClass(SelectizeInput, [{
	        key: "addValue",
	        value: function addValue(newValue) {
	            var _this2 = this;
	
	            if (!this.props.useValue) {
	                this.props.onValuesChange(this.props.values.concat(newValue));
	                if (this.props.onOptionsChange) {
	                    this.props.onOptionsChange(this.props.options.map(function (option) {
	                        return option.value === newValue.value ? Object.assign({}, option, { disabled: true }) : option;
	                    }));
	                }
	                // React setState 是异步的，如果都是用 state 管理则会出现同时调用 setState 的情况，从而造成问题
	                setTimeout(function () {
	                    _this2.clearInputValue();
	                }, 1);
	                if (typeof this.props.stayFocused === 'undefined' || this.props.stayFocused !== false) {
	                    this.focusInput();
	                }
	                this.hideOptions();
	            } else {
	                this.props.onInputChange(newValue.name);
	                this.hideOptions();
	            }
	        }
	    }, {
	        key: "showOptions",
	        value: function showOptions() {
	            this.setState({
	                showOptions: true
	            });
	        }
	    }, {
	        key: "hideOptions",
	        value: function hideOptions() {
	            this.setState({
	                showOptions: false
	            });
	        }
	    }, {
	        key: "removeValue",
	        value: function removeValue(index) {
	            var newValues = [];
	            var removedValue = void 0;
	            if (index === -1) {
	                newValues = this.props.values.slice(0, this.props.values.length - 1);
	                removedValue = this.props.values[this.props.values.length - 1].value;
	            } else {
	                newValues = this.props.values.filter(function (v, i) {
	                    removedValue = v.value;
	                    return i !== index;
	                });
	            }
	            if (this.props.onOptionsChange) {
	                this.props.onOptionsChange(this.props.options.map(function (option) {
	                    return option.value === removedValue ? Object.assign({}, option, { disabled: false }) : option;
	                }));
	            }
	            this.props.onValuesChange(newValues);
	        }
	    }, {
	        key: "clearInputValue",
	        value: function clearInputValue() {
	            this.props.onInputChange('');
	        }
	    }, {
	        key: "handleKeyPress",
	        value: function handleKeyPress(e) {
	            if (e.keyCode === 8 && !this.props.value && this.props.values.length !== 0) {
	                this.removeValue(-1);
	            }
	        }
	    }, {
	        key: "handleInputChange",
	        value: function handleInputChange(e) {
	            this.props.onInputChange(e.target.value);
	            if ((this.props.options || []).length !== 0) {
	                this.showOptions();
	            }
	        }
	    }, {
	        key: "focusInput",
	        value: function focusInput() {
	            this.input.focus();
	        }
	    }, {
	        key: "handleOutsideClick",
	        value: function handleOutsideClick(e) {
	            if ((0, _isDescendant2.default)(this.inputWrap, e.target) || this.inputWrap === e.target) {
	                this.focusInput();
	                this.showOptions();
	            } else {
	                this.hideOptions();
	            }
	        }
	    }, {
	        key: "componentWillReceiveProps",
	        value: function componentWillReceiveProps(nextProps) {
	            var optionsLoaded = (nextProps.options || []).length !== 0 && (this.props.options || []).length === 0;
	            if (optionsLoaded && this.state.focus) {
	                this.showOptions();
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            window.addEventListener('click', this.handleOutsideClick);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            window.removeEventListener('click', this.handleOutsideClick);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this3 = this;
	
	            var _props = this.props;
	            var label = _props.label;
	            var values = _props.values;
	            var onAddNewValue = _props.onAddNewValue;
	            var omitSelectedValuesFromOptions = _props.omitSelectedValuesFromOptions;
	
	            var value = this.props.value || '';
	            var options = this.props.options || [];
	            var inputWidth = values.length > 0 ? value.length === 0 ? 16 : value.length * 16 : '100%';
	            var placeholder = values.length > 0 ? '' : this.props.placeholder;
	            var filteredOptions = options.filter(function (option) {
	                if (omitSelectedValuesFromOptions) {
	                    var valueOfValues = _lodash2.default.map(values, 'value');
	                    return valueOfValues.indexOf(option.value) === -1;
	                }
	                return true;
	            });
	            var selectizeInputStyleName = (0, _classnames2.default)({
	                'selectize-input': true,
	                'selectize-input--focus': this.state.focus,
	                'selectize-input--empty': values.length === 0
	            });
	            return _react2.default.createElement("div", { styleName: "selectize-wrap", className: this.props.className || '' }, label ? _react2.default.createElement("label", { className: "form-label" }, label) : null, _react2.default.createElement("div", { styleName: selectizeInputStyleName, ref: function ref(_ref) {
	                    _this3.inputWrap = _ref;
	                } }, values.map(function (v, index) {
	                return _react2.default.createElement("span", { key: index, styleName: "selectize-tag" }, v.name, _react2.default.createElement(_Icon2.default, { styleName: "icon-remove", size: 20, name: "close", onClick: function onClick(e) {
	                        _this3.removeValue(index);
	                    } }));
	            }), _react2.default.createElement("input", { style: { width: inputWidth }, ref: function ref(_ref2) {
	                    _this3.input = _ref2;
	                }, value: value, placeholder: placeholder, onBlur: function onBlur(e) {
	                    _this3.setState({ focus: false });
	                }, onFocus: function onFocus(e) {
	                    _this3.setState({ focus: true });
	                }, onChange: this.handleInputChange, onKeyDown: function onKeyDown(e) {
	                    _this3.handleKeyPress(e);
	                } })), this.state.showOptions && (filteredOptions.length !== 0 || onAddNewValue) ? _react2.default.createElement("ul", { styleName: "query-results" }, filteredOptions.map(function (option, index) {
	                if (option.disabled) {
	                    return _react2.default.createElement("li", { key: index, className: "disabled" }, option.name);
	                }
	                return _react2.default.createElement("li", { key: index, onClick: function onClick(e) {
	                        _this3.addValue(option);
	                        if (_this3.props.onOptionClick) {
	                            _this3.props.onOptionClick(option);
	                        }
	                    } }, _react2.default.createElement("span", null, option.name));
	            }), onAddNewValue ? _react2.default.createElement("li", { onClick: function onClick(e) {
	                    onAddNewValue(_this3.props.value);
	                }, className: "add" }, "\u6DFB\u52A0 ", _react2.default.createElement("strong", null, this.props.value)) : null) : null);
	        }
	    }]);
	
	    return SelectizeInput;
	}(_react.Component);
	SelectizeInput = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], SelectizeInput);
	SelectizeInput['defaultProps'] = {
	    omitSelectedValuesFromOptions: true
	};
	exports.default = SelectizeInput;

/***/ },
/* 161 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(162);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 162 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".selectize-wrap_P-y2- {\n  margin: 10px 0;\n  position: relative; }\n\n.selectize-input_36ULe {\n  min-width: 300px;\n  border: 1px solid #ddd;\n  margin: 10px 0;\n  box-sizing: border-box;\n  transition: all 0s;\n  cursor: text;\n  background: #fff; }\n  .selectize-input_36ULe input {\n    background: transparent;\n    line-height: 22px; }\n\n.selectize-input--focus_30LU5 {\n  border-color: #1B267F; }\n\n.selectize-input--empty_3eAmI {\n  background: #fff;\n  padding: 5px 5px 0; }\n\n.selectize-input_36ULe input {\n  border: none;\n  outline: none;\n  margin-bottom: 5px; }\n\n.query-results_3Ph-Z {\n  margin-top: -3px;\n  margin-bottom: 5px;\n  padding: 5px;\n  border-radius: 3px;\n  position: absolute;\n  left: 0;\n  width: 100%;\n  box-shadow: 0 2px 12px rgba(0, 0, 0, 0.32);\n  background: #fff;\n  z-index: 900; }\n\n.query-results_3Ph-Z li {\n  padding: 0 7px;\n  line-height: 2;\n  cursor: pointer;\n  border-radius: 3px; }\n  .query-results_3Ph-Z li:hover {\n    background: #1B267F;\n    color: #fff; }\n\n.selectize-tag_1PWDE {\n  background: #1B267F;\n  cursor: pointer;\n  border-radius: 3px;\n  padding: 3px 25px 3px 5px;\n  margin: 5px;\n  color: #fff;\n  display: inline-block;\n  position: relative; }\n\n.icon-remove_2BuSV {\n  font-size: 0.8rem;\n  margin-left: 5px;\n  position: absolute;\n  right: 5px;\n  top: 2px; }\n", ""]);
	
	// exports
	exports.locals = {
		"selectize-wrap": "selectize-wrap_P-y2-",
		"selectize-input": "selectize-input_36ULe",
		"selectize-input--focus": "selectize-input--focus_30LU5",
		"selectize-input--empty": "selectize-input--empty_3eAmI",
		"query-results": "query-results_3Ph-Z",
		"selectize-tag": "selectize-tag_1PWDE",
		"icon-remove": "icon-remove_2BuSV"
	};

/***/ },
/* 163 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Textarea = __webpack_require__(164);
	
	var _Textarea2 = _interopRequireDefault(_Textarea);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Textarea2.default;

/***/ },
/* 164 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(165);
	var Textarea = function (_Component) {
	    _inherits(Textarea, _Component);
	
	    function Textarea(props) {
	        _classCallCheck(this, Textarea);
	
	        return _possibleConstructorReturn(this, (Textarea.__proto__ || Object.getPrototypeOf(Textarea)).call(this, props));
	    }
	
	    _createClass(Textarea, [{
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            return _react2.default.createElement("div", { styleName: "textarea-wrap", className: this.props.className || '' }, _react2.default.createElement("textarea", { placeholder: this.props.placeholder, value: this.props.value, onChange: function onChange(e) {
	                    _this2.props.onChange(e);
	                }, styleName: "textarea", type: this.props.type ? this.props.type : 'text', name: this.props.name ? this.props.name : null }));
	        }
	    }]);
	
	    return Textarea;
	}(_react.Component);
	Textarea = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Textarea);
	exports.default = Textarea;

/***/ },
/* 165 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(166);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 166 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	exports.i(__webpack_require__(167), "");
	
	// module
	exports.push([module.id, ".textarea-wrap_1BTJU {\n  margin: 10px 0;\n  position: relative;\n}\n\n.textarea_2xSxv {\n  width: 100%;\n  padding: 5px;\n  border: 1px solid var(--gray);\n  outline: none;\n  height: 100px;\n  transition: border-color .3s;\n}\n\n.textarea_2xSxv:focus {\n  border-color: var(--blue);\n}\n", ""]);
	
	// exports
	exports.locals = {
		"textarea-wrap": "textarea-wrap_1BTJU",
		"textarea": "textarea_2xSxv"
	};

/***/ },
/* 167 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  /* colors */\n  --text: #666;\n  --text-dark: #333;\n  --text-light: #999;\n  --blue: #1B267F;\n  --shiny-blue: #1B267F;\n  --dark-blue: #04082E;\n  --gray: #ddd;\n\n  --branding-height: 60px;\n  --sidebar-width: 300px;\n  --input-line-height: 25px;\n  --input-padding: 5px;\n  --reading-width: 700px;\n\n  /* style values */\n  --font-size-root: 16px;\n  --border-radius: 3px;\n  --font-family: Helvetica, Arial, \"Hiragino Sans GB\", \"Hiragino Sans GB W3\", \"Microsoft Yahei\", sans-serif;\n  --font-family-mono: Consolas, \"Liberation Mono\", Menlo, Courier, monospace;\n\n  --shadow-z1: 0 1px 3px rgba(0, 0, 0, 0.12), 0 1px 2px rgba(0, 0, 0, 0.24);\n  --shadow-z2: 0 3px 6px rgba(0, 0, 0, 0.16), 0 3px 6px rgba(0, 0, 0, 0.23);\n  --shadow-z3: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);\n  --shadow-z4: 0 14px 28px rgba(0, 0, 0, 0.25), 0 10px 10px rgba(0, 0, 0, 0.22);\n  --shadow-z5: 0 19px 38px rgba(0, 0, 0, 0.3), 0 15px 12px rgba(0, 0, 0, 0.22);\n\n  --shadow-y1: 0 2px 12px rgba(0, 0, 0, 0.32);\n\n  \\--page-title: {\n    margin: 35px 0;\n    font-size: 1.5rem;\n    font-weight: bold;\n    color: #333;\n  };\n\n  /* z-index */\n  --z-selectize-options: 900;\n  --z-dropdown-menu: 900;\n}\n", ""]);
	
	// exports


/***/ },
/* 168 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(169);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 169 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".modal-footer_FaHiU button {\n  margin-right: 10px; }\n", ""]);
	
	// exports
	exports.locals = {
		"modal-footer": "modal-footer_FaHiU"
	};

/***/ },
/* 170 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(92);
	
	var _Branding = __webpack_require__(171);
	
	var _Branding2 = _interopRequireDefault(_Branding);
	
	var _Colophon = __webpack_require__(190);
	
	var _Colophon2 = _interopRequireDefault(_Colophon);
	
	var _actions = __webpack_require__(93);
	
	var _selectors = __webpack_require__(113);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var App = function (_Component) {
	    _inherits(App, _Component);
	
	    function App(props) {
	        _classCallCheck(this, App);
	
	        var _this = _possibleConstructorReturn(this, (App.__proto__ || Object.getPrototypeOf(App)).call(this, props));
	
	        _this.handleLogout = _this.handleLogout.bind(_this);
	        return _this;
	    }
	
	    _createClass(App, [{
	        key: 'handleLogout',
	        value: function handleLogout() {
	            this.props.userLogout();
	        }
	    }, {
	        key: 'componentDidMount',
	        value: function componentDidMount() {
	            if (this.props.session.user.role !== 'visitor') {
	                this.props.fetchShelf();
	            }
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var userLoggedIn = this.props.session.user.role === 'visitor' && nextProps.session.user.role !== 'visitor';
	            if (userLoggedIn) {
	                this.props.fetchShelf();
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var isAdmin = false;
	            var username = null;
	            if (this.props.session.user.role !== 'visitor') {
	                isAdmin = this.props.session.user.role === 'admin';
	                username = this.props.session.user.username;
	            }
	            var bookShelf = this.props.bookShelf;
	
	            var bookShelfList = bookShelf.map(function (book) {
	                return {
	                    title: book.title,
	                    id: book.id
	                };
	            });
	            return _react2.default.createElement("div", null, _react2.default.createElement(_Branding2.default, { recentReading: bookShelfList, isAdmin: isAdmin, username: username, onLogout: this.handleLogout }), this.props.children, _react2.default.createElement(_Colophon2.default, null));
	        }
	    }]);
	
	    return App;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notification: state.components.notification,
	        session: state.session,
	        bookShelf: selectors.shelfBooks()(state)
	    };
	}, { fetchShelf: _actions.fetchShelf, userLogout: _actions.userLogout })(App);

/***/ },
/* 171 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Branding = __webpack_require__(172);
	
	var _Branding2 = _interopRequireDefault(_Branding);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Branding2.default;

/***/ },
/* 172 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _layout = __webpack_require__(173);
	
	var _Dropdown = __webpack_require__(176);
	
	var _Logo = __webpack_require__(182);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(188);
	var Branding = function (_Component) {
	    _inherits(Branding, _Component);
	
	    function Branding(props) {
	        _classCallCheck(this, Branding);
	
	        var _this = _possibleConstructorReturn(this, (Branding.__proto__ || Object.getPrototypeOf(Branding)).call(this, props));
	
	        _this.state = {
	            isDropdownMenuVisible: false
	        };
	        _this.handleLogoutClick = _this.handleLogoutClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(Branding, [{
	        key: "toggleDropdownMenu",
	        value: function toggleDropdownMenu() {
	            this.setState({
	                isDropdownMenuVisible: !this.state.isDropdownMenuVisible
	            });
	        }
	    }, {
	        key: "handleLogoutClick",
	        value: function handleLogoutClick(e) {
	            this.props.onLogout();
	            e.preventDefault();
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var isAdmin = this.props.isAdmin ? this.props.isAdmin : false;
	            var _props = this.props;
	            var username = _props.username;
	            var recentReading = _props.recentReading;
	
	            return _react2.default.createElement("div", { styleName: "branding " + (this.props.className ? this.props.className : '') }, _react2.default.createElement(_layout.Container, { className: "clearfix" }, _react2.default.createElement("div", null, _react2.default.createElement("div", { className: "left" }, _react2.default.createElement(_Logo2.default, null)), _react2.default.createElement("div", { className: "left", styleName: "nav" }, _react2.default.createElement("ul", { styleName: "nav-links" }, _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/browse" }, "\u6D4F\u89C8")))), username ? _react2.default.createElement("div", { styleName: "nav--user" }, recentReading.length !== 0 && _react2.default.createElement(_Dropdown.Dropdown, { styleName: "dropdown-recent-reading", title: "最近阅读" }, recentReading.slice(0, 5).map(function (book, index) {
	                return _react2.default.createElement(_Dropdown.DropdownItem, { key: index }, _react2.default.createElement(_reactRouter.Link, { to: "/viewer/book/" + book.id }, book.title));
	            }), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/shelf" }, "\u67E5\u770B\u5168\u90E8"))), _react2.default.createElement(_Dropdown.Dropdown, { title: _react2.default.createElement("div", { style: { display: 'inline-block' } }, username, isAdmin && _react2.default.createElement("span", { className: "badge" }, "\u7BA1\u7406\u5458")) }, isAdmin === true && _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/console" }, "\u63A7\u5236\u53F0")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/shelf" }, "\u4E66\u67B6")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/profile" }, "\u4E2A\u4EBA\u4E3B\u9875")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/preference" }, "\u8BBE\u7F6E")), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement("a", { onClick: this.handleLogoutClick, href: "#" }, "\u9000\u51FA")))) : _react2.default.createElement("div", { styleName: "nav--user" }, _react2.default.createElement("ul", { styleName: "nav-links" }, _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/signin" }, "\u767B\u5F55")), _react2.default.createElement("li", { styleName: "nav-item" }, _react2.default.createElement(_reactRouter.Link, { styleName: "nav-link", to: "/signup" }, "\u6CE8\u518C")))))));
	        }
	    }]);
	
	    return Branding;
	}(_react.Component);
	Branding = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Branding);
	exports.default = Branding;

/***/ },
/* 173 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.Container = undefined;
	
	var _Container = __webpack_require__(174);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.Container = _Container2.default;

/***/ },
/* 174 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Container = __webpack_require__(175);
	
	var _Container2 = _interopRequireDefault(_Container);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Container2.default;

/***/ },
/* 175 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Container = function (_Component) {
	    _inherits(Container, _Component);
	
	    function Container() {
	        _classCallCheck(this, Container);
	
	        return _possibleConstructorReturn(this, (Container.__proto__ || Object.getPrototypeOf(Container)).apply(this, arguments));
	    }
	
	    _createClass(Container, [{
	        key: 'render',
	        value: function render() {
	            var className = (this.props.isFluid ? 'container-fluid' : 'container') + (this.props.className ? ' ' + this.props.className : '');
	            return _react2.default.createElement("div", { className: className }, this.props.children);
	        }
	    }]);
	
	    return Container;
	}(_react.Component);
	
	exports.default = Container;

/***/ },
/* 176 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.DropdownItemSep = exports.Dropdown = exports.DropdownItem = undefined;
	
	var _Dropdown = __webpack_require__(177);
	
	var _Dropdown2 = _interopRequireDefault(_Dropdown);
	
	var _DropdownItem = __webpack_require__(180);
	
	var _DropdownItem2 = _interopRequireDefault(_DropdownItem);
	
	var _DropdownItemSep = __webpack_require__(181);
	
	var _DropdownItemSep2 = _interopRequireDefault(_DropdownItemSep);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.DropdownItem = _DropdownItem2.default;
	exports.Dropdown = _Dropdown2.default;
	exports.DropdownItemSep = _DropdownItemSep2.default;
	exports.default = _Dropdown2.default;

/***/ },
/* 177 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _isDescendant = __webpack_require__(100);
	
	var _isDescendant2 = _interopRequireDefault(_isDescendant);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(178);
	var Dropdown = function (_Component) {
	    _inherits(Dropdown, _Component);
	
	    function Dropdown(props) {
	        _classCallCheck(this, Dropdown);
	
	        var _this = _possibleConstructorReturn(this, (Dropdown.__proto__ || Object.getPrototypeOf(Dropdown)).call(this, props));
	
	        _this.state = {
	            showMenu: false
	        };
	        _this.handleGlobalClick = _this.handleGlobalClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(Dropdown, [{
	        key: "handleGlobalClick",
	        value: function handleGlobalClick(e) {
	            // 检查点击的 dom 是否是 dropdown 的子元素
	            // 如果是那么就不做处理，而 toggleDropdown 会响应
	            // 解决了页面上同时用两个 dropdown 时，其中一个展开，点击另一个前者不合上的问题
	            if (!(0, _isDescendant2.default)(this.dropdown, e.target)) {
	                this.setState({
	                    showMenu: false
	                });
	            } else {
	                // 如果使用了原生事件，尽量不要混合使用 synthetic 事件，react 的生产版本似乎会出现相关的 bug
	                this.setState({
	                    showMenu: !this.state.showMenu
	                });
	            }
	        }
	    }, {
	        key: "componentDidMount",
	        value: function componentDidMount() {
	            window.addEventListener('click', this.handleGlobalClick);
	        }
	    }, {
	        key: "componentWillUnmount",
	        value: function componentWillUnmount() {
	            window.removeEventListener('click', this.handleGlobalClick);
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var _this2 = this;
	
	            var _props = this.props;
	            var className = _props.className;
	            var style = _props.style;
	
	            return _react2.default.createElement("div", { ref: function ref(_ref) {
	                    _this2.dropdown = _ref;
	                }, styleName: "dropdown", className: className || '' }, _react2.default.createElement("div", { styleName: "dropdown-toggle" }, _react2.default.createElement("span", null, this.props.title), _react2.default.createElement("span", { styleName: "dropdown-caret" })), this.state.showMenu && _react2.default.createElement("div", { styleName: style === 'dark' ? 'dropdown-menu--dark' : 'dropdown-menu' }, _react2.default.createElement("ul", null, this.props.children)));
	        }
	    }]);
	
	    return Dropdown;
	}(_react.Component);
	Dropdown = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Dropdown);
	exports.default = Dropdown;

/***/ },
/* 178 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(179);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 179 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".dropdown-item_2C1dz {\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  overflow: hidden; }\n\n.light-link_2QDeA {\n  color: #ddd; }\n  .light-link_2QDeA:hover {\n    color: #fff; }\n\n.dropdown_SZfyp {\n  display: inline-block;\n  cursor: pointer;\n  position: relative; }\n\n.dropdown-toggle_34Qfd {\n  display: block;\n  user-select: none;\n  -webkit-user-select: none;\n  max-height: 100%; }\n\n.dropdown-menu_1HgbS {\n  box-shadow: 0 2px 4px rgba(0, 0, 0, 0.22);\n  line-height: 2.2;\n  font-size: 1rem;\n  text-align: left;\n  background: #222;\n  position: absolute;\n  right: 0;\n  width: 150px;\n  overflow: hidden;\n  padding: 5px 0;\n  z-index: 900; }\n\n.dropdown-caret_FcBWI {\n  display: inline-block;\n  width: 0;\n  height: 0;\n  vertical-align: middle;\n  content: \"\";\n  border: 4px solid;\n  border-right-color: transparent;\n  border-bottom-color: transparent;\n  border-left-color: transparent;\n  margin-left: 5px; }\n\n.dropdown-item_2C1dz {\n  display: block;\n  padding: 0 25px;\n  transition: all 0s; }\n  .dropdown-item_2C1dz:hover {\n    background: #3c3c3c; }\n  .dropdown-item_2C1dz:active {\n    background: #3c3c3c; }\n\n.sep_10Y0o {\n  margin: 5px 0;\n  height: 1px;\n  background: #3c3c3c; }\n\n.dropdown-menu--dark_6eVPX {\n  background: #1B267F; }\n  .dropdown-menu--dark_6eVPX .sep_10Y0o {\n    background: #1f2c94; }\n  .dropdown-menu--dark_6eVPX .dropdown-item_2C1dz:hover {\n    background: #1f2c94; }\n", ""]);
	
	// exports
	exports.locals = {
		"dropdown-item": "dropdown-item_2C1dz light-link_2QDeA",
		"light-link": "light-link_2QDeA",
		"dropdown": "dropdown_SZfyp",
		"dropdown-toggle": "dropdown-toggle_34Qfd",
		"dropdown-menu": "dropdown-menu_1HgbS",
		"dropdown-caret": "dropdown-caret_FcBWI",
		"sep": "sep_10Y0o",
		"dropdown-menu--dark": "dropdown-menu--dark_6eVPX dropdown-menu_1HgbS"
	};

/***/ },
/* 180 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(178);
	function DropdownItem(props) {
	    return _react2.default.createElement("li", null, typeof props.children === 'string' ? _react2.default.createElement("div", { className: styles['dropdown-item'] }, props.children) : _react2.default.cloneElement(props.children, {
	        className: styles['dropdown-item']
	    }));
	}
	exports.default = DropdownItem;

/***/ },
/* 181 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(178);
	function DropdownItemSep(props) {
	    return _react2.default.createElement("li", { className: styles['sep'] });
	}
	exports.default = DropdownItemSep;

/***/ },
/* 182 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Logo = __webpack_require__(183);
	
	var _Logo2 = _interopRequireDefault(_Logo);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Logo2.default;

/***/ },
/* 183 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(184);
	function Logo(props) {
	    var dark = props.dark;
	    var to = props.to;
	
	    var styleName = dark ? 'logo--dark' : 'logo';
	    return _react2.default.createElement("h1", { className: styles['logo-wrap'] }, _react2.default.createElement(_reactRouter.Link, { className: styles[styleName], to: to }, "readr"));
	}
	Logo['defaultProps'] = {
	    to: '/'
	};
	exports.default = Logo;

/***/ },
/* 184 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(185);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 185 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ":root {\n  --branding-height: 60px;\n}\n\n.logo-wrap_CP5P9 {\n  margin: 0;\n  line-height: var(--branding-height);\n  color: #fff;\n  margin-top: -3px;\n  display: inline-block;\n}\n\n.logo_3qcbV {\n  background: url(" + __webpack_require__(186) + ") no-repeat left;\n  width: 70px;\n  height: var(--branding-height);\n  background-size: 70px;\n  text-indent: -999em;\n  display: inline-block;\n}\n\n.logo--dark_38F-H {\n  background: url(" + __webpack_require__(187) + ") no-repeat left;\n  background-size: 70px;\n}\n", ""]);
	
	// exports
	exports.locals = {
		"logo-wrap": "logo-wrap_CP5P9",
		"logo": "logo_3qcbV",
		"logo--dark": "logo--dark_38F-H logo_3qcbV"
	};

/***/ },
/* 186 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "img/logo.81eb83d7f7.png";

/***/ },
/* 187 */
/***/ function(module, exports, __webpack_require__) {

	module.exports = __webpack_require__.p + "img/logo-dark.4754e8aa78.png";

/***/ },
/* 188 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(189);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 189 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".nav-link_3X0T8 {\n  color: #fff; }\n  .nav-link_3X0T8:hover {\n    color: #ddd; }\n\n.branding_8EVAt {\n  min-height: 60px;\n  background: #222; }\n\n.dropdown-menu_5Sc50 {\n  position: absolute;\n  top: 60px;\n  right: 0;\n  z-index: 999; }\n\n.username_3Mm6z,\n.nav-links_2wTYY {\n  line-height: 60px; }\n\n.nav_1oj1z, .nav--user_1L7Lb {\n  position: relative;\n  color: #fff;\n  cursor: pointer;\n  padding: 0 10px;\n  line-height: 60px;\n  display: inline-block; }\n\n.dropdown-recent-reading_2oyjH {\n  margin-right: 15px; }\n\n.nav--user_1L7Lb {\n  float: right; }\n\n.nav-link_3X0T8 {\n  padding: 0 5px; }\n\n.nav-item_f83bh {\n  display: inline-block; }\n\n.recent-reading_1kJKh {\n  margin-right: 15px; }\n", ""]);
	
	// exports
	exports.locals = {
		"nav-link": "nav-link_3X0T8",
		"branding": "branding_8EVAt",
		"dropdown-menu": "dropdown-menu_5Sc50",
		"username": "username_3Mm6z",
		"nav-links": "nav-links_2wTYY",
		"nav": "nav_1oj1z",
		"nav--user": "nav--user_1L7Lb",
		"dropdown-recent-reading": "dropdown-recent-reading_2oyjH",
		"nav-item": "nav-item_f83bh",
		"recent-reading": "recent-reading_1kJKh"
	};

/***/ },
/* 190 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _Colophon = __webpack_require__(191);
	
	var _Colophon2 = _interopRequireDefault(_Colophon);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _Colophon2.default;

/***/ },
/* 191 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Container = __webpack_require__(174);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(192);
	var Colophon = function (_Component) {
	    _inherits(Colophon, _Component);
	
	    function Colophon() {
	        _classCallCheck(this, Colophon);
	
	        return _possibleConstructorReturn(this, (Colophon.__proto__ || Object.getPrototypeOf(Colophon)).apply(this, arguments));
	    }
	
	    _createClass(Colophon, [{
	        key: "render",
	        value: function render() {
	            return _react2.default.createElement("div", { className: "colophon", styleName: "colophon" }, _react2.default.createElement(_Container2.default, null, _react2.default.createElement("p", null, "\xA9 2015\uFF0D2016 readrweb.com, all rights reserved")));
	        }
	    }]);
	
	    return Colophon;
	}(_react.Component);
	Colophon = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], Colophon);
	exports.default = Colophon;

/***/ },
/* 192 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(193);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 193 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".colophon_3cQJ0 {\n  font-size: 1rem;\n  padding: 20px 0;\n  color: #999; }\n", ""]);
	
	// exports
	exports.locals = {
		"colophon": "colophon_3cQJ0"
	};

/***/ },
/* 194 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(92);
	
	var _layout = __webpack_require__(173);
	
	var _ConsoleBranding = __webpack_require__(195);
	
	var _ConsoleBranding2 = _interopRequireDefault(_ConsoleBranding);
	
	var _actions = __webpack_require__(93);
	
	var _ConsoleSidebar = __webpack_require__(199);
	
	var _ConsoleSidebar2 = _interopRequireDefault(_ConsoleSidebar);
	
	var _menus = __webpack_require__(203);
	
	var _menus2 = _interopRequireDefault(_menus);
	
	var _DocContainer = __webpack_require__(204);
	
	var _DocContainer2 = _interopRequireDefault(_DocContainer);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var Console = function (_Component) {
	    _inherits(Console, _Component);
	
	    function Console(props) {
	        _classCallCheck(this, Console);
	
	        var _this = _possibleConstructorReturn(this, (Console.__proto__ || Object.getPrototypeOf(Console)).call(this, props));
	
	        _this.handleLogout = _this.handleLogout.bind(_this);
	        return _this;
	    }
	
	    _createClass(Console, [{
	        key: 'redirectIfNotAdmin',
	        value: function redirectIfNotAdmin() {
	            var props = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : this.props;
	
	            if (props.session.user.role !== 'admin') {
	                _helpers2.default.redirect('/');
	            }
	        }
	    }, {
	        key: 'handleLogout',
	        value: function handleLogout() {
	            this.props.userLogout();
	        }
	    }, {
	        key: 'componentWillReceiveProps',
	        value: function componentWillReceiveProps(nextProps) {
	            var userRoleChanged = this.props.session.user.role !== nextProps.session.user.role;
	            if (userRoleChanged) {
	                this.redirectIfNotAdmin(nextProps);
	            }
	        }
	    }, {
	        key: 'render',
	        value: function render() {
	            var isAdmin = this.props.session.user.role === 'admin';
	            var username = this.props.session.user.username;
	            var pathname = this.props.routing.locationBeforeTransitions ? this.props.routing.locationBeforeTransitions.pathname : 'console';
	            var contentStyle = {
	                marginLeft: 320,
	                paddingTop: 60
	            };
	            return isAdmin ? _react2.default.createElement(_DocContainer2.default, { bodyClass: "console" }, _react2.default.createElement(_ConsoleBranding2.default, { isAdmin: isAdmin, username: username, onLogout: this.handleLogout }), _react2.default.createElement(_layout.Container, { isFluid: true }, _react2.default.createElement(_ConsoleSidebar2.default, { menuMapping: _menus2.default, currentPath: pathname }), _react2.default.createElement("div", { style: contentStyle }, this.props.children))) : _react2.default.createElement("div", { style: { textAlign: 'center', margin: '20px 0' } }, "ACCESS DENIED!");
	        }
	    }]);
	
	    return Console;
	}(_react.Component);
	
	exports.default = (0, _reactRedux.connect)(function (state) {
	    return {
	        notifications: state.components.notifications,
	        session: state.session,
	        routing: state.routing
	    };
	}, { sendNotification: _actions.sendNotification, userAuth: _actions.userAuth, userLogout: _actions.userLogout })(Console);

/***/ },
/* 195 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ConsoleBranding = __webpack_require__(196);
	
	var _ConsoleBranding2 = _interopRequireDefault(_ConsoleBranding);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ConsoleBranding2.default;

/***/ },
/* 196 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	var _Container = __webpack_require__(174);
	
	var _Container2 = _interopRequireDefault(_Container);
	
	var _Dropdown = __webpack_require__(176);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _Logo = __webpack_require__(182);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(197);
	var ConsoleBranding = function (_Component) {
	    _inherits(ConsoleBranding, _Component);
	
	    function ConsoleBranding(props) {
	        _classCallCheck(this, ConsoleBranding);
	
	        var _this = _possibleConstructorReturn(this, (ConsoleBranding.__proto__ || Object.getPrototypeOf(ConsoleBranding)).call(this, props));
	
	        _this.state = {
	            isDropdownMenuVisible: false
	        };
	        _this.handleLogoutClick = _this.handleLogoutClick.bind(_this);
	        return _this;
	    }
	
	    _createClass(ConsoleBranding, [{
	        key: "handleLogoutClick",
	        value: function handleLogoutClick(e) {
	            this.props.onLogout();
	            e.preventDefault();
	        }
	    }, {
	        key: "toggleDropdownMenu",
	        value: function toggleDropdownMenu() {
	            this.setState({
	                isDropdownMenuVisible: !this.state.isDropdownMenuVisible
	            });
	        }
	    }, {
	        key: "render",
	        value: function render() {
	            var username = this.props.username;
	            var isAdmin = this.props.isAdmin ? this.props.isAdmin : 'false';
	            return _react2.default.createElement("div", { styleName: "branding" }, _react2.default.createElement(_Container2.default, { isFluid: true, className: "clearfix" }, _react2.default.createElement("div", null, _react2.default.createElement("div", { className: "left" }, _react2.default.createElement(_Logo2.default, { to: "/console" })), _react2.default.createElement("div", { styleName: "sub-name" }, _react2.default.createElement("span", { styleName: "sub" }, "\u63A7\u5236\u53F0")), _react2.default.createElement("div", { styleName: "nav right" }, username && _react2.default.createElement(_Dropdown.Dropdown, { style: "dark", title: _react2.default.createElement("span", null, username, isAdmin && _react2.default.createElement("span", { className: "badge badge--dark" }, "\u7BA1\u7406\u5458")) }, _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/" }, "\u56DE\u5230 Readr")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/profile" }, "\u4E2A\u4EBA\u4E3B\u9875")), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement(_reactRouter.Link, { to: "/user/preference" }, "\u8BBE\u7F6E")), _react2.default.createElement(_Dropdown.DropdownItemSep, null), _react2.default.createElement(_Dropdown.DropdownItem, null, _react2.default.createElement("a", { onClick: this.handleLogoutClick, href: "#" }, "\u9000\u51FA")))))));
	        }
	    }]);
	
	    return ConsoleBranding;
	}(_react.Component);
	ConsoleBranding = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], ConsoleBranding);
	exports.default = ConsoleBranding;

/***/ },
/* 197 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(198);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 198 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	exports.i(__webpack_require__(189), undefined);
	
	// module
	exports.push([module.id, ".branding_3goRG {\n  background: #1B267F;\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100%;\n  z-index: 800;\n  height: 60px; }\n\n.sep_AT6Gl {\n  margin: 0 10px;\n  opacity: .6;\n  font-size: 1rem; }\n\n.sub_Iyhms {\n  opacity: .8;\n  font-size: 1.2rem;\n  text-transform: uppercase;\n  margin-top: -3px;\n  display: inline-block; }\n\n.right_1ZAQP {\n  float: right; }\n\n.sub-name_2T8ah {\n  float: left;\n  margin-left: 15px; }\n  .sub-name_2T8ah span {\n    display: inline-block;\n    line-height: 60px;\n    height: 60px;\n    color: #fff; }\n\n.nav_10yn4 {\n  color: #fff;\n  line-height: 60px;\n  height: 60px; }\n", ""]);
	
	// exports
	exports.locals = {
		"branding": "branding_3goRG",
		"sep": "sep_AT6Gl",
		"sub": "sub_Iyhms",
		"right": "right_1ZAQP",
		"sub-name": "sub-name_2T8ah",
		"nav": "nav_10yn4 " + __webpack_require__(189).locals["nav"] + ""
	};

/***/ },
/* 199 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _ConsoleSidebar = __webpack_require__(200);
	
	var _ConsoleSidebar2 = _interopRequireDefault(_ConsoleSidebar);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _ConsoleSidebar2.default;

/***/ },
/* 200 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRouter = __webpack_require__(63);
	
	var _Icon = __webpack_require__(121);
	
	var _Icon2 = _interopRequireDefault(_Icon);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(201);
	var ConsoleSidebar = function (_Component) {
	    _inherits(ConsoleSidebar, _Component);
	
	    function ConsoleSidebar(props) {
	        _classCallCheck(this, ConsoleSidebar);
	
	        return _possibleConstructorReturn(this, (ConsoleSidebar.__proto__ || Object.getPrototypeOf(ConsoleSidebar)).call(this, props));
	    }
	
	    _createClass(ConsoleSidebar, [{
	        key: "componentDidMount",
	        value: function componentDidMount() {}
	    }, {
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var menuMapping = _props.menuMapping;
	            var currentPath = _props.currentPath;
	
	            var currentMenu = {
	                rootIndex: 0,
	                subIndex: 0
	            };
	            menuMapping.forEach(function (menu, rootIndex) {
	                var subIndex = void 0;
	                var result = menu.subMenu.filter(function (item, index) {
	                    if (item.path === currentPath) {
	                        subIndex = index;
	                        return true;
	                    }
	                });
	                if (result.length > 0) {
	                    currentMenu.rootIndex = rootIndex;
	                    currentMenu.subIndex = subIndex;
	                }
	            });
	            var rootMenu = _react2.default.createElement("ul", { styleName: "nav-side-root" }, menuMapping.map(function (menu, index) {
	                return _react2.default.createElement("li", { key: index, styleName: index !== currentMenu.rootIndex ? 'root-item' : 'root-item--current' }, _react2.default.createElement(_reactRouter.Link, { to: menu.path }, _react2.default.createElement(_Icon2.default, { size: 25, styleName: "icon", name: menu.component })));
	            }));
	            var subMenu = _react2.default.createElement("ul", { styleName: "nav-side-sub" }, menuMapping[currentMenu.rootIndex].subMenu.map(function (menu, index) {
	                return _react2.default.createElement("li", { key: index, styleName: index !== currentMenu.subIndex ? 'sub-item' : 'sub-item--current' }, _react2.default.createElement(_reactRouter.Link, { to: menu.path }, menu.displayName));
	            }));
	            return _react2.default.createElement("div", { styleName: "sidebar-left" }, rootMenu, subMenu);
	        }
	    }]);
	
	    return ConsoleSidebar;
	}(_react.Component);
	ConsoleSidebar = __decorate([(0, _reactCssModules2.default)(styles, {
	    allowMultiple: true
	})], ConsoleSidebar);
	exports.default = ConsoleSidebar;

/***/ },
/* 201 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(202);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 202 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	exports.i(__webpack_require__(167), "");
	
	// module
	exports.push([module.id, ":root {\n  --nav-root-width: 80px;\n  --item-line-height: 50px;\n}\n\n.sidebar-left_2Nfva {\n  position: fixed;\n  left: 0;\n  top: var(--branding-height);\n  height: 100%;\n  width: var(--sidebar-width);\n  background: #E4E4E4;\n}\n\n.nav-side_3L8f6 {\n  position: fixed;\n  left: 0;\n  height: 100%;\n}\n\n.nav-side-root_1_PBg {\n  width: var(--nav-root-width);\n  background: #04082E;\n}\n\n.nav-side-root--current_3BV5t {\n  background: red;\n}\n\n.nav-side-sub_5Q_f5 {\n  width: calc(var(--sidebar-width) - var(--nav-root-width));\n  left: var(--nav-root-width);\n}\n\n/* item */\n.nav-item_2r1zn {\n  height: var(--item-line-height);\n  line-height: var(--item-line-height);\n\n  & a {\n    display: block;\n    padding: 0 15px;\n    color: #fff;\n    height: var(--item-line-height);\n  }\n}\n\n.icon_26PwG {\n  margin-top: 12px;\n}\n\n.root-item_VPwuM {\n  text-align: center;\n\n  & a:hover {\n    background: color(var(--dark-blue) l(+ 10%));\n  }\n}\n\n.root-item--current_3LMnD {\n  background: var(--blue);\n}\n\n.sub-item_waA-O {\n\n  & a {\n    color: var(--text);\n  }\n  & a:hover {\n    background: gray(200);\n  }\n}\n\n.sub-item--current_3CzmM {\n\n  & a,\n  & a:hover {\n    color: var(--blue);\n    background: #fff;\n  }\n}\n", ""]);
	
	// exports
	exports.locals = {
		"sidebar-left": "sidebar-left_2Nfva",
		"nav-side": "nav-side_3L8f6",
		"nav-side-root": "nav-side-root_1_PBg nav-side_3L8f6",
		"nav-side-root--current": "nav-side-root--current_3BV5t nav-side-root_1_PBg nav-side_3L8f6",
		"nav-side-sub": "nav-side-sub_5Q_f5 nav-side_3L8f6",
		"nav-item": "nav-item_2r1zn",
		"icon": "icon_26PwG",
		"root-item": "root-item_VPwuM nav-item_2r1zn",
		"root-item--current": "root-item--current_3LMnD root-item_VPwuM nav-item_2r1zn",
		"sub-item": "sub-item_waA-O nav-item_2r1zn",
		"sub-item--current": "sub-item--current_3CzmM sub-item_waA-O nav-item_2r1zn"
	};

/***/ },
/* 203 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var menus = [{
	    component: 'books',
	    displayName: '',
	    path: '/console/books',
	    subMenu: [{
	        component: 'managebooks',
	        displayName: '书籍管理',
	        path: '/console/books'
	    },
	    // {
	    //   component: 'addbook',
	    //   displayName: '添加书籍',
	    //   path: '/console/books/new'
	    // },
	    {
	        component: 'addcollection',
	        displayName: '添加合集',
	        path: '/console/collections/new'
	    }]
	}, {
	    component: 'users',
	    displayName: '',
	    path: '/console/users',
	    subMenu: [{
	        component: 'manageusers',
	        displayName: '用户管理',
	        path: '/console/users'
	    }]
	}];
	exports.default = menus;

/***/ },
/* 204 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactSideEffect = __webpack_require__(205);
	
	var _reactSideEffect2 = _interopRequireDefault(_reactSideEffect);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var defaultTitle = 'Readr';
	var DocContainer = function (_Component) {
	    _inherits(DocContainer, _Component);
	
	    function DocContainer() {
	        _classCallCheck(this, DocContainer);
	
	        return _possibleConstructorReturn(this, (DocContainer.__proto__ || Object.getPrototypeOf(DocContainer)).apply(this, arguments));
	    }
	
	    _createClass(DocContainer, [{
	        key: "render",
	        value: function render() {
	            var className = this.props.className;
	
	            return className ? _react2.default.createElement("div", { className: 'gb-doc-container' + className }, this.props.children) : _react2.default.createElement("div", { className: "gb-doc-container" }, this.props.children);
	        }
	    }]);
	
	    return DocContainer;
	}(_react.Component);
	DocContainer = __decorate([(0, _reactSideEffect2.default)(reducePropsToState, handleStateChangeOnClient)], DocContainer);
	function reducePropsToState(propsList) {
	    var innermostProps = propsList[propsList.length - 1];
	    var data = {};
	    if (innermostProps) {
	        data = _lodash2.default.pick(innermostProps, ['title', 'bodyClass']);
	        if (data.title && !innermostProps.useAsMasterTitle) {
	            data.title = data.title + " | " + defaultTitle;
	        } else {
	            data.title = data.title || defaultTitle;
	        }
	    }
	    data.bodyClass = propsList.filter(function (prop) {
	        return prop.bodyClass;
	    }).map(function (prop) {
	        return prop.bodyClass;
	    }).join(' ');
	    return data;
	}
	function handleStateChangeOnClient(propList) {
	    var title = propList.title;
	    var bodyClass = propList.bodyClass;
	
	    if (typeof bodyClass !== 'undefined') {
	        document.body.className = bodyClass;
	    } else {
	        document.body.removeAttribute('class');
	    }
	    if (typeof title !== 'undefined') {
	        document.title = title;
	    } else {
	        document.title = defaultTitle;
	    }
	}
	exports.default = DocContainer;

/***/ },
/* 205 */
/***/ function(module, exports) {

	module.exports = require("react-side-effect");

/***/ },
/* 206 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _api = __webpack_require__(207);
	
	Object.keys(_api).forEach(function (key) {
	  if (key === "default" || key === "__esModule") return;
	  Object.defineProperty(exports, key, {
	    enumerable: true,
	    get: function get() {
	      return _api[key];
	    }
	  });
	});
	
	var api = _interopRequireWildcard(_api);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = Object.assign({}, api);

/***/ },
/* 207 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.logout = exports.auth = exports.userSignup = exports.userLogin = exports.fetchDoubanBooks = exports.fetchUsers = exports.fetchBooks = exports.fetchBookContent = exports.fetchBook = exports.fetchBookProgress = undefined;
	exports.fetchNormalized = fetchNormalized;
	exports.addCollection = addCollection;
	exports.addBook = addBook;
	exports.editBookMeta = editBookMeta;
	exports.addAuthor = addAuthor;
	exports.setProgress = setProgress;
	exports.deleteBook = deleteBook;
	
	var _callApi = __webpack_require__(76);
	
	var _callApi2 = _interopRequireDefault(_callApi);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _normalizeResponse = __webpack_require__(208);
	
	var _normalizeResponse2 = _interopRequireDefault(_normalizeResponse);
	
	var _schemas = __webpack_require__(106);
	
	var _schemas2 = _interopRequireDefault(_schemas);
	
	var _utils = __webpack_require__(95);
	
	var _utils2 = _interopRequireDefault(_utils);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var API_ROOT = _helpers2.default.getApiRoot();
	/**
	 * general helper functions
	 */
	var parseEndpointWithOptions = function parseEndpointWithOptions(endpoint, options) {
	    if (typeof options === 'string') {
	        return options;
	    } else {
	        var queryString = _utils2.default.parseUrlencoded(options);
	        return endpoint + '?' + queryString;
	    }
	};
	function fetchNormalized(endpoint, schema) {
	    var fetchOptions = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};
	
	    if (endpoint.indexOf('http://') !== -1) {
	        return (0, _normalizeResponse2.default)((0, _callApi2.default)(endpoint, fetchOptions), schema);
	    }
	    return (0, _normalizeResponse2.default)((0, _callApi2.default)(API_ROOT + '/' + endpoint, fetchOptions), schema);
	}
	/**
	 * specific api services
	 */
	var fetchBookProgress = exports.fetchBookProgress = function fetchBookProgress(id) {
	    return fetchNormalized('user/books/' + id + '/progress', _schemas2.default.BOOK_PROGRESS);
	};
	var fetchBook = exports.fetchBook = function fetchBook(id) {
	    return fetchNormalized('books/' + id, _schemas2.default.BOOK);
	};
	var fetchBookContent = exports.fetchBookContent = function fetchBookContent(id) {
	    return fetchNormalized('books/' + id + '/content', _schemas2.default.BOOK_CONTENT);
	};
	var fetchBooks = exports.fetchBooks = function fetchBooks() {
	    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var withContent = options.withContent;
	
	    var apiOptions = !withContent ? {
	        exclude: 'content'
	    } : {};
	    apiOptions = _lodash2.default.assign({}, _lodash2.default.omit(options, ['withContent']), apiOptions);
	    return fetchNormalized(parseEndpointWithOptions('books', apiOptions), _schemas2.default.BOOK_ARRAY);
	};
	var fetchUsers = exports.fetchUsers = function fetchUsers(options) {
	    return fetchNormalized(parseEndpointWithOptions('users', options), _schemas2.default.USER_ARRAY);
	};
	// external apis
	var fetchDoubanBooks = exports.fetchDoubanBooks = function fetchDoubanBooks(keyword) {
	    return (0, _callApi2.default)(_common.DOUBAN_API_ROOT + '/book/search?count=10&q=' + keyword, {
	        useJsonp: true
	    });
	};
	var userLogin = exports.userLogin = function userLogin(data) {
	    return (0, _callApi2.default)(API_ROOT + '/auth', {
	        method: 'POST',
	        data: data
	    });
	};
	var userSignup = exports.userSignup = function userSignup(data) {
	    return (0, _callApi2.default)(API_ROOT + '/users', {
	        method: 'POST',
	        data: data
	    });
	};
	var auth = exports.auth = function auth() {
	    return (0, _callApi2.default)(API_ROOT + '/auth', {
	        method: 'GET'
	    });
	};
	var logout = exports.logout = function logout() {
	    return (0, _callApi2.default)(API_ROOT + '/auth/revoke', {
	        method: 'PUT'
	    });
	};
	function addCollection(data) {
	    return (0, _callApi2.default)(API_ROOT + '/collections', { method: 'POST', data: data });
	}
	function addBook(data) {
	    return (0, _callApi2.default)(API_ROOT + '/books', { method: 'POST', data: data });
	}
	function editBookMeta(bookId, data) {
	    return (0, _callApi2.default)(API_ROOT + '/books/' + bookId, { method: 'PUT', data: data });
	}
	function addAuthor(data) {
	    return (0, _callApi2.default)(API_ROOT + '/authors', { method: 'POST', data: data });
	}
	function setProgress(bookId, data) {
	    (0, _callApi2.default)(API_ROOT + '/user/books/' + bookId + '/progress', { method: 'PUT', data: data });
	}
	function deleteBook(id) {
	    return (0, _callApi2.default)(API_ROOT + '/books/' + id, {
	        method: 'DELETE'
	    });
	}

/***/ },
/* 208 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = normalizeResponse;
	
	var _handleResponse = __webpack_require__(209);
	
	var _handleResponse2 = _interopRequireDefault(_handleResponse);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function normalizeResponse(resultPromise, schema) {
	    return resultPromise.then(function (response) {
	        return { response: (0, _handleResponse2.default)(response, schema) };
	    }, function (error) {
	        return { error: error };
	    });
	}

/***/ },
/* 209 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _normalizr = __webpack_require__(107);
	
	var _parseQuery = __webpack_require__(98);
	
	var _parseQuery2 = _interopRequireDefault(_parseQuery);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _humps = __webpack_require__(47);
	
	var _humps2 = _interopRequireDefault(_humps);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var parseHeaderPageLinkByRel = function parseHeaderPageLinkByRel(links, rel) {
	    var link = links.split(',').find(function (s) {
	        return s.indexOf('rel="' + rel + '"') > -1;
	    });
	    if (!link) {
	        return undefined;
	    }
	    var url = link.split(';')[0].trim().slice(1, -1);
	    return {
	        // todo
	        page: parseInt(_lodash2.default.get((0, _parseQuery2.default)(url.split('?')[1] || ''), 'page', 0), 10),
	        url: url
	    };
	};
	function parseResHeaderToPagination(response) {
	    if (!response) {
	        return {};
	    }
	    var links = response.headers.get('link');
	    if (!links) {
	        return {};
	    }
	    var next = parseHeaderPageLinkByRel(links, 'next');
	    var last = parseHeaderPageLinkByRel(links, 'last');
	    return {
	        next: next,
	        last: last
	    };
	}
	function handleResponse(_ref, schema) {
	    var json = _ref.json;
	    var _response = _ref._response;
	
	    var camelizedJson = _humps2.default.camelizeKeys(json);
	
	    var _parseResHeaderToPagi = parseResHeaderToPagination(_response);
	
	    var next = _parseResHeaderToPagi.next;
	    var last = _parseResHeaderToPagi.last;
	
	    if (typeof schema !== 'undefined') {
	        return _lodash2.default.assign({}, (0, _normalizr.normalize)(camelizedJson, schema), {
	            _next: next,
	            _last: last
	        });
	    }
	    return camelizedJson;
	}
	exports.default = handleResponse;

/***/ },
/* 210 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(1, function (require) {
	            fn(null, __webpack_require__(211).default);
	        });
	    }
	};

/***/ },
/* 211 */,
/* 212 */
/***/ function(module, exports) {

	module.exports = require("redux");

/***/ },
/* 213 */,
/* 214 */,
/* 215 */,
/* 216 */,
/* 217 */,
/* 218 */,
/* 219 */,
/* 220 */,
/* 221 */,
/* 222 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(223);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 223 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".content_deYS4 {\n  margin: 0 auto;\n  width: 550px;\n  position: relative;\n  overflow: hidden;\n  line-height: 1.9; }\n  .content_deYS4 p {\n    margin: 0;\n    min-height: 25px; }\n\n.page_26Jj7 {\n  display: block;\n  width: 100%;\n  overflow: hidden; }\n\n.page--fluid_20eQM { }\n  .page--fluid_20eQM .content_deYS4 {\n    width: 100%;\n    padding: 0 20px; }\n\n.page--init_1VHVM {\n  position: relative;\n  height: auto; }\n  .page--init_1VHVM .content_deYS4 {\n    height: auto; }\n\n.gb-line_3RYqK {\n  overflow: hidden; }\n\n.page-no_2_187 {\n  position: absolute;\n  left: 0;\n  top: 0;\n  border-top: 1px solid #e6e6e6;\n  padding: 0 10px;\n  color: #e6e6e6;\n  font-size: 0.8rem; }\n\n.white_1TVO9 {\n  color: #333; }\n\n.night_3alh8 {\n  color: #eee; }\n  .night_3alh8 a {\n    color: #fff;\n    text-decoration: underline; }\n\n.sepia_1CF69 {\n  color: #503220; }\n", ""]);
	
	// exports
	exports.locals = {
		"content": "content_deYS4",
		"page": "page_26Jj7",
		"page--fluid": "page--fluid_20eQM page_26Jj7",
		"page--init": "page--init_1VHVM",
		"gb-line": "gb-line_3RYqK",
		"page-no": "page-no_2_187",
		"white": "white_1TVO9",
		"night": "night_3alh8",
		"sepia": "sepia_1CF69"
	};

/***/ },
/* 224 */,
/* 225 */,
/* 226 */,
/* 227 */,
/* 228 */,
/* 229 */,
/* 230 */,
/* 231 */,
/* 232 */,
/* 233 */,
/* 234 */,
/* 235 */,
/* 236 */,
/* 237 */,
/* 238 */,
/* 239 */,
/* 240 */,
/* 241 */,
/* 242 */,
/* 243 */,
/* 244 */,
/* 245 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var THEMES = exports.THEMES = {
	    WHITE: 'WHITE',
	    NIGHT: 'NIGHT',
	    SEPIA: 'SEPIA'
	};

/***/ },
/* 246 */,
/* 247 */,
/* 248 */,
/* 249 */,
/* 250 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.getNodeHeights = getNodeHeights;
	exports.groupNodesByPage = groupNodesByPage;
	exports.groupPageFromChapters = groupPageFromChapters;
	exports.resolveBookLocation = resolveBookLocation;
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var styles = __webpack_require__(222);
	// 暂不支持包含图片的计算
	// 计算没有等待图片加载完成，所以结果是不正确的
	function getNodeHeights(nodes) {
	    var nodesHeight = [];
	    Array.prototype.forEach.call(nodes, function (node, index) {
	        if (node.className !== styles['gb-line']) {
	            console.error('Unsupported content found!');
	        }
	        nodesHeight.push(node.clientHeight);
	    });
	    return nodesHeight;
	}
	// long paragraph situation doesn't seem to affect this function
	// offset distance is always negtive or zero
	// the index will be of the paragraph with this offset at the end
	function getPageOffset(_ref) {
	    var pageIndex = _ref.pageIndex;
	    var pageHeight = _ref.pageHeight;
	    var nodeHeights = _ref.nodeHeights;
	
	    var offset = 0;
	    var nodeIndex = 0;
	    var nodeStartIndex = void 0;
	    if (pageIndex !== 0) {
	        var nodeHeightSum = 0;
	        while (nodeHeightSum <= pageHeight * pageIndex) {
	            nodeHeightSum += nodeHeights[nodeIndex];
	            nodeIndex++;
	        }
	        offset = nodeHeightSum - nodeHeights[nodeIndex - 1] - pageIndex * pageHeight;
	        nodeStartIndex = nodeIndex - 1;
	    } else {
	        nodeStartIndex = 0;
	    }
	    return { offset: offset, nodeStartIndex: nodeStartIndex };
	}
	function getNodesOfPage(_ref2) {
	    var pageIndex = _ref2.pageIndex;
	    var nodes = _ref2.nodes;
	    var pageHeight = _ref2.pageHeight;
	    var nodeHeights = _ref2.nodeHeights;
	
	    var _getPageOffset = getPageOffset({ pageIndex: pageIndex, pageHeight: pageHeight, nodeHeights: nodeHeights });
	
	    var offset = _getPageOffset.offset;
	    var nodeStartIndex = _getPageOffset.nodeStartIndex;
	
	    var nodeIndex = nodeStartIndex;
	    var nodeEndIndex = void 0;
	    var pageNodes = [];
	    var nodeHeightSum = offset + nodeHeights[nodeStartIndex];
	    nodeIndex++;
	    if (nodeHeightSum < pageHeight) {
	        while (nodeHeightSum <= pageHeight && nodeIndex !== nodes.length) {
	            nodeHeightSum += nodeHeights[nodeIndex];
	            nodeIndex++;
	        }
	        nodeEndIndex = nodeIndex - 1;
	    } else {
	        nodeEndIndex = nodeStartIndex;
	    }
	    for (var i = nodeStartIndex; i <= nodeEndIndex && i <= nodes.length - 1; i++) {
	        pageNodes.push(nodes[i]);
	    }
	    return { pageNodes: pageNodes, offset: offset };
	}
	function groupNodesByPage(nodes, nodeHeights, pageHeight) {
	    var pageStartFrom = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;
	    var chapterId = arguments[4];
	
	    var pages = [];
	    var pageHeightSum = nodeHeights.reduce(function (a, b) {
	        return a + b;
	    }, 0);
	    var pageSum = Math.ceil(pageHeightSum / pageHeight);
	    if (nodeHeights.length === 0) {
	        return [{
	            nodes: nodes,
	            meta: {
	                pageNo: 1 + pageStartFrom,
	                offset: 0,
	                chapterId: chapterId
	            }
	        }];
	    }
	    // finally
	
	    var _loop = function _loop(i) {
	        var _getNodesOfPage = getNodesOfPage({ pageIndex: i, nodes: nodes, nodeHeights: nodeHeights, pageHeight: pageHeight });
	
	        var pageNodes = _getNodesOfPage.pageNodes;
	        var offset = _getNodesOfPage.offset;
	
	        var findIdOfHTags = function findIdOfHTags(mdNode) {
	            var pattern = /<h\d id="(.*)">(.*)<\/h\d>/;
	            var result = mdNode.match(pattern);
	            if (result) {
	                return result[1];
	            }
	            return null;
	        };
	        var hash = pageNodes.map(function (node) {
	            return findIdOfHTags(node);
	        }).filter(function (id) {
	            return Boolean(id);
	        });
	        pages.push({
	            nodes: pageNodes,
	            meta: {
	                pageNo: pageStartFrom + i + 1,
	                offset: offset,
	                chapterId: chapterId,
	                hash: hash
	            }
	        });
	    };
	
	    for (var i = 0; i < pageSum; i++) {
	        _loop(i);
	    }
	    return pages;
	}
	function groupPageFromChapters(contentOfChapters, nodeHeightsOfChapters, pageHeight) {
	    var pageStartFrom = 0;
	    var allPages = [];
	    var t0 = new Date().valueOf();
	    contentOfChapters.forEach(function (chapter, index) {
	        var pages = groupNodesByPage(chapter.markdown.split('\n\n'), nodeHeightsOfChapters[index].nodeHeights, pageHeight, pageStartFrom, chapter.id);
	        allPages = allPages.concat(pages);
	        pageStartFrom = pageStartFrom + pages.length;
	    });
	    var t1 = new Date().valueOf();
	    _helpers2.default.print('Grouping nodes takes ' + (t1 - t0) + 'ms');
	    return allPages;
	}
	function resolveBookLocation(href, computedPages) {
	    var chapterId = href.split('$')[0];
	    var hash = href.split('$')[1];
	    var i = 0;
	    var foundChapterPage = void 0;
	    while (i < computedPages.length) {
	        var page = computedPages[i];
	        if ('#' + page.meta.chapterId === chapterId) {
	            foundChapterPage = page.meta.pageNo;
	            if (hash) {
	                if (page.meta.hash && page.meta.hash.indexOf(hash) !== -1) {
	                    _helpers2.default.print('with hash', page.meta.pageNo);
	                    return page.meta.pageNo;
	                }
	            } else {
	                _helpers2.default.print('without hash', page.meta.pageNo);
	                return page.meta.pageNo;
	            }
	        }
	        i++;
	    }
	    if (!foundChapterPage) {
	        throw new Error('未找到位置！');
	    }
	    console.warn('所在章节未找到位置，已跳转至章节！');
	    _helpers2.default.print('foundChapterPage', foundChapterPage);
	    return foundChapterPage;
	}

/***/ },
/* 251 */,
/* 252 */,
/* 253 */,
/* 254 */,
/* 255 */,
/* 256 */,
/* 257 */,
/* 258 */,
/* 259 */,
/* 260 */,
/* 261 */,
/* 262 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(2, function (require) {
	            fn(null, __webpack_require__(263).default);
	        });
	    }
	};

/***/ },
/* 263 */,
/* 264 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(3, function (require) {
	            fn(null, __webpack_require__(265).default);
	        });
	    }
	};

/***/ },
/* 265 */,
/* 266 */,
/* 267 */,
/* 268 */,
/* 269 */,
/* 270 */,
/* 271 */,
/* 272 */,
/* 273 */,
/* 274 */,
/* 275 */,
/* 276 */,
/* 277 */,
/* 278 */,
/* 279 */,
/* 280 */,
/* 281 */,
/* 282 */,
/* 283 */,
/* 284 */,
/* 285 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(4, function (require) {
	            fn(null, __webpack_require__(286).default);
	        });
	    }
	};

/***/ },
/* 286 */,
/* 287 */,
/* 288 */,
/* 289 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(5, function (require) {
	            fn(null, __webpack_require__(290).default);
	        });
	    }
	};

/***/ },
/* 290 */,
/* 291 */,
/* 292 */,
/* 293 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(6, function (require) {
	            fn(null, __webpack_require__(294).default);
	        });
	    }
	};

/***/ },
/* 294 */,
/* 295 */,
/* 296 */,
/* 297 */,
/* 298 */,
/* 299 */,
/* 300 */,
/* 301 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(7, function (require) {
	            fn(null, __webpack_require__(302).default);
	        });
	    }
	};

/***/ },
/* 302 */,
/* 303 */,
/* 304 */,
/* 305 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(8, function (require) {
	            fn(null, __webpack_require__(306).default);
	        });
	    }
	};

/***/ },
/* 306 */,
/* 307 */,
/* 308 */,
/* 309 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(9, function (require) {
	            fn(null, __webpack_require__(310).default);
	        });
	    }
	};

/***/ },
/* 310 */,
/* 311 */,
/* 312 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(10, function (require) {
	            fn(null, __webpack_require__(313).default);
	        });
	    }
	};

/***/ },
/* 313 */,
/* 314 */,
/* 315 */,
/* 316 */,
/* 317 */,
/* 318 */,
/* 319 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(11, function (require) {
	            fn(null, __webpack_require__(320).default);
	        });
	    }
	};

/***/ },
/* 320 */,
/* 321 */,
/* 322 */,
/* 323 */,
/* 324 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(12, function (require) {
	            fn(null, __webpack_require__(325).default);
	        });
	    }
	};

/***/ },
/* 325 */,
/* 326 */,
/* 327 */,
/* 328 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(13, function (require) {
	            fn(null, __webpack_require__(329).default);
	        });
	    }
	};

/***/ },
/* 329 */,
/* 330 */,
/* 331 */,
/* 332 */,
/* 333 */,
/* 334 */,
/* 335 */,
/* 336 */,
/* 337 */,
/* 338 */,
/* 339 */,
/* 340 */,
/* 341 */,
/* 342 */,
/* 343 */,
/* 344 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(14, function (require) {
	            fn(null, __webpack_require__(345).default);
	        });
	    }
	};

/***/ },
/* 345 */,
/* 346 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(15, function (require) {
	            fn(null, __webpack_require__(347).default);
	        });
	    }
	};

/***/ },
/* 347 */,
/* 348 */,
/* 349 */,
/* 350 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(16, function (require) {
	            fn(null, __webpack_require__(351).default);
	        });
	    }
	};

/***/ },
/* 351 */,
/* 352 */,
/* 353 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	module.exports = {
	    getComponent: function getComponent(nextState, fn) {
	        __webpack_require__.e/* nsure */(17, function (require) {
	            fn(null, __webpack_require__(354).default);
	        });
	    }
	};

/***/ },
/* 354 */,
/* 355 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	
	var _AppError = __webpack_require__(356);
	
	var _AppError2 = _interopRequireDefault(_AppError);

	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

	exports.default = _AppError2.default;

/***/ },
/* 356 */
/***/ function(module, exports, __webpack_require__) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactCssModules = __webpack_require__(125);
	
	var _reactCssModules2 = _interopRequireDefault(_reactCssModules);
	
	var _Logo = __webpack_require__(182);
	
	var _Logo2 = _interopRequireDefault(_Logo);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
	
	function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }
	
	function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }
	
	var __decorate = undefined && undefined.__decorate || function (decorators, target, key, desc) {
	    var c = arguments.length,
	        r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc,
	        d;
	    if ((typeof Reflect === "undefined" ? "undefined" : _typeof(Reflect)) === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);else for (var i = decorators.length - 1; i >= 0; i--) {
	        if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
	    }return c > 3 && r && Object.defineProperty(target, key, r), r;
	};
	
	var styles = __webpack_require__(357);
	var AppError = function (_Component) {
	    _inherits(AppError, _Component);
	
	    function AppError() {
	        _classCallCheck(this, AppError);
	
	        return _possibleConstructorReturn(this, (AppError.__proto__ || Object.getPrototypeOf(AppError)).apply(this, arguments));
	    }
	
	    _createClass(AppError, [{
	        key: "render",
	        value: function render() {
	            var _props = this.props;
	            var title = _props.title;
	            var message = _props.message;
	
	            return _react2.default.createElement("div", null, _react2.default.createElement("div", { styleName: "header" }, _react2.default.createElement(_Logo2.default, { dark: true })), _react2.default.createElement("div", { styleName: "body" }, _react2.default.createElement("h1", { styleName: "title" }, title), _react2.default.createElement("div", null, message)));
	        }
	    }]);
	
	    return AppError;
	}(_react.Component);
	AppError = __decorate([(0, _reactCssModules2.default)(styles)], AppError);
	exports.default = AppError;

/***/ },
/* 357 */
/***/ function(module, exports, __webpack_require__) {

	
	    var content = __webpack_require__(358);
	    var insertCss = __webpack_require__(129);
	
	    if (typeof content === 'string') {
	      content = [[module.id, content, '']];
	    }
	
	    module.exports = content.locals || {};
	    module.exports._getCss = function() { return content.toString(); };
	    module.exports._insertCss = function(options) { return insertCss(content, options) };
	  

/***/ },
/* 358 */
/***/ function(module, exports, __webpack_require__) {

	exports = module.exports = __webpack_require__(128)();
	// imports
	
	
	// module
	exports.push([module.id, ".header_3jAuQ {\n  text-align: center; }\n\n.title_17FS5 {\n  font-size: 1.6rem;\n  color: #222; }\n\n.body_3v-hj {\n  text-align: center;\n  width: 500px;\n  margin: 0 auto;\n  padding: 150px 0;\n  font-size: 1.1rem; }\n", ""]);
	
	// exports
	exports.locals = {
		"header": "header_3jAuQ",
		"title": "title_17FS5",
		"body": "body_3v-hj"
	};

/***/ },
/* 359 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.render500 = exports.renderHtml = exports.matchRoute = exports.getStore = undefined;
	
	var _getStore = __webpack_require__(360);
	
	var _getStore2 = _interopRequireDefault(_getStore);
	
	var _matchRoute = __webpack_require__(372);
	
	var _matchRoute2 = _interopRequireDefault(_matchRoute);
	
	var _renderHtml = __webpack_require__(373);
	
	var _renderHtml2 = _interopRequireDefault(_renderHtml);
	
	var _render = __webpack_require__(396);
	
	var _render2 = _interopRequireDefault(_render);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.getStore = _getStore2.default;
	exports.matchRoute = _matchRoute2.default;
	exports.renderHtml = _renderHtml2.default;
	exports.render500 = _render2.default;
	exports.default = _renderHtml2.default;

/***/ },
/* 360 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	var _sagas = __webpack_require__(361);
	
	var _sagas2 = _interopRequireDefault(_sagas);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	/**
	 * Get Redux store tree with initial fetched data
	 */
	function getStore(renderProps, fetchData, userSession, store) {
	    if (fetchData === true) {
	        var _ret = function () {
	            var params = renderProps.params;
	            var query = renderProps.location.query;
	            var fetchDataFns = renderProps.components.map(function (comp) {
	                return comp.fetchData || null;
	            }).filter(function (comp) {
	                return Boolean(comp);
	            });
	            store.runSaga(_sagas2.default);
	            if (fetchDataFns.length !== 0) {
	                return {
	                    v: Promise.all(fetchDataFns.map(function (fetchDataFn) {
	                        // 这边应该是对 store 做了 mutation
	                        var result = fetchDataFn({ store: store, params: params, query: query, userSession: userSession });
	                        // todo: 遇到请求数组会报错
	                        if (Array.isArray(result)) {
	                            return Promise.all(result).then(function () {
	                                return 0;
	                            }, function (error) {
	                                return error;
	                            });
	                        }
	                        // todo
	                        // 结果不是 Promise, saga 的 action 暂时这么处理
	                        if (!result || !result.then) {
	                            return 0;
	                        }
	                        return result.then(function () {
	                            return 0;
	                        }, function (error) {
	                            return error;
	                        });
	                    })).then(function () {
	                        return store;
	                    }, function (error) {
	                        return error;
	                    })
	                };
	            }
	            return {
	                v: Promise.resolve(store)
	            };
	        }();
	
	        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === "object") return _ret.v;
	    }
	    return Promise.resolve(store);
	}
	exports.default = getStore;

/***/ },
/* 361 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = rootSaga;
	
	var _effects = __webpack_require__(362);
	
	var _loadRequests = __webpack_require__(363);
	
	var _loadRequests2 = _interopRequireDefault(_loadRequests);
	
	var _loginFlow = __webpack_require__(368);
	
	var _loginFlow2 = _interopRequireDefault(_loginFlow);
	
	var _viewerTasks = __webpack_require__(369);
	
	var _viewerTasks2 = _interopRequireDefault(_viewerTasks);
	
	var _test = __webpack_require__(371);
	
	var _test2 = _interopRequireDefault(_test);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var _marked = [rootSaga].map(regeneratorRuntime.mark);
	
	function rootSaga() {
	    return regeneratorRuntime.wrap(function rootSaga$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    _context.next = 2;
	                    return [(0, _effects.fork)(_loadRequests2.default), (0, _effects.fork)(_loginFlow2.default), (0, _effects.fork)(_viewerTasks2.default), (0, _effects.fork)(_test.watchTest2), (0, _effects.fork)(_test2.default)];
	
	                case 2:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}

/***/ },
/* 362 */
/***/ function(module, exports) {

	module.exports = require("redux-saga/effects");

/***/ },
/* 363 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RESERVED_ACTION_KYES = exports.API_CONFIG_KEYS = undefined;
	exports.default = watchAllLoadRequests;
	
	var _effects = __webpack_require__(362);
	
	var _actions = __webpack_require__(93);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _api = __webpack_require__(206);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _utils = __webpack_require__(364);
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [handleLoad, watchAllLoadRequests].map(regeneratorRuntime.mark);
	
	var OPTIONS = 'options';
	var ID = 'id';
	var DATA = 'data';
	var TYPE = 'type';
	var API_CONFIG_KEYS = exports.API_CONFIG_KEYS = [OPTIONS, ID, DATA];
	var RESERVED_ACTION_KYES = exports.RESERVED_ACTION_KYES = [TYPE].concat(API_CONFIG_KEYS);
	var fetchBook = _utils.fetchEntity.bind(null, actions.book, _api2.default.fetchBook);
	var fetchBookContent = _utils.fetchEntity.bind(null, actions.bookContent, _api2.default.fetchBookContent);
	var fetchBooks = _utils.fetchEntity.bind(null, actions.books, _api2.default.fetchBooks);
	var fetchUsers = _utils.fetchEntity.bind(null, actions.users, _api2.default.fetchUsers);
	function handleLoad(fetchFn, parsedAction, callApi) {
	    var apiConfig, payload;
	    return regeneratorRuntime.wrap(function handleLoad$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    apiConfig = parsedAction.apiConfig;
	                    payload = parsedAction.payload;
	                    // 在检查是否有数据的算法完成之前默认直接 call api
	
	                    if (!(typeof callApi === 'undefined' || callApi === true)) {
	                        _context.next = 5;
	                        break;
	                    }
	
	                    _context.next = 5;
	                    return (0, _effects.call)(fetchFn, apiConfig, payload);
	
	                case 5:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}
	function watchAllLoadRequests() {
	    var action, apiConfig, payload, parsedAction;
	    return regeneratorRuntime.wrap(function watchAllLoadRequests$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    if (false) {
	                        _context2.next = 24;
	                        break;
	                    }
	
	                    _context2.next = 3;
	                    return (0, _effects.take)(actions.LOAD_ACTIONS);
	
	                case 3:
	                    action = _context2.sent;
	                    apiConfig = _lodash2.default.pick(action, API_CONFIG_KEYS);
	                    // 如果直接使用 payload 可能在 pagination 之类的 reducer 里面会有一些麻烦
	                    // 因为可能比较难判断哪个是 key
	
	                    payload = _lodash2.default.omit(action, RESERVED_ACTION_KYES);
	                    parsedAction = { apiConfig: apiConfig, payload: payload };
	                    _context2.t0 = action.type;
	                    _context2.next = _context2.t0 === ACTION_TYPES.LOAD_USERS ? 10 : _context2.t0 === ACTION_TYPES.LOAD_BOOKS ? 13 : _context2.t0 === ACTION_TYPES.LOAD_BOOK ? 16 : _context2.t0 === ACTION_TYPES.LOAD_BOOK_CONTENT ? 19 : 22;
	                    break;
	
	                case 10:
	                    _context2.next = 12;
	                    return (0, _effects.fork)(handleLoad, fetchUsers, parsedAction);
	
	                case 12:
	                    return _context2.abrupt('break', 22);
	
	                case 13:
	                    _context2.next = 15;
	                    return (0, _effects.fork)(handleLoad, fetchBooks, parsedAction);
	
	                case 15:
	                    return _context2.abrupt('break', 22);
	
	                case 16:
	                    _context2.next = 18;
	                    return (0, _effects.fork)(handleLoad, fetchBook, parsedAction);
	
	                case 18:
	                    return _context2.abrupt('break', 22);
	
	                case 19:
	                    _context2.next = 21;
	                    return (0, _effects.fork)(handleLoad, fetchBookContent, parsedAction);
	
	                case 21:
	                    return _context2.abrupt('break', 22);
	
	                case 22:
	                    _context2.next = 0;
	                    break;
	
	                case 24:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}

/***/ },
/* 364 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.RESERVED_ACTION_KYES = exports.API_CONFIG_KEYS = undefined;
	exports.fetchEntity = fetchEntity;
	
	var _cache = __webpack_require__(365);
	
	var cache = _interopRequireWildcard(_cache);
	
	var _effects = __webpack_require__(362);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [fetchEntity].map(regeneratorRuntime.mark);
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var OPTIONS = 'options';
	var ID = 'id';
	var DATA = 'data';
	var TYPE = 'type';
	var API_CONFIG_KEYS = exports.API_CONFIG_KEYS = [OPTIONS, ID, DATA];
	var RESERVED_ACTION_KYES = exports.RESERVED_ACTION_KYES = [TYPE].concat(API_CONFIG_KEYS);
	// TODO
	// 似乎需要优化，缓存的逻辑和获取的耦合太深了
	function fetchEntity(entity, apiFn, apiConfig, payload) {
	    var fullPayload, id, options, apiArgs, hasCache, cacheId, cacheContent, action, _ref, response, error, _action, _action2;
	
	    return regeneratorRuntime.wrap(function fetchEntity$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    fullPayload = _lodash2.default.assign({}, apiConfig, payload);
	                    id = apiConfig[ID];
	                    options = apiConfig[OPTIONS];
	                    apiArgs = [id, options].filter(function (arg) {
	                        return !_lodash2.default.isUndefined(arg);
	                    });
	                    hasCache = void 0;
	                    cacheId = void 0;
	
	                    if (!(id && _app2.default.enableEntityCache)) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    cacheId = cache.createCacheId(apiFn + id + options);
	                    cacheContent = cache.getCache(cacheId);
	
	                    hasCache = Boolean(cacheContent);
	
	                    if (!hasCache) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    action = entity.loadCache(cacheContent, fullPayload);
	                    _context.next = 14;
	                    return (0, _effects.put)(entity.request(fullPayload));
	
	                case 14:
	                    _context.next = 16;
	                    return (0, _effects.put)(action);
	
	                case 16:
	                    return _context.abrupt('return', action);
	
	                case 17:
	                    _context.next = 19;
	                    return (0, _effects.put)(entity.request(fullPayload));
	
	                case 19:
	                    _context.next = 21;
	                    return _effects.call.apply(undefined, [apiFn].concat(_toConsumableArray(apiArgs)));
	
	                case 21:
	                    _ref = _context.sent;
	                    response = _ref.response;
	                    error = _ref.error;
	
	                    if (!response) {
	                        _context.next = 32;
	                        break;
	                    }
	
	                    // 如果是 undefined 也不会有任何处理
	                    if (hasCache === false) {
	                        cache.setCache(cacheId, response);
	                    }
	                    _action = entity.success(response, fullPayload);
	                    _context.next = 29;
	                    return (0, _effects.put)(_action);
	
	                case 29:
	                    return _context.abrupt('return', _action);
	
	                case 32:
	                    _action2 = entity.failure(error, fullPayload);
	                    _context.next = 35;
	                    return (0, _effects.put)(_action2);
	
	                case 35:
	                    return _context.abrupt('return', _action2);
	
	                case 36:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}

/***/ },
/* 365 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	exports.createCacheId = createCacheId;
	exports.getCache = getCache;
	exports.setCache = setCache;
	
	var _md = __webpack_require__(366);
	
	var _md2 = _interopRequireDefault(_md);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function createCacheId(identifier) {
	    if (_lodash2.default.isEmpty(identifier)) {
	        throw new Error('缓存标识符不能为空！');
	    }
	    return (0, _md2.default)(identifier.toString());
	}
	function getCache(key) {
	    if (typeof key !== 'string') {
	        throw new Error('Name should be string!');
	    }
	    var content = localStorage.getItem(key);
	    if (!content) {
	        return undefined;
	    }
	    try {
	        content = JSON.parse(content);
	    } catch (error) {
	        throw error;
	    }
	    return content;
	}
	function setCache(key, content) {
	    if (typeof key !== 'string') {
	        throw new Error('Name should be string!');
	    }
	    if ((typeof content === 'undefined' ? 'undefined' : _typeof(content)) !== 'object') {
	        throw new Error('Cache content type should be object!');
	    }
	    var save = function save() {
	        localStorage.setItem(key, JSON.stringify(content));
	    };
	    try {
	        save();
	    } catch (error) {
	        if (error.name === 'QuotaExceededError') {
	            // TODO: 能否只清除最旧的
	            console.warn('本地缓存已满，旧的缓存将被清除！');
	            localStorage.clear();
	            save();
	        } else {
	            console.error(error);
	        }
	    }
	    return true;
	}

/***/ },
/* 366 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	var md5 = __webpack_require__(367);
	exports.default = md5;

/***/ },
/* 367 */
/***/ function(module, exports, __webpack_require__) {

	var __WEBPACK_AMD_DEFINE_RESULT__;'use strict';
	
	var _typeof = typeof Symbol === "function" && typeof Symbol.iterator === "symbol" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === "function" && obj.constructor === Symbol && obj !== Symbol.prototype ? "symbol" : typeof obj; };
	
	/*
	 * JavaScript MD5
	 * https://github.com/blueimp/JavaScript-MD5
	 *
	 * Copyright 2011, Sebastian Tschan
	 * https://blueimp.net
	 *
	 * Licensed under the MIT license:
	 * http://www.opensource.org/licenses/MIT
	 *
	 * Based on
	 * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message
	 * Digest Algorithm, as defined in RFC 1321.
	 * Version 2.2 Copyright (C) Paul Johnston 1999 - 2009
	 * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet
	 * Distributed under the BSD License
	 * See http://pajhome.org.uk/crypt/md5 for more info.
	 */
	
	/*global unescape, define, module */
	
	;(function ($) {
	  'use strict';
	
	  /*
	  * Add integers, wrapping at 2^32. This uses 16-bit operations internally
	  * to work around bugs in some JS interpreters.
	  */
	
	  function safe_add(x, y) {
	    var lsw = (x & 0xFFFF) + (y & 0xFFFF);
	    var msw = (x >> 16) + (y >> 16) + (lsw >> 16);
	    return msw << 16 | lsw & 0xFFFF;
	  }
	
	  /*
	  * Bitwise rotate a 32-bit number to the left.
	  */
	  function bit_rol(num, cnt) {
	    return num << cnt | num >>> 32 - cnt;
	  }
	
	  /*
	  * These functions implement the four basic operations the algorithm uses.
	  */
	  function md5_cmn(q, a, b, x, s, t) {
	    return safe_add(bit_rol(safe_add(safe_add(a, q), safe_add(x, t)), s), b);
	  }
	  function md5_ff(a, b, c, d, x, s, t) {
	    return md5_cmn(b & c | ~b & d, a, b, x, s, t);
	  }
	  function md5_gg(a, b, c, d, x, s, t) {
	    return md5_cmn(b & d | c & ~d, a, b, x, s, t);
	  }
	  function md5_hh(a, b, c, d, x, s, t) {
	    return md5_cmn(b ^ c ^ d, a, b, x, s, t);
	  }
	  function md5_ii(a, b, c, d, x, s, t) {
	    return md5_cmn(c ^ (b | ~d), a, b, x, s, t);
	  }
	
	  /*
	  * Calculate the MD5 of an array of little-endian words, and a bit length.
	  */
	  function binl_md5(x, len) {
	    /* append padding */
	    x[len >> 5] |= 0x80 << len % 32;
	    x[(len + 64 >>> 9 << 4) + 14] = len;
	
	    var i;
	    var olda;
	    var oldb;
	    var oldc;
	    var oldd;
	    var a = 1732584193;
	    var b = -271733879;
	    var c = -1732584194;
	    var d = 271733878;
	
	    for (i = 0; i < x.length; i += 16) {
	      olda = a;
	      oldb = b;
	      oldc = c;
	      oldd = d;
	
	      a = md5_ff(a, b, c, d, x[i], 7, -680876936);
	      d = md5_ff(d, a, b, c, x[i + 1], 12, -389564586);
	      c = md5_ff(c, d, a, b, x[i + 2], 17, 606105819);
	      b = md5_ff(b, c, d, a, x[i + 3], 22, -1044525330);
	      a = md5_ff(a, b, c, d, x[i + 4], 7, -176418897);
	      d = md5_ff(d, a, b, c, x[i + 5], 12, 1200080426);
	      c = md5_ff(c, d, a, b, x[i + 6], 17, -1473231341);
	      b = md5_ff(b, c, d, a, x[i + 7], 22, -45705983);
	      a = md5_ff(a, b, c, d, x[i + 8], 7, 1770035416);
	      d = md5_ff(d, a, b, c, x[i + 9], 12, -1958414417);
	      c = md5_ff(c, d, a, b, x[i + 10], 17, -42063);
	      b = md5_ff(b, c, d, a, x[i + 11], 22, -1990404162);
	      a = md5_ff(a, b, c, d, x[i + 12], 7, 1804603682);
	      d = md5_ff(d, a, b, c, x[i + 13], 12, -40341101);
	      c = md5_ff(c, d, a, b, x[i + 14], 17, -1502002290);
	      b = md5_ff(b, c, d, a, x[i + 15], 22, 1236535329);
	
	      a = md5_gg(a, b, c, d, x[i + 1], 5, -165796510);
	      d = md5_gg(d, a, b, c, x[i + 6], 9, -1069501632);
	      c = md5_gg(c, d, a, b, x[i + 11], 14, 643717713);
	      b = md5_gg(b, c, d, a, x[i], 20, -373897302);
	      a = md5_gg(a, b, c, d, x[i + 5], 5, -701558691);
	      d = md5_gg(d, a, b, c, x[i + 10], 9, 38016083);
	      c = md5_gg(c, d, a, b, x[i + 15], 14, -660478335);
	      b = md5_gg(b, c, d, a, x[i + 4], 20, -405537848);
	      a = md5_gg(a, b, c, d, x[i + 9], 5, 568446438);
	      d = md5_gg(d, a, b, c, x[i + 14], 9, -1019803690);
	      c = md5_gg(c, d, a, b, x[i + 3], 14, -187363961);
	      b = md5_gg(b, c, d, a, x[i + 8], 20, 1163531501);
	      a = md5_gg(a, b, c, d, x[i + 13], 5, -1444681467);
	      d = md5_gg(d, a, b, c, x[i + 2], 9, -51403784);
	      c = md5_gg(c, d, a, b, x[i + 7], 14, 1735328473);
	      b = md5_gg(b, c, d, a, x[i + 12], 20, -1926607734);
	
	      a = md5_hh(a, b, c, d, x[i + 5], 4, -378558);
	      d = md5_hh(d, a, b, c, x[i + 8], 11, -2022574463);
	      c = md5_hh(c, d, a, b, x[i + 11], 16, 1839030562);
	      b = md5_hh(b, c, d, a, x[i + 14], 23, -35309556);
	      a = md5_hh(a, b, c, d, x[i + 1], 4, -1530992060);
	      d = md5_hh(d, a, b, c, x[i + 4], 11, 1272893353);
	      c = md5_hh(c, d, a, b, x[i + 7], 16, -155497632);
	      b = md5_hh(b, c, d, a, x[i + 10], 23, -1094730640);
	      a = md5_hh(a, b, c, d, x[i + 13], 4, 681279174);
	      d = md5_hh(d, a, b, c, x[i], 11, -358537222);
	      c = md5_hh(c, d, a, b, x[i + 3], 16, -722521979);
	      b = md5_hh(b, c, d, a, x[i + 6], 23, 76029189);
	      a = md5_hh(a, b, c, d, x[i + 9], 4, -640364487);
	      d = md5_hh(d, a, b, c, x[i + 12], 11, -421815835);
	      c = md5_hh(c, d, a, b, x[i + 15], 16, 530742520);
	      b = md5_hh(b, c, d, a, x[i + 2], 23, -995338651);
	
	      a = md5_ii(a, b, c, d, x[i], 6, -198630844);
	      d = md5_ii(d, a, b, c, x[i + 7], 10, 1126891415);
	      c = md5_ii(c, d, a, b, x[i + 14], 15, -1416354905);
	      b = md5_ii(b, c, d, a, x[i + 5], 21, -57434055);
	      a = md5_ii(a, b, c, d, x[i + 12], 6, 1700485571);
	      d = md5_ii(d, a, b, c, x[i + 3], 10, -1894986606);
	      c = md5_ii(c, d, a, b, x[i + 10], 15, -1051523);
	      b = md5_ii(b, c, d, a, x[i + 1], 21, -2054922799);
	      a = md5_ii(a, b, c, d, x[i + 8], 6, 1873313359);
	      d = md5_ii(d, a, b, c, x[i + 15], 10, -30611744);
	      c = md5_ii(c, d, a, b, x[i + 6], 15, -1560198380);
	      b = md5_ii(b, c, d, a, x[i + 13], 21, 1309151649);
	      a = md5_ii(a, b, c, d, x[i + 4], 6, -145523070);
	      d = md5_ii(d, a, b, c, x[i + 11], 10, -1120210379);
	      c = md5_ii(c, d, a, b, x[i + 2], 15, 718787259);
	      b = md5_ii(b, c, d, a, x[i + 9], 21, -343485551);
	
	      a = safe_add(a, olda);
	      b = safe_add(b, oldb);
	      c = safe_add(c, oldc);
	      d = safe_add(d, oldd);
	    }
	    return [a, b, c, d];
	  }
	
	  /*
	  * Convert an array of little-endian words to a string
	  */
	  function binl2rstr(input) {
	    var i;
	    var output = '';
	    var length32 = input.length * 32;
	    for (i = 0; i < length32; i += 8) {
	      output += String.fromCharCode(input[i >> 5] >>> i % 32 & 0xFF);
	    }
	    return output;
	  }
	
	  /*
	  * Convert a raw string to an array of little-endian words
	  * Characters >255 have their high-byte silently ignored.
	  */
	  function rstr2binl(input) {
	    var i;
	    var output = [];
	    output[(input.length >> 2) - 1] = undefined;
	    for (i = 0; i < output.length; i += 1) {
	      output[i] = 0;
	    }
	    var length8 = input.length * 8;
	    for (i = 0; i < length8; i += 8) {
	      output[i >> 5] |= (input.charCodeAt(i / 8) & 0xFF) << i % 32;
	    }
	    return output;
	  }
	
	  /*
	  * Calculate the MD5 of a raw string
	  */
	  function rstr_md5(s) {
	    return binl2rstr(binl_md5(rstr2binl(s), s.length * 8));
	  }
	
	  /*
	  * Calculate the HMAC-MD5, of a key and some data (raw strings)
	  */
	  function rstr_hmac_md5(key, data) {
	    var i;
	    var bkey = rstr2binl(key);
	    var ipad = [];
	    var opad = [];
	    var hash;
	    ipad[15] = opad[15] = undefined;
	    if (bkey.length > 16) {
	      bkey = binl_md5(bkey, key.length * 8);
	    }
	    for (i = 0; i < 16; i += 1) {
	      ipad[i] = bkey[i] ^ 0x36363636;
	      opad[i] = bkey[i] ^ 0x5C5C5C5C;
	    }
	    hash = binl_md5(ipad.concat(rstr2binl(data)), 512 + data.length * 8);
	    return binl2rstr(binl_md5(opad.concat(hash), 512 + 128));
	  }
	
	  /*
	  * Convert a raw string to a hex string
	  */
	  function rstr2hex(input) {
	    var hex_tab = '0123456789abcdef';
	    var output = '';
	    var x;
	    var i;
	    for (i = 0; i < input.length; i += 1) {
	      x = input.charCodeAt(i);
	      output += hex_tab.charAt(x >>> 4 & 0x0F) + hex_tab.charAt(x & 0x0F);
	    }
	    return output;
	  }
	
	  /*
	  * Encode a string as utf-8
	  */
	  function str2rstr_utf8(input) {
	    return unescape(encodeURIComponent(input));
	  }
	
	  /*
	  * Take string arguments and return either raw or hex encoded strings
	  */
	  function raw_md5(s) {
	    return rstr_md5(str2rstr_utf8(s));
	  }
	  function hex_md5(s) {
	    return rstr2hex(raw_md5(s));
	  }
	  function raw_hmac_md5(k, d) {
	    return rstr_hmac_md5(str2rstr_utf8(k), str2rstr_utf8(d));
	  }
	  function hex_hmac_md5(k, d) {
	    return rstr2hex(raw_hmac_md5(k, d));
	  }
	
	  function md5(string, key, raw) {
	    if (!key) {
	      if (!raw) {
	        return hex_md5(string);
	      }
	      return raw_md5(string);
	    }
	    if (!raw) {
	      return hex_hmac_md5(key, string);
	    }
	    return raw_hmac_md5(key, string);
	  }
	
	  if (true) {
	    !(__WEBPACK_AMD_DEFINE_RESULT__ = function () {
	      return md5;
	    }.call(exports, __webpack_require__, exports, module), __WEBPACK_AMD_DEFINE_RESULT__ !== undefined && (module.exports = __WEBPACK_AMD_DEFINE_RESULT__));
	  } else if ((typeof module === 'undefined' ? 'undefined' : _typeof(module)) === 'object' && module.exports) {
	    module.exports = md5;
	  } else {
	    $.md5 = md5;
	  }
	})(undefined);

/***/ },
/* 368 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchLoginFlow;
	
	var _effects = __webpack_require__(362);
	
	var _actions = __webpack_require__(93);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _api = __webpack_require__(206);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [watchLoginFlow].map(regeneratorRuntime.mark);
	
	function watchLoginFlow() {
	    return regeneratorRuntime.wrap(function watchLoginFlow$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    if (false) {
	                        _context.next = 18;
	                        break;
	                    }
	
	                    _context.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.USER_LOGOUT);
	
	                case 3:
	                    _context.next = 5;
	                    return (0, _effects.put)(actions.logout.request());
	
	                case 5:
	                    _context.prev = 5;
	                    _context.next = 8;
	                    return (0, _effects.call)(_api2.default.logout);
	
	                case 8:
	                    _context.next = 10;
	                    return (0, _effects.put)(actions.logout.success());
	
	                case 10:
	                    _context.next = 16;
	                    break;
	
	                case 12:
	                    _context.prev = 12;
	                    _context.t0 = _context['catch'](5);
	                    _context.next = 16;
	                    return (0, _effects.put)(actions.logout.failure(_context.t0));
	
	                case 16:
	                    _context.next = 0;
	                    break;
	
	                case 18:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this, [[5, 12]]);
	}

/***/ },
/* 369 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchViewer;
	
	var _reduxSaga = __webpack_require__(370);
	
	var _effects = __webpack_require__(362);
	
	var _actions = __webpack_require__(93);
	
	var actions = _interopRequireWildcard(_actions);
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _api = __webpack_require__(206);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _selectors = __webpack_require__(113);
	
	var selectors = _interopRequireWildcard(_selectors);
	
	var _common = __webpack_require__(52);
	
	var _utils = __webpack_require__(364);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _Viewer = __webpack_require__(250);
	
	var viewerUtils = _interopRequireWildcard(_Viewer);
	
	var _utils2 = __webpack_require__(95);
	
	var _utils3 = _interopRequireDefault(_utils2);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	var _marked = [setViewer, setViewerWithAction, watchInitViewer, updateProgress, watchCalcBook, watchProgressOperations, jumpTo, watchJumpRequest, fetchProgressAndJump, initializeViewer, watchViewer].map(regeneratorRuntime.mark);
	
	var DEFAULT_PAGE_HEIGHT = 900;
	var DEFAULT_FONT_SIZE = 16;
	var fetchBookProgress = _utils.fetchEntity.bind(null, actions.progress, _api2.default.fetchBookProgress);
	function setViewer(bookId) {
	    var config = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
	    var viewerWidth, isSmallScreen, initialized, computed;
	    return regeneratorRuntime.wrap(function setViewer$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    viewerWidth = _utils3.default.getScreenInfo().view.width;
	                    isSmallScreen = viewerWidth < 700;
	                    initialized = {
	                        bookId: bookId,
	                        isCalcMode: true,
	                        fluid: isSmallScreen,
	                        isTouchMode: isSmallScreen,
	                        pageHeight: DEFAULT_PAGE_HEIGHT,
	                        fontSize: DEFAULT_FONT_SIZE,
	                        width: isSmallScreen ? viewerWidth : 'max'
	                    };
	                    _context.next = 5;
	                    return (0, _effects.select)(selectors.viewer.computed(bookId));
	
	                case 5:
	                    computed = _context.sent;
	
	                    if (computed.length > 0) {
	                        initialized.isCalcMode = false;
	                    }
	                    initialized = _lodash2.default.merge({}, initialized, config);
	                    _context.next = 10;
	                    return (0, _effects.put)(actions.configViewer(bookId, initialized));
	
	                case 10:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this);
	}
	function setViewerWithAction(action) {
	    var bookId, config;
	    return regeneratorRuntime.wrap(function setViewerWithAction$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    bookId = action.bookId;
	                    config = action.config;
	                    _context2.next = 4;
	                    return setViewer(bookId, config);
	
	                case 4:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}
	function watchInitViewer() {
	    return regeneratorRuntime.wrap(function watchInitViewer$(_context3) {
	        while (1) {
	            switch (_context3.prev = _context3.next) {
	                case 0:
	                    return _context3.delegateYield((0, _reduxSaga.takeEvery)(ACTION_TYPES.VIEWER.INITIALIZE_CONFIG, setViewerWithAction), 't0', 1);
	
	                case 1:
	                case 'end':
	                    return _context3.stop();
	            }
	        }
	    }, _marked[2], this);
	}
	function calcBook(wrap, flesh) {
	    var startCalcHtmlTime = new Date().valueOf();
	    var computedChapters = Array.prototype.map.call(wrap.childNodes, function (child) {
	        var childDiv = child;
	        var id = childDiv.getAttribute('id');
	        var nodeHeights = viewerUtils.getNodeHeights(childDiv.querySelector('.lines').childNodes);
	        return {
	            id: id,
	            nodeHeights: nodeHeights
	        };
	    });
	    var endCalcHtmlTime = new Date().valueOf();
	    _helpers2.default.print('Calculating html takes ' + (endCalcHtmlTime - startCalcHtmlTime) + 'ms');
	    var computedPages = viewerUtils.groupPageFromChapters(flesh, computedChapters, 900);
	    return computedPages;
	}
	function updateProgress(bookId, percentage) {
	    return regeneratorRuntime.wrap(function updateProgress$(_context4) {
	        while (1) {
	            switch (_context4.prev = _context4.next) {
	                case 0:
	                    _context4.prev = 0;
	                    _context4.next = 3;
	                    return (0, _effects.call)(_api2.default.setProgress, bookId, {
	                        percentage: percentage
	                    });
	
	                case 3:
	                    _context4.next = 8;
	                    break;
	
	                case 5:
	                    _context4.prev = 5;
	                    _context4.t0 = _context4['catch'](0);
	
	                    console.error(_context4.t0);
	
	                case 8:
	                    _context4.prev = 8;
	                    _context4.next = 11;
	                    return (0, _effects.cancelled)();
	
	                case 11:
	                    if (!_context4.sent) {
	                        _context4.next = 13;
	                        break;
	                    }
	
	                    _helpers2.default.print('updateProgress canceled');
	
	                case 13:
	                    return _context4.finish(8);
	
	                case 14:
	                case 'end':
	                    return _context4.stop();
	            }
	        }
	    }, _marked[3], this, [[0, 5, 8, 14]]);
	}
	function watchCalcBook() {
	    var _ref, bookId, wrap, bookContent, flesh, computed;
	
	    return regeneratorRuntime.wrap(function watchCalcBook$(_context5) {
	        while (1) {
	            switch (_context5.prev = _context5.next) {
	                case 0:
	                    if (false) {
	                        _context5.next = 24;
	                        break;
	                    }
	
	                    _context5.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.CALC_START);
	
	                case 3:
	                    _ref = _context5.sent;
	                    bookId = _ref.bookId;
	                    wrap = _ref.wrap;
	                    _context5.next = 8;
	                    return (0, _effects.select)(selectors.common.entity('bookContents', bookId));
	
	                case 8:
	                    bookContent = _context5.sent;
	                    flesh = bookContent.flesh || {};
	                    _context5.prev = 10;
	                    computed = calcBook(wrap, flesh);
	                    _context5.next = 14;
	                    return (0, _effects.put)(actions.calcBookSuccess(bookId, computed));
	
	                case 14:
	                    _context5.next = 16;
	                    return (0, _effects.put)(actions.configViewer(bookId, {
	                        isCalcMode: false
	                    }));
	
	                case 16:
	                    _context5.next = 22;
	                    break;
	
	                case 18:
	                    _context5.prev = 18;
	                    _context5.t0 = _context5['catch'](10);
	                    _context5.next = 22;
	                    return (0, _effects.put)(actions.calcBookFailure(bookId, _context5.t0));
	
	                case 22:
	                    _context5.next = 0;
	                    break;
	
	                case 24:
	                case 'end':
	                    return _context5.stop();
	            }
	        }
	    }, _marked[4], this, [[10, 18]]);
	}
	function watchProgressOperations() {
	    var action, session, userRole;
	    return regeneratorRuntime.wrap(function watchProgressOperations$(_context6) {
	        while (1) {
	            switch (_context6.prev = _context6.next) {
	                case 0:
	                    if (false) {
	                        _context6.next = 20;
	                        break;
	                    }
	
	                    _context6.next = 3;
	                    return (0, _effects.take)([ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE, ACTION_TYPES.LOAD_BOOK_PROGRESS]);
	
	                case 3:
	                    action = _context6.sent;
	                    _context6.next = 6;
	                    return (0, _effects.select)(selectors.common.session);
	
	                case 6:
	                    session = _context6.sent;
	                    userRole = _lodash2.default.get(session, 'user.role');
	
	                    if (!(userRole !== _common.ROLES.VISITOR)) {
	                        _context6.next = 17;
	                        break;
	                    }
	
	                    if (!(action.type === ACTION_TYPES.LOAD_BOOK_PROGRESS)) {
	                        _context6.next = 12;
	                        break;
	                    }
	
	                    _context6.next = 12;
	                    return (0, _effects.call)(fetchBookProgress, { id: action.id });
	
	                case 12:
	                    if (!(action.type === ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE)) {
	                        _context6.next = 15;
	                        break;
	                    }
	
	                    _context6.next = 15;
	                    return updateProgress(action.id, action.percentage);
	
	                case 15:
	                    _context6.next = 18;
	                    break;
	
	                case 17:
	                    _helpers2.default.print('Not logged in, progress will not be fetched!');
	
	                case 18:
	                    _context6.next = 0;
	                    break;
	
	                case 20:
	                case 'end':
	                    return _context6.stop();
	            }
	        }
	    }, _marked[5], this);
	}
	function jumpTo(action) {
	    var percentage, _ref2, bookId, pageHeight, isScrollMode, allPages, pageCount, totalHeight;
	
	    return regeneratorRuntime.wrap(function jumpTo$(_context7) {
	        while (1) {
	            switch (_context7.prev = _context7.next) {
	                case 0:
	                    percentage = action.percentage;
	                    _context7.next = 3;
	                    return (0, _effects.select)(selectors.viewer.config);
	
	                case 3:
	                    _ref2 = _context7.sent;
	                    bookId = _ref2.bookId;
	                    pageHeight = _ref2.pageHeight;
	                    isScrollMode = _ref2.isScrollMode;
	                    _context7.next = 9;
	                    return (0, _effects.select)(selectors.viewer.computed(bookId));
	
	                case 9:
	                    allPages = _context7.sent;
	                    pageCount = allPages.length;
	                    totalHeight = pageCount * pageHeight;
	
	                    if (!isScrollMode) {
	                        _context7.next = 16;
	                        break;
	                    }
	
	                    document.body.scrollTop = percentage ? totalHeight * percentage : 0;
	                    _context7.next = 18;
	                    break;
	
	                case 16:
	                    _context7.next = 18;
	                    return (0, _effects.put)(actions.updateBookProgress(percentage));
	
	                case 18:
	                case 'end':
	                    return _context7.stop();
	            }
	        }
	    }, _marked[6], this);
	}
	function watchJumpRequest() {
	    return regeneratorRuntime.wrap(function watchJumpRequest$(_context8) {
	        while (1) {
	            switch (_context8.prev = _context8.next) {
	                case 0:
	                    return _context8.delegateYield((0, _reduxSaga.takeEvery)(ACTION_TYPES.VIEWER.JUMP, jumpTo), 't0', 1);
	
	                case 1:
	                case 'end':
	                    return _context8.stop();
	            }
	        }
	    }, _marked[7], this);
	}
	function fetchProgressAndJump(bookId) {
	    var _ref3, percentage;
	
	    return regeneratorRuntime.wrap(function fetchProgressAndJump$(_context9) {
	        while (1) {
	            switch (_context9.prev = _context9.next) {
	                case 0:
	                    _context9.next = 2;
	                    return (0, _effects.put)(actions.loadBookProgress(bookId));
	
	                case 2:
	                    _context9.next = 4;
	                    return (0, _effects.take)(ACTION_TYPES.BOOK_PROGRESS.SUCCESS);
	
	                case 4:
	                    _context9.next = 6;
	                    return (0, _effects.select)(selectors.common.entity('bookProgress', bookId));
	
	                case 6:
	                    _ref3 = _context9.sent;
	                    percentage = _ref3.percentage;
	                    _context9.next = 10;
	                    return (0, _effects.put)(actions.viewerJumpTo(percentage));
	
	                case 10:
	                case 'end':
	                    return _context9.stop();
	            }
	        }
	    }, _marked[8], this);
	}
	function initializeViewer() {
	    var _ref4, _bookId, computed;
	
	    return regeneratorRuntime.wrap(function initializeViewer$(_context10) {
	        while (1) {
	            switch (_context10.prev = _context10.next) {
	                case 0:
	                    if (false) {
	                        _context10.next = 23;
	                        break;
	                    }
	
	                    _context10.next = 3;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.INITIALIZE);
	
	                case 3:
	                    _ref4 = _context10.sent;
	                    _bookId = _ref4.bookId;
	                    _context10.next = 7;
	                    return (0, _effects.select)(selectors.viewer.computed(_bookId));
	
	                case 7:
	                    computed = _context10.sent;
	
	                    if (!_lodash2.default.isEmpty(computed)) {
	                        _context10.next = 19;
	                        break;
	                    }
	
	                    _context10.next = 11;
	                    return [(0, _effects.put)(actions.loadBook(_bookId)), (0, _effects.put)(actions.loadBookContent(_bookId))];
	
	                case 11:
	                    _context10.next = 13;
	                    return (0, _effects.put)(actions.initializeViewerConfig(_bookId));
	
	                case 13:
	                    _context10.next = 15;
	                    return (0, _effects.take)(ACTION_TYPES.VIEWER.CALC_SUCCESS);
	
	                case 15:
	                    _context10.next = 17;
	                    return fetchProgressAndJump(_bookId);
	
	                case 17:
	                    _context10.next = 21;
	                    break;
	
	                case 19:
	                    _context10.next = 21;
	                    return fetchProgressAndJump(_bookId);
	
	                case 21:
	                    _context10.next = 0;
	                    break;
	
	                case 23:
	                case 'end':
	                    return _context10.stop();
	            }
	        }
	    }, _marked[9], this);
	}
	function watchViewer() {
	    return regeneratorRuntime.wrap(function watchViewer$(_context11) {
	        while (1) {
	            switch (_context11.prev = _context11.next) {
	                case 0:
	                    _context11.next = 2;
	                    return [(0, _effects.fork)(watchProgressOperations), (0, _effects.fork)(watchCalcBook), (0, _effects.fork)(watchInitViewer), (0, _effects.fork)(watchJumpRequest), (0, _effects.fork)(initializeViewer)];
	
	                case 2:
	                case 'end':
	                    return _context11.stop();
	            }
	        }
	    }, _marked[10], this);
	}

/***/ },
/* 370 */
/***/ function(module, exports) {

	module.exports = require("redux-saga");

/***/ },
/* 371 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = watchTest;
	exports.watchTest2 = watchTest2;
	
	var _effects = __webpack_require__(362);
	
	var _marked = [doLoadWithCancel, watchTest, watchTest2].map(regeneratorRuntime.mark);
	
	function someAsyncTask() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            console.log('loaded');
	            resolve('load done');
	            // yield put({ type: 'LOADED'})
	        }, 1000);
	    });
	}
	function doLoad() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            resolve('load done');
	        }, 3000);
	    });
	}
	function doLoadWithCancel() {
	    var res;
	    return regeneratorRuntime.wrap(function doLoadWithCancel$(_context) {
	        while (1) {
	            switch (_context.prev = _context.next) {
	                case 0:
	                    _context.prev = 0;
	                    _context.next = 3;
	                    return someAsyncTask();
	
	                case 3:
	                    res = _context.sent;
	                    _context.next = 6;
	                    return (0, _effects.put)({ type: 'done', res: res });
	
	                case 6:
	                    _context.next = 10;
	                    break;
	
	                case 8:
	                    _context.prev = 8;
	                    _context.t0 = _context['catch'](0);
	
	                case 10:
	                    _context.prev = 10;
	                    _context.next = 13;
	                    return (0, _effects.cancelled)();
	
	                case 13:
	                    if (!_context.sent) {
	                        _context.next = 17;
	                        break;
	                    }
	
	                    console.log('canceled');
	                    _context.next = 17;
	                    return (0, _effects.put)({ type: 'CANCEL_LOAD' });
	
	                case 17:
	                    return _context.finish(10);
	
	                case 18:
	                case 'end':
	                    return _context.stop();
	            }
	        }
	    }, _marked[0], this, [[0, 8, 10, 18]]);
	}
	function doSave() {
	    return new Promise(function (resolve) {
	        setTimeout(function () {
	            resolve('save done');
	        }, 3000);
	    });
	}
	function watchTest() {
	    var action, res;
	    return regeneratorRuntime.wrap(function watchTest$(_context2) {
	        while (1) {
	            switch (_context2.prev = _context2.next) {
	                case 0:
	                    if (false) {
	                        _context2.next = 17;
	                        break;
	                    }
	
	                    _context2.next = 3;
	                    return (0, _effects.take)(['LOAD', 'SAVE']);
	
	                case 3:
	                    action = _context2.sent;
	                    res = void 0;
	
	                    if (!(action.type === 'LOAD')) {
	                        _context2.next = 10;
	                        break;
	                    }
	
	                    _context2.next = 8;
	                    return doLoad();
	
	                case 8:
	                    res = _context2.sent;
	
	                    console.log(res);
	
	                case 10:
	                    if (!(action.type === 'SAVE')) {
	                        _context2.next = 15;
	                        break;
	                    }
	
	                    _context2.next = 13;
	                    return doSave();
	
	                case 13:
	                    res = _context2.sent;
	
	                    console.log(res);
	
	                case 15:
	                    _context2.next = 0;
	                    break;
	
	                case 17:
	                case 'end':
	                    return _context2.stop();
	            }
	        }
	    }, _marked[1], this);
	}
	function watchTest2() {
	    var loadAction, loadTask, saveAction;
	    return regeneratorRuntime.wrap(function watchTest2$(_context3) {
	        while (1) {
	            switch (_context3.prev = _context3.next) {
	                case 0:
	                    if (false) {
	                        _context3.next = 18;
	                        break;
	                    }
	
	                    _context3.next = 3;
	                    return (0, _effects.take)('LOAD');
	
	                case 3:
	                    loadAction = _context3.sent;
	                    _context3.next = 6;
	                    return (0, _effects.fork)(doLoadWithCancel);
	
	                case 6:
	                    loadTask = _context3.sent;
	                    _context3.next = 9;
	                    return (0, _effects.take)('SAVE');
	
	                case 9:
	                    saveAction = _context3.sent;
	
	                    if (!(saveAction.type === 'SAVE')) {
	                        _context3.next = 14;
	                        break;
	                    }
	
	                    console.log('save?');
	                    _context3.next = 14;
	                    return (0, _effects.cancel)(loadTask);
	
	                case 14:
	                    _context3.next = 16;
	                    return (0, _effects.put)({ type: 'then what' });
	
	                case 16:
	                    _context3.next = 0;
	                    break;
	
	                case 18:
	                case 'end':
	                    return _context3.stop();
	            }
	        }
	    }, _marked[2], this);
	}

/***/ },
/* 372 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _reactRouter = __webpack_require__(63);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function matchRoute(routes, reqUrl, history) {
	    return new Promise(function (resolve, reject) {
	        (0, _reactRouter.match)({ history: history, routes: routes, location: reqUrl }, function (error, redirectLocation, renderProps) {
	            if (error) {
	                reject(error);
	            } else if (redirectLocation) {
	                resolve({ redirectLocation: redirectLocation, statusCode: 302 });
	            } else if (renderProps) {
	                var wrappedComponent = _lodash2.default.last(renderProps.components)['WrappedComponent'];
	                var statusCode = wrappedComponent ? 200 : 404;
	                resolve({ renderProps: renderProps, statusCode: statusCode });
	            } else {
	                reject(new Error('routes 里不存在对 404 的处理'));
	            }
	        });
	    });
	}
	exports.default = matchRoute;

/***/ },
/* 373 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _server = __webpack_require__(374);
	
	var _reactRouterRedux = __webpack_require__(375);
	
	var _reactRouter = __webpack_require__(63);
	
	var _getStore = __webpack_require__(360);
	
	var _getStore2 = _interopRequireDefault(_getStore);
	
	var _matchRoute = __webpack_require__(372);
	
	var _matchRoute2 = _interopRequireDefault(_matchRoute);
	
	var _Page = __webpack_require__(376);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	var _DocContainer = __webpack_require__(204);
	
	var _DocContainer2 = _interopRequireDefault(_DocContainer);
	
	var _ServerSideAppRoot = __webpack_require__(379);
	
	var _ServerSideAppRoot2 = _interopRequireDefault(_ServerSideAppRoot);
	
	var _configureStore = __webpack_require__(380);
	
	var _configureStore2 = _interopRequireDefault(_configureStore);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function renderHtml(config) {
	    if (!config) {
	        return Promise.resolve((0, _server.renderToStaticMarkup)(_react2.default.createElement(_Page2.default, null)));
	    }
	    var reqUrl = config.reqUrl;
	    var routes = config.routes;
	    var isProd = config.isProd;
	    var fetchData = config.fetchData;
	    var isHot = config.isHot;
	    var userSession = config.userSession;
	
	    var memoryHistory = (0, _reactRouter.createMemoryHistory)(reqUrl);
	    var store = (0, _configureStore2.default)();
	    var history = (0, _reactRouterRedux.syncHistoryWithStore)(memoryHistory, store);
	    return (0, _matchRoute2.default)(routes, reqUrl, history).then(function (result) {
	        var renderProps = result.renderProps;
	        var redirectLocation = result.redirectLocation;
	        var statusCode = result.statusCode;
	
	        if (redirectLocation) {
	            return Promise.resolve({ redirectLocation: redirectLocation });
	        }
	        return (0, _getStore2.default)(renderProps, fetchData, userSession, store).then(function (storeWithFetchedData) {
	            var genPageComp = function genPageComp(bodyClass, title, appMarkup) {
	                return _react2.default.createElement(_Page2.default, { title: title, store: storeWithFetchedData, isProd: isProd, bodyClass: bodyClass, appMarkup: appMarkup, scriptData: _defineProperty({}, _common.ENABLE_SERVER_ROUTING, true) });
	            };
	            var appRoot = _react2.default.createElement(_ServerSideAppRoot2.default, { renderPageContent: fetchData, renderProps: result.renderProps, store: storeWithFetchedData });
	            // rewind 必须在 render 之后调用，所以只能调用两次 render
	            // 没有更好的方法之前先这样
	            (0, _server.renderToStaticMarkup)(appRoot);
	            var data = _DocContainer2.default['rewind']() || {};
	            var appRootMarkup = void 0;
	            if (fetchData) {
	                appRootMarkup = (0, _server.renderToString)(appRoot);
	            } else {
	                appRootMarkup = (0, _server.renderToStaticMarkup)(appRoot);
	            }
	            var html = (0, _server.renderToStaticMarkup)(genPageComp(data.bodyClass, data.title, appRootMarkup));
	            return { html: html, statusCode: statusCode };
	        });
	    });
	}
	exports.default = renderHtml;

/***/ },
/* 374 */
/***/ function(module, exports) {

	module.exports = require("react-dom/server");

/***/ },
/* 375 */
/***/ function(module, exports) {

	module.exports = require("react-router-redux");

/***/ },
/* 376 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _Html = __webpack_require__(377);
	
	var _Html2 = _interopRequireDefault(_Html);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	var _fs = __webpack_require__(378);
	
	var _fs2 = _interopRequireDefault(_fs);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var DEFAULT_TITLE = 'Readr';
	var SCRIPT_CONTENT_ID = 'script-data';
	var ASSET_PATH = '/built';
	var ASSET_PATH_PROD = '/built_prod';
	var SCRIPTS_PROD = ['react_kit.js', 'utils.js', 'app.js'];
	var SCRIPTS_DEV = ['react_kit.dll.js', 'utils.dll.js', 'app.js'];
	var GLOBAL_STYLES = ['base.global.css', 'vendor.global.css', 'modifiers.global.css'];
	var LOCAL_STYLES = ['app.css'];
	var CSS_MANIFEST_PATH = process.cwd() + '/public/built_prod/css.manifest.json';
	var CHUNKS_MANIFEST_PATH = process.cwd() + '/public/built_prod/chunks.manifest.json';
	var getManifest = function getManifest() {
	    var chunkManifest = {};
	    var cssManifest = {};
	    try {
	        cssManifest = JSON.parse(_fs2.default.readFileSync(CSS_MANIFEST_PATH, 'utf8'));
	        chunkManifest = JSON.parse(_fs2.default.readFileSync(CHUNKS_MANIFEST_PATH, 'utf8'));
	    } catch (error) {
	        _print2.default.error(error.message);
	    }
	    return _lodash2.default.assign({}, chunkManifest, cssManifest);
	};
	var getHashedFilename = function getHashedFilename(manifest) {
	    return function (filename) {
	        if (manifest[filename]) {
	            return manifest[filename];
	        }
	        _print2.default.error('File (' + filename + ') not included in manifest, will use original filename instead!');
	        return filename;
	    };
	};
	function Page(props) {
	    var title = props.title;
	    var store = props.store;
	    var includeLocalStylesheets = props.includeLocalStylesheets;
	    var bodyClass = props.bodyClass;
	    var appMarkup = props.appMarkup;
	    var scriptData = props.scriptData;
	    var isProd = props.isProd;
	    var noScript = props.noScript;
	
	    var manifest = void 0;
	    if (isProd) {
	        manifest = getManifest();
	    }
	    var scripts = isProd ? SCRIPTS_PROD.map(getHashedFilename(manifest)) : SCRIPTS_DEV;
	    var styles = isProd ? GLOBAL_STYLES.concat(LOCAL_STYLES).map(getHashedFilename(manifest)) : includeLocalStylesheets ? GLOBAL_STYLES.concat(LOCAL_STYLES) : GLOBAL_STYLES;
	    var scriptContent = _lodash2.default.map(scriptData, function (val, key) {
	        return 'var ' + key + ' = ' + val + ';';
	    }).join('');
	    if (noScript) {
	        scripts = [];
	        scriptContent = '';
	    }
	    var assetPath = isProd ? ASSET_PATH_PROD : ASSET_PATH;
	    return _react2.default.createElement(_Html2.default, { title: title, styles: styles, scripts: scripts, initialState: store && store.getState(), bodyClass: bodyClass || null, appMarkup: appMarkup, scriptContentId: SCRIPT_CONTENT_ID, scriptContent: scriptContent, assetPath: assetPath });
	}
	Page['defaultProps'] = {
	    title: DEFAULT_TITLE,
	    includeLocalStylesheets: true
	};
	exports.default = Page;

/***/ },
/* 377 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = Html;
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _common = __webpack_require__(52);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	function StyleLink(props) {
	    return _react2.default.createElement("link", { rel: "stylesheet", href: (props.assetPath || '') + '/' + props.filename });
	}
	function Script(props) {
	    return _react2.default.createElement("script", { src: (props.assetPath || '') + '/' + props.filename });
	}
	var baiduTrafficCode = '\n  var _hmt = _hmt || [];\n  (function() {\n    var hm = document.createElement("script");\n    hm.src = "https://hm.baidu.com/hm.js?d16c533053b2d1229b591554207de4c7";\n    var s = document.getElementsByTagName("script")[0];\n    s.parentNode.insertBefore(hm, s);\n  })();\n';
	function Html(props) {
	    var title = props.title;
	    var styles = props.styles;
	    var scripts = props.scripts;
	    var initialState = props.initialState;
	    var bodyClass = props.bodyClass;
	    var appMarkup = props.appMarkup;
	    var useFavicon = props.useFavicon;
	    var scriptContent = props.scriptContent;
	    var scriptContentId = props.scriptContentId;
	    var assetPath = props.assetPath;
	
	    return _react2.default.createElement("html", null, _react2.default.createElement("head", null, _react2.default.createElement("meta", { httpEquiv: "X-UA-Compatible", content: "IE=edge,chrome=1" }), _react2.default.createElement("meta", { name: "viewport", content: "width=device-width, initial-scale=1, user-scalable=no" }), _react2.default.createElement("meta", { name: "description", content: "The next generation online reading app." }), _react2.default.createElement("link", { rel: "shortcut icon", type: "image/png", href: "/static/apple-touch-icon-60x60-1.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "60x60", href: "/static/apple-touch-icon-60x60-1.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "120x120", href: "/static/apple-touch-icon-120x120.png" }), _react2.default.createElement("link", { rel: "apple-touch-icon", sizes: "180x180", href: "/static/apple-touch-icon-180x180.png" }), _react2.default.createElement("title", null, title || ''), styles && styles.map(function (stylesheetName, index) {
	        return _react2.default.createElement(StyleLink, { assetPath: assetPath, filename: stylesheetName, key: index });
	    })), _react2.default.createElement("body", __assign({}, bodyClass && { className: bodyClass }), _react2.default.createElement("div", { id: "root", dangerouslySetInnerHTML: { __html: appMarkup || '' } }), scriptContent && _react2.default.createElement("script", { id: scriptContentId, dangerouslySetInnerHTML: { __html: scriptContent } }), initialState && _react2.default.createElement("script", { dangerouslySetInnerHTML: { __html: 'var ' + _common.INITIAL_STATE + ' = ' + JSON.stringify(initialState) } }), scripts && scripts.map(function (scriptName, index) {
	        return _react2.default.createElement(Script, { assetPath: assetPath, filename: scriptName, key: index });
	    }), _react2.default.createElement("script", { dangerouslySetInnerHTML: { __html: baiduTrafficCode } })));
	}

/***/ },
/* 378 */
/***/ function(module, exports) {

	module.exports = require("fs");

/***/ },
/* 379 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _reactRedux = __webpack_require__(92);
	
	var _reactRouter = __webpack_require__(63);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var __assign = undefined && undefined.__assign || Object.assign || function (t) {
	    for (var s, i = 1, n = arguments.length; i < n; i++) {
	        s = arguments[i];
	        for (var p in s) {
	            if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];
	        }
	    }
	    return t;
	};
	
	function ServerSideAppRoot(props) {
	    var store = props.store;
	    var renderProps = props.renderProps;
	    var renderPageContent = props.renderPageContent;
	
	    return !_lodash2.default.isEmpty(renderProps) && _react2.default.createElement(_reactRedux.Provider, { store: store }, renderPageContent ? _react2.default.createElement(_reactRouter.RouterContext, __assign({}, renderProps)) : _react2.default.createElement("div", { className: "text-loading" }, '\u52A0\u8F7D\u4E2D ...'));
	}
	exports.default = ServerSideAppRoot;

/***/ },
/* 380 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = configureStore;
	
	var _redux = __webpack_require__(212);
	
	var _reduxThunk = __webpack_require__(381);
	
	var _reduxThunk2 = _interopRequireDefault(_reduxThunk);
	
	var _reducers = __webpack_require__(382);
	
	var _reducers2 = _interopRequireDefault(_reducers);
	
	var _api = __webpack_require__(388);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _modifyResponse = __webpack_require__(389);
	
	var _modifyResponse2 = _interopRequireDefault(_modifyResponse);
	
	var _handleServerStore = __webpack_require__(390);
	
	var _handleServerStore2 = _interopRequireDefault(_handleServerStore);
	
	var _handleInitialState = __webpack_require__(391);
	
	var _handleInitialState2 = _interopRequireDefault(_handleInitialState);
	
	var _logActionTypes = __webpack_require__(392);
	
	var _logActionTypes2 = _interopRequireDefault(_logActionTypes);
	
	var _reduxLogger = __webpack_require__(393);
	
	var _reduxLogger2 = _interopRequireDefault(_reduxLogger);
	
	var _middleware = __webpack_require__(394);
	
	var _middleware2 = _interopRequireDefault(_middleware);
	
	var _reduxSaga = __webpack_require__(370);
	
	var _reduxSaga2 = _interopRequireDefault(_reduxSaga);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var sagaMiddleware = (0, _reduxSaga2.default)();
	var SERVER_MIDDLEWARES_DEV = [_handleServerStore2.default, sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default, _logActionTypes2.default];
	var SERVER_MIDDLEWARES_PROD = [_handleServerStore2.default, sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default];
	var MIDDLEWARES_DEV = [sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default, (0, _reduxLogger2.default)({ collapsed: true })];
	var MIDDLEWARES_PROD = [sagaMiddleware, _api2.default, _middleware2.default.cache, _modifyResponse2.default, _reduxThunk2.default];
	var handleStore = function handleStore(middlewares) {
	    return (0, _redux.createStore)(_reducers2.default, (0, _handleInitialState2.default)(), _redux.applyMiddleware.apply(null, middlewares));
	};
	function configureStore() {
	    var store = {};
	    if (_helpers2.default.isServerEnv()) {
	        // server side
	        if (process.env.NODE_ENV === 'production') {
	            store = handleStore(SERVER_MIDDLEWARES_PROD);
	        } else {
	            store = handleStore(SERVER_MIDDLEWARES_DEV);
	        }
	    } else {
	        // client side
	        if (process.env.NODE_ENV === 'production') {
	            store = handleStore(MIDDLEWARES_PROD);
	        } else {
	            store = handleStore(MIDDLEWARES_DEV);
	        }
	    }
	    if (false) {
	        module.hot.accept('./reducers', function () {
	            console.info('hot updating reducers');
	            var nextRootReducer = require('./reducers').default;
	            store.replaceReducer(nextRootReducer);
	        });
	    }
	    store['runSaga'] = sagaMiddleware.run;
	    store['close'] = function () {
	        return store.dispatch(_reduxSaga.END);
	    };
	    return store;
	}

/***/ },
/* 381 */
/***/ function(module, exports) {

	module.exports = require("redux-thunk");

/***/ },
/* 382 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.entities = entities;
	exports.session = session;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _redux = __webpack_require__(212);
	
	var _reactRouterRedux = __webpack_require__(375);
	
	var _components = __webpack_require__(383);
	
	var _components2 = _interopRequireDefault(_components);
	
	var _pagination = __webpack_require__(386);
	
	var _pagination2 = _interopRequireDefault(_pagination);
	
	var _betterReduxForm = __webpack_require__(117);
	
	var _actionTypes = __webpack_require__(109);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function errorMessage() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];
	    var error = action.error;
	
	    if (error) {
	        return [].concat(_toConsumableArray(state), [action.error.message || '发生未知错误！']);
	    }
	    return state;
	}
	function entities() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.response && action.response.entities) {
	        return _lodash2.default.merge({}, state, action.response.entities);
	    }
	    if (action.type === ActionTypes.REMOVE_ENTITY) {
	        var name = action.name;
	        var id = action.id;
	
	        return _lodash2.default.assign({}, state, _defineProperty({}, name, _lodash2.default.omit(state[name], [id])));
	    }
	    return state;
	}
	var DEFAULT_VISTOR_STATE = { user: { role: 'visitor' }, isFetching: false, determined: false };
	function session() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_VISTOR_STATE;
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ActionTypes.AUTH.REQUEST:
	            return Object.assign({}, state, {
	                isFetching: true
	            });
	        case ActionTypes.AUTH.SUCCESS:
	            return Object.assign({}, state, {
	                isFetching: false,
	                determined: true,
	                user: action.response
	            });
	        case ActionTypes.AUTH.FAILURE:
	            return Object.assign({}, state, {
	                isFetching: false,
	                determined: true
	            });
	        case ActionTypes.LOGOUT.SUCCESS:
	            return Object.assign({}, DEFAULT_VISTOR_STATE, {
	                determined: true
	            });
	        default:
	            return state;
	    }
	}
	var rootReducer = (0, _redux.combineReducers)({
	    components: _components2.default,
	    entities: entities,
	    errorMessage: errorMessage,
	    session: session,
	    routing: _reactRouterRedux.routerReducer,
	    form: _betterReduxForm.reducer,
	    pagination: _pagination2.default
	});
	exports.default = rootReducer;

/***/ },
/* 383 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(212);
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _viewer = __webpack_require__(384);
	
	var _viewer2 = _interopRequireDefault(_viewer);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	function notifications() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.NOTIFICATION.HIDE) {
	        return state.map(function (n) {
	            return n.id === action.id ? Object.assign({}, n, { visible: false }) : n;
	        });
	    }
	    if (action.type === ACTION_TYPES.NOTIFICATION.SHOW) {
	        return [].concat(_toConsumableArray(state), [{
	            visible: true,
	            message: action.message,
	            type: action.msgType,
	            id: action.id
	        }]);
	    }
	    return state;
	}
	function confirmModal() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.OPEN_CONFIRM_MODAL) {
	        return Object.assign({}, state, { open: true }, action.data);
	    }
	    if (action.type === ACTION_TYPES.CLOSE_CONFIRM_MODAL) {
	        return {
	            open: false
	        };
	    }
	    return state;
	}
	function modal() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.type === ACTION_TYPES.MODAL.OPEN) {
	        return Object.assign({}, state, { open: true }, action.data);
	    }
	    if (action.type === ACTION_TYPES.MODAL.CLOSE) {
	        return {
	            open: false
	        };
	    }
	    return state;
	}
	var components = (0, _redux.combineReducers)({
	    notifications: notifications,
	    confirmModal: confirmModal,
	    modal: modal,
	    viewer: _viewer2.default
	});
	exports.default = components;

/***/ },
/* 384 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _redux = __webpack_require__(212);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _constants = __webpack_require__(385);
	
	var CONSTANTS = _interopRequireWildcard(_constants);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var getFlag = function getFlag(reset, currentFlag) {
	    if (typeof reset === 'undefined') {
	        return !currentFlag;
	    }
	    return reset;
	};
	function contents() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.CALC_SUCCESS:
	            return _lodash2.default.merge({}, state, _defineProperty({}, action.bookId, {
	                computed: action.computed
	            }));
	        default:
	            return state;
	    }
	}
	function config() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { theme: CONSTANTS.VIEWER_DEFS.THEMES.WHITE, isScrollMode: true };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.SCROLL_MODE_TOGGLE:
	            var reset = action.reset;
	
	            return _lodash2.default.merge({}, state, {
	                isScrollMode: getFlag(reset, state.isScrollMode)
	            });
	        case ACTION_TYPES.VIEWER.THEME_CHANGE:
	            return _lodash2.default.merge({}, state, {
	                theme: action.theme
	            });
	        case ACTION_TYPES.VIEWER.FONT_CHANGE:
	            return _lodash2.default.merge({}, state, {
	                fontSize: action.fontSize
	            });
	        case ACTION_TYPES.VIEWER.CONFIG:
	            return _lodash2.default.merge({}, state, {
	                bookId: action.bookId
	            }, action.payload);
	        default:
	            return state;
	    }
	}
	function progress() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.BOOK_PROGRESS_UPDATE:
	            return _lodash2.default.merge({}, state, _defineProperty({}, action.id, {
	                isFetching: false,
	                percentage: action.percentage,
	                pageNo: action.pageNo
	            }));
	        case ACTION_TYPES.VIEWER.BOOK_PROGRESS_DESTROY:
	            return _lodash2.default.assign({}, state, _defineProperty({}, action.id, {
	                isFetching: false
	            }));
	        default:
	            return state;
	    }
	}
	var panel = function panel() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.PANEL_TOGGLE:
	            var reset = action.reset;
	
	            var a = getFlag(reset, state.show);
	            return {
	                show: a
	            };
	        default:
	            return state;
	    }
	};
	var preference = function preference() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.PREFERENCE_TOGGLE:
	            var reset = action.reset;
	
	            return {
	                show: getFlag(reset, state.show)
	            };
	        default:
	            return state;
	    }
	};
	var navigation = function navigation() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { show: false };
	    var action = arguments[1];
	
	    switch (action.type) {
	        case ACTION_TYPES.VIEWER.NAVIGATION_TOGGLE:
	            var reset = action.reset;
	
	            return {
	                show: getFlag(reset, state.show)
	            };
	        default:
	            return state;
	    }
	};
	var components = (0, _redux.combineReducers)({
	    panel: panel,
	    preference: preference,
	    navigation: navigation
	});
	exports.default = (0, _redux.combineReducers)({
	    config: config,
	    contents: contents,
	    progress: progress,
	    components: components
	});

/***/ },
/* 385 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	  value: true
	});
	exports.VIEWER_DEFS = exports.COMMON = exports.ACTION_TYPES = undefined;
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	var _common = __webpack_require__(52);
	
	var COMMON = _interopRequireWildcard(_common);
	
	var _viewerDefs = __webpack_require__(245);
	
	var VIEWER_DEFS = _interopRequireWildcard(_viewerDefs);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.ACTION_TYPES = ACTION_TYPES;
	exports.COMMON = COMMON;
	exports.VIEWER_DEFS = VIEWER_DEFS;

/***/ },
/* 386 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = combined;
	
	var _paginate = __webpack_require__(387);
	
	var _paginate2 = _interopRequireDefault(_paginate);
	
	var _redux = __webpack_require__(212);
	
	var _actionTypes = __webpack_require__(109);
	
	var ActionTypes = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var DEFAULT_KEY = 'default';
	var SEARCH_KEY = 'search';
	var parseTypes = function parseTypes(actionTypes) {
	    return [actionTypes.REQUEST, actionTypes.SUCCESS, actionTypes.FAILURE];
	};
	var generalMapActionToKey = function generalMapActionToKey(action) {
	    var options = action.options;
	    var key = action.key;
	
	    var _ref = options || {};
	
	    var q = _ref.q;
	
	    if (key) {
	        return key;
	    }
	    if (q) {
	        return SEARCH_KEY;
	    }
	    return DEFAULT_KEY;
	};
	function pagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    var combinedReducer = (0, _redux.combineReducers)({
	        books: (0, _paginate2.default)({
	            mapActionToKey: generalMapActionToKey,
	            types: parseTypes(ActionTypes.BOOKS)
	        }),
	        users: (0, _paginate2.default)({
	            mapActionToKey: generalMapActionToKey,
	            types: parseTypes(ActionTypes.USERS)
	        }),
	        authors: function authors() {
	            return state.authors || {};
	        },
	        doubanBooks: function doubanBooks() {
	            return state.doubanBooks || {};
	        },
	        bookShelves: function bookShelves() {
	            return state.bookShelves || {};
	        }
	    });
	    return combinedReducer(state, action);
	}
	// legacy pagination support
	var updatePagination = function updatePagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : _paginate.DEFAULT_PAGINATION_STATE;
	    var action = arguments[1];
	    var merge = arguments[2];
	
	    if (!action.response) {
	        return Object.assign({}, state, {
	            isFetching: true
	        });
	    } else {
	        return (0, _paginate.computePaginationState)(state, action);
	    }
	};
	function legacyPagination() {
	    var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	    var action = arguments[1];
	
	    if (action.pagination) {
	        var _action$pagination = action.pagination;
	        var name = _action$pagination.name;
	        var q = _action$pagination.q;
	        var key = _action$pagination.key;
	        var merge = _action$pagination.merge;
	
	        var qKey = q ? SEARCH_KEY : null;
	        var finalKey = qKey || key || DEFAULT_KEY;
	        var originalState = state[name] && state[name][finalKey] || undefined;
	        return Object.assign({}, state, _defineProperty({}, name, _defineProperty({}, finalKey, updatePagination(originalState, action, merge))));
	    }
	    return state;
	}
	function combined(state, action) {
	    return pagination(legacyPagination(state, action), action);
	}

/***/ },
/* 387 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.DEFAULT_PAGINATION_STATE = undefined;
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	exports.computePaginationState = computePaginationState;
	exports.default = paginate;
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
	
	var DEFAULT_PAGINATION_STATE = exports.DEFAULT_PAGINATION_STATE = {
	    isFetching: false,
	    pages: {},
	    ids: [],
	    pageCount: 0
	};
	function computePaginationState(state, action) {
	    var currentPage = action.response._next ? action.response._next.page - 1 : action.response._last && action.response._last.page || 1;
	    var pages = _lodash2.default.assign({}, _defineProperty({}, currentPage, action.response.result));
	    return _lodash2.default.assign({}, state, {
	        isFetching: false,
	        pages: pages,
	        ids: _lodash2.default.union(state.ids, action.response.result),
	        // 如果不使用 null 在外层的 merge 会忽略 undefined 从而导致一些边缘问题
	        next: action.response._next || null,
	        last: action.response._last || null,
	        pageCount: state.pageCount + 1
	    });
	}
	function paginate(_ref) {
	    var types = _ref.types;
	    var mapActionToKey = _ref.mapActionToKey;
	
	    if (!Array.isArray(types) || types.length !== 3) {
	        throw new Error('Expected types to be an array of three elements.');
	    }
	    if (!types.every(function (t) {
	        return typeof t === 'string';
	    })) {
	        throw new Error('Expected types to be strings.');
	    }
	    if (typeof mapActionToKey !== 'function') {
	        throw new Error('Expected mapActionToKey to be a function.');
	    }
	
	    var _types = _slicedToArray(types, 3);
	
	    var requestType = _types[0];
	    var successType = _types[1];
	    var failureType = _types[2];
	
	    function updatePagination() {
	        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : DEFAULT_PAGINATION_STATE;
	        var action = arguments[1];
	
	        switch (action.type) {
	            case requestType:
	                return _lodash2.default.assign({}, state, {
	                    isFetching: true
	                });
	            case successType:
	                return computePaginationState(state, action);
	            case failureType:
	                return _lodash2.default.assign({}, state, {
	                    isFetching: false
	                });
	            default:
	                return state;
	        }
	    }
	    return function updatePaginationByKey() {
	        var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	        var action = arguments[1];
	
	        switch (action.type) {
	            case requestType:
	            case successType:
	            case failureType:
	                var key = mapActionToKey(action);
	                if (typeof key !== 'string') {
	                    throw new Error('Expected key to be a string.');
	                }
	                return _lodash2.default.merge({}, state, _defineProperty({}, key, updatePagination(state[key], action)));
	            default:
	                return state;
	        }
	    };
	}

/***/ },
/* 388 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _slicedToArray = function () { function sliceIterator(arr, i) { var _arr = []; var _n = true; var _d = false; var _e = undefined; try { for (var _i = arr[Symbol.iterator](), _s; !(_n = (_s = _i.next()).done); _n = true) { _arr.push(_s.value); if (i && _arr.length === i) break; } } catch (err) { _d = true; _e = err; } finally { try { if (!_n && _i["return"]) _i["return"](); } finally { if (_d) throw _e; } } return _arr; } return function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { return sliceIterator(arr, i); } else { throw new TypeError("Invalid attempt to destructure non-iterable instance"); } }; }();
	
	var _callApi = __webpack_require__(76);
	
	var _callApi2 = _interopRequireDefault(_callApi);
	
	var _helpers = __webpack_require__(58);
	
	var _helpers2 = _interopRequireDefault(_helpers);
	
	var _lodash = __webpack_require__(10);
	
	var _lodash2 = _interopRequireDefault(_lodash);
	
	var _handleResponse = __webpack_require__(209);
	
	var _handleResponse2 = _interopRequireDefault(_handleResponse);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            var CALL_API = action.CALL_API;
	            if (typeof CALL_API === 'undefined') {
	                return next(action);
	            }
	            var endpoint = CALL_API.endpoint;
	            var apiUrl = CALL_API.apiUrl;
	            var options = CALL_API.options;
	            var pagination = CALL_API.pagination;
	            var types = CALL_API.types;
	            var schema = CALL_API.schema;
	
	            var _types = _slicedToArray(types, 3);
	
	            var requestType = _types[0];
	            var successType = _types[1];
	            var failureType = _types[2];
	
	            var actionWith = function actionWith(_ref) {
	                var data = _ref.data;
	                var hasPagination = _ref.hasPagination;
	
	                var finalAction = Object.assign({}, action, data);
	                finalAction = _lodash2.default.omit(finalAction, ['CALL_API']);
	                if (!hasPagination) {
	                    finalAction = _lodash2.default.omit(finalAction, ['CALL_API', 'pagination']);
	                }
	                return finalAction;
	            };
	            next(actionWith({
	                data: {
	                    type: requestType,
	                    pagination: pagination
	                },
	                hasPagination: Boolean(pagination)
	            }));
	            if (typeof endpoint === 'function') {
	                endpoint = endpoint(store.getState());
	            }
	            if (typeof apiUrl === 'undefined') {
	                apiUrl = _helpers2.default.getApiRoot();
	            }
	            var fullUrl = apiUrl + '/' + endpoint;
	            return (0, _callApi2.default)(fullUrl, options || {}).then(function (response) {
	                var normalizedRes = (0, _handleResponse2.default)(response, schema);
	                var finalAction = {
	                    response: normalizedRes,
	                    type: successType,
	                    pagination: pagination
	                };
	                return next(function (dispatch) {
	                    dispatch(actionWith({ data: finalAction, hasPagination: Boolean(pagination) }));
	                    return {
	                        ok: true,
	                        response: response
	                    };
	                });
	            }, function (error) {
	                return next(function (dispatch) {
	                    dispatch(actionWith({
	                        data: {
	                            type: failureType,
	                            pagination: pagination,
	                            error: error
	                        },
	                        hasPagination: Boolean(pagination)
	                    }));
	                    return {
	                        ok: false,
	                        error: error
	                    };
	                });
	            });
	        };
	    };
	};

/***/ },
/* 389 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _actionTypes = __webpack_require__(109);
	
	var ACTION_TYPES = _interopRequireWildcard(_actionTypes);
	
	function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            if (action.type === ACTION_TYPES.DOUBAN_BOOKS.SUCCESS) {
	                action.response.result = action.response.result.books;
	            }
	            return next(action);
	        };
	    };
	};

/***/ },
/* 390 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            if (typeof action.SERVER_STORE === 'undefined') {
	                return next(action);
	            }
	            var actionBody = new Promise(function (resolve) {
	                resolve(action.SERVER_STORE.body);
	            });
	            return actionBody.then(function (body) {
	                return next(function (dispatch) {
	                    dispatch(body);
	                    return {
	                        ok: true,
	                        response: action.body.response
	                    };
	                });
	            });
	        };
	    };
	};

/***/ },
/* 391 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = handleInitialState;
	
	var _common = __webpack_require__(52);
	
	function handleInitialState() {
	    if (typeof window === 'undefined') {
	        return {};
	    }
	    return window[_common.INITIAL_STATE] || {};
	}

/***/ },
/* 392 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            console.info(action.type);
	            next(action);
	        };
	    };
	};

/***/ },
/* 393 */
/***/ function(module, exports) {

	module.exports = require("redux-logger");

/***/ },
/* 394 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _api = __webpack_require__(388);
	
	var _api2 = _interopRequireDefault(_api);
	
	var _modifyResponse = __webpack_require__(389);
	
	var _modifyResponse2 = _interopRequireDefault(_modifyResponse);
	
	var _handleServerStore = __webpack_require__(390);
	
	var _handleServerStore2 = _interopRequireDefault(_handleServerStore);
	
	var _logActionTypes = __webpack_require__(392);
	
	var _logActionTypes2 = _interopRequireDefault(_logActionTypes);
	
	var _cache = __webpack_require__(395);
	
	var _cache2 = _interopRequireDefault(_cache);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	exports.default = {
	    api: _api2.default,
	    modifyResponse: _modifyResponse2.default,
	    handleServerStore: _handleServerStore2.default,
	    logActionTypes: _logActionTypes2.default,
	    cache: _cache2.default
	};

/***/ },
/* 395 */
/***/ function(module, exports) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	var SUCCESS = 'SUCCESS';
	var isSuccessAction = function isSuccessAction(action) {
	    // console.log(action)
	    // return true
	    // return _.last(action.type.split('/')) === SUCCESS
	};
	var cacheResponseAction = function cacheResponseAction(action) {
	    // console.log('cached')
	};
	
	exports.default = function (store) {
	    return function (next) {
	        return function (action) {
	            // if (action.cacheKey) {
	            //   // function* gen() {
	            //   //   yield 1
	            //   // }
	            //   // const fuck = gen()
	            //   // console.log(fuck.next())
	            //   next({
	            //     type: 'cache'
	            //   })
	            //   // return false
	            // }
	            // if (action.cacheKey && isSuccessAction(action)) {
	            //   cacheResponseAction(action)
	            //   next(action)
	            //   return false
	            // }
	            return next(action);
	        };
	    };
	};

/***/ },
/* 396 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = render500;
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _ErrorPage = __webpack_require__(397);
	
	var _ErrorPage2 = _interopRequireDefault(_ErrorPage);
	
	var _server = __webpack_require__(374);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var ERROR_DOC_TITLE = '服务器错误';
	var ERROR_PAGE_TITLE = '额，似乎出了点状况';
	function render500(message, isProd) {
	    return (0, _server.renderToStaticMarkup)(_react2.default.createElement(_ErrorPage2.default, { isProd: isProd, message: message, title: ERROR_PAGE_TITLE, docTitle: ERROR_DOC_TITLE }));
	}

/***/ },
/* 397 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _Page = __webpack_require__(376);
	
	var _Page2 = _interopRequireDefault(_Page);
	
	var _react = __webpack_require__(90);
	
	var _react2 = _interopRequireDefault(_react);
	
	var _server = __webpack_require__(374);
	
	var _AppError = __webpack_require__(355);
	
	var _AppError2 = _interopRequireDefault(_AppError);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function ErrorPage(props) {
	    var isProd = props.isProd;
	    var message = props.message;
	    var docTitle = props.docTitle;
	    var title = props.title;
	
	    return _react2.default.createElement(_Page2.default, { isProd: isProd, title: docTitle, noScript: true, appMarkup: (0, _server.renderToString)(_react2.default.createElement(_AppError2.default, { title: title, message: message })) });
	}
	exports.default = ErrorPage;

/***/ },
/* 398 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = bootstrap;
	
	var _app = __webpack_require__(30);
	
	var _app2 = _interopRequireDefault(_app);
	
	var _print = __webpack_require__(54);
	
	var _print2 = _interopRequireDefault(_print);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var http = __webpack_require__(399);
	var port = _app2.default.port;
	function bootstrap(app, _ref) {
	    var production = _ref.production;
	    var render = _ref.render;
	    var hot = _ref.hot;
	    var route = _ref.route;
	
	    var features = [];
	    if (hot) {
	        features.push('hot');
	    }
	    if (render) {
	        features.push('server rendering');
	    } else if (route) {
	        features.push('server routing');
	    } else {
	        features.push('hash routing');
	    }
	    app.set('port', port);
	    var server = http.createServer(app);
	    server.listen(port);
	    features = features.map(function (feature) {
	        return '[' + feature + ']';
	    }).join(' ');
	    _print2.default.info('Server running in ' + (production ? 'production' : 'development') + ' (' + port + ') ' + features);
	    if (hot) {
	        console.info('webpack building...');
	    }
	    return app;
	}

/***/ },
/* 399 */
/***/ function(module, exports) {

	module.exports = require("http");

/***/ },
/* 400 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = hotModuleReplacement;
	
	var _webpack = __webpack_require__(401);
	
	var _webpack2 = _interopRequireDefault(_webpack);
	
	var _webpackHot = __webpack_require__(402);
	
	var _webpackHot2 = _interopRequireDefault(_webpackHot);
	
	var _combineMiddleware = __webpack_require__(412);
	
	var _combineMiddleware2 = _interopRequireDefault(_combineMiddleware);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	var webpackDevMiddleware = __webpack_require__(413);
	var webpackHotMiddleware = __webpack_require__(414);
	function hotModuleReplacement() {
	    var compiler = (0, _webpack2.default)(_webpackHot2.default);
	    return (0, _combineMiddleware2.default)([webpackDevMiddleware(compiler, { noInfo: true, publicPath: _webpackHot2.default.output.publicPath }), webpackHotMiddleware(compiler)]);
	}

/***/ },
/* 401 */
/***/ function(module, exports) {

	module.exports = require("webpack");

/***/ },
/* 402 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	
	var _webpack = __webpack_require__(401);
	
	var _webpack2 = _interopRequireDefault(_webpack);
	
	function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }
	
	function _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } }
	
	var base = __webpack_require__(403);
	var paths = base.vars.paths;
	var ExtractTextPlugin = __webpack_require__(407);
	var config = {
	    entry: {
	        app: [
	        // 需要放在第一个
	        'react-hot-loader/patch', 'webpack-hot-middleware/client', 'babel-polyfill', paths.isomorphic]
	    },
	    output: {
	        path: paths.built,
	        filename: '[name].js',
	        publicPath: 'http://localhost:3000/built/'
	    },
	    plugins: [base.plugins.devEnv()].concat(_toConsumableArray(base.plugins.dllReferences()), [new _webpack2.default.HotModuleReplacementPlugin(), new _webpack2.default.NoErrorsPlugin(), new ExtractTextPlugin('[name].css', {
	        allChunks: true
	    })]),
	    devtool: 'inline-source-map',
	    module: {
	        loaders: [base.loaders.image(), base.loaders.sass({
	            sourceMap: true,
	            extract: true
	        }), base.loaders.postcss({
	            sourceMap: true,
	            extract: true
	        }), base.loaders.babel(), base.loaders.typescript({
	            officialLoader: false,
	            isHot: true
	        }), base.loaders.json()]
	    },
	    sassLoader: base.loaders.loaderConfig.sassLoader(),
	    postcss: base.loaders.loaderConfig.postcss(),
	    resolve: base.common.resolve
	};
	exports.default = config;

/***/ },
/* 403 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(404);
	var loaders = __webpack_require__(406);
	var plugins = __webpack_require__(410);
	var common = __webpack_require__(411);
	
	module.exports = {
	  vars: vars,
	  loaders: loaders,
	  plugins: plugins,
	  common: common
	};

/***/ },
/* 404 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var path = __webpack_require__(405);
	
	var pathPrefix = process.cwd();
	
	var paths = {
	  root: pathPrefix,
	  src: path.join(pathPrefix, 'src'),
	  built: path.join(pathPrefix, 'public/built'),
	  builtProd: path.join(pathPrefix, 'public/built_prod'),
	  assets: path.join(pathPrefix, 'src/assets'),
	  isomorphic: path.join(pathPrefix, 'src/isomorphic'),
	  server: path.join(pathPrefix, 'src/server')
	};
	
	var cssLocalIdentName = '[local]_[hash:base64:5]';
	
	var imageName = 'img/[name].[hash:10].[ext]';
	
	// 暴露到全局变量的名称
	var vendorLibName = '_[name]_dll';
	
	// HMR entry 里面的一个标记，具体不懂。。
	var hot = 'webpack-hot-middleware/client';
	
	// webpack 会使用文件名作为变量，所以不能使用带有 - 的名字
	// 这边的配置会同时影响生成和引用，所以只需在这边修改就行了
	var dllNames = {
	  reactKit: 'react_kit',
	  utils: 'utils'
	};
	
	// code splitting
	var libs = {
	  reactKit: ['react', 'react-dom', 'react-addons-css-transition-group', 'redux', 'react-redux', 'react-router', 'redux-thunk', 'react-css-modules', 'react-side-effect', 'react-router-redux', 'immutable', 'react-motion', 'reselect', 'redux-saga'],
	
	  reactDevKit: ['redux-devtools-log-monitor', 'redux-devtools-dock-monitor'],
	
	  utils: ['lodash', 'jquery', 'normalizr', 'humps', 'isomorphic-fetch', 'classnames', 'marked', 'moment']
	};
	
	module.exports = {
	  pathPrefix: pathPrefix,
	  paths: paths,
	  cssLocalIdentName: cssLocalIdentName,
	  imageName: imageName,
	  vendorLibName: vendorLibName,
	  hot: hot,
	  dllNames: dllNames,
	  libs: libs
	};

/***/ },
/* 405 */
/***/ function(module, exports) {

	module.exports = require("path");

/***/ },
/* 406 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(404);
	var ExtractTextPlugin = __webpack_require__(407);
	
	var parseLoadersForExtractTextPlugin = function parseLoadersForExtractTextPlugin(loaders) {
	  return [loaders[0], loaders.slice(1, loaders.length).join('!')];
	};
	
	module.exports = {
	  loaderConfig: {
	    sassLoader: function sassLoader() {
	      return {
	        // 用于 scss 文件里 import 其它文件
	        includePaths: [vars.paths.isomorphic, vars.paths.static]
	      };
	    },
	    postcss: function postcss() {
	      return [__webpack_require__(408)({
	        path: [vars.paths.isomorphic]
	      }), __webpack_require__(409)];
	    }
	  },
	
	  json: function json() {
	    return {
	      test: /\.json$/,
	      loader: 'json'
	    };
	  },
	  babel: function babel() {
	    return {
	      test: /\.jsx?$/,
	      exclude: /(node_modules|bower_components)/,
	      loader: 'babel'
	    };
	  },
	  image: function image() {
	    var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : { emitFile: true };
	
	    var emitFile = _ref.emitFile;
	
	    var emitFileConfig = emitFile ? 'emitFile=true' : 'emitFile=false';
	
	    return {
	      test: /\.(jpe?g|png|gif|svg)$/i,
	      loaders: ['file?name=' + vars.imageName + '&' + emitFileConfig, 'image-webpack?bypassOnDebug&optimizationLevel=7&interlaced=false']
	    };
	  },
	  typescript: function typescript() {
	    var _ref2 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var officialLoader = _ref2.officialLoader;
	    var isHot = _ref2.isHot;
	
	    var tsLoader = officialLoader ? 'ts' : 'awesome-typescript';
	    var babel = isHot ? 'babel?plugins=react-hot-loader/babel' : 'babel';
	
	    return {
	      test: /\.tsx?$/,
	      loaders: [babel, '' + tsLoader]
	    };
	  },
	  sass: function sass() {
	    var _ref3 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var isomorphic = _ref3.isomorphic;
	    var global = _ref3.global;
	    var extract = _ref3.extract;
	    var sourceMap = _ref3.sourceMap;
	
	    var styleLoader = isomorphic ? 'isomorphic-style' : 'style';
	    var sourceMapConfig = sourceMap ? 'sourceMap=true' : 'sourceMap=false';
	    var localIdentName = global ? '[local]' : vars.cssLocalIdentName;
	
	    var loaders = [styleLoader + '?' + sourceMapConfig, 'css?' + sourceMapConfig + '&modules&importLoaders=1&localIdentName=' + localIdentName, 'sass?' + sourceMapConfig];
	
	    return {
	      test: /\.scss$/,
	      loader: extract ? ExtractTextPlugin.extract.apply(null, parseLoadersForExtractTextPlugin(loaders)) : loaders.join('!')
	    };
	  },
	  postcss: function postcss() {
	    var _ref4 = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
	
	    var global = _ref4.global;
	    var extract = _ref4.extract;
	    var sourceMap = _ref4.sourceMap;
	    var isomorphic = _ref4.isomorphic;
	
	    var styleLoader = isomorphic ? 'isomorphic-style' : 'style';
	    var localIdentName = global ? '[local]' : vars.cssLocalIdentName;
	    var sourceMapConfig = sourceMap ? 'sourceMap=true' : 'sourceMap=false';
	
	    var loaders = [styleLoader + '?' + sourceMapConfig, 'css?' + sourceMapConfig + '&modules&importLoaders=1&localIdentName=' + localIdentName, 'postcss?' + sourceMapConfig];
	
	    return {
	      test: /\.css$/,
	      loader: extract ? ExtractTextPlugin.extract.apply(null, parseLoadersForExtractTextPlugin(loaders)) : loaders.join('!')
	    };
	  },
	
	
	  // 未经测试
	  css: function css() {
	    return {
	      test: /\.css$/,
	      loaders: ['style', 'css?modules&importLoaders=1&localIdentName=[local]', 'resolve-url']
	    };
	  }
	};

/***/ },
/* 407 */
/***/ function(module, exports) {

	module.exports = require("extract-text-webpack-plugin");

/***/ },
/* 408 */
/***/ function(module, exports) {

	module.exports = require("postcss-import");

/***/ },
/* 409 */
/***/ function(module, exports) {

	module.exports = require("postcss-cssnext");

/***/ },
/* 410 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var webpack = __webpack_require__(401);
	var fs = __webpack_require__(378);
	var vars = __webpack_require__(404);
	var _ = __webpack_require__(10);
	
	/**
	 * @param names
	 * {
	 *   [name: string]: string
	 * }
	 */
	var createDllReferences = function createDllReferences(names) {
	  try {
	    return _.map(names, function (name) {
	      return new webpack.DllReferencePlugin({
	        context: '.',
	        manifest: JSON.parse(fs.readFileSync(vars.paths.built + '/' + name + '.dll.manifest.json', 'utf8'))
	      });
	    });
	  } catch (error) {
	    console.warn('WARNING: ', error.message);
	    return [];
	  }
	};
	
	module.exports = {
	  prodEnv: function prodEnv() {
	    return new webpack.DefinePlugin({
	      'process.env.NODE_ENV': '"production"'
	    });
	  },
	  devEnv: function devEnv() {
	    return new webpack.DefinePlugin({
	      'process.env.NODE_ENV': '"development"'
	    });
	  },
	  nodeSourceMapSupport: function nodeSourceMapSupport() {
	    return new webpack.BannerPlugin('require(\'source-map-support\').install()', {
	      raw: true,
	      entryOnly: true
	    });
	  },
	  occurenceOrder: function occurenceOrder() {
	    return new webpack.optimize.OccurenceOrderPlugin();
	  },
	  dllReferences: function dllReferences() {
	    return createDllReferences(vars.dllNames);
	  },
	  dll: function dll() {
	    return new webpack.DllPlugin({
	      path: vars.paths.built + '/[name].dll.manifest.json',
	      name: vars.vendorLibName
	    });
	  },
	  uglify: function uglify() {
	    return new webpack.optimize.UglifyJsPlugin({
	      compress: {
	        warnings: false
	      }
	    });
	  }
	};

/***/ },
/* 411 */
/***/ function(module, exports, __webpack_require__) {

	'use strict';
	
	var vars = __webpack_require__(404);
	
	module.exports = {
	  resolve: {
	    // 这边定义的 root 暂时没用，因为 vs code 里面目前配置的是只使用相对路径
	    root: vars.paths.src,
	    alias: {
	      // 方便在组建里面引用通用的 scss 文件（可能不会太常用）
	      // composes 使用的是 webpack resolve 里面的规则
	      styles: vars.paths.isomorphic + '/styles'
	    },
	    extensions: ['', '.js', '.jsx', '.ts', '.tsx']
	  }
	};

/***/ },
/* 412 */
/***/ function(module, exports) {

	"use strict";
	
	Object.defineProperty(exports, "__esModule", {
	    value: true
	});
	exports.default = combineMiddleware;
	/**
	 * Combine multiple middleware together
	 * Source: http://stackoverflow.com/questions/20274483/how-do-i-combine-connect-middleware-into-one-middleware
	 *
	 * @param {Function[]} mids functions of form:
	 *   function(req, res, next) { ... }
	 * @return {Function} single combined middleware
	 */
	/**
	 * Combine multiple middleware together
	 * Source: http://stackoverflow.com/questions/20274483/how-do-i-combine-connect-middleware-into-one-middleware
	 *
	 * @param {Function[]} mids functions of form:
	 *   function(req, res, next) { ... }
	 * @return {Function} single combined middleware
	 */function combineMiddleware(mids) {
	    return mids.reduce(function (a, b) {
	        return function (req, res, next) {
	            a(req, res, function (err) {
	                if (err) {
	                    return next(err);
	                }
	                return b(req, res, next);
	            });
	        };
	    });
	}

/***/ },
/* 413 */
/***/ function(module, exports) {

	module.exports = require("webpack-dev-middleware");

/***/ },
/* 414 */
/***/ function(module, exports) {

	module.exports = require("webpack-hot-middleware");

/***/ },
/* 415 */
/***/ function(module, exports) {

	module.exports = require("morgan");

/***/ },
/* 416 */
/***/ function(module, exports) {

	module.exports = require("cookie-parser");

/***/ },
/* 417 */
/***/ function(module, exports) {

	module.exports = require("body-parser");

/***/ },
/* 418 */
/***/ function(module, exports) {

	module.exports = require("connect-mongo");

/***/ }
/******/ ]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vd2VicGFjay9ib290c3RyYXAgNDk0NjZkOGFiNzc3NWE5OWUzMGEiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmFiZWwtcG9seWZpbGxcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvaW5pdGlhbGl6ZS50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJleHByZXNzXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZXhwcmVzcy1zZXNzaW9uXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yb3V0ZXMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yb3V0ZXMvYXBpLXJvdXRlcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL3BhcnNlLWNvbnRleHQudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibG9kYXNoXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2F1dGgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvbm90LWZvdW5kLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZXJyb3JzL2dlbmVyaWMtZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvdmFsaWRhdGlvbi1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy9iYWQtcmVxdWVzdC1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy9pbnRlcm5hbC1zZXJ2ZXItZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvbm8tcGVybWlzc2lvbi1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy91bmF1dGhvcml6ZWQtZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvcmVxdWVzdC10b28tbGFyZ2UtZXJyb3IudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lcnJvcnMvdW5zdXBwb3J0ZWQtZmlsZS10eXBlLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZXJyb3JzL2VtYWlsLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZXJyb3JzL21ldGhvZC1ub3QtYWxsb3dlZC1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy90b28tbWFueS1yZXF1ZXN0cy1lcnJvci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Vycm9ycy90b2tlbi1yZXZvY2F0aW9uLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvaTE4bi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3RyYW5zbGF0aW9ucy9jbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9tb2RlbC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9kYXRhYmFzZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmNvbmZpZy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvYXBwLmNvbmZpZy5kZXYudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2FwcC5jb25maWcucHJvZC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9vdXRwdXQtZW1wdHktZW50aXR5LnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcIm1vbmdvZGJcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3V0aWxzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvdmFsaWRhdG9yLnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcInZhbGlkYXRvclwiIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvcGlwZWxpbmUudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmx1ZWJpcmRcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3V0aWxzL3JlZHVjZS10YXNrcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3V0aWxzL3NvcnQtYnktZGF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy92YWxpZGF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21vZGVscy9wYWdpbmF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2hlbHBlcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9oZWxwZXJzL2NvbXB1dGUtaGFzaC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjcnlwdG9cIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJodW1wc1wiIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZGF0YS9zY2hlbWFzLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvbW9kZWxzL3NjaGVtYS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2RhdGEvdHlwZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL3JlcXVpcmUtcGVybWlzc2lvbnMtb2YudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29uc3RhbnRzL2NvbW1vbi50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWVycm9yLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvdXRpbHMvcHJpbnQudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiY29sb3JzL3NhZmVcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWpzb24tcmVzcG9uc2UudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvcGFyc2VVcmxlbmNvZGVkLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9saWZlY2lyY2xlLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvZ2V0QXBpUm9vdC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyUm91dGluZ0VuYWJsZWQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9yZWRpcmVjdC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1yb3V0ZXJcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyRW52LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvcHJpbnQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2xvZy1maWxlLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvbWlkZGxld2FyZS9wcmVwYXJlLWFwaS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWFwaS1ub3QtZm91bmQudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9lbmRwb2ludHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvZmlsZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2FwaS9ib29rcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3BhcnNlcnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwic2ltcGxlLWVwdWItcGFyc2VyXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9wYXJzZXJzL3R4dC1jb250ZW50LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3V0aWxzL2NhbGxBcGkudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiaXNvbW9ycGhpYy1mZXRjaFwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3V0aWxzL2pzb25wLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvYXBpL3VzZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvdXNlcnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvY29sbGVjdGlvbnMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9hcGkvYmFzaWMtYXBpLnRzIiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvZW5kcG9pbnRzL21ha2UtYmFzaWMtZW5kcG9pbnQudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibXVsdGVyXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yb3V0ZXMvcGFnZXMudHN4Iiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvb3B0aW9ucy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2hlbHBlcnMvcGFyc2VkLWFyZ3YudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibWluaW1pc3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvY3JlYXRlUm91dGVzLnRzeCIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdFwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvTWFzdGVyLnRzeCIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1yZWR1eFwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9hcGkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvZ2V0Q3VycmVudFRpbWUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvcGFkTnVtYmVyV2l0aFplcm8udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvcGFyc2VRdWVyeS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy91dGlscy9kb20vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvZG9tL2lzRGVzY2VuZGFudC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3V0aWxzL2Jyb3dzZXIvZ2V0U2NyZWVuSW5mby50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2lzSUUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvdXRpbHMvYnJvd3Nlci9sb2NrU2Nyb2xsLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3V0aWxzL2Jyb3dzZXIvdW5sb2NrU2Nyb2xsLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3NjaGVtYXMudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwibm9ybWFsaXpyXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy91dGlscy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb25zdGFudHMvYWN0aW9uVHlwZXMudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9jb21tb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy90ZXN0LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvdmlld2VyLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3NlbGVjdG9ycy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvZW50aXRpZXMudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVzZWxlY3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvY29tbW9uLnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcImJldHRlci1yZWR1eC1mb3JtXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2VsZWN0b3JzL3ZpZXdlci50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9BbGVydC9pbmRleC50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQWxlcnQvQWxlcnQudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9JY29uLnRzeCIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9zdmctaWNvbnMudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3QtY3NzLW1vZHVsZXNcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JY29uL0ljb24uc2Nzcz83M2JhIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vSWNvbi5zY3NzIiwid2VicGFjazovLy8uL34vY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanMiLCJ3ZWJwYWNrOi8vLy4vfi9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5XCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYmFiZWwtcnVudGltZS9oZWxwZXJzL3NsaWNlZFRvQXJyYXlcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQWxlcnQvQWxlcnQuc2Nzcz9iNWI2Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQWxlcnQvQWxlcnRzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9Nb2RhbC50c3giLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3QtZG9tXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9GYWRlL0ZhZGUudHN4Iiwid2VicGFjazovLy9leHRlcm5hbCBcInJlYWN0LWFkZG9ucy1jc3MtdHJhbnNpdGlvbi1ncm91cFwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ZhZGUvRmFkZS5zY3NzP2Y0YTAiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWwuc2Nzcz82Y2FiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxQbHVzLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9Db25maXJtTW9kYWwudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsRm9vdGVyLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9mb3JtLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0J1dHRvbi9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9CdXR0b24vQnV0dG9uLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9CdXR0b24vX2J1dHRvbi5zY3NzPzZhMWQiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQnV0dG9uL19idXR0b24uc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSW5wdXQvSW5wdXQuc2Nzcz9jYmJjIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0lucHV0L0lucHV0LnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvU2VsZWN0aXplSW5wdXQudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1NlbGVjdGl6ZUlucHV0L1NlbGVjdGl6ZUlucHV0LnNjc3M/ZmQ3NSIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9TZWxlY3RpemVJbnB1dC9TZWxlY3RpemVJbnB1dC5zY3NzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL1RleHRhcmVhLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9UZXh0YXJlYS9UZXh0YXJlYS5jc3M/Mjg2MSIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9UZXh0YXJlYS9UZXh0YXJlYS5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3R5bGVzL3ZhcmlhYmxlcy5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxGb290ZXIuc2Nzcz85NDkxIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsRm9vdGVyLnNjc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29udGFpbmVycy9BcHAudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvaW5kZXgudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL2xheW91dC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Db250YWluZXIvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQ29udGFpbmVyL0NvbnRhaW5lci50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRHJvcGRvd24vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRHJvcGRvd24vRHJvcGRvd24udHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL0Ryb3Bkb3duLnNjc3M/ZWNmMyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bi5zY3NzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL0Ryb3Bkb3duSXRlbS50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRHJvcGRvd24vRHJvcGRvd25JdGVtU2VwLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0xvZ28vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Mb2dvL0xvZ28udHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9Mb2dvLmNzcz8wNzBlIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9Mb2dvLmNzcyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltZy9sb2dvLnBuZyIsIndlYnBhY2s6Ly8vLi9zcmMvYXNzZXRzL2ltZy9sb2dvLWRhcmsucG5nIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcuc2Nzcz9lYzU3Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0NvbG9waG9uL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24udHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24uc2Nzcz84NzcyIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24uc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb250YWluZXJzL0NvbnNvbGUudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL0NvbnNvbGVCcmFuZGluZy50c3giLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlQnJhbmRpbmcvQ29uc29sZUJyYW5kaW5nLnNjc3M/MThhNSIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0NvbnNvbGVCcmFuZGluZy9Db25zb2xlQnJhbmRpbmcuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0NvbnNvbGVTaWRlYmFyL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZVNpZGViYXIvQ29uc29sZVNpZGViYXIudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZVNpZGViYXIvQ29uc29sZVNpZGViYXIuY3NzP2E1OGUiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9Db25zb2xlU2lkZWJhci5jc3MiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29udGVudC9tZW51cy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb250YWluZXJzL0RvY0NvbnRhaW5lci50c3giLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVhY3Qtc2lkZS1lZmZlY3RcIiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy9hcGkvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc2VydmljZXMvYXBpL2FwaS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9ub3JtYWxpemVSZXNwb25zZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy91dGlscy9oYW5kbGVSZXNwb25zZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL2luZGV4LnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcInJlZHV4XCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1ZpZXdlci9jb21wb25lbnRzL0Jvb2tQYWdlLnNjc3M/MGVlYiIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL2NvbXBvbmVudHMvQm9va1BhZ2Uuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb25zdGFudHMvdmlld2VyRGVmcy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL1ZpZXdlci51dGlscy50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVGVzdFBsYWNlL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9BcHBIb21lL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9Ccm93c2UvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0Jvb2tEZXRhaWwvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0NvbGxlY3Rpb25zL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9Db2xsZWN0aW9uRGV0YWlsL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9TaWduaW4vaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1NpZ251cC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvU2hlbGYvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1ByZWZlcmVuY2UvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1Byb2ZpbGUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvcm91dGVzL01hbmFnZUJvb2tzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3JvdXRlcy9NYW5hZ2VVc2Vycy9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQWRkQm9vay9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQWRkQ29sbGVjdGlvbi9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvTm9NYXRjaC9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0FwcEVycm9yL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3IudHN4Iiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3Iuc2Nzcz9mODVhIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3Iuc2NzcyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9nZXQtc3RvcmUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVkdXgtc2FnYS9lZmZlY3RzXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvbG9hZFJlcXVlc3RzLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3NhZ2FzL3V0aWxzLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL2RhdGEvY2FjaGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3ZlbmRvcl9tb2R1bGVzL21kNS9pbmRleC50cyIsIndlYnBhY2s6Ly8vLi9zcmMvdmVuZG9yX21vZHVsZXMvbWQ1L21kNS5qcyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zYWdhcy9sb2dpbkZsb3cudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvdmlld2VyVGFza3MudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwicmVkdXgtc2FnYVwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3NhZ2FzL3Rlc3QudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yZW5kZXIvbWF0Y2gtcm91dGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9yZW5kZXIvcmVuZGVyLWh0bWwudHN4Iiwid2VicGFjazovLy9leHRlcm5hbCBcInJlYWN0LWRvbS9zZXJ2ZXJcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWFjdC1yb3V0ZXItcmVkdXhcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9jb21wb25lbnRzL1BhZ2UudHN4Iiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvcmVuZGVyL2NvbXBvbmVudHMvSHRtbC50c3giLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiZnNcIiIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9jb21wb25lbnRzL1NlcnZlclNpZGVBcHBSb290LnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9jb25maWd1cmVTdG9yZS50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJyZWR1eC10aHVua1wiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL2NvbXBvbmVudHMvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvcmVkdWNlcnMvY29tcG9uZW50cy92aWV3ZXIudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvY29uc3RhbnRzL2luZGV4LnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL3BhZ2luYXRpb24udHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvcmVkdWNlcnMvcGFnaW5hdGUudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9hcGkudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9tb2RpZnlSZXNwb25zZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9taWRkbGV3YXJlL2hhbmRsZVNlcnZlclN0b3JlLnRzIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL2hhbmRsZUluaXRpYWxTdGF0ZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9taWRkbGV3YXJlL2xvZ0FjdGlvblR5cGVzLnRzIiwid2VicGFjazovLy9leHRlcm5hbCBcInJlZHV4LWxvZ2dlclwiIiwid2VicGFjazovLy8uL3NyYy9pc29tb3JwaGljL3N0b3JlL21pZGRsZXdhcmUvaW5kZXgudHMiLCJ3ZWJwYWNrOi8vLy4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9jYWNoZS50cyIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL3JlbmRlci9yZW5kZXI1MDAudHN4Iiwid2VicGFjazovLy8uL3NyYy9zZXJ2ZXIvcmVuZGVyL2NvbXBvbmVudHMvRXJyb3JQYWdlLnRzeCIsIndlYnBhY2s6Ly8vLi9zcmMvc2VydmVyL2Jvb3RzdHJhcC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJodHRwXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9kZXYtdG9vbHMvaG90LW1vZHVsZS1yZXBsYWNlbWVudC50cyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJ3ZWJwYWNrXCIiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci9kZXYtdG9vbHMvd2VicGFjay5ob3QuY29uZmlnLnRzIiwid2VicGFjazovLy8uL3dlYnBhY2svYmFzZS9pbmRleC5qcyIsIndlYnBhY2s6Ly8vLi93ZWJwYWNrL2Jhc2UvdmFyaWFibGVzLmpzIiwid2VicGFjazovLy9leHRlcm5hbCBcInBhdGhcIiIsIndlYnBhY2s6Ly8vLi93ZWJwYWNrL2Jhc2UvbG9hZGVycy5qcyIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJwb3N0Y3NzLWltcG9ydFwiIiwid2VicGFjazovLy9leHRlcm5hbCBcInBvc3Rjc3MtY3NzbmV4dFwiIiwid2VicGFjazovLy8uL3dlYnBhY2svYmFzZS9wbHVnaW5zLmpzIiwid2VicGFjazovLy8uL3dlYnBhY2svYmFzZS9jb21tb24uanMiLCJ3ZWJwYWNrOi8vLy4vc3JjL3NlcnZlci91dGlscy9jb21iaW5lLW1pZGRsZXdhcmUudHMiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwid2VicGFjay1kZXYtbWlkZGxld2FyZVwiIiwid2VicGFjazovLy9leHRlcm5hbCBcIndlYnBhY2staG90LW1pZGRsZXdhcmVcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJtb3JnYW5cIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjb29raWUtcGFyc2VyXCIiLCJ3ZWJwYWNrOi8vL2V4dGVybmFsIFwiYm9keS1wYXJzZXJcIiIsIndlYnBhY2s6Ly8vZXh0ZXJuYWwgXCJjb25uZWN0LW1vbmdvXCIiXSwibmFtZXMiOlsiYmFzZURpciIsInByb2Nlc3MiLCJjd2QiLCJhcHAiLCJpbml0aWFsaXplIiwiTW9uZ29TdG9yZSIsIlBVQkxJQ19QQVRIX05BTUUiLCJTRVNTSU9OX1NFQ1JFVCIsIlJFUV9TSVpFX0xJTUlUIiwiTU9OR09fU1RPUkVfVVJMIiwiZGF0YWJhc2UiLCJob3N0IiwibW9uZ29TdG9yZU5hbWUiLCJSRVFfQkFTRV9QQVRIIiwiYmFzZVBhdGgiLCJ1c2UiLCJzZWNyZXQiLCJyZXNhdmUiLCJzYXZlVW5pbml0aWFsaXplZCIsInN0b3JlIiwidXJsIiwiaG90IiwidXJsZW5jb2RlZCIsImxpbWl0IiwiZXh0ZW5kZWQiLCJqc29uIiwic3RhdGljIiwiam9pbiIsInJlcSIsInJlcyIsIm5leHQiLCJza2lwIiwic3RhdHVzQ29kZSIsImFwaSIsInByZWZpeCIsInBhcnNlQ29udGV4dCIsInBhZ2VzIiwic2V0dXBBcGlBcHAiLCJlbmRwb2ludHMiLCJGT1JNX0RBVEFfRklMRV9LRVkiLCJ1cGxvYWQiLCJhdXRoZW50aWNhdGVQdWJsaWMiLCJwcmVwYXJlQXBpIiwiYXV0aGVudGljYXRlUHJpdmF0ZSIsInJlcXVpcmVQZXJtaXNzaW9uc09mIiwiVVNFUiIsImF1dGhlbnRpY2F0ZUFkbWluIiwiQURNSU4iLCJhcGlSb3V0ZXMiLCJyb3V0ZXIiLCJSb3V0ZXIiLCJnZXQiLCJhdXRob3IiLCJmaW5kT25lIiwibGlzdCIsInBvc3QiLCJhZGQiLCJwdXQiLCJ1cGRhdGUiLCJkZWxldGUiLCJyZW1vdmUiLCJjb2xsZWN0aW9uIiwibGlzdENvbGxlY3Rpb25zIiwiZmluZEJvb2siLCJyZXNvbHZlQm9va0NvbnRlbnQiLCJsaXN0Qm9va3MiLCJzaW5nbGUiLCJsb2dGaWxlIiwiYWRkQm9vayIsImVkaXRCb29rTWV0YSIsInJlbW92ZUJvb2siLCJ0YWciLCJ1c2VyIiwiYWRkVXNlciIsImZpbmRVc2VyIiwibGlzdFNoZWxmQm9va3MiLCJnZXRSZWFkaW5nUHJvZ3Jlc3MiLCJzZXRSZWFkaW5nUHJvZ3Jlc3MiLCJyZWFkRmlsZSIsImRlbEZpbGUiLCJhdXRoIiwiYmFzaWNBdXRoIiwiY2hlY2siLCJyZXZva2UiLCJhcGlBcHAiLCJoYW5kbGVBcGlOb3RGb3VuZCIsImhhbmRsZUpTT05SZXNwb25zZSIsImhhbmRsZUVycm9yIiwic2Vzc2lvbiIsImNvbnRleHQiLCJvbWl0Iiwicm9sZSIsInNjaGVtYXMiLCJsb2dpbiIsImJvZHkiLCJ0b0xvd2VyQ2FzZSIsInVuZGVmaW5lZCIsInBhc3N3b3JkIiwiVmFsaWRhdGlvbkVycm9yIiwicXVlcnkiLCIkb3IiLCJ1c2VybmFtZSIsImVtYWlsIiwidGhlbiIsImNhbWVsaXplS2V5cyIsInJlc3VsdCIsImFwaVJlc3VsdHMiLCJQcm9taXNlIiwicmVzb2x2ZSIsIm9rIiwiVW5hdXRob3JpemVkRXJyb3IiLCJzZW5kIiwiZGVjYW1lbGl6ZUtleXMiLCJkZXN0cm95Iiwic3RhdHVzIiwiTm90Rm91bmRFcnJvciIsIkJhZFJlcXVlc3RFcnJvciIsIkludGVybmFsU2VydmVyRXJyb3IiLCJOb1Blcm1pc3Npb25FcnJvciIsIlJlcXVlc3RFbnRpdHlUb29MYXJnZUVycm9yIiwiVW5zdXBwb3J0ZWRNZWRpYVR5cGVFcnJvciIsIkVtYWlsRXJyb3IiLCJNZXRob2ROb3RBbGxvd2VkRXJyb3IiLCJUb29NYW55UmVxdWVzdHNFcnJvciIsIlRva2VuUmV2b2NhdGlvbkVycm9yIiwiR2VuZXJpY0Vycm9yIiwibWVzc2FnZSIsIm5hbWUiLCJzdGFjayIsIkVycm9yIiwidHlwZSIsIm9mZmVuZGluZ1Byb3BlcnR5IiwicHJvcGVydHkiLCJjb2RlIiwiVW5zdXBwb3J0ZWRGaWxlVHlwZUVycm9yIiwiaTE4biIsImFkZFBhZGRpbmciLCJzdHIiLCJlc2NhcGUiLCJzdWJzdHIiLCJpbmRleE9mIiwiZ2V0TWF0Y2hpbmdTdHJpbmciLCJtc2dQYXRoIiwibWF0Y2hpbmdTdHJpbmciLCJwYXRoIiwic3BsaXQiLCJpIiwibGVuZ3RoIiwiYWRkUHVuYyIsImxhbmciLCJ2YWx1ZSIsImlzTnVsbCIsImNvbnNvbGUiLCJlcnJvciIsInBsYWNlaG9sZGVySW5kZXgiLCJiZWZvcmUiLCJzdWJzdHJpbmciLCJhZnRlciIsIm1hdGNoaW5nVmFsdWUiLCJ0cmltIiwiY29tbW9uIiwidGVybXMiLCJpZCIsInBlcmNlbnRhZ2UiLCJkZXNjcmlwdGlvbiIsImNyZWF0b3IiLCJ0aXRsZSIsInByb2dyZXNzIiwiYWRtaW4iLCJmaWxlIiwiZmlsZXMiLCJib29rIiwiYm9va3MiLCJlcnJvcnMiLCJ2YWxpZGF0aW9uIiwidmFsdWVMaW1pdCIsIm5vdFN0cmluZyIsInN0cmluZ09ubHkiLCJhbHBoYW51bWVyaWMiLCJpbnZhbGlkRm9ybWF0Iiwibm9QdXJlTnVtYmVyIiwib25seVN0YXJ0V2l0aExldHRlcnMiLCJtaW5MZW5ndGgiLCJtYXhMZW5ndGgiLCJhbGxvd2VkQ2hhcnMiLCJwcmVDaGVjayIsImVtcHR5T2JqZWN0IiwibWlzc1JlcXVpcmVkRmllbGRzIiwidW5zdXBwb3J0ZWRJbnB1dCIsImlucHV0RW1wdHkiLCJnZW5lcmFsIiwibm90Rm91bmQiLCJub3RGb3VuZEluIiwiZXhpc3RzIiwibmVlZFBlcm1pc3Npb25zT2YiLCJsb2dpblJlcXVpcmVkIiwic2NoZW1hIiwidW5pcXVlIiwibWlkZGxld2FyZSIsImFjY2Vzc0RlbmllZCIsIndyb25nUGFzc3dvcmQiLCJ3cm9uZ0NvbWJpbmF0aW9uIiwib2F1dGgiLCJ0b2tlbkV4cGlyZWQiLCJzcGFtcHJldmVudGlvbiIsInRvb01hbnlBdHRlbXB0cyIsIm5vVXNlcm5hbWUiLCJub1Bhc3N3b3JkIiwibWFpbCIsImZhaWxlZFNlbmRpbmdFbWFpbCIsImFuRXJyb3JPY2N1cnJlZCIsInVua25vd25FcnJvck9jY3VycmVkIiwiTW9kZWwiLCJpZE9yUXVlcnkiLCJfaWQiLCJfc2NoZW1hIiwiX3RhYmxlTmFtZSIsImZpZWxkcyIsInJhdyIsInBhcnNlUXVlcnkiLCJkaXNhYmxlUGFnaW5hdGlvbiIsImVudGl0eSIsInJlamVjdCIsIl9iYXNlVGFibGUiLCJvcHRpb25zIiwicGFnZSIsImZpbHRlciIsIm1hcHBpbmciLCJkb1F1ZXJ5IiwibGlzdFJhdyIsImNvbm5lY3Rpb24iLCJmaW5kIiwibGlzdFJhd1F1ZXJ5IiwidG9BcnJheSIsInJhd1Jlc3VsdHMiLCJyZXN1bHRzIiwibW9kaWZpZWRFbnRpdGllcyIsImVudGl0aWVzIiwibWFwIiwiY2xvc2UiLCJkYXRhIiwiZGF0YVdpdGhJRCIsIk9iamVjdCIsImFzc2lnbiIsIk1hdGgiLCJyYW5kb20iLCJ0b0ZpeGVkIiwiZGF0ZV9jcmVhdGVkIiwiRGF0ZSIsInRvU3RyaW5nIiwiZGF0YVRvQ2hlY2siLCJCb29sZWFuIiwiZmllbGQiLCJrZXkiLCJmaWxlbGQiLCJleGVjIiwiaW5zZXJ0IiwiY2hlY2tpbmdSZXN1bHQiLCJhbGwiLCJnZXRSb3dCeU1hdGNoIiwiZGF0YUl0ZW0iLCJyIiwicmVkdWNlVGFza3MiLCJ1cGRhdGVDb25maWciLCJtdWx0aSIsInVwc2VydCIsImRhdGEyIiwiZGF0ZV91cGRhdGVkIiwiJHNldCIsImNvbm5lY3QiLCJnZXRSb3dCeUlkIiwiZW1iZWRSZWYiLCJNb25nb0NsaWVudCIsInRhYmxlIiwibWF0Y2giLCJnZXRSZWZGaWVsZHNXaXRoSWRzIiwicmF3UmVzdWx0IiwicmVmIiwiaWRzIiwiQXJyYXkiLCJpc0FycmF5IiwiaGFuZGxlUmVmUmVzdWx0IiwicmF3UmVmUmVzdWx0IiwicmVmU2NoZW1hIiwiZG9lc1JlZkhhdmVSZWZJbnNpZGUiLCJnZXRSZWZGaWVsZHNXaXRoRGF0YSIsImZpZWxkc1dpdGhSZWZJZHMiLCJmaWVsZHNXaXRoRGF0YSIsImlzUmVmSW5SZWYiLCJyZVJlZmVkUmVzdWx0IiwiZmllbGREYXRhIiwicmVmUmVzdWx0cyIsInJlZHVjZSIsImZpZWxkc09iaiIsImZpZWxkc1dpdGhJZHMiLCJyZWZPYmoiLCJhcHBDb25maWciLCJlbnYiLCJOT0RFX0VOViIsInNpdGVVcmwiLCJwb3J0IiwiZW5hYmxlRW50aXR5Q2FjaGUiLCJvdXRwdXRFbXB0eUVudGl0eSIsImlkT2JqT3JJZFN0cmluZyIsImlkT2JqIiwiZm9yRWFjaCIsInZhbGlkYXRvciIsInBpcGVsaW5lIiwic29ydEJ5RGF0ZSIsInJlcXVpcmUiLCJhZGRpdGlvbmFsVmFsaWRhdG9ycyIsImxlbmd0aE1pbiIsImxlbiIsImlucHV0IiwibGVuZ3RoTWF4IiwidGFza3MiLCJhcmdzIiwicHJvdG90eXBlIiwic2xpY2UiLCJjYWxsIiwiYXJndW1lbnRzIiwicnVuVGFzayIsInRhc2siLCJhcmciLCJhcHBseSIsImEiLCJiIiwidmFsdWVPZiIsInZhbGlkYXRlIiwiaXNFZGl0aW5nIiwic3VwcGxpZWRGaWVsZHMiLCJrZXlzIiwiaXNVbmRlZmluZWQiLCJzdXBwbGllZEZpZWxkc0luU2NoZW1hIiwiYWxsRmllbGRzIiwicmVxdWlyZWRGaWVsZHMiLCJyZXF1aXJlZCIsInVuc3VwcG9ydGVkRmllbGRzIiwibWlzc2VkRmllbGRzIiwidmFsaWRhdGVGaWVsZCIsInZhbCIsInZhbGlkYXRvcnMiLCJmbiIsImVycm9yTXNnIiwicGFnaW5hdGUiLCJkZWZhdWx0T3B0aW9ucyIsIm9yZGVyIiwicGFyc2VJbnQiLCJyZXZlcnNlIiwic3RhcnRJbmRleCIsIl9wYWdpbmF0aW9uIiwiY3VycmVudCIsImNlaWwiLCJub3RGb3VuZEVycm9yIiwiaXRlbU5hbWUiLCJjb2xsZWN0aW9uTmFtZSIsImNvbXB1dGVIYXNoIiwiYnVmZmVyIiwic2hhc3VtIiwiY3JlYXRlSGFzaCIsImRpZ2VzdCIsImlzRW1haWwiLCJOdW1iZXIiLCJJRCIsImlzQWxwaGFudW1lcmljIiwiU2NoZW1hIiwiYmFzZVRhYmxlIiwiZmllbGREZWZpbml0aW9uIiwiX2ZpZWxkRGVmaW5pdGlvbiIsIkRhdGFUeXBlIiwibWFyayIsImlzVHlwZUFycmF5IiwiYXJyYXlPZiIsIkRhdGFUeXBlcyIsIlN0cmluZyIsInVzZXJSb2xlIiwiVklTSVRPUiIsIkVOQUJMRV9TRVJWRVJfUk9VVElORyIsIklOSVRJQUxfU1RBVEUiLCJET1VCQU5fQVBJX1JPT1QiLCJHSVRIVUJfQVBJX1JPT1QiLCJST0xFUyIsImVycm9ySnNvbiIsImlzUHJvdG90eXBlT2YiLCJjb2xvcnMiLCJwcmludCIsImluZm8iLCJiZ0dyZWVuIiwiYm9sZCIsIndoaXRlIiwiZ3JlZW4iLCJ0ZXN0IiwiYmdDeWFuIiwiYmxhY2siLCJjeWFuIiwid2FybiIsImJnWWVsbG93IiwieWVsbG93IiwiYmdSZWQiLCJyZWQiLCJBUElfUk9PVCIsImdldEFwaVJvb3QiLCJwYXJzZVBhZ2luYXRpb24iLCJmdWxsUGF0aCIsImdldExpbnRCeVBhZ2UiLCJsaW5rcyIsImZpcnN0IiwibGFzdCIsInByZXYiLCJoYW5kbGVTdWNjZXNzIiwibWV0aG9kIiwicGFyc2VVcmxlbmNvZGVkIiwib3JpZ2luYWxPYmoiLCJpc0VtcHR5Iiwib2JqZWN0IiwiY2xvbmVEZWVwIiwiZW5jb2RlZHVybCIsInByb3AiLCJlbmNvZGVVUkkiLCJsaWZlY2lyY2xlIiwiaXNTZXJ2ZXJSb3V0aW5nRW5hYmxlZCIsInJlZGlyZWN0IiwiaXNTZXJ2ZXJFbnYiLCJvblJvdXRpbmdDaGFuZ2UiLCJuZXh0UHJvcHMiLCJjdXJyZW50UHJvcHMiLCJyb3V0aW5nIiwiaGFzUGF0aFBhcmFtQ2hhbmdlZCIsImlzRXF1YWwiLCJ3aW5kb3ciLCJsb2NhdGlvbiIsIm9yaWdpbiIsInB1c2giLCJzdHlsZSIsIm1lcmdlZEFyZ3MiLCJtb2RBcmdzIiwiaW5kZXgiLCJjb25jYXQiLCJ0cmFjZSIsImhlbHBlcnMiLCJmaWxlTW9kZWwiLCJoYXNoIiwiZmlsZW5hbWUiLCJvcmlnaW5hbG5hbWUiLCJjb250ZW50IiwibWltZXR5cGUiLCJzaXplIiwiZW5jb2RpbmciLCJlcnIiLCJsb2dnZWRGaWxlSWQiLCJjYXRjaCIsIl9fYXBpVG91Y2hlZCIsInBhcmFtcyIsImxpc3RDb2xsZWN0aW9uIiwiZmlsZUlkIiwicGFyc2VyIiwiYmluYXJ5RmlsZSIsImZpbGVSZXN1bHQiLCJfX2Fzc2lnbiIsInQiLCJzIiwibiIsInAiLCJoYXNPd25Qcm9wZXJ0eSIsIl9fYXdhaXRlciIsInRoaXNBcmciLCJfYXJndW1lbnRzIiwiUCIsImdlbmVyYXRvciIsImZ1bGZpbGxlZCIsInN0ZXAiLCJlIiwicmVqZWN0ZWQiLCJkb25lIiwiYm9va01vZGVsIiwicHJvZ3Jlc3NNb2RlbCIsImF1dGhvck1vZGVsIiwiZ2V0QXV0aG9ySWQiLCJhdXRob3JOYW1lIiwiYXV0aG9yRW50aXR5Iiwib3BzIiwiZmV0Y2hCb29rQnlUaXRsZSIsImtleXdvcmQiLCJib29rSnNvbiIsImZldGNoQm9va01ldGFCeVRpdGxlIiwiY292ZXIiLCJhdXRob3JJbmZvIiwiY29udGVudFR5cGUiLCJjb250ZW50X3R5cGUiLCJtZXRhIiwiZG9TYXZlIiwiYm9va01ldGEiLCJhdXRob3JJZCIsImJvb2tEYXRhIiwibWVyZ2VCb29rTWV0YSIsImV4dE1ldGEiLCJhdXRob3JzIiwiZXB1YiIsInBhcnNlZENvbnRlbnQiLCJmaWxlQ29udGVudEFycmF5IiwiYm9va0lkIiwiYm9va0VudGl0eSIsImJvb2tDb250ZW50IiwidHh0Q29udGVudCIsImNvbnRlbnRfaWQiLCJpc05pbCIsInVzZXJJZCIsInVzZXJfaWQiLCJzb3J0IiwiYm9va19pZCIsIm91dHB1dEVtcHR5IiwidGFyZ2V0IiwibmF2IiwibGFiZWwiLCJCdWZmZXIiLCJpc0J1ZmZlciIsImZsZXNoIiwic3JjIiwibWFya2Rvd24iLCJjYWxsQXBpIiwiZGF0YVR5cGUiLCJjcmVkZW50aWFscyIsInBhcnNlT3B0aW9ucyIsIm9yaWdpbmFuT3B0aW9ucyIsInVzZUpzb25wIiwiZmV0Y2hPcHRpb25zIiwiSlNPTiIsInN0cmluZ2lmeSIsImhlYWRlcnMiLCJmdWxsVXJsIiwiZmV0Y2giLCJyZXNwb25zZSIsIl9yZXNwb25zZSIsImpzb25wIiwianNvbnBJZCIsImpzb25wQ2FsbGJhY2siLCJqc29ucENhbGxiYWNrRGF0YSIsInNjcmlwdCIsImRvY3VtZW50IiwiY3JlYXRlRWxlbWVudCIsInNldEF0dHJpYnV0ZSIsImFwcGVuZENoaWxkIiwib25sb2FkIiwicmVtb3ZlQ2hpbGQiLCJnZXRFbGVtZW50QnlJZCIsInVzZXJNb2RlbCIsInVzZXJJbmZvIiwiY29sbGVjdGlvbk1vZGVsIiwiaXRlbXMiLCJpdGVtIiwiQmFzaWNBcGkiLCJfbW9kZWwiLCJtYWtlQmFzaWNFbmRwb2ludCIsImFwaUZucyIsIlBST0RfRVJST1JfTVNHIiwiaXNSb290IiwidXJsUGFydHMiLCJyb3V0ZSIsImlzUHJvZCIsInByb2R1Y3Rpb24iLCJyZXFVcmwiLCJyb3V0ZXMiLCJyZXF1ZXN0IiwiZmV0Y2hEYXRhIiwicmVuZGVyIiwiaXNIb3QiLCJ1c2VyU2Vzc2lvbiIsImh0bWwiLCJyZWRpcmVjdExvY2F0aW9uIiwicGF0aG5hbWUiLCJzZWFyY2giLCJodG1sU3RyaW5nIiwiYXBwRW52IiwiYXJndiIsImNyZWF0ZVJvdXRlcyIsImhhbmRsZUNvbnNvbGVFbnRlciIsIm5leHRTdGF0ZSIsInJlcGxhY2UiLCJjYWxsYmFjayIsImFsZXJ0IiwiY29tcG9uZW50IiwidG8iLCJvbkVudGVyIiwiTWFzdGVyIiwiZGlzcGF0Y2giLCJwcm9wcyIsImhhc05ld0Vycm9yTXNnIiwiZXJyb3JNZXNzYWdlIiwicm91dGVyQ2hhbmdlZCIsImxvY2F0aW9uQmVmb3JlVHJhbnNpdGlvbnMiLCJzZW5kTm90aWZpY2F0aW9uIiwic2Nyb2xsVG9wIiwidXNlckF1dGgiLCJjb25maXJtTW9kYWwiLCJjbG9zZUNvbmZpcm1Nb2RhbCIsIm1vZGFsIiwiY2xvc2VNb2RhbCIsImNsYXNzTmFtZSIsIm9wZW4iLCJvbkNvbmZpcm0iLCJvblJlcXVlc3RDbG9zZSIsIndpZHRoIiwibm90aWZpY2F0aW9ucyIsIm5vdGkiLCJ2aXNpYmxlIiwiaGlkZU5vdGlmaWNhdGlvbiIsIm1lc3NhZ2VzIiwiY2hpbGRyZW4iLCJzdGF0ZSIsImNvbXBvbmVudHMiLCJpbml0aWFsaXplRm9ybSIsInJlc2V0Rm9ybSIsInJlc2V0IiwiZmV0Y2hBdXRob3JzIiwiZmV0Y2hDb2xsZWN0aW9ucyIsImZldGNoQ29sbGVjdGlvbiIsInNlYXJjaERvdWJhbkJvb2tzIiwiZmV0Y2hQcm9maWxlIiwiZmV0Y2hTaGVsZiIsIkFjdGlvblR5cGVzIiwicmVtb3ZlRW50aXR5IiwiUkVNT1ZFX0VOVElUWSIsIkJPT0siLCJsb2FkQm9vayIsIkxPQURfQk9PSyIsIkJPT0tfQ09OVEVOVCIsImxvYWRCb29rQ29udGVudCIsIkxPQURfQk9PS19DT05URU5UIiwiQk9PS1MiLCJsb2FkQm9va3MiLCJMT0FEX0JPT0tTIiwidXNlcnMiLCJVU0VSUyIsImxvYWRVc2VycyIsIkxPQURfVVNFUlMiLCJsb2dvdXQiLCJMT0dPVVQiLCJ1c2VyTG9nb3V0IiwiVVNFUl9MT0dPVVQiLCJCT09LX1BST0dSRVNTIiwibG9hZEJvb2tQcm9ncmVzcyIsIkxPQURfQk9PS19QUk9HUkVTUyIsIkxPQURfQUNUSU9OUyIsIkNBTExfQVBJIiwidHlwZXMiLCJBVVRIT1JTIiwiUkVRVUVTVCIsIlNVQ0NFU1MiLCJGQUlMVVJFIiwiZW5kcG9pbnQiLCJBVVRIT1JfQVJSQVkiLCJwYWdpbmF0aW9uIiwicSIsImZsb3dUeXBlIiwiQ09MTEVDVElPTlMiLCJDT0xMRUNUSU9OX0FSUkFZIiwiY29sbGVjdGlvbklkIiwiQ09MTEVDVElPTiIsIkRPVUJBTl9CT09LUyIsImFwaVVybCIsIkRPVUJBTl9CT09LX1NFQVJDSF9SRVNVTFRTIiwiUFJPRklMRSIsIlNFUlZFUl9TVE9SRSIsIkFVVEgiLCJTSEVMRiIsIlNIRUxGX0JPT0tfQVJSQVkiLCJnZXRDdXJyZW50VGltZSIsInBhZE51bWJlcldpdGhaZXJvIiwiZCIsInRpbWUiLCJnZXRGdWxsWWVhciIsImdldE1vbnRoIiwiZ2V0RGF0ZSIsImdldEhvdXJzIiwiZ2V0TWludXRlcyIsImdldFNlY29uZHMiLCJudW0iLCJudW1TdHJXaXRoWmVybyIsInF1ZXJ5U3RyaW5nIiwicGFyYW0iLCJpc0Rlc2NlbmRhbnQiLCJwYXJlbnQiLCJjaGlsZCIsIm5vZGUiLCJwYXJlbnROb2RlIiwiZ2V0U2NyZWVuSW5mbyIsImlzSUUiLCJsb2NrU2Nyb2xsIiwidW5sb2NrU2Nyb2xsIiwidmlldyIsInNjcmVlbiIsImlubmVyV2lkdGgiLCJoZWlnaHQiLCJpbm5lckhlaWdodCIsImFzcGVjdFJhdGlvIiwidmVyIiwiaW5uZXJIVE1MIiwiZ2V0RWxlbWVudHNCeVRhZ05hbWUiLCJvdmVyZmxvdyIsImlkQXR0cmlidXRlIiwiZGVmaW5lIiwicHJvZmlsZSIsImRvdWJhbkJvb2siLCJzaGVsZkJvb2siLCJib29rUHJvZ3Jlc3MiLCJtYXRjaGVkQm9va3MiLCJCT09LX0FSUkFZIiwiVVNFUl9BUlJBWSIsIk1BVENIRURfQk9PS19BUlJBWSIsIkFVVEhPUiIsIkxPQURfQ0FDSEUiLCJhY3Rpb24iLCJwYXlsb2FkIiwiY3JlYXRlUmVxdWVzdFR5cGVzIiwiYWNjIiwiYmFzZSIsImNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUiLCJvcGVyYXRpb24iLCJjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUiLCJjcmVhdGVBY3Rpb25FbnRpdHkiLCJyZXF1ZXN0VHlwZXMiLCJzdWNjZXNzIiwibG9hZENhY2hlIiwibG9hZGVkRnJvbUNhY2hlIiwiZmFpbHVyZSIsIk5PVElGSUNBVElPTiIsIlNIT1ciLCJISURFIiwiT1BFTl9DT05GSVJNX01PREFMIiwiQ0xPU0VfQ09ORklSTV9NT0RBTCIsIk1PREFMIiwiT1BFTiIsIkNMT1NFIiwiVklFV0VSIiwiSU5JVElBTElaRSIsIklOSVRJQUxJWkVfQ09ORklHIiwiQ09ORklHIiwiQ0FMQ19TVEFSVCIsIkNBTENfU1VDQ0VTUyIsIkNBTENfRkFJTFVSRSIsIkJPT0tfUFJPR1JFU1NfVVBEQVRFIiwiQk9PS19QUk9HUkVTU19JTklUSUFMSVpFIiwiQk9PS19QUk9HUkVTU19ERVNUUk9ZIiwiSlVNUCIsIkZPTlRfQ0hBTkdFIiwiUEFORUxfVE9HR0xFIiwiUFJFRkVSRU5DRV9UT0dHTEUiLCJOQVZJR0FUSU9OX1RPR0dMRSIsIlRIRU1FX0NIQU5HRSIsIlNDUk9MTF9NT0RFX1RPR0dMRSIsInNob3dOb3RpZmljYXRpb24iLCJvcGVuQ29uZmlybU1vZGFsIiwib3Blbk1vZGFsIiwibXNnVHlwZSIsImdldFN0YXRlIiwic2V0VGltZW91dCIsImxvYWRTb21ldGhpbmciLCJzYXZlU29tZXRoaW5nIiwic2VsZWN0b3JzIiwiQUNUSU9OX1RZUEVTIiwiaW5pdGlhbGl6ZVZpZXdlckNvbmZpZyIsImNvbmZpZyIsImluaXRpYWxpemVWaWV3ZXIiLCJjb25maWdWaWV3ZXIiLCJjYWxjQm9vayIsIndyYXAiLCJjYWxjQm9va1N1Y2Nlc3MiLCJjb21wdXRlZCIsImNhbGNCb29rRmFpbHVyZSIsImluaXRpYWxpemVCb29rUHJvZ3Jlc3MiLCJ1cGRhdGVCb29rUHJvZ3Jlc3MiLCJ2aWV3ZXIiLCJwYWdlTm8iLCJmbG9vciIsImRlc3Ryb3lCb29rUHJvZ3Jlc3MiLCJ2aWV3ZXJKdW1wVG8iLCJ0b2dnbGVWaWV3ZXJQYW5lbCIsInRvZ2dsZVZpZXdlclByZWZlcmVuY2UiLCJ0b2dnbGVWaWV3ZXJOYXZpZ2F0aW9uIiwiY2hhbmdlVmlld2VyRm9udFNpemUiLCJmb250U2l6ZUluUGl4ZWwiLCJmb250U2l6ZSIsImNoYW5nZVZpZXdlclRoZW1lIiwidGhlbWVOYW1lIiwidGhlbWUiLCJ0b2dnbGVWaWV3ZXJTY3JvbGxNb2RlIiwiZm9ybSIsImRvdWJhbkJvb2tzIiwiZW50aXRpZXNOYW1lIiwicGFnaW5hdGlvbk5hbWUiLCJwYWdpbmF0aW9uS2V5Iiwic2hlbGZCb29rcyIsImRvdWJhbkJvb2tzQXNPcHRpb25zIiwic2VsZWN0ZWRCb29rcyIsImFkZGl0aW9uYWwiLCJzdW1tYXJ5IiwiaW1hZ2VzIiwibGFyZ2UiLCJhdXRob3JzQXNPcHRpb25zIiwiYm9va3NBc09wdGlvbnMiLCJzZXNzaW9uVXNlcklkIiwiREVGQVVMVF9LRVkiLCJpc1BhZ2luYXRpb25GZXRjaGluZyIsInBhZ2luYXRpb25QYWdlcyIsInBhZ2luYXRpb25MaW5rcyIsInBpY2siLCJuZXh0UGFnZSIsInNlbGVjdGVkUGFnaW5hdGlvbkxpbmtzIiwiY3VycmVudFBhZ2UiLCJlbnRpdHlQYWdlcyIsInNlbGVjdGVkRW50aXRpZXMiLCJtYXBWYWx1ZXMiLCJwYWdlZEVudGl0aWVzIiwiYWxsRW50aXRpZXMiLCJzZWxmIiwibmF2RGF0YSIsInBhbmVsIiwiX3NlbGYiLCJwcmVmZXJlbmNlIiwibmF2aWdhdGlvbiIsIkFsZXJ0cyIsIkFsZXJ0IiwiX19kZWNvcmF0ZSIsImRlY29yYXRvcnMiLCJkZXNjIiwiYyIsImdldE93blByb3BlcnR5RGVzY3JpcHRvciIsIlJlZmxlY3QiLCJkZWNvcmF0ZSIsImRlZmluZVByb3BlcnR5Iiwic3R5bGVzIiwic3R5bGVOYW1lIiwib25DbGljayIsImFsbG93TXVsdGlwbGUiLCJJY29uIiwic3ZnV3JhcFN0eWxlIiwicG9zaXRpb24iLCJ0b3AiLCJtYXJnaW5Ub3AiLCJtaW5XaWR0aCIsIm1pbkhlaWdodCIsInZpZXdCb3giLCJzdGFyIiwiZm9sZGVyIiwic3RhdGlzdGljcyIsImJhY2siLCJmb250IiwiYXJyb3dSaWdodCIsImFsZXJ0cyIsIm1zZyIsIk1vZGFsUGx1cyIsIkNvbmZpcm1Nb2RhbCIsIk1vZGFsIiwibW9kYWxIZWlnaHQiLCJpc01vZGFsSGlkZGVuIiwiaXNNb2RhbFZlcnRpY2FsQ2VudGVyIiwiY2xpY2tzIiwic2V0VmlldyIsImJpbmQiLCJoaWRlTW9kYWwiLCJmaW5kRE9NTm9kZSIsImNsaWVudEhlaWdodCIsImRvY3VtZW50SGVpZ2h0Iiwic2V0U3RhdGUiLCJwcmV2UHJvcHMiLCJhZGRFdmVudExpc3RlbmVyIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsImRlZmF1bHRDbGFzcyIsIm1vZGFsSWQiLCJiYWNrZHJvcCIsInZlcnRpY2FsQ2VudGVyIiwic2Nyb2xsIiwibGVmdCIsImJhY2tncm91bmQiLCJtYXJnaW5MZWZ0IiwibWFyZ2luIiwicXVlcnlTZWxlY3RvciIsInRyYW5zaXRpb25OYW1lIiwidHJhbnNpdGlvbkVudGVyVGltZW91dCIsInRyYW5zaXRpb25MZWF2ZVRpbWVvdXQiLCJhY3Rpb25zIiwiY2xvbmVFbGVtZW50IiwiRGlhbG9nIiwib25DYW5jZWwiLCJNb2RhbEZvb3RlciIsImNvbG9yIiwiQnV0dG9uIiwiSW5wdXQiLCJTZWxlY3RpemVJbnB1dCIsIlRleHRhcmVhIiwiaXNNb3VzZU92ZXIiLCJpc0ZsdWlkIiwicHJldmVudERlZmF1bHQiLCJvbk1vdXNlT3ZlciIsIm9uTW91c2VPdXQiLCJkZWZhdWx0UHJvcHMiLCJ0b3VjaGVkIiwic2hvd0Vycm9yIiwicGxhY2Vob2xkZXIiLCJvbkNoYW5nZSIsInNob3dPcHRpb25zIiwiZm9jdXMiLCJleHBlbmRlZE9wdGlvbkluZGV4IiwiaGFuZGxlT3V0c2lkZUNsaWNrIiwiZm9jdXNJbnB1dCIsImhhbmRsZUlucHV0Q2hhbmdlIiwibmV3VmFsdWUiLCJ1c2VWYWx1ZSIsIm9uVmFsdWVzQ2hhbmdlIiwidmFsdWVzIiwib25PcHRpb25zQ2hhbmdlIiwib3B0aW9uIiwiZGlzYWJsZWQiLCJjbGVhcklucHV0VmFsdWUiLCJzdGF5Rm9jdXNlZCIsImhpZGVPcHRpb25zIiwib25JbnB1dENoYW5nZSIsIm5ld1ZhbHVlcyIsInJlbW92ZWRWYWx1ZSIsInYiLCJrZXlDb2RlIiwicmVtb3ZlVmFsdWUiLCJpbnB1dFdyYXAiLCJvcHRpb25zTG9hZGVkIiwib25BZGROZXdWYWx1ZSIsIm9taXRTZWxlY3RlZFZhbHVlc0Zyb21PcHRpb25zIiwiaW5wdXRXaWR0aCIsImZpbHRlcmVkT3B0aW9ucyIsInZhbHVlT2ZWYWx1ZXMiLCJzZWxlY3RpemVJbnB1dFN0eWxlTmFtZSIsIm9uQmx1ciIsIm9uRm9jdXMiLCJvbktleURvd24iLCJoYW5kbGVLZXlQcmVzcyIsImFkZFZhbHVlIiwib25PcHRpb25DbGljayIsIkFwcCIsImhhbmRsZUxvZ291dCIsInVzZXJMb2dnZWRJbiIsImlzQWRtaW4iLCJib29rU2hlbGYiLCJib29rU2hlbGZMaXN0IiwicmVjZW50UmVhZGluZyIsIm9uTG9nb3V0Iiwibm90aWZpY2F0aW9uIiwiQnJhbmRpbmciLCJpc0Ryb3Bkb3duTWVudVZpc2libGUiLCJoYW5kbGVMb2dvdXRDbGljayIsImRpc3BsYXkiLCJocmVmIiwiQ29udGFpbmVyIiwiRHJvcGRvd25JdGVtIiwiRHJvcGRvd24iLCJEcm9wZG93bkl0ZW1TZXAiLCJzaG93TWVudSIsImhhbmRsZUdsb2JhbENsaWNrIiwiZHJvcGRvd24iLCJMb2dvIiwiZGFyayIsIkNvbG9waG9uIiwiQ29uc29sZSIsInVzZXJSb2xlQ2hhbmdlZCIsInJlZGlyZWN0SWZOb3RBZG1pbiIsImNvbnRlbnRTdHlsZSIsInBhZGRpbmdUb3AiLCJib2R5Q2xhc3MiLCJtZW51TWFwcGluZyIsImN1cnJlbnRQYXRoIiwidGV4dEFsaWduIiwiQ29uc29sZUJyYW5kaW5nIiwiQ29uc29sZVNpZGViYXIiLCJjdXJyZW50TWVudSIsInJvb3RJbmRleCIsInN1YkluZGV4IiwibWVudSIsInN1Yk1lbnUiLCJyb290TWVudSIsImRpc3BsYXlOYW1lIiwibWVudXMiLCJkZWZhdWx0VGl0bGUiLCJEb2NDb250YWluZXIiLCJyZWR1Y2VQcm9wc1RvU3RhdGUiLCJoYW5kbGVTdGF0ZUNoYW5nZU9uQ2xpZW50IiwicHJvcHNMaXN0IiwiaW5uZXJtb3N0UHJvcHMiLCJ1c2VBc01hc3RlclRpdGxlIiwicHJvcExpc3QiLCJyZW1vdmVBdHRyaWJ1dGUiLCJmZXRjaE5vcm1hbGl6ZWQiLCJhZGRDb2xsZWN0aW9uIiwiYWRkQXV0aG9yIiwic2V0UHJvZ3Jlc3MiLCJkZWxldGVCb29rIiwicGFyc2VFbmRwb2ludFdpdGhPcHRpb25zIiwiZmV0Y2hCb29rUHJvZ3Jlc3MiLCJmZXRjaEJvb2siLCJmZXRjaEJvb2tDb250ZW50IiwiZmV0Y2hCb29rcyIsIndpdGhDb250ZW50IiwiYXBpT3B0aW9ucyIsImV4Y2x1ZGUiLCJmZXRjaFVzZXJzIiwiZmV0Y2hEb3ViYW5Cb29rcyIsInVzZXJMb2dpbiIsInVzZXJTaWdudXAiLCJub3JtYWxpemVSZXNwb25zZSIsInJlc3VsdFByb21pc2UiLCJwYXJzZUhlYWRlclBhZ2VMaW5rQnlSZWwiLCJyZWwiLCJsaW5rIiwicGFyc2VSZXNIZWFkZXJUb1BhZ2luYXRpb24iLCJoYW5kbGVSZXNwb25zZSIsImNhbWVsaXplZEpzb24iLCJfbmV4dCIsIl9sYXN0IiwibW9kdWxlIiwiZXhwb3J0cyIsImdldENvbXBvbmVudCIsImRlZmF1bHQiLCJUSEVNRVMiLCJXSElURSIsIk5JR0hUIiwiU0VQSUEiLCJnZXROb2RlSGVpZ2h0cyIsImdyb3VwTm9kZXNCeVBhZ2UiLCJncm91cFBhZ2VGcm9tQ2hhcHRlcnMiLCJyZXNvbHZlQm9va0xvY2F0aW9uIiwibm9kZXMiLCJub2Rlc0hlaWdodCIsImdldFBhZ2VPZmZzZXQiLCJwYWdlSW5kZXgiLCJwYWdlSGVpZ2h0Iiwibm9kZUhlaWdodHMiLCJvZmZzZXQiLCJub2RlSW5kZXgiLCJub2RlU3RhcnRJbmRleCIsIm5vZGVIZWlnaHRTdW0iLCJnZXROb2Rlc09mUGFnZSIsIm5vZGVFbmRJbmRleCIsInBhZ2VOb2RlcyIsInBhZ2VTdGFydEZyb20iLCJjaGFwdGVySWQiLCJwYWdlSGVpZ2h0U3VtIiwicGFnZVN1bSIsImZpbmRJZE9mSFRhZ3MiLCJtZE5vZGUiLCJwYXR0ZXJuIiwiY29udGVudE9mQ2hhcHRlcnMiLCJub2RlSGVpZ2h0c09mQ2hhcHRlcnMiLCJhbGxQYWdlcyIsInQwIiwiY2hhcHRlciIsInQxIiwiY29tcHV0ZWRQYWdlcyIsImZvdW5kQ2hhcHRlclBhZ2UiLCJBcHBFcnJvciIsImdldFN0b3JlIiwibWF0Y2hSb3V0ZSIsInJlbmRlckh0bWwiLCJyZW5kZXI1MDAiLCJyZW5kZXJQcm9wcyIsImZldGNoRGF0YUZucyIsImNvbXAiLCJydW5TYWdhIiwiZmV0Y2hEYXRhRm4iLCJyb290U2FnYSIsIndhdGNoQWxsTG9hZFJlcXVlc3RzIiwiaGFuZGxlTG9hZCIsIk9QVElPTlMiLCJEQVRBIiwiVFlQRSIsIkFQSV9DT05GSUdfS0VZUyIsIlJFU0VSVkVEX0FDVElPTl9LWUVTIiwiZmV0Y2hGbiIsInBhcnNlZEFjdGlvbiIsImFwaUNvbmZpZyIsImZldGNoRW50aXR5IiwiY2FjaGUiLCJhcGlGbiIsImZ1bGxQYXlsb2FkIiwiYXBpQXJncyIsImhhc0NhY2hlIiwiY2FjaGVJZCIsImNyZWF0ZUNhY2hlSWQiLCJjYWNoZUNvbnRlbnQiLCJnZXRDYWNoZSIsInNldENhY2hlIiwiaWRlbnRpZmllciIsImxvY2FsU3RvcmFnZSIsImdldEl0ZW0iLCJwYXJzZSIsInNhdmUiLCJzZXRJdGVtIiwiY2xlYXIiLCJtZDUiLCIkIiwic2FmZV9hZGQiLCJ4IiwieSIsImxzdyIsIm1zdyIsImJpdF9yb2wiLCJjbnQiLCJtZDVfY21uIiwibWQ1X2ZmIiwibWQ1X2dnIiwibWQ1X2hoIiwibWQ1X2lpIiwiYmlubF9tZDUiLCJvbGRhIiwib2xkYiIsIm9sZGMiLCJvbGRkIiwiYmlubDJyc3RyIiwib3V0cHV0IiwibGVuZ3RoMzIiLCJmcm9tQ2hhckNvZGUiLCJyc3RyMmJpbmwiLCJsZW5ndGg4IiwiY2hhckNvZGVBdCIsInJzdHJfbWQ1IiwicnN0cl9obWFjX21kNSIsImJrZXkiLCJpcGFkIiwib3BhZCIsInJzdHIyaGV4IiwiaGV4X3RhYiIsImNoYXJBdCIsInN0cjJyc3RyX3V0ZjgiLCJ1bmVzY2FwZSIsImVuY29kZVVSSUNvbXBvbmVudCIsInJhd19tZDUiLCJoZXhfbWQ1IiwicmF3X2htYWNfbWQ1IiwiayIsImhleF9obWFjX21kNSIsInN0cmluZyIsIndhdGNoTG9naW5GbG93Iiwid2F0Y2hWaWV3ZXIiLCJ2aWV3ZXJVdGlscyIsInNldFZpZXdlciIsInNldFZpZXdlcldpdGhBY3Rpb24iLCJ3YXRjaEluaXRWaWV3ZXIiLCJ1cGRhdGVQcm9ncmVzcyIsIndhdGNoQ2FsY0Jvb2siLCJ3YXRjaFByb2dyZXNzT3BlcmF0aW9ucyIsImp1bXBUbyIsIndhdGNoSnVtcFJlcXVlc3QiLCJmZXRjaFByb2dyZXNzQW5kSnVtcCIsIkRFRkFVTFRfUEFHRV9IRUlHSFQiLCJERUZBVUxUX0ZPTlRfU0laRSIsInZpZXdlcldpZHRoIiwiaXNTbWFsbFNjcmVlbiIsImluaXRpYWxpemVkIiwiaXNDYWxjTW9kZSIsImZsdWlkIiwiaXNUb3VjaE1vZGUiLCJtZXJnZSIsInN0YXJ0Q2FsY0h0bWxUaW1lIiwiY29tcHV0ZWRDaGFwdGVycyIsImNoaWxkTm9kZXMiLCJjaGlsZERpdiIsImdldEF0dHJpYnV0ZSIsImVuZENhbGNIdG1sVGltZSIsImlzU2Nyb2xsTW9kZSIsInBhZ2VDb3VudCIsInRvdGFsSGVpZ2h0Iiwid2F0Y2hUZXN0Iiwid2F0Y2hUZXN0MiIsImRvTG9hZFdpdGhDYW5jZWwiLCJzb21lQXN5bmNUYXNrIiwibG9nIiwiZG9Mb2FkIiwibG9hZEFjdGlvbiIsImxvYWRUYXNrIiwic2F2ZUFjdGlvbiIsImhpc3RvcnkiLCJ3cmFwcGVkQ29tcG9uZW50IiwibWVtb3J5SGlzdG9yeSIsImdlblBhZ2VDb21wIiwiYXBwTWFya3VwIiwic3RvcmVXaXRoRmV0Y2hlZERhdGEiLCJzY3JpcHREYXRhIiwiYXBwUm9vdCIsInJlbmRlclBhZ2VDb250ZW50IiwiYXBwUm9vdE1hcmt1cCIsIkRFRkFVTFRfVElUTEUiLCJTQ1JJUFRfQ09OVEVOVF9JRCIsIkFTU0VUX1BBVEgiLCJBU1NFVF9QQVRIX1BST0QiLCJTQ1JJUFRTX1BST0QiLCJTQ1JJUFRTX0RFViIsIkdMT0JBTF9TVFlMRVMiLCJMT0NBTF9TVFlMRVMiLCJDU1NfTUFOSUZFU1RfUEFUSCIsIkNIVU5LU19NQU5JRkVTVF9QQVRIIiwiZ2V0TWFuaWZlc3QiLCJjaHVua01hbmlmZXN0IiwiY3NzTWFuaWZlc3QiLCJyZWFkRmlsZVN5bmMiLCJnZXRIYXNoZWRGaWxlbmFtZSIsIm1hbmlmZXN0IiwiUGFnZSIsImluY2x1ZGVMb2NhbFN0eWxlc2hlZXRzIiwibm9TY3JpcHQiLCJzY3JpcHRzIiwic2NyaXB0Q29udGVudCIsImFzc2V0UGF0aCIsImluaXRpYWxTdGF0ZSIsInNjcmlwdENvbnRlbnRJZCIsIkh0bWwiLCJTdHlsZUxpbmsiLCJTY3JpcHQiLCJiYWlkdVRyYWZmaWNDb2RlIiwidXNlRmF2aWNvbiIsImh0dHBFcXVpdiIsInNpemVzIiwic3R5bGVzaGVldE5hbWUiLCJkYW5nZXJvdXNseVNldElubmVySFRNTCIsIl9faHRtbCIsInNjcmlwdE5hbWUiLCJTZXJ2ZXJTaWRlQXBwUm9vdCIsImNvbmZpZ3VyZVN0b3JlIiwic2FnYU1pZGRsZXdhcmUiLCJTRVJWRVJfTUlERExFV0FSRVNfREVWIiwiU0VSVkVSX01JRERMRVdBUkVTX1BST0QiLCJNSURETEVXQVJFU19ERVYiLCJjb2xsYXBzZWQiLCJNSURETEVXQVJFU19QUk9EIiwiaGFuZGxlU3RvcmUiLCJtaWRkbGV3YXJlcyIsImFjY2VwdCIsIm5leHRSb290UmVkdWNlciIsInJlcGxhY2VSZWR1Y2VyIiwicnVuIiwiREVGQVVMVF9WSVNUT1JfU1RBVEUiLCJpc0ZldGNoaW5nIiwiZGV0ZXJtaW5lZCIsInJvb3RSZWR1Y2VyIiwiQ09OU1RBTlRTIiwiZ2V0RmxhZyIsImN1cnJlbnRGbGFnIiwiY29udGVudHMiLCJWSUVXRVJfREVGUyIsInNob3ciLCJDT01NT04iLCJjb21iaW5lZCIsIlNFQVJDSF9LRVkiLCJwYXJzZVR5cGVzIiwiYWN0aW9uVHlwZXMiLCJnZW5lcmFsTWFwQWN0aW9uVG9LZXkiLCJjb21iaW5lZFJlZHVjZXIiLCJtYXBBY3Rpb25Ub0tleSIsImJvb2tTaGVsdmVzIiwidXBkYXRlUGFnaW5hdGlvbiIsImxlZ2FjeVBhZ2luYXRpb24iLCJxS2V5IiwiZmluYWxLZXkiLCJvcmlnaW5hbFN0YXRlIiwiY29tcHV0ZVBhZ2luYXRpb25TdGF0ZSIsIkRFRkFVTFRfUEFHSU5BVElPTl9TVEFURSIsInVuaW9uIiwiZXZlcnkiLCJyZXF1ZXN0VHlwZSIsInN1Y2Nlc3NUeXBlIiwiZmFpbHVyZVR5cGUiLCJ1cGRhdGVQYWdpbmF0aW9uQnlLZXkiLCJhY3Rpb25XaXRoIiwiaGFzUGFnaW5hdGlvbiIsImZpbmFsQWN0aW9uIiwibm9ybWFsaXplZFJlcyIsImFjdGlvbkJvZHkiLCJoYW5kbGVJbml0aWFsU3RhdGUiLCJtb2RpZnlSZXNwb25zZSIsImhhbmRsZVNlcnZlclN0b3JlIiwibG9nQWN0aW9uVHlwZXMiLCJpc1N1Y2Nlc3NBY3Rpb24iLCJjYWNoZVJlc3BvbnNlQWN0aW9uIiwiRVJST1JfRE9DX1RJVExFIiwiRVJST1JfUEFHRV9USVRMRSIsImRvY1RpdGxlIiwiRXJyb3JQYWdlIiwiYm9vdHN0cmFwIiwiaHR0cCIsImZlYXR1cmVzIiwic2V0Iiwic2VydmVyIiwiY3JlYXRlU2VydmVyIiwibGlzdGVuIiwiZmVhdHVyZSIsImhvdE1vZHVsZVJlcGxhY2VtZW50Iiwid2VicGFja0Rldk1pZGRsZXdhcmUiLCJ3ZWJwYWNrSG90TWlkZGxld2FyZSIsImNvbXBpbGVyIiwibm9JbmZvIiwicHVibGljUGF0aCIsInBhdGhzIiwidmFycyIsIkV4dHJhY3RUZXh0UGx1Z2luIiwiZW50cnkiLCJpc29tb3JwaGljIiwiYnVpbHQiLCJwbHVnaW5zIiwiZGV2RW52IiwiZGxsUmVmZXJlbmNlcyIsIkhvdE1vZHVsZVJlcGxhY2VtZW50UGx1Z2luIiwiTm9FcnJvcnNQbHVnaW4iLCJhbGxDaHVua3MiLCJkZXZ0b29sIiwibG9hZGVycyIsImltYWdlIiwic2FzcyIsInNvdXJjZU1hcCIsImV4dHJhY3QiLCJwb3N0Y3NzIiwiYmFiZWwiLCJ0eXBlc2NyaXB0Iiwib2ZmaWNpYWxMb2FkZXIiLCJzYXNzTG9hZGVyIiwibG9hZGVyQ29uZmlnIiwicGF0aFByZWZpeCIsInJvb3QiLCJidWlsdFByb2QiLCJhc3NldHMiLCJjc3NMb2NhbElkZW50TmFtZSIsImltYWdlTmFtZSIsInZlbmRvckxpYk5hbWUiLCJkbGxOYW1lcyIsInJlYWN0S2l0IiwidXRpbHMiLCJsaWJzIiwicmVhY3REZXZLaXQiLCJwYXJzZUxvYWRlcnNGb3JFeHRyYWN0VGV4dFBsdWdpbiIsImluY2x1ZGVQYXRocyIsImxvYWRlciIsImVtaXRGaWxlIiwiZW1pdEZpbGVDb25maWciLCJ0c0xvYWRlciIsImdsb2JhbCIsInN0eWxlTG9hZGVyIiwic291cmNlTWFwQ29uZmlnIiwibG9jYWxJZGVudE5hbWUiLCJjc3MiLCJ3ZWJwYWNrIiwiZnMiLCJfIiwiY3JlYXRlRGxsUmVmZXJlbmNlcyIsIm5hbWVzIiwiRGxsUmVmZXJlbmNlUGx1Z2luIiwicHJvZEVudiIsIkRlZmluZVBsdWdpbiIsIm5vZGVTb3VyY2VNYXBTdXBwb3J0IiwiQmFubmVyUGx1Z2luIiwiZW50cnlPbmx5Iiwib2NjdXJlbmNlT3JkZXIiLCJvcHRpbWl6ZSIsIk9jY3VyZW5jZU9yZGVyUGx1Z2luIiwiZGxsIiwiRGxsUGx1Z2luIiwidWdsaWZ5IiwiVWdsaWZ5SnNQbHVnaW4iLCJjb21wcmVzcyIsIndhcm5pbmdzIiwiYWxpYXMiLCJleHRlbnNpb25zIiwiY29tYmluZU1pZGRsZXdhcmUiLCJtaWRzIl0sIm1hcHBpbmdzIjoiOzs7QUFBQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBLHVCQUFlO0FBQ2Y7QUFDQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBEQUFrRDtBQUNsRDtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUFrQixxQkFBcUI7QUFDdkM7QUFDQTtBQUNBO0FBQ0E7O0FBRUE7QUFDQTs7QUFFQTtBQUNBOztBQUVBO0FBQ0E7O0FBRUE7QUFDQTs7Ozs7Ozs7Ozs7Ozs7O0FDM0RBLDRDOzs7Ozs7Ozs7Ozs7QUNBQTs7Ozs7O0FBQ0EsS0FBTUEsVUFBVUMsUUFBUUMsR0FBUixFQUFoQjtBQUNBLEtBQU1DLE1BQU0sMEJBQVdILE9BQVgsQ0FBWjttQkFDZUcsRzs7Ozs7Ozs7Ozs7bUJDb0JTQyxVOztBQXZCeEI7Ozs7QUFDQTs7OztBQUNBOzs7O0FBQ0E7Ozs7QUFDQTs7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O0FBQ1JDLG1CQUFVO0FBREY7QUFEK0IsTUFBcEMsQ0FBUDtBQUtEO0FBekNjLEVBQWpCLEM7Ozs7Ozs7O0FDekJBLEtBQU1qRSxPQUFPLG1CQUFBNTlCLENBQVEsR0FBUixDQUFiOztBQUVBa3NCLFFBQU9DLE9BQVAsR0FBaUI7QUFDZjU0QixZQUFTO0FBQ1A7QUFDQTZyQyxXQUFNeEIsS0FBS0QsS0FBTCxDQUFXM3dCLEdBRlY7QUFHUDgwQixZQUFPO0FBQ0w7QUFDQTtBQUNBcmhCLGVBQVdtZCxLQUFLRCxLQUFMLENBQVdJLFVBQXRCO0FBSEssTUFIQTtBQVFQZ0UsaUJBQVksQ0FBQyxFQUFELEVBQUssS0FBTCxFQUFZLE1BQVosRUFBb0IsS0FBcEIsRUFBMkIsTUFBM0I7QUFSTDtBQURNLEVBQWpCLEM7Ozs7Ozs7Ozs7O21CQ2E0QkMsaUI7QUFmNUI7Ozs7Ozs7O0FBUUE7Ozs7Ozs7SUFPbUIsU0FBU0EsaUJBQVQsQ0FBMkJDLElBQTNCLEVBQWlDO0FBQ2hELFlBQU9BLEtBQUtsakMsTUFBTCxDQUFZLFVBQUNpQyxDQUFELEVBQUlDLENBQUosRUFBVTtBQUN6QixnQkFBTyxVQUFDMVMsR0FBRCxFQUFNQyxHQUFOLEVBQVdDLElBQVgsRUFBb0I7QUFDdkJ1UyxlQUFFelMsR0FBRixFQUFPQyxHQUFQLEVBQVksZUFBTztBQUNmLHFCQUFJbWEsR0FBSixFQUFTO0FBQ0wsNEJBQU9sYSxLQUFLa2EsR0FBTCxDQUFQO0FBQ0g7QUFDRCx3QkFBTzFILEVBQUUxUyxHQUFGLEVBQU9DLEdBQVAsRUFBWUMsSUFBWixDQUFQO0FBQ0gsY0FMRDtBQU1ILFVBUEQ7QUFRSCxNQVRNLENBQVA7QUFVSCxFOzs7Ozs7QUMxQkQsb0Q7Ozs7OztBQ0FBLG9EOzs7Ozs7QUNBQSxvQzs7Ozs7O0FDQUEsMkM7Ozs7OztBQ0FBLHlDOzs7Ozs7QUNBQSwyQyIsImZpbGUiOiJpbmRleC5qcyIsInNvdXJjZXNDb250ZW50IjpbIiBcdC8vIFRoZSBtb2R1bGUgY2FjaGVcbiBcdHZhciBpbnN0YWxsZWRNb2R1bGVzID0ge307XG5cbiBcdC8vIG9iamVjdCB0byBzdG9yZSBsb2FkZWQgY2h1bmtzXG4gXHQvLyBcIjFcIiBtZWFucyBcImFscmVhZHkgbG9hZGVkXCJcbiBcdHZhciBpbnN0YWxsZWRDaHVua3MgPSB7XG4gXHRcdDA6MVxuIFx0fTtcblxuIFx0Ly8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbiBcdGZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblxuIFx0XHQvLyBDaGVjayBpZiBtb2R1bGUgaXMgaW4gY2FjaGVcbiBcdFx0aWYoaW5zdGFsbGVkTW9kdWxlc1ttb2R1bGVJZF0pXG4gXHRcdFx0cmV0dXJuIGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdLmV4cG9ydHM7XG5cbiBcdFx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcbiBcdFx0dmFyIG1vZHVsZSA9IGluc3RhbGxlZE1vZHVsZXNbbW9kdWxlSWRdID0ge1xuIFx0XHRcdGV4cG9ydHM6IHt9LFxuIFx0XHRcdGlkOiBtb2R1bGVJZCxcbiBcdFx0XHRsb2FkZWQ6IGZhbHNlXG4gXHRcdH07XG5cbiBcdFx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG4gXHRcdG1vZHVsZXNbbW9kdWxlSWRdLmNhbGwobW9kdWxlLmV4cG9ydHMsIG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG4gXHRcdC8vIEZsYWcgdGhlIG1vZHVsZSBhcyBsb2FkZWRcbiBcdFx0bW9kdWxlLmxvYWRlZCA9IHRydWU7XG5cbiBcdFx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcbiBcdFx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xuIFx0fVxuXG4gXHQvLyBUaGlzIGZpbGUgY29udGFpbnMgb25seSB0aGUgZW50cnkgY2h1bmsuXG4gXHQvLyBUaGUgY2h1bmsgbG9hZGluZyBmdW5jdGlvbiBmb3IgYWRkaXRpb25hbCBjaHVua3NcbiBcdF9fd2VicGFja19yZXF1aXJlX18uZSA9IGZ1bmN0aW9uIHJlcXVpcmVFbnN1cmUoY2h1bmtJZCwgY2FsbGJhY2spIHtcbiBcdFx0Ly8gXCIxXCIgaXMgdGhlIHNpZ25hbCBmb3IgXCJhbHJlYWR5IGxvYWRlZFwiXG4gXHRcdGlmKCFpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0pIHtcbiBcdFx0XHR2YXIgY2h1bmsgPSByZXF1aXJlKFwiLi9cIiArIGNodW5rSWQgKyBcIi5cIiArICh7fVtjaHVua0lkXXx8Y2h1bmtJZCkgKyBcIi5qc1wiKTtcbiBcdFx0XHR2YXIgbW9yZU1vZHVsZXMgPSBjaHVuay5tb2R1bGVzLCBjaHVua0lkcyA9IGNodW5rLmlkcztcbiBcdFx0XHRmb3IodmFyIG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG4gXHRcdFx0XHRtb2R1bGVzW21vZHVsZUlkXSA9IG1vcmVNb2R1bGVzW21vZHVsZUlkXTtcbiBcdFx0XHR9XG4gXHRcdFx0Zm9yKHZhciBpID0gMDsgaSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKVxuIFx0XHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRzW2ldXSA9IDE7XG4gXHRcdH1cbiBcdFx0Y2FsbGJhY2suY2FsbChudWxsLCBfX3dlYnBhY2tfcmVxdWlyZV9fKTtcbiBcdH07XG5cbiBcdC8vIGV4cG9zZSB0aGUgbW9kdWxlcyBvYmplY3QgKF9fd2VicGFja19tb2R1bGVzX18pXG4gXHRfX3dlYnBhY2tfcmVxdWlyZV9fLm0gPSBtb2R1bGVzO1xuXG4gXHQvLyBleHBvc2UgdGhlIG1vZHVsZSBjYWNoZVxuIFx0X193ZWJwYWNrX3JlcXVpcmVfXy5jID0gaW5zdGFsbGVkTW9kdWxlcztcblxuIFx0Ly8gX193ZWJwYWNrX3B1YmxpY19wYXRoX19cbiBcdF9fd2VicGFja19yZXF1aXJlX18ucCA9IFwiXCI7XG5cbiBcdC8vIExvYWQgZW50cnkgbW9kdWxlIGFuZCByZXR1cm4gZXhwb3J0c1xuIFx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18oMCk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiB3ZWJwYWNrL2Jvb3RzdHJhcCA0OTQ2NmQ4YWI3Nzc1YTk5ZTMwYVxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJhYmVsLXBvbHlmaWxsXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJiYWJlbC1wb2x5ZmlsbFwiXG4gKiogbW9kdWxlIGlkID0gMVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IGluaXRpYWxpemUgZnJvbSAnLi9pbml0aWFsaXplJztcbmNvbnN0IGJhc2VEaXIgPSBwcm9jZXNzLmN3ZCgpO1xuY29uc3QgYXBwID0gaW5pdGlhbGl6ZShiYXNlRGlyKTtcbmV4cG9ydCBkZWZhdWx0IGFwcDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9pbmRleC50c1xuICoqLyIsImltcG9ydCBleHByZXNzIGZyb20gJ2V4cHJlc3MnO1xuaW1wb3J0IHNlc3Npb24gZnJvbSAnZXhwcmVzcy1zZXNzaW9uJztcbmltcG9ydCByb3V0ZXMgZnJvbSAnLi9yb3V0ZXMnO1xuaW1wb3J0IGJvb3RTZXJ2ZXIgZnJvbSAnLi9ib290c3RyYXAnO1xuaW1wb3J0IGFwcENvbmZpZyBmcm9tICcuLi9hcHAuY29uZmlnJztcbmltcG9ydCBob3RNb2R1bGVSZXBsYWNlbWVudCBmcm9tICcuL2Rldi10b29scy9ob3QtbW9kdWxlLXJlcGxhY2VtZW50JztcbmltcG9ydCBvcHRpb25zIGZyb20gJy4vb3B0aW9ucyc7XG5pbXBvcnQgcGF0aCBmcm9tICdwYXRoJztcbmltcG9ydCBtaWRkbGV3YXJlIGZyb20gJy4vbWlkZGxld2FyZSc7XG5pbXBvcnQgbW9yZ2FuIGZyb20gJ21vcmdhbic7XG5pbXBvcnQgY29va2llUGFyc2VyIGZyb20gJ2Nvb2tpZS1wYXJzZXInO1xuaW1wb3J0IGJvZHlQYXJzZXIgZnJvbSAnYm9keS1wYXJzZXInO1xuaW1wb3J0IGNvbm5lY3RNb25nbyBmcm9tICdjb25uZWN0LW1vbmdvJztcbmNvbnN0IE1vbmdvU3RvcmUgPSBjb25uZWN0TW9uZ28oc2Vzc2lvbik7XG5jb25zdCBhcHAgPSBleHByZXNzKCk7XG5jb25zdCBQVUJMSUNfUEFUSF9OQU1FID0gJ3B1YmxpYyc7XG5jb25zdCBTRVNTSU9OX1NFQ1JFVCA9ICdrZXknO1xuLy8gVE9ETzogd2hhdCBoYXBwZW5zIHdoZW4gbWF4IGFnZSBleGNlZWRzXG4vLyBjb25zdCBTRVNTSU9OX01BWF9BR0UgPSA3MCAqIDI0ICogNjAgKiA2MCAqIDEwMDAgLy8gNzAgZGF5c1xuY29uc3QgUkVRX1NJWkVfTElNSVQgPSAnNW1iJztcbmNvbnN0IE1PTkdPX1NUT1JFX1VSTCA9IGAke2FwcENvbmZpZy5kYXRhYmFzZS5ob3N0fS8ke2FwcENvbmZpZy5kYXRhYmFzZS5tb25nb1N0b3JlTmFtZX1gO1xuLy8gdG9kbzogcHV0IGl0IGluIGxvY2Fsc1xuY29uc3QgUkVRX0JBU0VfUEFUSCA9ICdfX2Jhc2VQYXRoJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGluaXRpYWxpemUoYmFzZVBhdGgpIHtcbiAgICBhcHAudXNlKHNlc3Npb24oe1xuICAgICAgICBzZWNyZXQ6IFNFU1NJT05fU0VDUkVULFxuICAgICAgICAvLyBjb29raWU6IHtcbiAgICAgICAgLy8gICBtYXhBZ2U6IFNFU1NJT05fTUFYX0FHRVxuICAgICAgICAvLyB9LFxuICAgICAgICByZXNhdmU6IHRydWUsXG4gICAgICAgIHNhdmVVbmluaXRpYWxpemVkOiB0cnVlLFxuICAgICAgICBzdG9yZTogbmV3IE1vbmdvU3RvcmUoeyB1cmw6IE1PTkdPX1NUT1JFX1VSTCB9KVxuICAgIH0pKTtcbiAgICAvLyDpnIDopoHmlL7lnKjlvIDlp4vnmoTkvY3nva5cbiAgICBpZiAob3B0aW9ucy5ob3QpIHtcbiAgICAgICAgYXBwLnVzZShob3RNb2R1bGVSZXBsYWNlbWVudCgpKTtcbiAgICB9XG4gICAgYXBwLnVzZShib2R5UGFyc2VyLnVybGVuY29kZWQoeyBsaW1pdDogUkVRX1NJWkVfTElNSVQsIGV4dGVuZGVkOiBmYWxzZSB9KSk7XG4gICAgYXBwLnVzZShib2R5UGFyc2VyLmpzb24oeyBsaW1pdDogUkVRX1NJWkVfTElNSVQgfSkpO1xuICAgIGFwcC51c2UoY29va2llUGFyc2VyKCkpO1xuICAgIGFwcC51c2UoZXhwcmVzcy5zdGF0aWMocGF0aC5qb2luKGJhc2VQYXRoLCBQVUJMSUNfUEFUSF9OQU1FKSkpO1xuICAgIC8vIHNldCBiYXNlUGF0aFxuICAgIGFwcC51c2UoKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICAgIHJlcVtSRVFfQkFTRV9QQVRIXSA9IGJhc2VQYXRoO1xuICAgICAgICBuZXh0KCk7XG4gICAgfSk7XG4gICAgLy8gbG9nIGVycm9yIGluZm9cbiAgICBhcHAudXNlKG1vcmdhbignZGV2Jywge1xuICAgICAgICBza2lwKHJlcSwgcmVzKSB7IHJldHVybiByZXMuc3RhdHVzQ29kZSA8IDQwMDsgfVxuICAgIH0pKTtcbiAgICAvLyBhcGkgcm91dGluZ1xuICAgIGFwcC51c2UoYC8ke2FwcENvbmZpZy5hcGkucHJlZml4fWAsIHJvdXRlcy5hcGkoKSk7XG4gICAgLy8gZnJvbnRlbmQgcm91dGluZ1xuICAgIGFwcC51c2UobWlkZGxld2FyZS5wYXJzZUNvbnRleHQsIHJvdXRlcy5wYWdlcyk7XG4gICAgcmV0dXJuIGJvb3RTZXJ2ZXIoYXBwLCBvcHRpb25zKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9pbml0aWFsaXplLnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZXhwcmVzc1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiZXhwcmVzc1wiXG4gKiogbW9kdWxlIGlkID0gNFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZXhwcmVzcy1zZXNzaW9uXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJleHByZXNzLXNlc3Npb25cIlxuICoqIG1vZHVsZSBpZCA9IDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBhcGkgZnJvbSAnLi9hcGktcm91dGVzJztcbmltcG9ydCBwYWdlcyBmcm9tICcuL3BhZ2VzJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBhcGksXG4gICAgcGFnZXNcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcm91dGVzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG5pbXBvcnQgbWlkZGxld2FyZSBmcm9tICcuLi9taWRkbGV3YXJlJztcbmltcG9ydCAqIGFzIGVuZHBvaW50cyBmcm9tICcuLi9lbmRwb2ludHMnO1xuaW1wb3J0IHsgUk9MRVMgfSBmcm9tICcuLi8uLi9pc29tb3JwaGljL2NvbnN0YW50cy9jb21tb24nO1xuaW1wb3J0IG11bHRlciBmcm9tICdtdWx0ZXInO1xuY29uc3QgRk9STV9EQVRBX0ZJTEVfS0VZID0gJ2ZpbGUnO1xuY29uc3QgdXBsb2FkID0gbXVsdGVyKCk7XG5jb25zdCBhdXRoZW50aWNhdGVQdWJsaWMgPSBbXG4gICAgbWlkZGxld2FyZS5wcmVwYXJlQXBpLFxuICAgIG1pZGRsZXdhcmUucGFyc2VDb250ZXh0XG5dO1xuY29uc3QgYXV0aGVudGljYXRlUHJpdmF0ZSA9IFtcbiAgICBtaWRkbGV3YXJlLnByZXBhcmVBcGksXG4gICAgbWlkZGxld2FyZS5wYXJzZUNvbnRleHQsXG4gICAgbWlkZGxld2FyZS5yZXF1aXJlUGVybWlzc2lvbnNPZihST0xFUy5VU0VSKVxuXTtcbmNvbnN0IGF1dGhlbnRpY2F0ZUFkbWluID0gW1xuICAgIG1pZGRsZXdhcmUucHJlcGFyZUFwaSxcbiAgICBtaWRkbGV3YXJlLnBhcnNlQ29udGV4dCxcbiAgICBtaWRkbGV3YXJlLnJlcXVpcmVQZXJtaXNzaW9uc09mKFJPTEVTLkFETUlOKVxuXTtcbmZ1bmN0aW9uIGFwaVJvdXRlcygpIHtcbiAgICBjb25zdCByb3V0ZXIgPSBleHByZXNzLlJvdXRlcigpO1xuICAgIC8vIGF1dGhvcnNcbiAgICByb3V0ZXIuZ2V0KCcvYXV0aG9ycy86aWQnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy5hdXRob3IuZmluZE9uZSk7IC8vIGJhc2ljXG4gICAgcm91dGVyLmdldCgnL2F1dGhvcnMnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy5hdXRob3IubGlzdCk7IC8vIGJhc2ljXG4gICAgcm91dGVyLnBvc3QoJy9hdXRob3JzJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuYXV0aG9yLmFkZCk7IC8vIGJhc2ljXG4gICAgcm91dGVyLnB1dCgnL2F1dGhvcnMvOmlkJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuYXV0aG9yLnVwZGF0ZSk7IC8vIGJhc2ljXG4gICAgcm91dGVyLmRlbGV0ZSgnL2F1dGhvcnMvOmlkJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuYXV0aG9yLnJlbW92ZSk7IC8vIGJhc2ljXG4gICAgLy8gY29sbGVjdGlvbnNcbiAgICByb3V0ZXIuZ2V0KCcvY29sbGVjdGlvbnMvOmlkJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuY29sbGVjdGlvbi5maW5kT25lKTsgLy8gYmFzaWNcbiAgICByb3V0ZXIuZ2V0KCcvY29sbGVjdGlvbnMnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy5saXN0Q29sbGVjdGlvbnMpO1xuICAgIHJvdXRlci5wb3N0KCcvY29sbGVjdGlvbnMnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy5jb2xsZWN0aW9uLmFkZCk7IC8vIGJhc2ljXG4gICAgcm91dGVyLnB1dCgnL2NvbGxlY3Rpb25zLzppZCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLmNvbGxlY3Rpb24udXBkYXRlKTsgLy8gYmFzaWNcbiAgICByb3V0ZXIuZGVsZXRlKCcvY29sbGVjdGlvbnMvOmlkJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuY29sbGVjdGlvbi5yZW1vdmUpOyAvLyBiYXNpY1xuICAgIC8vIGJvb2tzXG4gICAgcm91dGVyLmdldCgnL2Jvb2tzLzpib29rJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuZmluZEJvb2spO1xuICAgIHJvdXRlci5nZXQoJy9ib29rcy86Ym9vay9jb250ZW50JywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMucmVzb2x2ZUJvb2tDb250ZW50KTtcbiAgICByb3V0ZXIuZ2V0KCcvYm9va3MnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy5saXN0Qm9va3MpO1xuICAgIC8vIHJvdXRlci5wb3N0KCcvYm9va3MnLCBhdXRoZW50aWNhdGVBZG1pbiwgZW5kcG9pbnRzLmJvb2suYWRkKSAvLyBiYXNpY1xuICAgIHJvdXRlci5wb3N0KCcvYm9va3MnLCBhdXRoZW50aWNhdGVBZG1pbiwgdXBsb2FkLnNpbmdsZShGT1JNX0RBVEFfRklMRV9LRVkpLCBtaWRkbGV3YXJlLmxvZ0ZpbGUsIGVuZHBvaW50cy5hZGRCb29rKTsgLy8g5aSE55CG5paH5Lu2XG4gICAgcm91dGVyLnB1dCgnL2Jvb2tzLzpib29rJywgYXV0aGVudGljYXRlQWRtaW4sIGVuZHBvaW50cy5lZGl0Qm9va01ldGEpO1xuICAgIHJvdXRlci5kZWxldGUoJy9ib29rcy86Ym9vaycsIGF1dGhlbnRpY2F0ZUFkbWluLCBlbmRwb2ludHMucmVtb3ZlQm9vayk7XG4gICAgLy8gdGFnc1xuICAgIHJvdXRlci5nZXQoJy90YWdzLzppZCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLnRhZy5maW5kT25lKTsgLy8gYmFzaWNcbiAgICByb3V0ZXIuZ2V0KCcvdGFncycsIGF1dGhlbnRpY2F0ZVB1YmxpYywgZW5kcG9pbnRzLnRhZy5saXN0KTsgLy8gYmFzaWNcbiAgICByb3V0ZXIucG9zdCgnL3RhZ3MnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy50YWcuYWRkKTsgLy8gYmFzaWNcbiAgICByb3V0ZXIucHV0KCcvdGFncy86aWQnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy50YWcudXBkYXRlKTsgLy8gYmFzaWNcbiAgICByb3V0ZXIuZGVsZXRlKCcvdGFncy86aWQnLCBhdXRoZW50aWNhdGVQdWJsaWMsIGVuZHBvaW50cy50YWcucmVtb3ZlKTsgLy8gYmFzaWNcbiAgICAvLyB1c2Vyc1xuICAgIHJvdXRlci5nZXQoJy91c2VycycsIGF1dGhlbnRpY2F0ZUFkbWluLCBlbmRwb2ludHMudXNlci5saXN0KTsgLy8gYmFzaWNcbiAgICByb3V0ZXIucG9zdCgnL3VzZXJzJywgYXV0aGVudGljYXRlUHVibGljLCBlbmRwb2ludHMuYWRkVXNlcik7XG4gICAgLy8gdXNlclxuICAgIHJvdXRlci5nZXQoJy91c2VyL3Byb2ZpbGUnLCBhdXRoZW50aWNhdGVQcml2YXRlLCBlbmRwb2ludHMuZmluZFVzZXIpO1xuICAgIHJvdXRlci5nZXQoJy91c2VyL2Jvb2tzL3NoZWxmJywgYXV0aGVudGljYXRlUHJpdmF0ZSwgZW5kcG9pbnRzLmxpc3RTaGVsZkJvb2tzKTtcbiAgICAvLyBwcm9ncmVzc1xuICAgIHJvdXRlci5nZXQoJy91c2VyL2Jvb2tzLzpib29rL3Byb2dyZXNzJywgYXV0aGVudGljYXRlUHJpdmF0ZSwgZW5kcG9pbnRzLmdldFJlYWRpbmdQcm9ncmVzcyk7XG4gICAgcm91dGVyLnB1dCgnL3VzZXIvYm9va3MvOmJvb2svcHJvZ3Jlc3MnLCBhdXRoZW50aWNhdGVQcml2YXRlLCBlbmRwb2ludHMuc2V0UmVhZGluZ1Byb2dyZXNzKTtcbiAgICAvLyBmaWxlXG4gICAgcm91dGVyLmdldCgnL2ZpbGVzLzpmaWxlJywgYXV0aGVudGljYXRlQWRtaW4sIGVuZHBvaW50cy5yZWFkRmlsZSk7XG4gICAgcm91dGVyLmRlbGV0ZSgnL2ZpbGVzLzpmaWxlJywgYXV0aGVudGljYXRlQWRtaW4sIGVuZHBvaW50cy5kZWxGaWxlKTtcbiAgICAvLyBhdXRoXG4gICAgcm91dGVyLnBvc3QoJy9hdXRoJywgYXV0aGVudGljYXRlUHVibGljLCBtaWRkbGV3YXJlLmF1dGguYmFzaWNBdXRoKTtcbiAgICByb3V0ZXIuZ2V0KCcvYXV0aCcsIGF1dGhlbnRpY2F0ZVB1YmxpYywgbWlkZGxld2FyZS5hdXRoLmNoZWNrKTtcbiAgICByb3V0ZXIucHV0KCcvYXV0aC9yZXZva2UnLCBhdXRoZW50aWNhdGVQdWJsaWMsIG1pZGRsZXdhcmUuYXV0aC5yZXZva2UpO1xuICAgIHJldHVybiByb3V0ZXI7XG59XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBzZXR1cEFwaUFwcCgpIHtcbiAgICBjb25zdCBhcGlBcHAgPSBleHByZXNzKCk7XG4gICAgYXBpQXBwLnVzZShhcGlSb3V0ZXMoKSk7XG4gICAgYXBpQXBwLnVzZShtaWRkbGV3YXJlLmhhbmRsZUFwaU5vdEZvdW5kKTtcbiAgICBhcGlBcHAudXNlKG1pZGRsZXdhcmUuaGFuZGxlSlNPTlJlc3BvbnNlKTtcbiAgICBhcGlBcHAudXNlKG1pZGRsZXdhcmUuaGFuZGxlRXJyb3IpO1xuICAgIHJldHVybiBhcGlBcHA7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcm91dGVzL2FwaS1yb3V0ZXMudHNcbiAqKi8iLCJpbXBvcnQgcGFyc2VDb250ZXh0IGZyb20gJy4vcGFyc2UtY29udGV4dCc7XG5pbXBvcnQgYXV0aCBmcm9tICcuL2F1dGgnO1xuaW1wb3J0IHJlcXVpcmVQZXJtaXNzaW9uc09mIGZyb20gJy4vcmVxdWlyZS1wZXJtaXNzaW9ucy1vZic7XG5pbXBvcnQgaGFuZGxlRXJyb3IgZnJvbSAnLi9oYW5kbGUtZXJyb3InO1xuaW1wb3J0IGhhbmRsZUpTT05SZXNwb25zZSBmcm9tICcuL2hhbmRsZS1qc29uLXJlc3BvbnNlJztcbmltcG9ydCBsb2dGaWxlIGZyb20gJy4vbG9nLWZpbGUnO1xuaW1wb3J0IHByZXBhcmVBcGkgZnJvbSAnLi9wcmVwYXJlLWFwaSc7XG5pbXBvcnQgaGFuZGxlQXBpTm90Rm91bmQgZnJvbSAnLi9oYW5kbGUtYXBpLW5vdC1mb3VuZCc7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgcGFyc2VDb250ZXh0LCBhdXRoLCByZXF1aXJlUGVybWlzc2lvbnNPZixcbiAgICBoYW5kbGVFcnJvciwgaGFuZGxlSlNPTlJlc3BvbnNlLCBsb2dGaWxlLCBwcmVwYXJlQXBpLFxuICAgIGhhbmRsZUFwaU5vdEZvdW5kXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFyc2VDb250ZXh0KHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgaWYgKHJlcS5zZXNzaW9uLnVzZXIpIHtcbiAgICAgICAgcmVxLmNvbnRleHQgPSB7XG4gICAgICAgICAgICB1c2VyOiBfLm9taXQocmVxLnNlc3Npb24udXNlciwgWydwYXNzd29yZCcsICdkYXRlQ3JlYXRlZCcsICdlbWFpbCddKVxuICAgICAgICB9O1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgcmVxLmNvbnRleHQgPSB7XG4gICAgICAgICAgICB1c2VyOiB7XG4gICAgICAgICAgICAgICAgcm9sZTogJ3Zpc2l0b3InXG4gICAgICAgICAgICB9XG4gICAgICAgIH07XG4gICAgfVxuICAgIG5leHQoKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL3BhcnNlLWNvbnRleHQudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJsb2Rhc2hcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImxvZGFzaFwiXG4gKiogbW9kdWxlIGlkID0gMTBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBlcnJvcnMgZnJvbSAnLi4vZXJyb3JzJztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IE1vZGVsIGZyb20gJy4uL21vZGVscy9tb2RlbCc7XG5pbXBvcnQgaHVtcHMgZnJvbSAnaHVtcHMnO1xuaW1wb3J0ICogYXMgc2NoZW1hcyBmcm9tICcuLi9kYXRhL3NjaGVtYXMnO1xuZXhwb3J0IGZ1bmN0aW9uIGJhc2ljQXV0aChyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHVzZXIgPSBuZXcgTW9kZWwoc2NoZW1hcy51c2VyKTtcbiAgICBjb25zdCBsb2dpbiA9IHJlcS5ib2R5LmxvZ2luID8gcmVxLmJvZHkubG9naW4udG9Mb3dlckNhc2UoKSA6IHVuZGVmaW5lZDtcbiAgICBjb25zdCBwYXNzd29yZCA9IHJlcS5ib2R5LnBhc3N3b3JkO1xuICAgIGlmICh0eXBlb2YgbG9naW4gPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIG5leHQobmV3IGVycm9ycy5WYWxpZGF0aW9uRXJyb3IoaTE4bignZXJyb3JzLnZhbGlkYXRpb24ucHJlQ2hlY2subWlzc1JlcXVpcmVkRmllbGRzJywgJ2xvZ2luJykpKTtcbiAgICB9XG4gICAgaWYgKHR5cGVvZiBwYXNzd29yZCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgbmV4dChuZXcgZXJyb3JzLlZhbGlkYXRpb25FcnJvcihpMThuKCdlcnJvcnMudmFsaWRhdGlvbi5wcmVDaGVjay5taXNzUmVxdWlyZWRGaWVsZHMnLCAncGFzc3dvcmQnKSkpO1xuICAgIH1cbiAgICBjb25zdCBxdWVyeSA9IHsgJG9yOiBbeyB1c2VybmFtZTogbG9naW4sIHBhc3N3b3JkIH0sIHsgZW1haWw6IGxvZ2luLCBwYXNzd29yZCB9XSB9O1xuICAgIHVzZXIuZmluZE9uZShxdWVyeSkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICByZXEuc2Vzc2lvbi51c2VyID0gaHVtcHMuY2FtZWxpemVLZXlzKHJlc3VsdCk7XG4gICAgICAgIHJlcS5hcGlSZXN1bHRzID0gUHJvbWlzZS5yZXNvbHZlKHsgb2s6IDEgfSk7XG4gICAgICAgIG5leHQoKTtcbiAgICB9LCBlcnJvciA9PiB7XG4gICAgICAgIG5leHQobmV3IGVycm9ycy5VbmF1dGhvcml6ZWRFcnJvcihpMThuKCdlcnJvcnMubWlkZGxld2FyZS5hdXRoLndyb25nQ29tYmluYXRpb24nKSkpO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGNoZWNrKHJlcSwgcmVzKSB7XG4gICAgcmVzLnNlbmQoaHVtcHMuZGVjYW1lbGl6ZUtleXMocmVxLmNvbnRleHQudXNlcikpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJldm9rZShyZXEsIHJlcykge1xuICAgIHJlcS5zZXNzaW9uLmRlc3Ryb3koKTtcbiAgICByZXMuc3RhdHVzKDIwNCkuc2VuZChudWxsKTtcbn1cbmV4cG9ydCBkZWZhdWx0IHsgYmFzaWNBdXRoLCBjaGVjaywgcmV2b2tlIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvbWlkZGxld2FyZS9hdXRoLnRzXG4gKiovIiwiaW1wb3J0IE5vdEZvdW5kRXJyb3IgZnJvbSAnLi9ub3QtZm91bmQtZXJyb3InO1xuaW1wb3J0IFZhbGlkYXRpb25FcnJvciBmcm9tICcuL3ZhbGlkYXRpb24tZXJyb3InO1xuaW1wb3J0IEJhZFJlcXVlc3RFcnJvciBmcm9tICcuL2JhZC1yZXF1ZXN0LWVycm9yJztcbmltcG9ydCBJbnRlcm5hbFNlcnZlckVycm9yIGZyb20gJy4vaW50ZXJuYWwtc2VydmVyLWVycm9yJztcbmltcG9ydCBOb1Blcm1pc3Npb25FcnJvciBmcm9tICcuL25vLXBlcm1pc3Npb24tZXJyb3InO1xuaW1wb3J0IFVuYXV0aG9yaXplZEVycm9yIGZyb20gJy4vdW5hdXRob3JpemVkLWVycm9yJztcbmltcG9ydCBSZXF1ZXN0RW50aXR5VG9vTGFyZ2VFcnJvciBmcm9tICcuL3JlcXVlc3QtdG9vLWxhcmdlLWVycm9yJztcbmltcG9ydCBVbnN1cHBvcnRlZE1lZGlhVHlwZUVycm9yIGZyb20gJy4vdW5zdXBwb3J0ZWQtZmlsZS10eXBlLWVycm9yJztcbmltcG9ydCBFbWFpbEVycm9yIGZyb20gJy4vZW1haWwtZXJyb3InO1xuaW1wb3J0IE1ldGhvZE5vdEFsbG93ZWRFcnJvciBmcm9tICcuL21ldGhvZC1ub3QtYWxsb3dlZC1lcnJvcic7XG5pbXBvcnQgVG9vTWFueVJlcXVlc3RzRXJyb3IgZnJvbSAnLi90b28tbWFueS1yZXF1ZXN0cy1lcnJvcic7XG5pbXBvcnQgVG9rZW5SZXZvY2F0aW9uRXJyb3IgZnJvbSAnLi90b2tlbi1yZXZvY2F0aW9uLWVycm9yJztcbmltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBOb3RGb3VuZEVycm9yLFxuICAgIFZhbGlkYXRpb25FcnJvcixcbiAgICBCYWRSZXF1ZXN0RXJyb3IsXG4gICAgSW50ZXJuYWxTZXJ2ZXJFcnJvcixcbiAgICBOb1Blcm1pc3Npb25FcnJvcixcbiAgICBVbmF1dGhvcml6ZWRFcnJvcixcbiAgICBSZXF1ZXN0RW50aXR5VG9vTGFyZ2VFcnJvcixcbiAgICBVbnN1cHBvcnRlZE1lZGlhVHlwZUVycm9yLFxuICAgIEVtYWlsRXJyb3IsXG4gICAgTWV0aG9kTm90QWxsb3dlZEVycm9yLFxuICAgIFRvb01hbnlSZXF1ZXN0c0Vycm9yLFxuICAgIFRva2VuUmV2b2NhdGlvbkVycm9yLFxuICAgIEdlbmVyaWNFcnJvcixcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTm90Rm91bmRFcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnTm90Rm91bmRFcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA0MDQ7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy9ub3QtZm91bmQtZXJyb3IudHNcbiAqKi8iLCJleHBvcnQgZGVmYXVsdCBjbGFzcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG5hbWUpIHtcbiAgICAgICAgdGhpcy5uYW1lID0gbmFtZSB8fCAnR2VuZXJpY0Vycm9yJztcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNTAwO1xuICAgICAgICB0aGlzLm1lc3NhZ2UgPSBtZXNzYWdlO1xuICAgICAgICB0aGlzLnN0YWNrID0gbmV3IEVycm9yKCkuc3RhY2s7XG4gICAgICAgIHRoaXMudHlwZSA9IHRoaXMubmFtZTtcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL2dlbmVyaWMtZXJyb3IudHNcbiAqKi8iLCJpbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBWYWxpZGF0aW9uRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UsIG9mZmVuZGluZ1Byb3BlcnR5KSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdWYWxpZGF0aW9uRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNDIyO1xuICAgICAgICBpZiAob2ZmZW5kaW5nUHJvcGVydHkpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcGVydHkgPSBvZmZlbmRpbmdQcm9wZXJ0eTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvdmFsaWRhdGlvbi1lcnJvci50c1xuICoqLyIsImltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEJhZFJlcXVlc3RFcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSwgY29kZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnQmFkUmVxdWVzdEVycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDQwMDtcbiAgICAgICAgaWYgKGNvZGUpIHtcbiAgICAgICAgICAgIHRoaXMuY29kZSA9IGNvZGU7XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL2JhZC1yZXF1ZXN0LWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgSW50ZXJuYWxTZXJ2ZXJFcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnSW50ZXJuYWxTZXJ2ZXJFcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA1MDA7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy9pbnRlcm5hbC1zZXJ2ZXItZXJyb3IudHNcbiAqKi8iLCJpbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBOb1Blcm1pc3Npb25FcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnTm9QZXJtaXNzaW9uRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNDAzO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvbm8tcGVybWlzc2lvbi1lcnJvci50c1xuICoqLyIsImltcG9ydCBHZW5lcmljRXJyb3IgZnJvbSAnLi9nZW5lcmljLWVycm9yJztcbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFVuYXV0aG9yaXplZEVycm9yIGV4dGVuZHMgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdVbmF1dGhvcml6ZWRFcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA0MDE7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy91bmF1dGhvcml6ZWQtZXJyb3IudHNcbiAqKi8iLCJpbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBSZXF1ZXN0RW50aXR5VG9vTGFyZ2VFcnJvciBleHRlbmRzIEdlbmVyaWNFcnJvciB7XG4gICAgY29uc3RydWN0b3IobWVzc2FnZSkge1xuICAgICAgICBzdXBlcihtZXNzYWdlLCAnUmVxdWVzdEVudGl0eVRvb0xhcmdlRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNDEzO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvcmVxdWVzdC10b28tbGFyZ2UtZXJyb3IudHNcbiAqKi8iLCJpbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBVbnN1cHBvcnRlZEZpbGVUeXBlRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ1Vuc3VwcG9ydGVkRmlsZVR5cGVFcnJvcicpO1xuICAgICAgICB0aGlzLnN0YXR1c0NvZGUgPSA0MTU7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Vycm9ycy91bnN1cHBvcnRlZC1maWxlLXR5cGUtZXJyb3IudHNcbiAqKi8iLCJpbXBvcnQgR2VuZXJpY0Vycm9yIGZyb20gJy4vZ2VuZXJpYy1lcnJvcic7XG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFbWFpbEVycm9yIGV4dGVuZHMgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdFbWFpbEVycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDUwMDtcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL2VtYWlsLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgTWV0aG9kTm90QWxsb3dlZEVycm9yIGV4dGVuZHMgR2VuZXJpY0Vycm9yIHtcbiAgICBjb25zdHJ1Y3RvcihtZXNzYWdlKSB7XG4gICAgICAgIHN1cGVyKG1lc3NhZ2UsICdNZXRob2ROb3RBbGxvd2VkRXJyb3InKTtcbiAgICAgICAgdGhpcy5zdGF0dXNDb2RlID0gNDA1O1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lcnJvcnMvbWV0aG9kLW5vdC1hbGxvd2VkLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9vTWFueVJlcXVlc3RzRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ1Rvb01hbnlSZXF1ZXN0c0Vycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDQyOTtcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL3Rvby1tYW55LXJlcXVlc3RzLWVycm9yLnRzXG4gKiovIiwiaW1wb3J0IEdlbmVyaWNFcnJvciBmcm9tICcuL2dlbmVyaWMtZXJyb3InO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgVG9rZW5SZXZvY2F0aW9uRXJyb3IgZXh0ZW5kcyBHZW5lcmljRXJyb3Ige1xuICAgIGNvbnN0cnVjdG9yKG1lc3NhZ2UpIHtcbiAgICAgICAgc3VwZXIobWVzc2FnZSwgJ1Rva2VuUmV2b2NhdGlvbkVycm9yJyk7XG4gICAgICAgIHRoaXMuc3RhdHVzQ29kZSA9IDUwMztcbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvZXJyb3JzL3Rva2VuLXJldm9jYXRpb24tZXJyb3IudHNcbiAqKi8iLCIvKipcbiAqIHJlZmVyZW5jZWQgZ2hvc3QgaTE4bi5qcywgaXQncyBhIHNpbXBsaWZpZWQgdmVyc2lvblxuICogYW5kIEkgdXNlZCBqcyB0byBzdG9yZSBsb2NhbCB0cmFuc2xhdGlvbnMgaW5zdGVhZCBvZiBqc29uXG4gKi9cbmltcG9ydCBjblRyYW5zbGF0aW9ucyBmcm9tICcuLi90cmFuc2xhdGlvbnMvY24nO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmZ1bmN0aW9uIGFkZFBhZGRpbmcoc3RyKSB7XG4gICAgaWYgKCFzdHIpIHtcbiAgICAgICAgcmV0dXJuICcnO1xuICAgIH1cbiAgICBpZiAoZXNjYXBlKHN0ci5zdWJzdHIoLTEpKS5pbmRleE9mKCcldScpICE9PSAwKSB7XG4gICAgICAgIHJldHVybiBgICR7c3RyfSBgO1xuICAgIH1cbiAgICByZXR1cm4gc3RyO1xufVxuZnVuY3Rpb24gZ2V0TWF0Y2hpbmdTdHJpbmcobXNnUGF0aCkge1xuICAgIGxldCBtYXRjaGluZ1N0cmluZyA9IGNuVHJhbnNsYXRpb25zO1xuICAgIGNvbnN0IHBhdGggPSBtc2dQYXRoLnNwbGl0KCcuJyk7XG4gICAgZm9yIChsZXQgaSA9IDA7IGkgPCBwYXRoLmxlbmd0aDsgaSsrKSB7XG4gICAgICAgIGlmIChtYXRjaGluZ1N0cmluZ1twYXRoW2ldXSkge1xuICAgICAgICAgICAgbWF0Y2hpbmdTdHJpbmcgPSBtYXRjaGluZ1N0cmluZ1twYXRoW2ldXTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1hdGNoaW5nU3RyaW5nID0gbnVsbDtcbiAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBtYXRjaGluZ1N0cmluZztcbn1cbmZ1bmN0aW9uIGFkZFB1bmMoc3RyLCBsYW5nKSB7XG4gICAgLy8gdG9kbzogbGFuZ1xuICAgIHJldHVybiBgJHtzdHJ977yBYDtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGkxOG4obXNnUGF0aCwgdmFsdWUpIHtcbiAgICBsZXQgbWF0Y2hpbmdTdHJpbmcgPSBnZXRNYXRjaGluZ1N0cmluZyhtc2dQYXRoKTtcbiAgICBpZiAoXy5pc051bGwobWF0Y2hpbmdTdHJpbmcpKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1VuYWJsZSB0byBmaW5kIG1hdGNoaW5nIHBhdGggWycgKyBtc2dQYXRoICsgJ10gaW4gbG9jYWxlIGZpbGUuXFxuJyk7XG4gICAgICAgIG1hdGNoaW5nU3RyaW5nID0gJ2kxOG4gZXJyb3I6IHBhdGggXCInICsgbXNnUGF0aCArICdcIiB3YXMgbm90IGZvdW5kLic7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBjb25zdCBwbGFjZWhvbGRlckluZGV4ID0gbWF0Y2hpbmdTdHJpbmcuaW5kZXhPZigne3ZhbHVlfScpO1xuICAgICAgICBpZiAocGxhY2Vob2xkZXJJbmRleCAhPT0gLTEpIHtcbiAgICAgICAgICAgIGNvbnN0IGJlZm9yZSA9IG1hdGNoaW5nU3RyaW5nLnN1YnN0cmluZygwLCBwbGFjZWhvbGRlckluZGV4KTtcbiAgICAgICAgICAgIGNvbnN0IGFmdGVyID0gbWF0Y2hpbmdTdHJpbmcuc3Vic3RyKHBsYWNlaG9sZGVySW5kZXggKyA3KTtcbiAgICAgICAgICAgIGxldCBtYXRjaGluZ1ZhbHVlID0gJyc7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgICAgIG1hdGNoaW5nVmFsdWUgPSBnZXRNYXRjaGluZ1N0cmluZyhgY29tbW9uLnRlcm1zLiR7dmFsdWV9YCk7XG4gICAgICAgICAgICAgICAgaWYgKF8uaXNOdWxsKG1hdGNoaW5nVmFsdWUpKSB7XG4gICAgICAgICAgICAgICAgICAgIG1hdGNoaW5nVmFsdWUgPSB2YWx1ZTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbWF0Y2hpbmdWYWx1ZSA9IGFkZFBhZGRpbmcobWF0Y2hpbmdWYWx1ZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBtYXRjaGluZ1N0cmluZyA9IGFkZFB1bmMoYmVmb3JlICsgbWF0Y2hpbmdWYWx1ZSArIGFmdGVyKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG1hdGNoaW5nU3RyaW5nID0gYWRkUHVuYyhtYXRjaGluZ1N0cmluZyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIG1hdGNoaW5nU3RyaW5nLnRyaW0oKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci91dGlscy9pMThuLnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQge1xuICAgIGNvbW1vbjoge1xuICAgICAgICB0ZXJtczoge1xuICAgICAgICAgICAgaWQ6ICdJRCcsXG4gICAgICAgICAgICB1c2VybmFtZTogJ+eUqOaIt+WQjScsXG4gICAgICAgICAgICBwYXNzd29yZDogJ+WvhueggScsXG4gICAgICAgICAgICBwZXJjZW50YWdlOiAn6L+b5bqm55m+5YiG5q+UJyxcbiAgICAgICAgICAgIGVtYWlsOiAn6YKu566xJyxcbiAgICAgICAgICAgIGxvZ2luOiAn55m75b2V6aG5JyxcbiAgICAgICAgICAgIGRlc2NyaXB0aW9uOiAn5o+P6L+wJyxcbiAgICAgICAgICAgIG5hbWU6ICflkI3np7AnLFxuICAgICAgICAgICAgY3JlYXRvcjogJ+WIm+W7uuiAhScsXG4gICAgICAgICAgICB0aXRsZTogJ+agh+mimCcsXG4gICAgICAgICAgICBwcm9ncmVzczogJ+i/m+W6picsXG4gICAgICAgICAgICB1c2VyOiAn55So5oi3JyxcbiAgICAgICAgICAgIGFkbWluOiAn566h55CG5ZGYJyxcbiAgICAgICAgICAgIGZpbGU6ICfmlofku7YnLFxuICAgICAgICAgICAgZmlsZXM6ICfmlofku7YnLFxuICAgICAgICAgICAgYm9vazogJ+S5puexjScsXG4gICAgICAgICAgICBib29rczogJ+S5puexjSdcbiAgICAgICAgfSxcbiAgICB9LFxuICAgIGVycm9yczoge1xuICAgICAgICB2YWxpZGF0aW9uOiB7XG4gICAgICAgICAgICB2YWx1ZUxpbWl0OiB7XG4gICAgICAgICAgICAgICAgbm90U3RyaW5nOiAne3ZhbHVlfeS4jeaYr+Wtl+espuS4sicsXG4gICAgICAgICAgICAgICAgc3RyaW5nT25seTogJ+i+k+WFpemhueexu+Wei+WPquiDveS4uuWtl+espuS4sicsXG4gICAgICAgICAgICAgICAgYWxwaGFudW1lcmljOiAne3ZhbHVlfeWPquiDveS4uuWtl+avjeaIluaVsOWtlycsXG4gICAgICAgICAgICAgICAgdW5kZWZpbmVkOiAne3ZhbHVlfeacquWumuS5iScsXG4gICAgICAgICAgICAgICAgaW52YWxpZEZvcm1hdDogJ3t2YWx1ZX3moLzlvI/kuI3lr7knLFxuICAgICAgICAgICAgICAgIG5vUHVyZU51bWJlcjogJ3t2YWx1ZX3kuI3og73kuLrnuq/mlbDlrZcnLFxuICAgICAgICAgICAgICAgIG9ubHlTdGFydFdpdGhMZXR0ZXJzOiAne3ZhbHVlfeWPquiDveS7peWtl+avjeW8gOWktCcsXG4gICAgICAgICAgICAgICAgbGVuZ3RoOiAn6ZW/5bqm5LiN5Yy56YWNJyxcbiAgICAgICAgICAgICAgICBtaW5MZW5ndGg6ICd7dmFsdWV96ZW/5bqm5LiN6LazJyxcbiAgICAgICAgICAgICAgICBtYXhMZW5ndGg6ICd7dmFsdWV96LaF5Ye65pyA5aSn6ZW/5bqmJyxcbiAgICAgICAgICAgICAgICB1c2VybmFtZToge1xuICAgICAgICAgICAgICAgICAgICBhbGxvd2VkQ2hhcnM6ICfnlKjmiLflkI3lj6rog73ljIXlkKvlrZfmr43vvIzmlbDlrZflj4rku6XkuIvlrZfnrKYgXCItXCIsXCJfXCInLFxuICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgcHJlQ2hlY2s6IHtcbiAgICAgICAgICAgICAgICBlbXB0eU9iamVjdDogJ+aPkOS6pOaVsOaNruS4jeiDveS4uuepuicsXG4gICAgICAgICAgICAgICAgbWlzc1JlcXVpcmVkRmllbGRzOiAne3ZhbHVlfeS4uuW/heWhq+mhuScsXG4gICAgICAgICAgICAgICAgdW5zdXBwb3J0ZWRJbnB1dDogJ+WPkeeOsOacquefpeeahOi+k+WFpemhuXt2YWx1ZX0nLFxuICAgICAgICAgICAgICAgIGlucHV0RW1wdHk6ICd7dmFsdWV96L6T5YWl5LiN6IO95Li656m6JyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIGFwaToge1xuICAgICAgICAgICAgZ2VuZXJhbDoge1xuICAgICAgICAgICAgICAgIG5vdEZvdW5kOiAne3ZhbHVlfeacquaJvuWIsCcsXG4gICAgICAgICAgICAgICAgbm90Rm91bmRJbjogJ+WcqHt2YWx1ZX3kuK3mnKrmib7liLAnLFxuICAgICAgICAgICAgICAgIGV4aXN0czogJ3t2YWx1ZX3lt7LlrZjlnKgnLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIGF1dGg6IHtcbiAgICAgICAgICAgICAgICBuZWVkUGVybWlzc2lvbnNPZjogJ+mcgOimgSB7dmFsdWV9IOadg+mZkCcsXG4gICAgICAgICAgICAgICAgbG9naW5SZXF1aXJlZDogJ+mcgOimgeeZu+W9lScsXG4gICAgICAgICAgICB9LFxuICAgICAgICB9LFxuICAgICAgICBzY2hlbWE6IHtcbiAgICAgICAgICAgIHVuaXF1ZTogJ3t2YWx1ZX3lt7LlrZjlnKgnXG4gICAgICAgIH0sXG4gICAgICAgIG1pZGRsZXdhcmU6IHtcbiAgICAgICAgICAgIGF1dGg6IHtcbiAgICAgICAgICAgICAgICBhY2Nlc3NEZW5pZWQ6ICforr/pl67ooqvnpoHmraInLFxuICAgICAgICAgICAgICAgIHdyb25nUGFzc3dvcmQ6ICflr4bnoIHplJnor68nLFxuICAgICAgICAgICAgICAgIHdyb25nQ29tYmluYXRpb246ICfnlKjmiLflkI3miJblr4bnoIHplJnor68nXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAgb2F1dGg6IHtcbiAgICAgICAgICAgICAgICB0b2tlbkV4cGlyZWQ6ICd0b2tlbiDov4fmnJ8nLFxuICAgICAgICAgICAgfSxcbiAgICAgICAgICAgIHNwYW1wcmV2ZW50aW9uOiB7XG4gICAgICAgICAgICAgICAgdG9vTWFueUF0dGVtcHRzOiAn5oKo55qE6K6/6Zeu6L+H5LqO6aKR57mBJyxcbiAgICAgICAgICAgICAgICBub1VzZXJuYW1lOiAn5peg55So5oi35ZCNJyxcbiAgICAgICAgICAgICAgICBub1Bhc3N3b3JkOiAn5peg5a+G56CBJyxcbiAgICAgICAgICAgIH0sXG4gICAgICAgIH0sXG4gICAgICAgIG1haWw6IHtcbiAgICAgICAgICAgIGZhaWxlZFNlbmRpbmdFbWFpbDogJ+mCruS7tuWPkemAgeWksei0pScsXG4gICAgICAgIH0sXG4gICAgICAgIGdlbmVyYWw6IHtcbiAgICAgICAgICAgIGFuRXJyb3JPY2N1cnJlZDogJ+WPkeeUn+mUmeivrycsXG4gICAgICAgICAgICB1bmtub3duRXJyb3JPY2N1cnJlZDogJ+WPkeeUn+acquefpemUmeivrycsXG4gICAgICAgICAgICBub3RGb3VuZDogJ3t2YWx1ZX3mnKrmib7liLAnLFxuICAgICAgICB9LFxuICAgIH0sXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3RyYW5zbGF0aW9ucy9jbi50c1xuICoqLyIsImltcG9ydCBkYiwgeyBlbWJlZFJlZiwgY29ubmVjdCB9IGZyb20gJy4vZGF0YWJhc2UnO1xuaW1wb3J0IGVycm9ycyBmcm9tICcuLi9lcnJvcnMnO1xuaW1wb3J0IGkxOG4gZnJvbSAnLi4vdXRpbHMvaTE4bic7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHZhbGlkYXRlIGZyb20gJy4vdmFsaWRhdGUnO1xuaW1wb3J0IG91dHB1dEVtcHR5RW50aXR5IGZyb20gJy4vb3V0cHV0LWVtcHR5LWVudGl0eSc7XG5pbXBvcnQgcGFnaW5hdGUgZnJvbSAnLi9wYWdpbmF0ZSc7XG5pbXBvcnQgeyBub3RGb3VuZEluIH0gZnJvbSAnLi4vaGVscGVycyc7XG5jbGFzcyBNb2RlbCB7XG4gICAgc3RhdGljIHBhcnNlUXVlcnkoaWRPclF1ZXJ5KSB7XG4gICAgICAgIGlmICh0eXBlb2YgaWRPclF1ZXJ5ID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdQYXJhbSBpZE9yUXVlcnkgaXMgdW5kZWZpbmVkIScpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0eXBlb2YgaWRPclF1ZXJ5ID09PSAnc3RyaW5nJ1xuICAgICAgICAgICAgPyB7IF9pZDogaWRPclF1ZXJ5IH1cbiAgICAgICAgICAgIDogaWRPclF1ZXJ5O1xuICAgIH1cbiAgICBjb25zdHJ1Y3RvcihzY2hlbWEpIHtcbiAgICAgICAgdGhpcy5fc2NoZW1hID0gc2NoZW1hO1xuICAgICAgICB0aGlzLl90YWJsZU5hbWUgPSBzY2hlbWEubmFtZTtcbiAgICB9XG4gICAgb3V0cHV0RW1wdHkoaWQpIHtcbiAgICAgICAgcmV0dXJuIG91dHB1dEVtcHR5RW50aXR5KHRoaXMuX3NjaGVtYS5maWVsZHMsIGlkKTtcbiAgICB9XG4gICAgZmluZE9uZShpZE9yUXVlcnksIHJhdykge1xuICAgICAgICBjb25zdCBxdWVyeSA9IE1vZGVsLnBhcnNlUXVlcnkoaWRPclF1ZXJ5KTtcbiAgICAgICAgcmV0dXJuIHRoaXMubGlzdCh7IHJhdywgZGlzYWJsZVBhZ2luYXRpb246IHRydWUsIHF1ZXJ5IH0pLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGVudGl0eSA9IHJlc3VsdFswXTtcbiAgICAgICAgICAgIGlmICghZW50aXR5KSB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5vdEZvdW5kSW4odGhpcy5fc2NoZW1hLl9iYXNlVGFibGUpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBlbnRpdHk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsaXN0KG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IHJhdywgcGFnZSwgZGlzYWJsZVBhZ2luYXRpb24sIGZpbHRlciwgbWFwcGluZywgcXVlcnkgfSA9IG9wdGlvbnM7XG4gICAgICAgIHJldHVybiBjb25uZWN0KCkudGhlbihjb25uZWN0aW9uID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRvUXVlcnkgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgY29uc3QgbGlzdFJhdyA9IGxpc3RSYXdRdWVyeSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0aW9uLmNvbGxlY3Rpb24odGhpcy5fdGFibGVOYW1lKS5maW5kKGxpc3RSYXdRdWVyeSkudG9BcnJheSgpO1xuICAgICAgICAgICAgICAgIH07XG4gICAgICAgICAgICAgICAgY29uc3QgcmF3UmVzdWx0cyA9IGxpc3RSYXcocXVlcnkgfHwge30pO1xuICAgICAgICAgICAgICAgIGlmIChyYXcpIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJhd1Jlc3VsdHM7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gcmF3UmVzdWx0cy50aGVuKHJlc3VsdHMgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGVtYmVkUmVmKHJlc3VsdHMsIHRoaXMuX3NjaGVtYSk7XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH07XG4gICAgICAgICAgICByZXR1cm4gZG9RdWVyeSgpLnRoZW4oZW50aXRpZXMgPT4ge1xuICAgICAgICAgICAgICAgIGNvbnN0IG1vZGlmaWVkRW50aXRpZXMgPSBlbnRpdGllc1xuICAgICAgICAgICAgICAgICAgICAuZmlsdGVyKGZpbHRlciB8fCAoKCkgPT4gdHJ1ZSkpXG4gICAgICAgICAgICAgICAgICAgIC5tYXAobWFwcGluZyB8fCAoZW50aXR5ID0+IGVudGl0eSkpO1xuICAgICAgICAgICAgICAgIGNvbm5lY3Rpb24uY2xvc2UoKTtcbiAgICAgICAgICAgICAgICBpZiAoIWRpc2FibGVQYWdpbmF0aW9uKSB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBwYWdpbmF0ZShtb2RpZmllZEVudGl0aWVzLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBwYWdlOiBwYWdlIHx8IDFcbiAgICAgICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiBtb2RpZmllZEVudGl0aWVzO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBsaXN0UmF3KG9wdGlvbnMgPSB7fSkge1xuICAgICAgICBjb25zdCB7IGZpbHRlciwgbWFwcGluZywgcXVlcnkgfSA9IG9wdGlvbnM7XG4gICAgICAgIHJldHVybiB0aGlzLmxpc3Qoe1xuICAgICAgICAgICAgZGlzYWJsZVBhZ2luYXRpb246IHRydWUsXG4gICAgICAgICAgICByYXc6IHRydWUsXG4gICAgICAgICAgICBmaWx0ZXIsXG4gICAgICAgICAgICBtYXBwaW5nLFxuICAgICAgICAgICAgcXVlcnk6IHF1ZXJ5IHx8IHt9XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBhZGQoZGF0YSkge1xuICAgICAgICBjb25zdCBxdWVyeSA9ICgpID0+IHtcbiAgICAgICAgICAgIGxldCBkYXRhV2l0aElEID0gT2JqZWN0LmFzc2lnbih7fSwgZGF0YSwge1xuICAgICAgICAgICAgICAgIF9pZDogTWF0aC5yYW5kb20oKS50b0ZpeGVkKDgpLnN1YnN0cigyKSxcbiAgICAgICAgICAgICAgICBkYXRlX2NyZWF0ZWQ6IG5ldyBEYXRlKCkudG9TdHJpbmcoKVxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAvLyDmo4Dmn6XmmK/lkKbpnIDopoHnoa7orqTllK/kuIDmgKdcbiAgICAgICAgICAgIGNvbnN0IGRhdGFUb0NoZWNrID0gdGhpcy5fc2NoZW1hLmZpZWxkc1xuICAgICAgICAgICAgICAgIC5maWx0ZXIoZmllbGQgPT4gQm9vbGVhbihmaWVsZC51bmlxdWUpKVxuICAgICAgICAgICAgICAgIC5tYXAoZmllbGQgPT4gKHtcbiAgICAgICAgICAgICAgICBrZXk6IGZpZWxkLm5hbWUsXG4gICAgICAgICAgICAgICAgdmFsdWU6IGRhdGFbZmllbGQubmFtZV1cbiAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgICAgIC5maWx0ZXIoZmlsZWxkID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gQm9vbGVhbihmaWxlbGQudmFsdWUpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICBjb25zdCBleGVjID0gKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBjb25uZWN0KClcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4oY29ubmVjdGlvbiA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGNvbm5lY3Rpb24uY29sbGVjdGlvbih0aGlzLl90YWJsZU5hbWUpLmluc2VydChbZGF0YVdpdGhJRF0pO1xuICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgLy8g6L+H5ruk5Ye65ZKM5pWw5o2u5bqT5Lit5bey5a2Y5Zyo5pWw5o2u55u45Yy56YWN55qE6L6T5YWl6aG5XG4gICAgICAgICAgICBpZiAoZGF0YVRvQ2hlY2subGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgY2hlY2tpbmdSZXN1bHQgPSBQcm9taXNlXG4gICAgICAgICAgICAgICAgICAgIC5hbGwoZGF0YVRvQ2hlY2tcbiAgICAgICAgICAgICAgICAgICAgLm1hcChkYXRhSXRlbSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBkYlxuICAgICAgICAgICAgICAgICAgICAgICAgLmdldFJvd0J5TWF0Y2goeyBbZGF0YUl0ZW0ua2V5XTogZGF0YUl0ZW0udmFsdWUgfSwgdGhpcy5fdGFibGVOYW1lKVxuICAgICAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGlmIChyZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGRhdGFJdGVtO1xuICAgICAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHJlcy5maWx0ZXIociA9PiByICE9PSBmYWxzZSk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNoZWNraW5nUmVzdWx0LnRoZW4ocmVzID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKHJlcy5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgZXJyb3JzLkJhZFJlcXVlc3RFcnJvcihpMThuKCdlcnJvcnMuc2NoZW1hLnVuaXF1ZScsIHJlc1swXS5rZXkpKSk7XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIGV4ZWMoKTtcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIHJldHVybiBleGVjKCk7XG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiB1dGlscy5yZWR1Y2VUYXNrcyhbXG4gICAgICAgICAgICB2YWxpZGF0ZShkYXRhLCB0aGlzLl9zY2hlbWEpLFxuICAgICAgICAgICAgcXVlcnlcbiAgICAgICAgXSk7XG4gICAgfVxuICAgIHVwZGF0ZShpZE9yUXVlcnksIGRhdGEsIHVwZGF0ZUNvbmZpZyA9IHt9KSB7XG4gICAgICAgIGNvbnN0IHsgbXVsdGksIHVwc2VydCB9ID0gdXBkYXRlQ29uZmlnO1xuICAgICAgICBjb25zdCBxdWVyeSA9IE1vZGVsLnBhcnNlUXVlcnkoaWRPclF1ZXJ5KTtcbiAgICAgICAgY29uc3QgZG9RdWVyeSA9ICgpID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGRhdGEyID0gT2JqZWN0LmFzc2lnbih7fSwgZGF0YSwge1xuICAgICAgICAgICAgICAgIGRhdGVfdXBkYXRlZDogbmV3IERhdGUoKS50b1N0cmluZygpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNvbnN0IGV4ZWMgPSAoKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbm5lY3QoKVxuICAgICAgICAgICAgICAgICAgICAudGhlbihjb25uZWN0aW9uID0+IHtcbiAgICAgICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gY29ubmVjdGlvbi5jb2xsZWN0aW9uKHRoaXMuX3RhYmxlTmFtZSkudXBkYXRlKHF1ZXJ5LCB7ICRzZXQ6IGRhdGEyIH0sIHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHVwc2VydDogQm9vbGVhbih1cHNlcnQpLFxuICAgICAgICAgICAgICAgICAgICAgICAgbXVsdGk6IEJvb2xlYW4obXVsdGkpXG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgICAgICBjb25uZWN0aW9uLmNsb3NlKCk7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiByZXN1bHQ7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9O1xuICAgICAgICAgICAgaWYgKCF1cHNlcnQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gdGhpcy5maW5kT25lKGlkT3JRdWVyeSwgdHJ1ZSkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZXhlYygpO1xuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIGV4ZWMoKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHV0aWxzLnJlZHVjZVRhc2tzKFtcbiAgICAgICAgICAgIHZhbGlkYXRlKGRhdGEsIHRoaXMuX3NjaGVtYSwgdHJ1ZSksXG4gICAgICAgICAgICBkb1F1ZXJ5XG4gICAgICAgIF0pO1xuICAgIH1cbiAgICByZW1vdmUoaWRPclF1ZXJ5KSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5ID0gTW9kZWwucGFyc2VRdWVyeShpZE9yUXVlcnkpO1xuICAgICAgICByZXR1cm4gY29ubmVjdCgpXG4gICAgICAgICAgICAudGhlbihjb25uZWN0aW9uID0+IHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IGNvbm5lY3Rpb24uY29sbGVjdGlvbih0aGlzLl90YWJsZU5hbWUpLnJlbW92ZShxdWVyeSk7XG4gICAgICAgICAgICBjb25uZWN0aW9uLmNsb3NlKCk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0O1xuICAgICAgICB9KTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBNb2RlbDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9tb2RlbHMvbW9kZWwudHNcbiAqKi8iLCJpbXBvcnQgYXBwQ29uZmlnIGZyb20gJy4uLy4uL2FwcC5jb25maWcnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBvdXRwdXRFbXB0eUVudGl0eSBmcm9tICcuL291dHB1dC1lbXB0eS1lbnRpdHknO1xuaW1wb3J0IG1vbmdvZGIgZnJvbSAnbW9uZ29kYic7XG5jb25zdCBNb25nb0NsaWVudCA9IG1vbmdvZGIuTW9uZ29DbGllbnQ7XG5leHBvcnQgZnVuY3Rpb24gY29ubmVjdCgpIHtcbiAgICByZXR1cm4gTW9uZ29DbGllbnQuY29ubmVjdChgJHthcHBDb25maWcuZGF0YWJhc2UuaG9zdH0vJHthcHBDb25maWcuZGF0YWJhc2UubmFtZX1gKTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBnZXRSb3dCeUlkKGlkLCB0YWJsZSkge1xuICAgIHJldHVybiBnZXRSb3dCeU1hdGNoKHsgX2lkOiBpZCB9LCB0YWJsZSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZ2V0Um93QnlNYXRjaChtYXRjaCwgdGFibGUpIHtcbiAgICByZXR1cm4gY29ubmVjdCgpLnRoZW4oY29ubmVjdGlvbiA9PiB7XG4gICAgICAgIGNvbnN0IHJlc3VsdHMgPSBjb25uZWN0aW9uLmNvbGxlY3Rpb24odGFibGUpLmZpbmQobWF0Y2gpLnRvQXJyYXkoKTtcbiAgICAgICAgY29ubmVjdGlvbi5jbG9zZSgpO1xuICAgICAgICByZXR1cm4gcmVzdWx0cztcbiAgICB9KTtcbn1cbmNvbnN0IGdldFJlZkZpZWxkc1dpdGhJZHMgPSAocmF3UmVzdWx0LCBzY2hlbWEpID0+IHtcbiAgICByZXR1cm4gc2NoZW1hLmZpZWxkc1xuICAgICAgICAuZmlsdGVyKGZpZWxkID0+IHtcbiAgICAgICAgcmV0dXJuICh0eXBlb2YgZmllbGQucmVmICE9PSAndW5kZWZpbmVkJyk7XG4gICAgfSlcbiAgICAgICAgLm1hcChmaWVsZCA9PiB7XG4gICAgICAgIGxldCBpZHMgPSByYXdSZXN1bHRbZmllbGQubmFtZV07XG4gICAgICAgIC8vIOWwhiBpZHMg6YCa6YCa6L2s5o2i5Li65pWw57uEXG4gICAgICAgIC8vIOi/memHjOWMheaLrOacrOivpeS8oOaVsOe7hOWNtOW+l+WIsOWtl+espuS4suiiq+i9rOaNoueahOaDheWGtVxuICAgICAgICBpZiAoIUFycmF5LmlzQXJyYXkoaWRzKSkge1xuICAgICAgICAgICAgaWRzID0gW2lkc107XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGZpZWxkLCB7IGlkcyB9KTtcbiAgICB9KTtcbn07XG4vLyDlubbkuJTmt7vliqDnm7jlupTplJnor6/kv6Hmga9cbmNvbnN0IGhhbmRsZVJlZlJlc3VsdCA9IChyYXdSZWZSZXN1bHQsIHJlZlNjaGVtYSwgaWQpID0+IHtcbiAgICBpZiAodHlwZW9mIHJhd1JlZlJlc3VsdCA9PT0gJ29iamVjdCcpIHtcbiAgICAgICAgcmV0dXJuIHJhd1JlZlJlc3VsdDtcbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dEVtcHR5RW50aXR5KHJlZlNjaGVtYS5maWVsZHMsIGlkKTtcbn07XG5jb25zdCBkb2VzUmVmSGF2ZVJlZkluc2lkZSA9IChyZWYpID0+IHtcbiAgICByZXR1cm4gXy5maWx0ZXIocmVmLmZpZWxkcywgZmllbGQgPT4gQm9vbGVhbihmaWVsZC5yZWYpKS5sZW5ndGggIT09IDA7XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGVtYmVkUmVmKHJhd1Jlc3VsdHMsIHNjaGVtYSkge1xuICAgIGlmIChyYXdSZXN1bHRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKFtdKTtcbiAgICB9XG4gICAgLy8g6I635Y+WIHJlZiDmlbDmja7vvIznlJ/miJDnlLEgcmVmIOWtl+autee7hOaIkOeahOWvueixoVxuICAgIGNvbnN0IGdldFJlZkZpZWxkc1dpdGhEYXRhID0gKGZpZWxkc1dpdGhSZWZJZHMpID0+IHtcbiAgICAgICAgY29uc3QgZmllbGRzV2l0aERhdGEgPSBmaWVsZHNXaXRoUmVmSWRzXG4gICAgICAgICAgICAubWFwKGZpZWxkID0+IHtcbiAgICAgICAgICAgIC8vIOS4gOS4qiBmaWVsZCDph4zpnaLnmoQgaWRzIOi/lOWbnueahOafpeivoue7k+aenFxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2VcbiAgICAgICAgICAgICAgICAuYWxsKGZpZWxkLmlkc1xuICAgICAgICAgICAgICAgIC5tYXAoaWQgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBnZXRSb3dCeUlkKGlkLCBmaWVsZC5yZWYubmFtZSlcbiAgICAgICAgICAgICAgICAgICAgLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGlzUmVmSW5SZWYgPSBkb2VzUmVmSGF2ZVJlZkluc2lkZShmaWVsZC5yZWYpO1xuICAgICAgICAgICAgICAgICAgICBjb25zdCByZWZTY2hlbWEgPSBmaWVsZC5yZWY7XG4gICAgICAgICAgICAgICAgICAgIGlmIChpc1JlZkluUmVmKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAvLyDpgJLlvZLvvIHvvIFcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiBlbWJlZFJlZihyZXN1bHRzLCByZWZTY2hlbWEpLnRoZW4ocmVSZWZlZFJlc3VsdCA9PiBoYW5kbGVSZWZSZXN1bHQocmVSZWZlZFJlc3VsdFswXSwgcmVmU2NoZW1hLCBpZCkpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBoYW5kbGVSZWZSZXN1bHQocmVzdWx0c1swXSwgcmVmU2NoZW1hLCBpZCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9KSlcbiAgICAgICAgICAgICAgICAudGhlbihyZWZSZXN1bHRzID0+IHtcbiAgICAgICAgICAgICAgICAvLyDlpITnkIbljZXkuKogcmVmIGZpZWxkIOaVsOaNru+8jOmDveaYr+aVsOe7hOW9ouW8j++8jOacgOe7iOaYr+WQpuS4uuaVsOe7hOWPluWGs+S6jiByZWYgZmllbGQg55qEIHR5cGVcbiAgICAgICAgICAgICAgICBsZXQgZmllbGREYXRhID0gcmVmUmVzdWx0cztcbiAgICAgICAgICAgICAgICBpZiAoIWZpZWxkLnR5cGUgfHwgIWZpZWxkLnR5cGUuaXNBcnJheSgpKSB7XG4gICAgICAgICAgICAgICAgICAgIGZpZWxkRGF0YSA9IHJlZlJlc3VsdHNbMF07XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgICAgIG5hbWU6IGZpZWxkLm5hbWUsXG4gICAgICAgICAgICAgICAgICAgIGRhdGE6IGZpZWxkRGF0YSxcbiAgICAgICAgICAgICAgICB9O1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwoZmllbGRzV2l0aERhdGEpLnRoZW4oZmllbGRzID0+IHtcbiAgICAgICAgICAgIHJldHVybiBmaWVsZHMucmVkdWNlKChmaWVsZHNPYmosIGZpZWxkKSA9PiB7XG4gICAgICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIGZpZWxkc09iaiwge1xuICAgICAgICAgICAgICAgICAgICBbZmllbGQubmFtZV06IGZpZWxkLmRhdGFcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIHt9KTtcbiAgICAgICAgfSk7XG4gICAgfTtcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwocmF3UmVzdWx0c1xuICAgICAgICAubWFwKHJhd1Jlc3VsdCA9PiB7XG4gICAgICAgIGNvbnN0IGZpZWxkc1dpdGhJZHMgPSBnZXRSZWZGaWVsZHNXaXRoSWRzKHJhd1Jlc3VsdCwgc2NoZW1hKTtcbiAgICAgICAgcmV0dXJuIGdldFJlZkZpZWxkc1dpdGhEYXRhKGZpZWxkc1dpdGhJZHMpLnRoZW4ocmVmT2JqID0+IHtcbiAgICAgICAgICAgIHJldHVybiBfLmFzc2lnbih7fSwgcmF3UmVzdWx0LCByZWZPYmopO1xuICAgICAgICB9KTtcbiAgICB9KSk7XG59XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZW1iZWRSZWYsXG4gICAgZ2V0Um93QnlNYXRjaCxcbiAgICBnZXRSb3dCeUlkXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21vZGVscy9kYXRhYmFzZS50c1xuICoqLyIsImltcG9ydCBhcHBDb25maWdEZXYgZnJvbSAnLi9hcHAuY29uZmlnLmRldic7XG5pbXBvcnQgYXBwQ29uZmlnUHJvZCBmcm9tICcuL2FwcC5jb25maWcucHJvZCc7XG5sZXQgYXBwQ29uZmlnID0gYXBwQ29uZmlnRGV2O1xuaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICBhcHBDb25maWcgPSBhcHBDb25maWdQcm9kO1xufVxuZXhwb3J0IGRlZmF1bHQgYXBwQ29uZmlnO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvYXBwLmNvbmZpZy50c1xuICoqLyIsImNvbnN0IGFwcENvbmZpZyA9IHtcbiAgICBhcGk6IHtcbiAgICAgICAgcHJlZml4OiAnYXBpJ1xuICAgIH0sXG4gICAgZGF0YWJhc2U6IHtcbiAgICAgICAgaG9zdDogJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnLFxuICAgICAgICBuYW1lOiAncmVhZHInLFxuICAgICAgICBtb25nb1N0b3JlTmFtZTogJ3JlYWRyX3Nlc3Npb24nXG4gICAgfSxcbiAgICBzaXRlVXJsOiAnaHR0cDovL3JlYWRyd2ViLmNvbScsXG4gICAgcG9ydDogMzAwMCxcbiAgICBlbmFibGVFbnRpdHlDYWNoZTogZmFsc2Vcbn07XG5leHBvcnQgZGVmYXVsdCBhcHBDb25maWc7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9hcHAuY29uZmlnLmRldi50c1xuICoqLyIsImNvbnN0IGFwcENvbmZpZyA9IHtcbiAgICBhcGk6IHtcbiAgICAgICAgcHJlZml4OiAnYXBpJ1xuICAgIH0sXG4gICAgZGF0YWJhc2U6IHtcbiAgICAgICAgaG9zdDogJ21vbmdvZGI6Ly9sb2NhbGhvc3Q6MjcwMTcnLFxuICAgICAgICBuYW1lOiAncmVhZHInLFxuICAgICAgICBtb25nb1N0b3JlTmFtZTogJ3JlYWRyX3Nlc3Npb24nXG4gICAgfSxcbiAgICBzaXRlVXJsOiAnaHR0cDovL3JlYWRyd2ViLmNvbScsXG4gICAgcG9ydDogMzAwMCxcbiAgICBlbmFibGVFbnRpdHlDYWNoZTogdHJ1ZVxufTtcbmV4cG9ydCBkZWZhdWx0IGFwcENvbmZpZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2FwcC5jb25maWcucHJvZC50c1xuICoqLyIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBvdXRwdXRFbXB0eUVudGl0eShmaWVsZHMsIGlkT2JqT3JJZFN0cmluZyA9IHt9KSB7XG4gICAgLy8gaWQg5Y+v5Lul5Li65a+56LGh77yM5q2k5pe25Lya55u05o6l6KKr5omp5bGV5Yiw6L6T5Ye657uT5p6c6YeM6Z2iXG4gICAgbGV0IGlkT2JqID0gaWRPYmpPcklkU3RyaW5nO1xuICAgIGlmICh0eXBlb2YgaWRPYmpPcklkU3RyaW5nID09PSAnc3RyaW5nJykge1xuICAgICAgICBpZE9iaiA9IHsgX2lkOiBpZE9iak9ySWRTdHJpbmcgfTtcbiAgICB9XG4gICAgY29uc3QgZW50aXR5ID0ge307XG4gICAgZmllbGRzLmZvckVhY2goZmllbGQgPT4ge1xuICAgICAgICAvLyB0b2RvXG4gICAgICAgIC8vIOa3u+WKoOexu+Wei+WIpOaWrVxuICAgICAgICBlbnRpdHlbZmllbGQubmFtZV0gPSAnJztcbiAgICB9KTtcbiAgICByZXR1cm4gXy5hc3NpZ24oe30sIGVudGl0eSwgaWRPYmopO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21vZGVscy9vdXRwdXQtZW1wdHktZW50aXR5LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibW9uZ29kYlwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwibW9uZ29kYlwiXG4gKiogbW9kdWxlIGlkID0gMzRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB2YWxpZGF0b3IgZnJvbSAnLi92YWxpZGF0b3InO1xuaW1wb3J0IGkxOG4gZnJvbSAnLi9pMThuJztcbmltcG9ydCBwaXBlbGluZSBmcm9tICcuL3BpcGVsaW5lJztcbmltcG9ydCByZWR1Y2VUYXNrcyBmcm9tICcuL3JlZHVjZS10YXNrcyc7XG5pbXBvcnQgc29ydEJ5RGF0ZSBmcm9tICcuL3NvcnQtYnktZGF0ZSc7XG5leHBvcnQgZGVmYXVsdCB7IHZhbGlkYXRvciwgaTE4biwgcGlwZWxpbmUsIHJlZHVjZVRhc2tzLCBzb3J0QnlEYXRlIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvaW5kZXgudHNcbiAqKi8iLCJjb25zdCB2YWxpZGF0b3IgPSByZXF1aXJlKCd2YWxpZGF0b3InKTtcbmNvbnN0IGFkZGl0aW9uYWxWYWxpZGF0b3JzID0ge1xuICAgIGxlbmd0aE1pbihsZW4pIHtcbiAgICAgICAgcmV0dXJuIGlucHV0ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBpbnB1dC5sZW5ndGggPj0gbGVuO1xuICAgICAgICB9O1xuICAgIH0sXG4gICAgbGVuZ3RoTWF4KGxlbikge1xuICAgICAgICByZXR1cm4gaW5wdXQgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGlucHV0Lmxlbmd0aCA8PSBsZW47XG4gICAgICAgIH07XG4gICAgfVxufTtcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5hc3NpZ24oe30sIHZhbGlkYXRvciwgYWRkaXRpb25hbFZhbGlkYXRvcnMpO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3V0aWxzL3ZhbGlkYXRvci50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInZhbGlkYXRvclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwidmFsaWRhdG9yXCJcbiAqKiBtb2R1bGUgaWQgPSAzN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiLyoqXG4gKiAjIFBpcGVsaW5lIFV0aWxpdHkgKGJvcnJvd2VkIGZyb20gR2hvc3QpXG4gKlxuICogQmFzZWQgb24gcGlwZWxpbmUuanMgZnJvbSB3aGVuLmpzOlxuICogaHR0cHM6Ly9naXRodWIuY29tL2N1am9qcy93aGVuL2Jsb2IvMy43LjQvcGlwZWxpbmUuanNcbiAqL1xuaW1wb3J0IFByb21pc2UgZnJvbSAnYmx1ZWJpcmQnO1xuZnVuY3Rpb24gcGlwZWxpbmUodGFza3MgLyogaW5pdGlhbCBhcmd1bWVudHMgKi8pIHtcbiAgICBjb25zdCBhcmdzID0gQXJyYXkucHJvdG90eXBlLnNsaWNlLmNhbGwoYXJndW1lbnRzLCAxKTtcbiAgICBsZXQgcnVuVGFzayA9ICh0YXNrLCBhcmdzKSA9PiB7XG4gICAgICAgIC8vIFNlbGYtb3B0aW1pemluZyBmdW5jdGlvbiB0byBydW4gZmlyc3QgdGFzayB3aXRoIG11bHRpcGxlXG4gICAgICAgIC8vIGFyZ3MgdXNpbmcgYXBwbHksIGJ1dCBzdWJzZXF1ZW50IHRhc2tzIHZpYSBkaXJlY3QgaW52b2NhdGlvblxuICAgICAgICBydW5UYXNrID0gKHRhc2ssIGFyZykgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHRhc2soYXJnKTtcbiAgICAgICAgfTtcbiAgICAgICAgcmV0dXJuIHRhc2suYXBwbHkobnVsbCwgYXJncyk7XG4gICAgfTtcbiAgICAvLyBSZXNvbHZlIGFueSBwcm9taXNlcyBmb3IgdGhlIGFyZ3VtZW50cyBwYXNzZWQgaW4gZmlyc3RcbiAgICByZXR1cm4gUHJvbWlzZS5hbGwoYXJncykudGhlbihhcmdzID0+IHtcbiAgICAgICAgLy8gSXRlcmF0ZSB0aHJvdWdoIHRoZSB0YXNrcyBwYXNzaW5nIGFyZ3MgZnJvbSBvbmUgaW50byB0aGUgbmV4dFxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWR1Y2UodGFza3MsIChhcmcsIHRhc2spID0+IHtcbiAgICAgICAgICAgIHJldHVybiBydW5UYXNrKHRhc2ssIGFyZyk7XG4gICAgICAgIH0sIGFyZ3MpO1xuICAgIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgcGlwZWxpbmU7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvcGlwZWxpbmUudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJibHVlYmlyZFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiYmx1ZWJpcmRcIlxuICoqIG1vZHVsZSBpZCA9IDM5XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgUHJvbWlzZSBmcm9tICdibHVlYmlyZCc7XG4vLyB0YXNrcyDlj6/ku6XmmK/ov5Tlm54gUHJvbWlzZSDnmoQgZm5cbi8vIOS5n+WPr+S7peaYryBQcm9taXNlXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZWR1Y2VUYXNrcyh0YXNrcykge1xuICAgIHJldHVybiBQcm9taXNlLnJlZHVjZSh0YXNrcywgKHJlc3VsdCwgdGFzaykgPT4ge1xuICAgICAgICBpZiAodHlwZW9mIHRhc2sgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgICAgIHJldHVybiB0YXNrLmNhbGwodGhpcyk7XG4gICAgICAgIH1cbiAgICAgICAgLy8g5aaC5p6cIHRhc2sg5pivIFByb21pc2UgYmx1ZSBiaXJkIOiyjOS8vOS8muiHquWKqOaKiiBwcm9taXNlIHJlc29sdmUg5Ye65p2l77yM5pivIHJlamVjdCDnm7TmjqXlsLHnu4jmraLmiafooYxcbiAgICAgICAgLy8g5omA5LulIOWGmSB0YXNrKCkjdGhlbiDkvJrlh7rplJlcbiAgICAgICAgcmV0dXJuIHRhc2s7XG4gICAgfSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvcmVkdWNlLXRhc2tzLnRzXG4gKiovIiwiLy8g5pyA5paw55qE5Zyo5YmN6Z2iXG4vLyDmnIDmlrDnmoTlnKjliY3pnaJcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHNvcnRCeURhdGUoKSB7XG4gICAgcmV0dXJuIChhLCBiKSA9PiB7XG4gICAgICAgIHJldHVybiBuZXcgRGF0ZShiLmRhdGVfdXBkYXRlZCkudmFsdWVPZigpIC0gbmV3IERhdGUoYS5kYXRlX3VwZGF0ZWQpLnZhbHVlT2YoKTtcbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3V0aWxzL3NvcnQtYnktZGF0ZS50c1xuICoqLyIsImltcG9ydCB1dGlscyBmcm9tICcuLi91dGlscyc7XG5pbXBvcnQgZXJyb3JzIGZyb20gJy4uL2Vycm9ycyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3QgcmVkdWNlVGFza3MgPSB1dGlscy5yZWR1Y2VUYXNrcztcbmNvbnN0IGkxOG4gPSB1dGlscy5pMThuO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gdmFsaWRhdGUoZGF0YSwgc2NoZW1hLCBpc0VkaXRpbmcpIHtcbiAgICBpZiAodHlwZW9mIGRhdGEgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgZXJyb3JzLkJhZFJlcXVlc3RFcnJvcihpMThuKCdlcnJvcnMudmFsaWRhdGlvbi5wcmVDaGVjay5lbXB0eU9iamVjdCcpKSk7XG4gICAgfVxuICAgIGNvbnN0IHN1cHBsaWVkRmllbGRzID0gT2JqZWN0LmtleXMoZGF0YSkuZmlsdGVyKGtleSA9PiAhXy5pc1VuZGVmaW5lZChkYXRhW2tleV0pKTtcbiAgICBjb25zdCBzdXBwbGllZEZpZWxkc0luU2NoZW1hID0gc2NoZW1hLmZpZWxkcy5maWx0ZXIoZmllbGQgPT4gIV8uaXNVbmRlZmluZWQoZGF0YVtmaWVsZC5uYW1lXSkpO1xuICAgIGNvbnN0IGFsbEZpZWxkcyA9IF8ubWFwKHNjaGVtYS5maWVsZHMsICduYW1lJyk7XG4gICAgY29uc3QgcmVxdWlyZWRGaWVsZHMgPSBzY2hlbWEuZmllbGRzXG4gICAgICAgIC5maWx0ZXIoZmllbGQgPT4gQm9vbGVhbihmaWVsZC5yZXF1aXJlZCkpXG4gICAgICAgIC5tYXAoZmllbGQgPT4gZmllbGQubmFtZSk7XG4gICAgY29uc3QgdW5zdXBwb3J0ZWRGaWVsZHMgPSBzdXBwbGllZEZpZWxkcy5maWx0ZXIoa2V5ID0+IGFsbEZpZWxkcy5pbmRleE9mKGtleSkgPT09IC0xKTtcbiAgICBjb25zdCBtaXNzZWRGaWVsZHMgPSByZXF1aXJlZEZpZWxkcy5maWx0ZXIoa2V5ID0+IHN1cHBsaWVkRmllbGRzLmluZGV4T2Yoa2V5KSA9PT0gLTEpO1xuICAgIGlmICh1bnN1cHBvcnRlZEZpZWxkcy5sZW5ndGggPiAwKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgZXJyb3JzLkJhZFJlcXVlc3RFcnJvcihpMThuKCdlcnJvcnMudmFsaWRhdGlvbi5wcmVDaGVjay51bnN1cHBvcnRlZElucHV0JywgdW5zdXBwb3J0ZWRGaWVsZHNbMF0pKSk7XG4gICAgfVxuICAgIGlmIChtaXNzZWRGaWVsZHMubGVuZ3RoID4gMCAmJiAhaXNFZGl0aW5nKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgZXJyb3JzLkJhZFJlcXVlc3RFcnJvcihpMThuKCdlcnJvcnMudmFsaWRhdGlvbi5wcmVDaGVjay5taXNzUmVxdWlyZWRGaWVsZHMnLCBtaXNzZWRGaWVsZHNbMF0pKSk7XG4gICAgfVxuICAgIC8vIOmqjOivgSBmaWVsZHPvvIzlm6DkuLrmr4/kuKogZmllbGQg5Y+v6IO95pyJ5LiN5q2i5LiA5LiqIHZhbGlkYXRvclxuICAgIGNvbnN0IHZhbGlkYXRlRmllbGQgPSAodmFsLCB2YWxpZGF0b3JzKSA9PiB7XG4gICAgICAgIHJldHVybiByZWR1Y2VUYXNrcyh2YWxpZGF0b3JzLm1hcCh2YWxpZGF0aW9uID0+IHtcbiAgICAgICAgICAgIGlmICh2YWxpZGF0aW9uLmZuKHZhbCkpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KG5ldyBlcnJvcnMuQmFkUmVxdWVzdEVycm9yKHZhbGlkYXRpb24uZXJyb3JNc2cpKTtcbiAgICAgICAgfSkpO1xuICAgIH07XG4gICAgLy8g5omA5pyJIGZpZWxkcyDpqozor4HkuIDpgY1cbiAgICByZXR1cm4gcmVkdWNlVGFza3Moc3VwcGxpZWRGaWVsZHNJblNjaGVtYS5tYXAoZmllbGQgPT4ge1xuICAgICAgICBjb25zdCB2YWxpZGF0b3JzID0gZmllbGQudmFsaWRhdG9ycztcbiAgICAgICAgaWYgKHZhbGlkYXRvcnMpIHtcbiAgICAgICAgICAgIHJldHVybiB2YWxpZGF0ZUZpZWxkKGRhdGFbZmllbGQubmFtZV0sIHZhbGlkYXRvcnMpO1xuICAgICAgICB9XG4gICAgICAgIC8vIOi3s+i/h+acquWumuS5iSB2YWxpZGF0aW9uIOeahCBmaWxlZFxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHRydWUpO1xuICAgIH0pKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9tb2RlbHMvdmFsaWRhdGUudHNcbiAqKi8iLCJjb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBwYWdlOiAxLFxuICAgIGxpbWl0OiAxMCxcbiAgICBvcmRlcjogJ25ldydcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYWdpbmF0ZShyZXN1bHRzLCBvcHRpb25zKSB7XG4gICAgbGV0IHsgcGFnZSwgbGltaXQsIG9yZGVyIH0gPSBPYmplY3QuYXNzaWduKHt9LCBkZWZhdWx0T3B0aW9ucywgb3B0aW9ucyk7XG4gICAgLy8gcXVlcnkg6YeM6Z2i5Lyg6L+H5p2l55qE6YO95pivIHN0cmluZ1xuICAgIHBhZ2UgPSBwYXJzZUludChwYWdlLCAxMCk7XG4gICAgLy8g5aaC5p6cIHBhZ2Ug5bCP5LqOIDAg5YiZ5b2T5YGaIDEg5p2l5aSE55CG77yM5aSn5LqO5pyA5aSn6aG16Z2i5YiZ5LiN566hXG4gICAgLy8g5q2k6YC76L6R5Y+C54WnIEdpdEh1YiBhcGlcbiAgICBwYWdlID0gcGFnZSA8PSAwID8gMSA6IHBhZ2U7XG4gICAgbGltaXQgPSBwYXJzZUludChsaW1pdCwgMTApO1xuICAgIGlmIChvcmRlciA9PT0gJ25ldycpIHtcbiAgICAgICAgcmVzdWx0cy5yZXZlcnNlKCk7XG4gICAgfVxuICAgIGNvbnN0IHN0YXJ0SW5kZXggPSAocGFnZSAtIDEpICogbGltaXQ7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgZW50aXRpZXM6IHJlc3VsdHMuc2xpY2Uoc3RhcnRJbmRleCwgbGltaXQgKyBzdGFydEluZGV4KSxcbiAgICAgICAgX3BhZ2luYXRpb246IHtcbiAgICAgICAgICAgIGN1cnJlbnQ6IHBhZ2UsXG4gICAgICAgICAgICBhbGw6IE1hdGguY2VpbChyZXN1bHRzLmxlbmd0aCAvIGxpbWl0KSB8fCAxXG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21vZGVscy9wYWdpbmF0ZS50c1xuICoqLyIsImltcG9ydCBlcnJvcnMgZnJvbSAnLi4vZXJyb3JzJztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IGNvbXB1dGVIYXNoIGZyb20gJy4vY29tcHV0ZS1oYXNoJztcbmV4cG9ydCBmdW5jdGlvbiBub3RGb3VuZEVycm9yKGl0ZW1OYW1lKSB7XG4gICAgcmV0dXJuIG5ldyBlcnJvcnMuTm90Rm91bmRFcnJvcihpMThuKCdlcnJvcnMuYXBpLmdlbmVyYWwubm90Rm91bmQnLCBpdGVtTmFtZSkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIG5vdEZvdW5kSW4oY29sbGVjdGlvbk5hbWUpIHtcbiAgICByZXR1cm4gbmV3IGVycm9ycy5Ob3RGb3VuZEVycm9yKGkxOG4oJ2Vycm9ycy5hcGkuZ2VuZXJhbC5ub3RGb3VuZEluJywgY29sbGVjdGlvbk5hbWUpKTtcbn1cbmV4cG9ydCB7IGNvbXB1dGVIYXNoIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvaGVscGVycy9pbmRleC50c1xuICoqLyIsImltcG9ydCBjcnlwdG8gZnJvbSAnY3J5cHRvJztcbi8qKlxuICogc291cmNlOlxuICogaHR0cDovL3N0YWNrb3ZlcmZsb3cuY29tL3F1ZXN0aW9ucy82OTg0MTM5L2hvdy1jYW4taS1nZXQtdGhlLXNoYTEtaGFzaC1vZi1hLXN0cmluZy1pbi1ub2RlLWpzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbXB1dGVIYXNoKGJ1ZmZlcikge1xuICAgIGNvbnN0IHNoYXN1bSA9IGNyeXB0by5jcmVhdGVIYXNoKCdzaGExJyk7XG4gICAgc2hhc3VtLnVwZGF0ZShidWZmZXIpO1xuICAgIHJldHVybiBzaGFzdW0uZGlnZXN0KCdoZXgnKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9oZWxwZXJzL2NvbXB1dGUtaGFzaC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImNyeXB0b1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiY3J5cHRvXCJcbiAqKiBtb2R1bGUgaWQgPSA0NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiaHVtcHNcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImh1bXBzXCJcbiAqKiBtb2R1bGUgaWQgPSA0N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFNjaGVtYSBmcm9tICcuLi9tb2RlbHMvc2NoZW1hJztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IHZhbGlkYXRvciBmcm9tICcuLi91dGlscy92YWxpZGF0b3InO1xuaW1wb3J0IERhdGFUeXBlcywgeyBhcnJheU9mIH0gZnJvbSAnLi4vZGF0YS90eXBlcyc7XG5leHBvcnQgY29uc3QgdXNlciA9IG5ldyBTY2hlbWEoJ3VzZXJzJywgW1xuICAgIHtcbiAgICAgICAgbmFtZTogJ3VzZXJuYW1lJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHVuaXF1ZTogdHJ1ZSxcbiAgICAgICAgdmFsaWRhdG9yczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZuOiB2YWxpZGF0b3IubGVuZ3RoTWluKDUpLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0Lm1pbkxlbmd0aCcsICduYW1lJylcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgZm46IHZhbGlkYXRvci5sZW5ndGhNYXgoMjApLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0Lm1heExlbmd0aCcsICduYW1lJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAncGFzc3dvcmQnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZSxcbiAgICAgICAgdmFsaWRhdG9yczogW1xuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZuOiB2YWxpZGF0b3IubGVuZ3RoTWluKDYpLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0Lm1pbkxlbmd0aCcsICdwYXNzd29yZCcpXG4gICAgICAgICAgICB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGZuOiB2YWxpZGF0b3IubGVuZ3RoTWF4KDIwKSxcbiAgICAgICAgICAgICAgICBlcnJvck1zZzogaTE4bignZXJyb3JzLnZhbGlkYXRpb24udmFsdWVMaW1pdC5tYXhMZW5ndGgnLCAncGFzc3dvcmQnKVxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdlbWFpbCcsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICB1bmlxdWU6IHRydWUsXG4gICAgICAgIHZhbGlkYXRvcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmbjogdmFsaWRhdG9yLmlzRW1haWwsXG4gICAgICAgICAgICAgICAgZXJyb3JNc2c6IGkxOG4oJ2Vycm9ycy52YWxpZGF0aW9uLnZhbHVlTGltaXQuaW52YWxpZEZvcm1hdCcsICdlbWFpbCcpXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ3JvbGUnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH1cbl0pO1xuZXhwb3J0IGNvbnN0IGZpbGUgPSBuZXcgU2NoZW1hKCdmaWxlcycsIFtcbiAgICB7XG4gICAgICAgIG5hbWU6ICdmaWxlbmFtZScsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdjb250ZW50JyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ21pbWV0eXBlJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnc2l6ZSdcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2VuY29kaW5nJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnaGFzaCcsXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxuICAgIH1cbl0pO1xuZXhwb3J0IGNvbnN0IHByb2dyZXNzID0gbmV3IFNjaGVtYSgncmVhZGluZ19wcm9ncmVzcycsIFtcbiAgICB7XG4gICAgICAgIG5hbWU6ICdwZXJjZW50YWdlJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHR5cGU6IERhdGFUeXBlcy5OdW1iZXJcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ3VzZXJfaWQnLFxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSURcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2Jvb2tfaWQnLFxuICAgICAgICB0eXBlOiBEYXRhVHlwZXMuSURcbiAgICB9XG5dKTtcbmV4cG9ydCBjb25zdCB0YWcgPSBuZXcgU2NoZW1hKCd0YWdzJywgW1xuICAgIHtcbiAgICAgICAgbmFtZTogJ25hbWUnLFxuICAgICAgICByZXF1aXJlZDogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnc2x1ZycsXG4gICAgICAgIHVuaXF1ZTogdHJ1ZVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nXG4gICAgfVxuXSk7XG5leHBvcnQgY29uc3QgYXV0aG9yID0gbmV3IFNjaGVtYSgnYXV0aG9ycycsIFtcbiAgICB7XG4gICAgICAgIG5hbWU6ICduYW1lJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ3NsdWcnLFxuICAgICAgICB1bmlxdWU6IHRydWUsXG4gICAgICAgIHZhbGlkYXRvcnM6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBmbjogdmFsaWRhdG9yLmlzQWxwaGFudW1lcmljLFxuICAgICAgICAgICAgICAgIGVycm9yTXNnOiBpMThuKCdlcnJvcnMudmFsaWRhdGlvbi52YWx1ZUxpbWl0LmFscGhhbnVtZXJpYycsICdzbHVnJylcbiAgICAgICAgICAgIH1cbiAgICAgICAgXVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nXG4gICAgfVxuXSk7XG5leHBvcnQgY29uc3QgYm9vayA9IG5ldyBTY2hlbWEoJ2Jvb2tzJywgW1xuICAgIHtcbiAgICAgICAgbmFtZTogJ3RpdGxlJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2F1dGhvcnMnLFxuICAgICAgICByZWY6IGF1dGhvcixcbiAgICAgICAgdHlwZTogYXJyYXlPZihEYXRhVHlwZXMuSUQpXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdkZXNjcmlwdGlvbidcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogJ2NvdmVyJ1xuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZmlsZScsXG4gICAgICAgIHJlZjogZmlsZSxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWVcbiAgICB9XG5dKTtcbmV4cG9ydCBjb25zdCBjb2xsZWN0aW9uID0gbmV3IFNjaGVtYSgnY29sbGVjdGlvbnMnLCBbXG4gICAge1xuICAgICAgICBuYW1lOiAnbmFtZScsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdpdGVtcycsXG4gICAgICAgIHJlcXVpcmVkOiB0cnVlLFxuICAgICAgICByZWY6IGJvb2ssXG4gICAgICAgIHR5cGU6IGFycmF5T2YoRGF0YVR5cGVzLklEKVxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiAnZGVzY3JpcHRpb24nXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6ICdjcmVhdG9yJyxcbiAgICAgICAgcmVxdWlyZWQ6IHRydWUsXG4gICAgICAgIHJlZjogdXNlclxuICAgIH1cbl0pO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2RhdGEvc2NoZW1hcy50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFNjaGVtYSB7XG4gICAgY29uc3RydWN0b3IoYmFzZVRhYmxlLCBmaWVsZERlZmluaXRpb24pIHtcbiAgICAgICAgdGhpcy5fZmllbGREZWZpbml0aW9uID0gZmllbGREZWZpbml0aW9uO1xuICAgICAgICB0aGlzLl9iYXNlVGFibGUgPSBiYXNlVGFibGU7XG4gICAgfVxuICAgIGdldCBuYW1lKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fYmFzZVRhYmxlO1xuICAgIH1cbiAgICBnZXQgZmllbGRzKCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fZmllbGREZWZpbml0aW9uO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9tb2RlbHMvc2NoZW1hLnRzXG4gKiovIiwiZXhwb3J0IGNsYXNzIERhdGFUeXBlIHtcbiAgICBjb25zdHJ1Y3RvcihtYXJrLCBpc1R5cGVBcnJheSkge1xuICAgICAgICB0aGlzLm1hcmsgPSBtYXJrO1xuICAgICAgICB0aGlzLmlzVHlwZUFycmF5ID0gdHlwZW9mIGlzVHlwZUFycmF5ID09PSAndW5kZWZpbmVkJ1xuICAgICAgICAgICAgPyBmYWxzZVxuICAgICAgICAgICAgOiBpc1R5cGVBcnJheTtcbiAgICB9XG4gICAgaXNBcnJheSgpIHtcbiAgICAgICAgaWYgKHR5cGVvZiB0aGlzLmlzVHlwZUFycmF5ID09PSAndW5kZWZpbmVkJyB8fCAhdGhpcy5pc1R5cGVBcnJheSkge1xuICAgICAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiB0cnVlO1xuICAgIH1cbiAgICBlcXVhbHModHlwZSkge1xuICAgICAgICByZXR1cm4gKHR5cGUubWFyayA9PT0gdGhpcy5tYXJrICYmIHR5cGUuaXNBcnJheSgpID09PSB0aGlzLmlzVHlwZUFycmF5KTtcbiAgICB9XG59XG5leHBvcnQgY29uc3QgYXJyYXlPZiA9ICh0eXBlKSA9PiB7XG4gICAgcmV0dXJuIG5ldyBEYXRhVHlwZSh0eXBlLm1hcmssIHRydWUpO1xufTtcbmNvbnN0IERhdGFUeXBlcyA9IHtcbiAgICBTdHJpbmc6IG5ldyBEYXRhVHlwZSgnU1RSSU5HJyksXG4gICAgTnVtYmVyOiBuZXcgRGF0YVR5cGUoJ05VTUJFUicpLFxuICAgIElEOiBuZXcgRGF0YVR5cGUoJ0lEJyksXG59O1xuZXhwb3J0IGRlZmF1bHQgRGF0YVR5cGVzO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2RhdGEvdHlwZXMudHNcbiAqKi8iLCJpbXBvcnQgeyBST0xFUyB9IGZyb20gJy4uLy4uL2lzb21vcnBoaWMvY29uc3RhbnRzL2NvbW1vbic7XG5pbXBvcnQgZXJyb3JzIGZyb20gJy4uL2Vycm9ycyc7XG5pbXBvcnQgaTE4biBmcm9tICcuLi91dGlscy9pMThuJztcbi8qKlxuICog5p2D6ZmQ562J57qn5o6S5bqPXG4gKiBhZG1pbiB8IHVzZXIgfCB2aXNpdG9yIHwgbm9uZVxuICovXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiByZXF1aXJlUGVybWlzc2lvbnNPZih1c2VyUm9sZSkge1xuICAgIHJldHVybiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgc3dpdGNoICh1c2VyUm9sZSkge1xuICAgICAgICAgICAgY2FzZSBST0xFUy5BRE1JTjpcbiAgICAgICAgICAgICAgICBpZiAocmVxLmNvbnRleHQudXNlci5yb2xlID09PSBST0xFUy5BRE1JTikge1xuICAgICAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuZXh0KG5ldyBlcnJvcnMuTm9QZXJtaXNzaW9uRXJyb3IoaTE4bignZXJyb3JzLmFwaS5hdXRoLm5lZWRQZXJtaXNzaW9uc09mJywgJ2FkbWluJykpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgUk9MRVMuVVNFUjpcbiAgICAgICAgICAgICAgICBpZiAocmVxLmNvbnRleHQudXNlci5yb2xlID09PSBST0xFUy5VU0VSIHx8IHJlcS5jb250ZXh0LnVzZXIucm9sZSA9PT0gUk9MRVMuQURNSU4pIHtcbiAgICAgICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgbmV4dChuZXcgZXJyb3JzLk5vUGVybWlzc2lvbkVycm9yKGkxOG4oJ2Vycm9ycy5hcGkuYXV0aC5sb2dpblJlcXVpcmVkJykpKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgaWYgKHVzZXJSb2xlICE9PSBST0xFUy5WSVNJVE9SKSB7XG4gICAgICAgICAgICAgICAgICAgIG5leHQobmV3IEVycm9yKCdVbmRlZmluZWQgcm9sZSEnKSk7XG4gICAgICAgICAgICAgICAgICAgIGJyZWFrO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICBuZXh0KCk7XG4gICAgICAgIH1cbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvcmVxdWlyZS1wZXJtaXNzaW9ucy1vZi50c1xuICoqLyIsIi8vIOWFqOWxgOWPmOmHj1xuLy8g5YWo5bGA5Y+Y6YePXG5leHBvcnQgY29uc3QgRU5BQkxFX1NFUlZFUl9ST1VUSU5HID0gJ19fRU5BQkxFX1NFUlZFUl9ST1VUSU5HX18nO1xuZXhwb3J0IGNvbnN0IElOSVRJQUxfU1RBVEUgPSAnX19JTklUSUFMX1NUQVRFX18nO1xuLy8g5YW25LuW5bi46YePXG5leHBvcnQgY29uc3QgRE9VQkFOX0FQSV9ST09UID0gJ2h0dHBzOi8vYXBpLmRvdWJhbi5jb20vdjInO1xuZXhwb3J0IGNvbnN0IEdJVEhVQl9BUElfUk9PVCA9ICdodHRwczovL2FwaS5naXRodWIuY29tJztcbmV4cG9ydCBjb25zdCBST0xFUyA9IHtcbiAgICBVU0VSOiAndXNlcicsXG4gICAgQURNSU46ICdhZG1pbicsXG4gICAgVklTSVRPUjogJ3Zpc2l0b3InXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb25zdGFudHMvY29tbW9uLnRzXG4gKiovIiwiaW1wb3J0IHByaW50IGZyb20gJy4uL3V0aWxzL3ByaW50JztcbmltcG9ydCBpMThuIGZyb20gJy4uL3V0aWxzL2kxOG4nO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGhhbmRsZUVycm9yKGVycm9yLCByZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHN0YXR1c0NvZGUgPSBlcnJvci5zdGF0dXNDb2RlIHx8IDUwMDtcbiAgICBsZXQgZXJyb3JKc29uID0gZXJyb3I7XG4gICAgaWYgKEVycm9yLnByb3RvdHlwZS5pc1Byb3RvdHlwZU9mKGVycm9yKSkge1xuICAgICAgICBlcnJvckpzb24gPSB7XG4gICAgICAgICAgICBtZXNzYWdlOiBlcnJvci5tZXNzYWdlIHx8IGkxOG4oJ2Vycm9ycy5nZW5lcmFsLnVua25vd25FcnJvck9jY3VycmVkJyksXG4gICAgICAgICAgICB0eXBlOiBlcnJvci5uYW1lLFxuICAgICAgICB9O1xuICAgIH1cbiAgICBpZiAoIWVycm9yLnN0YXR1c0NvZGUpIHtcbiAgICAgICAgcHJpbnQuZXJyb3IoZXJyb3IpO1xuICAgIH1cbiAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpLnNlbmQoXy5vbWl0KGVycm9ySnNvbiwgWydzdGF0dXNDb2RlJywgJ25hbWUnLCAnc3RhY2snXSkpO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL21pZGRsZXdhcmUvaGFuZGxlLWVycm9yLnRzXG4gKiovIiwiY29uc3QgY29sb3JzID0gcmVxdWlyZSgnY29sb3JzL3NhZmUnKTtcbmNvbnN0IHByaW50ID0ge1xuICAgIGluZm8obWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmluZm8oJ1xcbicgKyBjb2xvcnMuYmdHcmVlbi5ib2xkLndoaXRlKCcgSU5GTyAnKSwgY29sb3JzLmdyZWVuKG1lc3NhZ2UpKTtcbiAgICB9LFxuICAgIHRlc3QobWVzc2FnZSkge1xuICAgICAgICBjb25zb2xlLmluZm8oJ1xcbicgKyBjb2xvcnMuYmdDeWFuLmJvbGQuYmxhY2soJyBJTkZPICcpLCB0eXBlb2YgbWVzc2FnZSAhPT0gJ29iamVjdCcgPyBjb2xvcnMuY3lhbihtZXNzYWdlKSA6IG1lc3NhZ2UpO1xuICAgIH0sXG4gICAgd2FybihtZXNzYWdlKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ1xcbicgKyBjb2xvcnMuYmdZZWxsb3cuYm9sZC5ibGFjaygnIFdBUk5JTkcgJyksIHR5cGVvZiBtZXNzYWdlICE9PSAnb2JqZWN0JyA/IGNvbG9ycy55ZWxsb3cobWVzc2FnZSkgOiBtZXNzYWdlKTtcbiAgICB9LFxuICAgIGVycm9yKG1lc3NhZ2UpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignXFxuJyArIGNvbG9ycy5iZ1JlZC5ib2xkLndoaXRlKCcgRVJST1IgJyksIHR5cGVvZiBtZXNzYWdlICE9PSAnb2JqZWN0JyA/IGNvbG9ycy5yZWQobWVzc2FnZSkgOiBtZXNzYWdlKTtcbiAgICB9XG59O1xuZXhwb3J0IGRlZmF1bHQgcHJpbnQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvdXRpbHMvcHJpbnQudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjb2xvcnMvc2FmZVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiY29sb3JzL3NhZmVcIlxuICoqIG1vZHVsZSBpZCA9IDU1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHBhcnNlVXJsZW5jb2RlZCBmcm9tICcuLi8uLi9pc29tb3JwaGljL3V0aWxzL3BhcnNlVXJsZW5jb2RlZCc7XG5pbXBvcnQgaGVscGVycyBmcm9tICcuLi8uLi9pc29tb3JwaGljL2hlbHBlcnMnO1xuY29uc3QgQVBJX1JPT1QgPSBoZWxwZXJzLmdldEFwaVJvb3QoKTtcbmZ1bmN0aW9uIHBhcnNlUGFnaW5hdGlvbih7IGZ1bGxQYXRoLCBxdWVyeSB9LCB7IGN1cnJlbnQsIGFsbCB9KSB7XG4gICAgY29uc3QgZ2V0TGludEJ5UGFnZSA9IHBhZ2UgPT4gKGAke2Z1bGxQYXRofT8ke3BhcnNlVXJsZW5jb2RlZChfLmFzc2lnbih7fSwgcXVlcnksIHsgcGFnZSB9KSl9YCk7XG4gICAgY29uc3QgbGlua3MgPSB7XG4gICAgICAgIGZpcnN0OiBnZXRMaW50QnlQYWdlKDEpLFxuICAgICAgICBsYXN0OiBnZXRMaW50QnlQYWdlKGFsbCksXG4gICAgICAgIHByZXY6IGdldExpbnRCeVBhZ2UoY3VycmVudCAtIDEpLFxuICAgICAgICBuZXh0OiBnZXRMaW50QnlQYWdlKGN1cnJlbnQgKyAxKSxcbiAgICB9O1xuICAgIGlmIChjdXJyZW50ID4gYWxsKSB7XG4gICAgICAgIGxpbmtzLnByZXYgPSBsaW5rcy5sYXN0O1xuICAgIH1cbiAgICBpZiAoYWxsID09PSAxKSB7XG4gICAgICAgIGlmIChjdXJyZW50ID4gMSkge1xuICAgICAgICAgICAgcmV0dXJuIF8ub21pdChsaW5rcywgWyduZXh0J10pO1xuICAgICAgICB9XG4gICAgICAgIGlmIChjdXJyZW50ID09PSAxKSB7XG4gICAgICAgICAgICByZXR1cm4gXy5vbWl0KGxpbmtzLCBbJ3ByZXYnLCAnbmV4dCddKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBpZiAoY3VycmVudCA8PSAxKSB7XG4gICAgICAgIHJldHVybiBfLm9taXQobGlua3MsIFsncHJldiddKTtcbiAgICB9XG4gICAgaWYgKGN1cnJlbnQgPj0gYWxsKSB7XG4gICAgICAgIHJldHVybiBfLm9taXQobGlua3MsIFsnbmV4dCddKTtcbiAgICB9XG4gICAgcmV0dXJuIGxpbmtzO1xufVxuY29uc3QgaGFuZGxlU3VjY2VzcyA9IChhcGlSZXN1bHRzLCByZXEsIHJlcykgPT4ge1xuICAgIGlmIChyZXEubWV0aG9kID09PSAnUE9TVCcpIHtcbiAgICAgICAgcmVzLnN0YXR1cygyMDEpLnNlbmQoYXBpUmVzdWx0cyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBpZiAoYXBpUmVzdWx0cy5fcGFnaW5hdGlvbikge1xuICAgICAgICAgICAgY29uc3QgaG9zdCA9IEFQSV9ST09UO1xuICAgICAgICAgICAgcmVzLmxpbmtzKHBhcnNlUGFnaW5hdGlvbih7XG4gICAgICAgICAgICAgICAgZnVsbFBhdGg6IGhvc3QgKyByZXEucGF0aCxcbiAgICAgICAgICAgICAgICBxdWVyeTogcmVxLnF1ZXJ5LFxuICAgICAgICAgICAgfSwgYXBpUmVzdWx0cy5fcGFnaW5hdGlvbikpO1xuICAgICAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoYXBpUmVzdWx0cy5lbnRpdGllcyk7XG4gICAgICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgcmVzLnN0YXR1cygyMDApLnNlbmQoYXBpUmVzdWx0cyk7XG4gICAgfVxufTtcbmZ1bmN0aW9uIGhhbmRsZUpTT05SZXNwb25zZShyZXEsIHJlcywgbmV4dCkge1xuICAgIGNvbnN0IHsgYXBpUmVzdWx0cyB9ID0gcmVxO1xuICAgIGlmICghYXBpUmVzdWx0cykge1xuICAgICAgICBuZXh0KG5ldyBFcnJvcignXCJhcGlSZXN1bHRzXCIgaXMgbm90IHByZXNlbnQhJykpO1xuICAgIH1cbiAgICBhcGlSZXN1bHRzLnRoZW4ocmVzdWx0cyA9PiB7XG4gICAgICAgIGhhbmRsZVN1Y2Nlc3MocmVzdWx0cywgcmVxLCByZXMpO1xuICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgbmV4dChlcnJvcik7XG4gICAgfSk7XG59XG5leHBvcnQgZGVmYXVsdCBoYW5kbGVKU09OUmVzcG9uc2U7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvbWlkZGxld2FyZS9oYW5kbGUtanNvbi1yZXNwb25zZS50c1xuICoqLyIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG4vLyB0b2RvXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBwYXJzZVVybGVuY29kZWQob3JpZ2luYWxPYmopIHtcbiAgICBpZiAoXy5pc0VtcHR5KG9yaWdpbmFsT2JqKSkge1xuICAgICAgICByZXR1cm4gJyc7XG4gICAgfVxuICAgIGxldCBvYmplY3QgPSBfLmNsb25lRGVlcChvcmlnaW5hbE9iaik7XG4gICAgbGV0IGVuY29kZWR1cmwgPSAnJztcbiAgICBmb3IgKGxldCBwcm9wIGluIG9iamVjdCkge1xuICAgICAgICBpZiAodHlwZW9mIG9iamVjdFtwcm9wXSA9PT0gJ29iamVjdCcgJiYgb2JqZWN0W3Byb3BdICE9PSBudWxsKSB7XG4gICAgICAgICAgICBvYmplY3RbcHJvcF0gPSBvYmplY3RbcHJvcF0udG9TdHJpbmcoKTtcbiAgICAgICAgfVxuICAgICAgICBlbmNvZGVkdXJsID0gYCR7ZW5jb2RlZHVybH0ke3Byb3B9PSR7ZW5jb2RlVVJJKG9iamVjdFtwcm9wXSl9JmA7XG4gICAgfVxuICAgIHJldHVybiBlbmNvZGVkdXJsLnN1YnN0cigwLCBlbmNvZGVkdXJsLmxlbmd0aCAtIDEpO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9wYXJzZVVybGVuY29kZWQudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBsaWZlY2lyY2xlIGZyb20gJy4vbGlmZWNpcmNsZSc7XG5pbXBvcnQgZ2V0QXBpUm9vdCBmcm9tICcuL2dldEFwaVJvb3QnO1xuaW1wb3J0IGlzU2VydmVyUm91dGluZ0VuYWJsZWQgZnJvbSAnLi9pc1NlcnZlclJvdXRpbmdFbmFibGVkJztcbmltcG9ydCByZWRpcmVjdCBmcm9tICcuL3JlZGlyZWN0JztcbmltcG9ydCBpc1NlcnZlckVudiBmcm9tICcuL2lzU2VydmVyRW52JztcbmltcG9ydCBwcmludCBmcm9tICcuL3ByaW50JztcbmV4cG9ydCBkZWZhdWx0IE9iamVjdC5hc3NpZ24oe30sIGxpZmVjaXJjbGUsIHtcbiAgICBnZXRBcGlSb290LFxuICAgIGlzU2VydmVyUm91dGluZ0VuYWJsZWQsXG4gICAgcmVkaXJlY3QsXG4gICAgaXNTZXJ2ZXJFbnYsXG4gICAgcHJpbnRcbn0pO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbi8vIOajgOafpSBzdG9yZSDph4zpnaLnmoQgcm91dGluZyDmmK/lkKblj5jljJZcbmV4cG9ydCBjb25zdCBvblJvdXRpbmdDaGFuZ2UgPSBmbiA9PiAobmV4dFByb3BzLCBjdXJyZW50UHJvcHMpID0+IHtcbiAgICBpZiAoIWN1cnJlbnRQcm9wcy5yb3V0aW5nKSB7XG4gICAgICAgIGNvbnNvbGUuZXJyb3IoJ3JvdXRpbmcg6ZyA6KaB546w5Zyo57uE5Lu2IHByb3BzIOmHjOmdouWjsOaYju+8gScpO1xuICAgICAgICByZXR1cm4gZmFsc2U7XG4gICAgfVxuICAgIGNvbnN0IGhhc1BhdGhQYXJhbUNoYW5nZWQgPSAhXy5pc0VxdWFsKG5leHRQcm9wcy5yb3V0aW5nLCBjdXJyZW50UHJvcHMucm91dGluZyk7XG4gICAgaWYgKGhhc1BhdGhQYXJhbUNoYW5nZWQpIHtcbiAgICAgICAgZm4obmV4dFByb3BzLnJvdXRpbmcpO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2hlbHBlcnMvbGlmZWNpcmNsZS50c1xuICoqLyIsImltcG9ydCBhcHBDb25maWcgZnJvbSAnLi4vLi4vYXBwLmNvbmZpZyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBnZXRBcGlSb290KCkge1xuICAgIGNvbnN0IGhvc3QgPSB0eXBlb2Ygd2luZG93ICE9PSAndW5kZWZpbmVkJ1xuICAgICAgICA/IHdpbmRvdy5sb2NhdGlvbi5vcmlnaW5cbiAgICAgICAgOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwJztcbiAgICByZXR1cm4gYCR7aG9zdH0vJHthcHBDb25maWcuYXBpLnByZWZpeH1gO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2dldEFwaVJvb3QudHNcbiAqKi8iLCJpbXBvcnQgeyBFTkFCTEVfU0VSVkVSX1JPVVRJTkcgfSBmcm9tICcuLi9jb25zdGFudHMvY29tbW9uJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzU2VydmVyUm91dGluZ0VuYWJsZWQoKSB7XG4gICAgcmV0dXJuIEJvb2xlYW4od2luZG93W0VOQUJMRV9TRVJWRVJfUk9VVElOR10pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyUm91dGluZ0VuYWJsZWQudHNcbiAqKi8iLCJpbXBvcnQgaXNTZXJ2ZXJSb3V0aW5nRW5hYmxlZCBmcm9tICcuL2lzU2VydmVyUm91dGluZ0VuYWJsZWQnO1xuaW1wb3J0IHsgaGFzaEhpc3RvcnksIGJyb3dzZXJIaXN0b3J5IH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlZGlyZWN0KHVybCkge1xuICAgIGlmIChpc1NlcnZlclJvdXRpbmdFbmFibGVkKCkpIHtcbiAgICAgICAgYnJvd3Nlckhpc3RvcnkucHVzaCh1cmwpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgaGFzaEhpc3RvcnkucHVzaCh1cmwpO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9yZWRpcmVjdC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXJvdXRlclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVhY3Qtcm91dGVyXCJcbiAqKiBtb2R1bGUgaWQgPSA2M1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaXNTZXJ2ZXJFbnYoKSB7XG4gICAgcmV0dXJuIHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9oZWxwZXJzL2lzU2VydmVyRW52LnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJpbnQoLi4uYXJncykge1xuICAgIGlmIChwcm9jZXNzLmVudi5OT0RFX0VOViAhPT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgICAgIGNvbnN0IHN0eWxlID0gJ2NvbG9yOiBibHVlOyc7XG4gICAgICAgIGNvbnN0IG1lcmdlZEFyZ3MgPSBbYXJncy5qb2luKCcgJyldO1xuICAgICAgICBsZXQgbW9kQXJncyA9IG1lcmdlZEFyZ3MubWFwKChhcmcsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICBpZiAoaW5kZXggPT09IDApIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gYCVjIFtERVZdICR7YXJnfWA7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBtb2RBcmdzID0gbW9kQXJncy5jb25jYXQoc3R5bGUpO1xuICAgICAgICBjb25zb2xlLnRyYWNlLmFwcGx5KG51bGwsIG1vZEFyZ3MpO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvaGVscGVycy9wcmludC50c1xuICoqLyIsImltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbHMvbW9kZWwnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCAqIGFzIGhlbHBlcnMgZnJvbSAnLi4vaGVscGVycyc7XG5jb25zdCBmaWxlTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5maWxlKTtcbi8vIEByZXEjbG9nZ2VkRmlsZUlkXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBsb2dGaWxlKHJlcSwgcmVzLCBuZXh0KSB7XG4gICAgY29uc3QgZmlsZSA9IHJlcS5maWxlO1xuICAgIGNvbnN0IGhhc2ggPSBoZWxwZXJzLmNvbXB1dGVIYXNoKGZpbGUuYnVmZmVyKTtcbiAgICBjb25zdCBkYXRhID0ge1xuICAgICAgICBmaWxlbmFtZTogZmlsZS5vcmlnaW5hbG5hbWUsXG4gICAgICAgIC8vIOS8muiiq+i9rOaNouS4uiBiaW5EYXRhIOeahCBCU09OIHR5cGVcbiAgICAgICAgY29udGVudDogZmlsZS5idWZmZXIsXG4gICAgICAgIG1pbWV0eXBlOiBmaWxlLm1pbWV0eXBlLFxuICAgICAgICBzaXplOiBmaWxlLnNpemUsXG4gICAgICAgIGVuY29kaW5nOiBmaWxlLmVuY29kaW5nLFxuICAgICAgICBoYXNoXG4gICAgfTtcbiAgICBmaWxlTW9kZWwuZmluZE9uZSh7IGhhc2ggfSkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICAvLyByZXEubG9nZ2VkRmlsZUlkID0gcmVzdWx0Ll9pZFxuICAgICAgICAvLyBUT0RPOiA0MDQg5aSE55CGXG4gICAgICAgIGNvbnN0IGVyciA9IG5ldyBFcnJvcignRmlsZSBhbHJlYWR5IGV4aXN0cyEnKTtcbiAgICAgICAgbmV4dChlcnIpO1xuICAgIH0sIG5vdEZvdW5kRXJyb3IgPT4ge1xuICAgICAgICAvLyBUT0RPOiDkuI3kvb/nlKggNDA0XG4gICAgICAgIC8vIOS4uuS6huehruWumuaYr+acquaJvuWIsOiAjOS4jeaYr+WFtuS7lumUmeivr+mcgOimgeWBmumineWklueahOWIpOaWrVxuICAgICAgICBmaWxlTW9kZWxcbiAgICAgICAgICAgIC5hZGQoZGF0YSlcbiAgICAgICAgICAgIC50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICBjb25zdCBsb2dnZWRGaWxlSWQgPSBfLmdldChyZXN1bHQsIFsnb3BzJywgMCwgJ19pZCddKTtcbiAgICAgICAgICAgIGlmICghbG9nZ2VkRmlsZUlkKSB7XG4gICAgICAgICAgICAgICAgLy8gVE9ET1xuICAgICAgICAgICAgICAgIC8vIHRocm93IG5ldyBFcnJvcignRmlsZSBub3QgRm91bmQhJylcbiAgICAgICAgICAgICAgICBjb25zdCBlcnIgPSBuZXcgRXJyb3IoJ0ZpbGUgbm90IEZvdW5kIScpO1xuICAgICAgICAgICAgICAgIG5leHQoZXJyKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIHJlcS5sb2dnZWRGaWxlSWQgPSBsb2dnZWRGaWxlSWQ7XG4gICAgICAgICAgICAgICAgbmV4dCgpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9KVxuICAgICAgICAgICAgLmNhdGNoKGVycm9yID0+IHtcbiAgICAgICAgICAgIG5leHQoZXJyb3IpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2xvZy1maWxlLnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcHJlcGFyZUFwaShyZXEsIHJlcywgbmV4dCkge1xuICAgIHJlcS5fX2FwaVRvdWNoZWQgPSB0cnVlO1xuICAgIG5leHQoKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL3ByZXBhcmUtYXBpLnRzXG4gKiovIiwiaW1wb3J0IHsgbm90Rm91bmRFcnJvciB9IGZyb20gJy4uL2hlbHBlcnMnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaGFuZGxlQXBpTm90Rm91bmQocmVxLCByZXMsIG5leHQpIHtcbiAgICBpZiAoIXJlcS5fX2FwaVRvdWNoZWQpIHtcbiAgICAgICAgbmV4dChub3RGb3VuZEVycm9yKCdBUEknKSk7XG4gICAgfVxuICAgIG5leHQoKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9taWRkbGV3YXJlL2hhbmRsZS1hcGktbm90LWZvdW5kLnRzXG4gKiovIiwiaW1wb3J0ICogYXMgYXBpIGZyb20gJy4uL2FwaSc7XG5pbXBvcnQgbWFrZUJhc2ljRW5kcG9pbnQgZnJvbSAnLi9tYWtlLWJhc2ljLWVuZHBvaW50Jztcbi8vIGJhc2ljIGVuZHBvaW50c1xuZXhwb3J0IGNvbnN0IGF1dGhvciA9IG1ha2VCYXNpY0VuZHBvaW50KGFwaS5hdXRob3IpO1xuZXhwb3J0IGNvbnN0IGNvbGxlY3Rpb24gPSBtYWtlQmFzaWNFbmRwb2ludChhcGkuY29sbGVjdGlvbik7XG5leHBvcnQgY29uc3QgYm9vayA9IG1ha2VCYXNpY0VuZHBvaW50KGFwaS5ib29rKTtcbmV4cG9ydCBjb25zdCB0YWcgPSBtYWtlQmFzaWNFbmRwb2ludChhcGkudGFnKTtcbmV4cG9ydCBjb25zdCB1c2VyID0gbWFrZUJhc2ljRW5kcG9pbnQoYXBpLnVzZXIpO1xuLy8gY29tbW9uIGVuZHBvaW50c1xuLy8gYm9va3NcbmV4cG9ydCBjb25zdCBhZGRCb29rID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkuYWRkQm9vayhyZXEuYm9keSwgcmVxLmxvZ2dlZEZpbGVJZCk7XG4gICAgbmV4dCgpO1xufTtcbmV4cG9ydCBjb25zdCBmaW5kQm9vayA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLmZpbmRCb29rKHJlcS5wYXJhbXMuYm9vayk7XG4gICAgbmV4dCgpO1xufTtcbmV4cG9ydCBjb25zdCByZXNvbHZlQm9va0NvbnRlbnQgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5yZXNvbHZlQm9va0NvbnRlbnQocmVxLnBhcmFtcy5ib29rKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGxpc3RCb29rcyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLmxpc3RCb29rcyhyZXEucXVlcnkucGFnZSB8fCAxKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGVkaXRCb29rTWV0YSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLmVkaXRCb29rTWV0YShyZXEucGFyYW1zLmJvb2ssIHJlcS5ib2R5KTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IHJlbW92ZUJvb2sgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5yZW1vdmVCb29rKHJlcS5wYXJhbXMuYm9vayk7XG4gICAgbmV4dCgpO1xufTtcbi8vIHVzZXJzXG5leHBvcnQgY29uc3QgZmluZFVzZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5maW5kVXNlcihyZXEuY29udGV4dC51c2VyLmlkKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGFkZFVzZXIgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5hZGRVc2VyKHJlcS5ib2R5KTtcbiAgICBuZXh0KCk7XG59O1xuLy8gdXNlclxuZXhwb3J0IGNvbnN0IGxpc3RTaGVsZkJvb2tzID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkubGlzdFNoZWxmQm9va3MocmVxLmNvbnRleHQudXNlci5pZCwgcmVxLnF1ZXJ5LnBhZ2UgfHwgMSk7XG4gICAgbmV4dCgpO1xufTtcbmV4cG9ydCBjb25zdCBnZXRSZWFkaW5nUHJvZ3Jlc3MgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5nZXRSZWFkaW5nUHJvZ3Jlc3MocmVxLmNvbnRleHQudXNlci5pZCwgcmVxLnBhcmFtcy5ib29rKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IHNldFJlYWRpbmdQcm9ncmVzcyA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpLnNldFJlYWRpbmdQcm9ncmVzcyhyZXEuY29udGV4dC51c2VyLmlkLCByZXEucGFyYW1zLmJvb2ssIHJlcS5ib2R5KTtcbiAgICBuZXh0KCk7XG59O1xuLy8gZmlsZVxuZXhwb3J0IGNvbnN0IHJlYWRGaWxlID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkucmVhZEZpbGUocmVxLnBhcmFtcy5maWxlKTtcbiAgICBuZXh0KCk7XG59O1xuZXhwb3J0IGNvbnN0IGRlbEZpbGUgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICByZXEuYXBpUmVzdWx0cyA9IGFwaS5kZWxGaWxlKHJlcS5wYXJhbXMuZmlsZSk7XG4gICAgbmV4dCgpO1xufTtcbi8vIG90aGVyXG5leHBvcnQgY29uc3QgbGlzdENvbGxlY3Rpb25zID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgcmVxLmFwaVJlc3VsdHMgPSBhcGkubGlzdENvbGxlY3Rpb24ocmVxLnF1ZXJ5LnBhZ2UgfHwgMSk7XG4gICAgbmV4dCgpO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9lbmRwb2ludHMvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBzY2hlbWFzIGZyb20gJy4uL2RhdGEvc2NoZW1hcyc7XG5pbXBvcnQgQmFzaWNBcGkgZnJvbSAnLi9iYXNpYy1hcGknO1xuZXhwb3J0ICogZnJvbSAnLi9maWxlJztcbmV4cG9ydCAqIGZyb20gJy4vYm9va3MnO1xuZXhwb3J0ICogZnJvbSAnLi91c2VyJztcbmV4cG9ydCAqIGZyb20gJy4vdXNlcnMnO1xuZXhwb3J0ICogZnJvbSAnLi9jb2xsZWN0aW9ucyc7XG5leHBvcnQgY29uc3QgYXV0aG9yID0gbmV3IEJhc2ljQXBpKHNjaGVtYXMuYXV0aG9yKTtcbmV4cG9ydCBjb25zdCBjb2xsZWN0aW9uID0gbmV3IEJhc2ljQXBpKHNjaGVtYXMuY29sbGVjdGlvbik7XG5leHBvcnQgY29uc3QgYm9vayA9IG5ldyBCYXNpY0FwaShzY2hlbWFzLmJvb2spO1xuZXhwb3J0IGNvbnN0IHRhZyA9IG5ldyBCYXNpY0FwaShzY2hlbWFzLnRhZyk7XG5leHBvcnQgY29uc3QgdXNlciA9IG5ldyBCYXNpY0FwaShzY2hlbWFzLnVzZXIpO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2FwaS9pbmRleC50c1xuICoqLyIsImltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbHMvbW9kZWwnO1xuaW1wb3J0ICogYXMgc2NoZW1hcyBmcm9tICcuLi9kYXRhL3NjaGVtYXMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmNvbnN0IGZpbGVNb2RlbCA9IG5ldyBNb2RlbChzY2hlbWFzLmZpbGUpO1xuZXhwb3J0IGZ1bmN0aW9uIHJlYWRGaWxlKGZpbGVJZCwgcGFyc2VyKSB7XG4gICAgcmV0dXJuIGZpbGVNb2RlbC5maW5kT25lKGZpbGVJZCkudGhlbihmaWxlUmVzdWx0ID0+IHtcbiAgICAgICAgaWYgKHBhcnNlciAmJiB0eXBlb2YgcGFyc2VyID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICBjb25zdCBiaW5hcnlGaWxlID0gZmlsZVJlc3VsdC5jb250ZW50LmJ1ZmZlcjtcbiAgICAgICAgICAgIHJldHVybiBwYXJzZXIoYmluYXJ5RmlsZSkudGhlbihjb250ZW50ID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIGZpbGVSZXN1bHQsIHtcbiAgICAgICAgICAgICAgICAgICAgY29udGVudFxuICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbGVSZXN1bHQ7XG4gICAgfSk7XG59XG4vLyBUT0RPXG5leHBvcnQgZnVuY3Rpb24gZGVsRmlsZShmaWxlSWQpIHtcbiAgICByZXR1cm4gZmlsZU1vZGVsLmZpbmRPbmUoZmlsZUlkKS50aGVuKHJlc3VsdEZpbGUgPT4ge1xuICAgICAgICByZXR1cm4gZmlsZU1vZGVsLnJlbW92ZShmaWxlSWQpO1xuICAgIH0sIGVycm9yID0+IHtcbiAgICAgICAgaWYgKGVycm9yLnR5cGUgPT09ICdOb3RGb3VuZEVycm9yJykge1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBtZXNzYWdlOiAnRmlsZSByZWNvcmQgbm90IGZvdW5kLCBwcm9iYWJseSBiZWNhdXNlIGl0IGRvZXNuXFwndCBleGlzdCwgb3IgaGFzblxcJ3QgYmVlbiBjcmVhdGVkIGluIHRoZSBmaXJzdCBwbGFjZSEnXG4gICAgICAgICAgICB9O1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChlcnJvcik7XG4gICAgfSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvYXBpL2ZpbGUudHNcbiAqKi8iLCJ2YXIgX19hc3NpZ24gPSAodGhpcyAmJiB0aGlzLl9fYXNzaWduKSB8fCBPYmplY3QuYXNzaWduIHx8IGZ1bmN0aW9uKHQpIHtcbiAgICBmb3IgKHZhciBzLCBpID0gMSwgbiA9IGFyZ3VtZW50cy5sZW5ndGg7IGkgPCBuOyBpKyspIHtcbiAgICAgICAgcyA9IGFyZ3VtZW50c1tpXTtcbiAgICAgICAgZm9yICh2YXIgcCBpbiBzKSBpZiAoT2JqZWN0LnByb3RvdHlwZS5oYXNPd25Qcm9wZXJ0eS5jYWxsKHMsIHApKVxuICAgICAgICAgICAgdFtwXSA9IHNbcF07XG4gICAgfVxuICAgIHJldHVybiB0O1xufTtcbnZhciBfX2F3YWl0ZXIgPSAodGhpcyAmJiB0aGlzLl9fYXdhaXRlcikgfHwgZnVuY3Rpb24gKHRoaXNBcmcsIF9hcmd1bWVudHMsIFAsIGdlbmVyYXRvcikge1xuICAgIHJldHVybiBuZXcgKFAgfHwgKFAgPSBQcm9taXNlKSkoZnVuY3Rpb24gKHJlc29sdmUsIHJlamVjdCkge1xuICAgICAgICBmdW5jdGlvbiBmdWxmaWxsZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3IubmV4dCh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHJlamVjdGVkKHZhbHVlKSB7IHRyeSB7IHN0ZXAoZ2VuZXJhdG9yW1widGhyb3dcIl0odmFsdWUpKTsgfSBjYXRjaCAoZSkgeyByZWplY3QoZSk7IH0gfVxuICAgICAgICBmdW5jdGlvbiBzdGVwKHJlc3VsdCkgeyByZXN1bHQuZG9uZSA/IHJlc29sdmUocmVzdWx0LnZhbHVlKSA6IG5ldyBQKGZ1bmN0aW9uIChyZXNvbHZlKSB7IHJlc29sdmUocmVzdWx0LnZhbHVlKTsgfSkudGhlbihmdWxmaWxsZWQsIHJlamVjdGVkKTsgfVxuICAgICAgICBzdGVwKChnZW5lcmF0b3IgPSBnZW5lcmF0b3IuYXBwbHkodGhpc0FyZywgX2FyZ3VtZW50cykpLm5leHQoKSk7XG4gICAgfSk7XG59O1xuaW1wb3J0IE1vZGVsIGZyb20gJy4uL21vZGVscy9tb2RlbCc7XG5pbXBvcnQgcGFnaW5hdGUgZnJvbSAnLi4vbW9kZWxzL3BhZ2luYXRlJztcbmltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vdXRpbHMnO1xuaW1wb3J0IHsgbm90Rm91bmRFcnJvciB9IGZyb20gJy4uL2hlbHBlcnMnO1xuaW1wb3J0IHsgcmVhZEZpbGUsIGRlbEZpbGUgfSBmcm9tICcuL2ZpbGUnO1xuaW1wb3J0IHBhcnNlcnMgZnJvbSAnLi4vcGFyc2Vycyc7XG5pbXBvcnQgY2FsbEFwaSBmcm9tICcuLi8uLi9pc29tb3JwaGljL3NlcnZpY2VzL3V0aWxzL2NhbGxBcGknO1xuY29uc3QgYm9va01vZGVsID0gbmV3IE1vZGVsKHNjaGVtYXMuYm9vayk7XG5jb25zdCBmaWxlTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5maWxlKTtcbmNvbnN0IHByb2dyZXNzTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5wcm9ncmVzcyk7XG5jb25zdCBhdXRob3JNb2RlbCA9IG5ldyBNb2RlbChzY2hlbWFzLmF1dGhvcik7XG4vKipcbiAqIGhlbHBlcnNcbiAqL1xuZnVuY3Rpb24gZ2V0QXV0aG9ySWQoYXV0aG9yTmFtZSwgZGVzY3JpcHRpb24pIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgY29uc3QgYXV0aG9yRW50aXR5ID0geWllbGQgYXV0aG9yTW9kZWwuZmluZE9uZSh7IG5hbWU6IGF1dGhvck5hbWUgfSk7XG4gICAgICAgICAgICByZXR1cm4gYXV0aG9yRW50aXR5Ll9pZDtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IHlpZWxkIGF1dGhvck1vZGVsLmFkZCh7XG4gICAgICAgICAgICAgICAgbmFtZTogYXV0aG9yTmFtZSxcbiAgICAgICAgICAgICAgICBkZXNjcmlwdGlvblxuICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICByZXR1cm4gcmVzdWx0Lm9wc1swXS5faWQ7XG4gICAgICAgIH1cbiAgICB9KTtcbn1cbi8qKlxuICogM3JkIHBhcnR5XG4gKi9cbmZ1bmN0aW9uIGZldGNoQm9va0J5VGl0bGUodGl0bGUpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBrZXl3b3JkID0gdGl0bGU7XG4gICAgICAgIGNvbnN0IHsganNvbjogYm9va0pzb24gfSA9IHlpZWxkIGNhbGxBcGkoYGh0dHBzOi8vYXBpLmRvdWJhbi5jb20vdjIvYm9vay9zZWFyY2g/cT0ke2VuY29kZVVSSShrZXl3b3JkKX0mY291bnQ9MWApO1xuICAgICAgICByZXR1cm4gXy5nZXQoYm9va0pzb24sIFsnYm9va3MnLCAwXSwge30pO1xuICAgIH0pO1xufVxuZnVuY3Rpb24gZmV0Y2hCb29rTWV0YUJ5VGl0bGUodGl0bGUpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBib29rID0geWllbGQgZmV0Y2hCb29rQnlUaXRsZSh0aXRsZSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBjb3ZlcjogXy5nZXQoYm9vaywgWydpbWFnZXMnLCAnbGFyZ2UnXSksXG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogXy5nZXQoYm9vaywgJ3N1bW1hcnknKSxcbiAgICAgICAgICAgIGF1dGhvckluZm86IF8uZ2V0KGJvb2ssICdhdXRob3JfaW50cm8nKSxcbiAgICAgICAgfTtcbiAgICB9KTtcbn1cbi8qKlxuICogYXBpc1xuICovXG5leHBvcnQgZnVuY3Rpb24gZmluZEJvb2soaWQpIHtcbiAgICByZXR1cm4gYm9va01vZGVsLmZpbmRPbmUoaWQpLnRoZW4ocmVzdWx0ID0+IHtcbiAgICAgICAgY29uc3QgZGF0YSA9IF8ub21pdChyZXN1bHQsIFsnZmlsZSddKTtcbiAgICAgICAgbGV0IGNvbnRlbnRUeXBlID0gJ3R4dCc7XG4gICAgICAgIGlmICghcmVzdWx0LmZpbGUpIHtcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlID0gJyc7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAocmVzdWx0LmZpbGUubWltZXR5cGUgPT09ICdhcHBsaWNhdGlvbi9lcHViK3ppcCcpIHtcbiAgICAgICAgICAgIGNvbnRlbnRUeXBlID0gJ2VwdWInO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBfLmFzc2lnbih7fSwgZGF0YSwge1xuICAgICAgICAgICAgY29udGVudF90eXBlOiBjb250ZW50VHlwZVxuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBhZGRCb29rKG1ldGEsIGZpbGVJZCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG1lcmdlQm9va01ldGEgPSAodGl0bGUsIGF1dGhvcklkLCBleHRNZXRhKSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIHtcbiAgICAgICAgICAgICAgICB0aXRsZSxcbiAgICAgICAgICAgICAgICBhdXRob3JzOiBbYXV0aG9ySWRdLFxuICAgICAgICAgICAgICAgIGZpbGU6IGZpbGVJZFxuICAgICAgICAgICAgfSwgbWV0YSwgZXh0TWV0YSk7XG4gICAgICAgIH07XG4gICAgICAgIGZ1bmN0aW9uIGRvU2F2ZSh0aXRsZSwgYXV0aG9yTmFtZSkge1xuICAgICAgICAgICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgICAgICAgICBjb25zdCBib29rTWV0YSA9IHlpZWxkIGZldGNoQm9va01ldGFCeVRpdGxlKHRpdGxlKTtcbiAgICAgICAgICAgICAgICBjb25zdCBhdXRob3JJZCA9IHlpZWxkIGdldEF1dGhvcklkKGF1dGhvck5hbWUsIGJvb2tNZXRhLmF1dGhvckluZm8pO1xuICAgICAgICAgICAgICAgIGNvbnN0IGJvb2tEYXRhID0gbWVyZ2VCb29rTWV0YSh0aXRsZSwgYXV0aG9ySWQsIF8ub21pdChib29rTWV0YSwgJ2F1dGhvckluZm8nKSk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvb2tNb2RlbC5hZGQoYm9va0RhdGEpO1xuICAgICAgICAgICAgfSk7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKGZpbGVJZCkge1xuICAgICAgICAgICAgY29uc3QgZmlsZVJlc3VsdCA9IHlpZWxkIHJlYWRGaWxlKGZpbGVJZCk7XG4gICAgICAgICAgICBpZiAoZmlsZVJlc3VsdC5taW1ldHlwZSA9PT0gJ2FwcGxpY2F0aW9uL2VwdWIremlwJykge1xuICAgICAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSB5aWVsZCByZWFkRmlsZShmaWxlSWQsIHBhcnNlcnMuZXB1Yik7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IHBhcnNlZENvbnRlbnQgPSBmaWxlLmNvbnRlbnQ7XG4gICAgICAgICAgICAgICAgICAgIGNvbnN0IGF1dGhvck5hbWUgPSBwYXJzZWRDb250ZW50Lm1ldGEuYXV0aG9yO1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZG9TYXZlKHBhcnNlZENvbnRlbnQubWV0YS50aXRsZSwgYXV0aG9yTmFtZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgICAgICAgICB5aWVsZCBmaWxlTW9kZWwucmVtb3ZlKGZpbGVJZCk7XG4gICAgICAgICAgICAgICAgICAgIHRocm93IGVycm9yO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2UgaWYgKGZpbGVSZXN1bHQubWltZXR5cGUgPT09ICd0ZXh0L3BsYWluJykge1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGUgPSB5aWVsZCByZWFkRmlsZShmaWxlSWQpO1xuICAgICAgICAgICAgICAgIGNvbnN0IGZpbGVDb250ZW50QXJyYXkgPSBmaWxlLmNvbnRlbnQuYnVmZmVyLnRvU3RyaW5nKCd1dGYtOCcpLnNwbGl0KCdcXG4nKTtcbiAgICAgICAgICAgICAgICBjb25zdCB0aXRsZSA9IGZpbGVDb250ZW50QXJyYXlbMF07XG4gICAgICAgICAgICAgICAgY29uc3QgYXV0aG9yTmFtZSA9IGZpbGVDb250ZW50QXJyYXlbMV07XG4gICAgICAgICAgICAgICAgcmV0dXJuIGRvU2F2ZSh0aXRsZSwgYXV0aG9yTmFtZSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QobmV3IEVycm9yKCdVbnN1cHBvcnRlZCBmaWxlIHR5cGUhJykpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIC8vIFRPRE86IOWlveWDj+S4jeWvueWQp1xuICAgICAgICByZXR1cm4gYm9va01vZGVsLmFkZChtZXRhKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBlZGl0Qm9va01ldGEoYm9va0lkLCBtZXRhKSB7XG4gICAgcmV0dXJuIF9fYXdhaXRlcih0aGlzLCB2b2lkIDAsIHZvaWQgMCwgZnVuY3Rpb24qICgpIHtcbiAgICAgICAgeWllbGQgYm9va01vZGVsLmZpbmRPbmUoYm9va0lkLCB0cnVlKTtcbiAgICAgICAgLy8gdG9kbzog5aSa5Liq5L2c6ICF5oOF5Ya1XG4gICAgICAgIGNvbnN0IHsgYXV0aG9ySW5mbyB9ID0geWllbGQgZmV0Y2hCb29rTWV0YUJ5VGl0bGUobWV0YS5hdXRob3JzKTtcbiAgICAgICAgY29uc3QgYXV0aG9ySWQgPSB5aWVsZCBnZXRBdXRob3JJZChtZXRhLmF1dGhvcnMsIGF1dGhvckluZm8pO1xuICAgICAgICBjb25zdCBib29rTWV0YSA9IF9fYXNzaWduKHt9LCBtZXRhLCB7XG4gICAgICAgICAgICBhdXRob3JzOiBbYXV0aG9ySWRdXG4gICAgICAgIH0pO1xuICAgICAgICByZXR1cm4gYm9va01vZGVsLnVwZGF0ZShib29rSWQsIGJvb2tNZXRhLCB7XG4gICAgICAgICAgICB1cHNlcnQ6IGZhbHNlXG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIHJlc29sdmVCb29rQ29udGVudChib29rSWQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBib29rRW50aXR5ID0geWllbGQgYm9va01vZGVsLmZpbmRPbmUoYm9va0lkKTtcbiAgICAgICAgY29uc3QgZmlsZUlkID0gYm9va0VudGl0eS5maWxlLl9pZDtcbiAgICAgICAgbGV0IGJvb2tDb250ZW50O1xuICAgICAgICBpZiAoIWZpbGVJZCkge1xuICAgICAgICAgICAgLy8g5LuO6L+Z6L655oql5Ye655qEIDQwNCDlkozkuIvpnaLnmoTmj5DnpLrkvJrkuI3kuIDmoLdcbiAgICAgICAgICAgIC8vIOS4i+mdouaKpeeahCA0MDQg5Y+v6IO95piv5paH5Lu26KKr5Yig5LqGXG4gICAgICAgICAgICAvLyDov5novrnmiqUgNDA0IOWImeaYr+S4gOW8gOWni+aVsOaNruW6k+mHjOWwseayoeWtmCBmaWxlXG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZWplY3Qobm90Rm91bmRFcnJvcignYm9vaycpKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYm9va0VudGl0eS5maWxlLm1pbWV0eXBlID09PSAnYXBwbGljYXRpb24vZXB1Yit6aXAnKSB7XG4gICAgICAgICAgICBjb25zdCBmaWxlUmVzdWx0ID0geWllbGQgcmVhZEZpbGUoZmlsZUlkLCBwYXJzZXJzLmVwdWIpO1xuICAgICAgICAgICAgYm9va0NvbnRlbnQgPSBfLm9taXQoZmlsZVJlc3VsdC5jb250ZW50LCBbJ21ldGEnXSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSBpZiAoYm9va0VudGl0eS5maWxlLm1pbWV0eXBlID09PSAndGV4dC9wbGFpbicpIHtcbiAgICAgICAgICAgIGNvbnN0IGZpbGVSZXN1bHQgPSB5aWVsZCByZWFkRmlsZShmaWxlSWQsIHBhcnNlcnMudHh0Q29udGVudCk7XG4gICAgICAgICAgICBib29rQ29udGVudCA9IGZpbGVSZXN1bHQuY29udGVudDtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLnJlamVjdChuZXcgRXJyb3IoJ1Vuc3VwcG9ydGVkIGZpbGUgdHlwZSEnKSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIF8uYXNzaWduKHt9LCBib29rQ29udGVudCwgeyBfaWQ6IGJvb2tJZCwgY29udGVudF9pZDogZmlsZUlkIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxpc3RCb29rcyhwYWdlKSB7XG4gICAgcmV0dXJuIGJvb2tNb2RlbC5saXN0KHtcbiAgICAgICAgcGFnZSxcbiAgICAgICAgZGlzYWJsZVBhZ2luYXRpb246IF8uaXNOaWwocGFnZSksXG4gICAgICAgIG1hcHBpbmc6IGVudGl0eSA9PiBfLm9taXQoZW50aXR5LCBbJ2NvbnRlbnQnLCAnZmlsZSddKVxuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGxpc3RTaGVsZkJvb2tzKHVzZXJJZCwgcGFnZSkge1xuICAgIHJldHVybiBwcm9ncmVzc01vZGVsLmxpc3RSYXcoeyBxdWVyeTogeyB1c2VyX2lkOiB1c2VySWQgfSB9KS50aGVuKHJlc3VsdHMgPT4ge1xuICAgICAgICBpZiAocmVzdWx0cy5sZW5ndGggPT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiByZXN1bHRzO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiBQcm9taXNlXG4gICAgICAgICAgICAuYWxsKHJlc3VsdHNcbiAgICAgICAgICAgIC5zb3J0KHV0aWxzLnNvcnRCeURhdGUoKSlcbiAgICAgICAgICAgIC5tYXAocmVzdWx0ID0+IHtcbiAgICAgICAgICAgIHJldHVybiBib29rTW9kZWwuZmluZE9uZShyZXN1bHQuYm9va19pZCwgdHJ1ZSkudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiByZXM7XG4gICAgICAgICAgICB9LCBlcnJvciA9PiB7XG4gICAgICAgICAgICAgICAgLy8g5aaC5p6c6ZSZ6K+v5LiN5pivIDQwNCDkuZ/ovpPlh7rnqbrnmoQgZW50aXR5XG4gICAgICAgICAgICAgICAgcmV0dXJuIGJvb2tNb2RlbC5vdXRwdXRFbXB0eShyZXN1bHQuYm9va19pZCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSkpXG4gICAgICAgICAgICAudGhlbihyZXMgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIHBhZ2luYXRlKHJlcy5tYXAoZW50aXR5ID0+IF8ub21pdChlbnRpdHksIFsnY29udGVudCddKSksIHtcbiAgICAgICAgICAgICAgICBwYWdlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gcmVtb3ZlQm9vayhib29rSWQpIHtcbiAgICByZXR1cm4gX19hd2FpdGVyKHRoaXMsIHZvaWQgMCwgdm9pZCAwLCBmdW5jdGlvbiogKCkge1xuICAgICAgICBjb25zdCBib29rID0geWllbGQgYm9va01vZGVsLmZpbmRPbmUoYm9va0lkLCB0cnVlKTtcbiAgICAgICAgY29uc3QgZmlsZUlkID0gYm9vay5maWxlO1xuICAgICAgICB5aWVsZCBib29rTW9kZWwucmVtb3ZlKGJvb2tJZCk7XG4gICAgICAgIHJldHVybiBkZWxGaWxlKGZpbGVJZCk7XG4gICAgfSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvYXBpL2Jvb2tzLnRzXG4gKiovIiwiaW1wb3J0IGVwdWIgZnJvbSAnc2ltcGxlLWVwdWItcGFyc2VyJztcbmltcG9ydCB0eHRDb250ZW50IGZyb20gJy4vdHh0LWNvbnRlbnQnO1xuZXhwb3J0IGRlZmF1bHQgeyBlcHViLCB0eHRDb250ZW50IH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcGFyc2Vycy9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInNpbXBsZS1lcHViLXBhcnNlclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwic2ltcGxlLWVwdWItcGFyc2VyXCJcbiAqKiBtb2R1bGUgaWQgPSA3NFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwidmFyIF9fYXdhaXRlciA9ICh0aGlzICYmIHRoaXMuX19hd2FpdGVyKSB8fCBmdW5jdGlvbiAodGhpc0FyZywgX2FyZ3VtZW50cywgUCwgZ2VuZXJhdG9yKSB7XG4gICAgcmV0dXJuIG5ldyAoUCB8fCAoUCA9IFByb21pc2UpKShmdW5jdGlvbiAocmVzb2x2ZSwgcmVqZWN0KSB7XG4gICAgICAgIGZ1bmN0aW9uIGZ1bGZpbGxlZCh2YWx1ZSkgeyB0cnkgeyBzdGVwKGdlbmVyYXRvci5uZXh0KHZhbHVlKSk7IH0gY2F0Y2ggKGUpIHsgcmVqZWN0KGUpOyB9IH1cbiAgICAgICAgZnVuY3Rpb24gcmVqZWN0ZWQodmFsdWUpIHsgdHJ5IHsgc3RlcChnZW5lcmF0b3JbXCJ0aHJvd1wiXSh2YWx1ZSkpOyB9IGNhdGNoIChlKSB7IHJlamVjdChlKTsgfSB9XG4gICAgICAgIGZ1bmN0aW9uIHN0ZXAocmVzdWx0KSB7IHJlc3VsdC5kb25lID8gcmVzb2x2ZShyZXN1bHQudmFsdWUpIDogbmV3IFAoZnVuY3Rpb24gKHJlc29sdmUpIHsgcmVzb2x2ZShyZXN1bHQudmFsdWUpOyB9KS50aGVuKGZ1bGZpbGxlZCwgcmVqZWN0ZWQpOyB9XG4gICAgICAgIHN0ZXAoKGdlbmVyYXRvciA9IGdlbmVyYXRvci5hcHBseSh0aGlzQXJnLCBfYXJndW1lbnRzKSkubmV4dCgpKTtcbiAgICB9KTtcbn07XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB0eHRDb250ZW50KHRhcmdldCkge1xuICAgIHJldHVybiBfX2F3YWl0ZXIodGhpcywgdm9pZCAwLCB2b2lkIDAsIGZ1bmN0aW9uKiAoKSB7XG4gICAgICAgIGNvbnN0IG5hdiA9IFt7XG4gICAgICAgICAgICAgICAgcmVmOiAncGFydDAxJyxcbiAgICAgICAgICAgICAgICBsYWJlbDogJ+esrOS4gOeroOiKgicsXG4gICAgICAgICAgICAgICAgaW5kZXg6IDBcbiAgICAgICAgICAgIH1dO1xuICAgICAgICBsZXQgY29udGVudDtcbiAgICAgICAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdzdHJpbmcnKSB7XG4gICAgICAgICAgICBjb25zdCBidWZmZXIgPSBuZXcgQnVmZmVyKHRhcmdldCwgJ2JpbmFyeScpO1xuICAgICAgICAgICAgY29udGVudCA9IGJ1ZmZlci50b1N0cmluZygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2UgaWYgKEJ1ZmZlci5pc0J1ZmZlcih0YXJnZXQpKSB7XG4gICAgICAgICAgICBjb250ZW50ID0gdGFyZ2V0LnRvU3RyaW5nKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ09ubHkgc3RyaW5nIG9yIGJ1ZmZlciBpcyBzdXBwb3J0ZWQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgZmxlc2ggPSBbe1xuICAgICAgICAgICAgICAgIHNyYzogJ3BhcnQwMScsXG4gICAgICAgICAgICAgICAgbWFya2Rvd246IGNvbnRlbnRcbiAgICAgICAgICAgIH1dO1xuICAgICAgICByZXR1cm4geyBuYXYsIGZsZXNoIH07XG4gICAgfSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcGFyc2Vycy90eHQtY29udGVudC50c1xuICoqLyIsImltcG9ydCAnaXNvbW9ycGhpYy1mZXRjaCc7XG5pbXBvcnQgcGFyc2VVcmxlbmNvZGVkIGZyb20gJy4uLy4uL3V0aWxzL3BhcnNlVXJsZW5jb2RlZCc7XG5pbXBvcnQganNvbnAgZnJvbSAnLi9qc29ucCc7XG5jb25zdCBkZWZhdWx0T3B0aW9ucyA9IHtcbiAgICBkYXRhVHlwZTogJ2pzb24nLFxuICAgIG1ldGhvZDogJ0dFVCcsXG4gICAgY3JlZGVudGlhbHM6ICdzYW1lLW9yaWdpbidcbn07XG4vLyByZXR1cm4gZmV0Y2ggb3B0aW9uc1xuY29uc3QgcGFyc2VPcHRpb25zID0gKG9yaWdpbmFuT3B0aW9ucykgPT4ge1xuICAgIGxldCB7IG1ldGhvZCwgZGF0YSwgY3JlZGVudGlhbHMsIGRhdGFUeXBlLCB1c2VKc29ucCB9ID0gT2JqZWN0LmFzc2lnbih7fSwgZGVmYXVsdE9wdGlvbnMsIG9yaWdpbmFuT3B0aW9ucyk7XG4gICAgbGV0IGZldGNoT3B0aW9ucyA9IHt9O1xuICAgIGlmICh1c2VKc29ucCkge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgdXNlSnNvbnA6IHRydWVcbiAgICAgICAgfTtcbiAgICB9XG4gICAgaWYgKG1ldGhvZCkge1xuICAgICAgICBmZXRjaE9wdGlvbnMubWV0aG9kID0gbWV0aG9kO1xuICAgIH1cbiAgICBpZiAoY3JlZGVudGlhbHMpIHtcbiAgICAgICAgZmV0Y2hPcHRpb25zLmNyZWRlbnRpYWxzID0gY3JlZGVudGlhbHM7XG4gICAgfVxuICAgIC8vIGhhbmRsZSByZXF1ZXN0IGhlYWRlcnMgYW5kIGJvZHlcbiAgICBpZiAobWV0aG9kID09PSAnUE9TVCcgfHwgbWV0aG9kID09PSAnUFVUJykge1xuICAgICAgICBsZXQgY29udGVudFR5cGU7XG4gICAgICAgIGxldCBib2R5O1xuICAgICAgICBpZiAoZGF0YVR5cGUgPT09ICdqc29uJykge1xuICAgICAgICAgICAgY29udGVudFR5cGUgPSAnYXBwbGljYXRpb24vanNvbic7XG4gICAgICAgICAgICBib2R5ID0gSlNPTi5zdHJpbmdpZnkoZGF0YSk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBjb250ZW50VHlwZSA9ICdhcHBsaWNhdGlvbi94LXd3dy1mb3JtLXVybGVuY29kZWQnO1xuICAgICAgICAgICAgYm9keSA9IHBhcnNlVXJsZW5jb2RlZChkYXRhKTtcbiAgICAgICAgICAgIGlmIChkYXRhVHlwZSAhPT0gJ3VybGVuY29kZWQnKSB7XG4gICAgICAgICAgICAgICAgY29uc29sZS53YXJuKCdVbnN1cHBvcnRlZCBkYXRhVHlwZSB1c2VkIFwidXJsZW5jb2RlZFwiIGluc3RlYWQhJyk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgZmV0Y2hPcHRpb25zLmhlYWRlcnMgPSB7XG4gICAgICAgICAgICAnQ29udGVudC1UeXBlJzogY29udGVudFR5cGUsXG4gICAgICAgICAgICAnQWNjZXNzLUNvbnRyb2wtUmVxdWVzdC1NZXRob2QnOiBtZXRob2RcbiAgICAgICAgfTtcbiAgICAgICAgZmV0Y2hPcHRpb25zLmJvZHkgPSBib2R5O1xuICAgIH1cbiAgICBpZiAobWV0aG9kID09PSAnREVMRVRFJykge1xuICAgICAgICBmZXRjaE9wdGlvbnMuaGVhZGVycyA9IHtcbiAgICAgICAgICAgICdBY2Nlc3MtQ29udHJvbC1SZXF1ZXN0LU1ldGhvZCc6ICdERUxFVEUnXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBmZXRjaE9wdGlvbnM7XG59O1xuLy8gdHlwZSBSZXN1bHQgPSB7XG4vLyAgIGpzb246IGFueVxuLy8gICBfcmVzcG9uc2U6IGFueVxuLy8gfVxuZXhwb3J0IGZ1bmN0aW9uIGNhbGxBcGkoZnVsbFVybCwgb3B0aW9ucyA9IHt9KSB7XG4gICAgaWYgKG9wdGlvbnMudXNlSnNvbnApIHtcbiAgICAgICAgcmV0dXJuIGpzb25wKGZ1bGxVcmwpO1xuICAgIH1cbiAgICByZXR1cm4gZmV0Y2goZnVsbFVybCwgcGFyc2VPcHRpb25zKG9wdGlvbnMpKVxuICAgICAgICAudGhlbihyZXNwb25zZSA9PiB7XG4gICAgICAgIGlmIChyZXNwb25zZS5zdGF0dXMgIT09IDIwNCkge1xuICAgICAgICAgICAgcmV0dXJuIHJlc3BvbnNlLmpzb24oKS50aGVuKGpzb24gPT4ge1xuICAgICAgICAgICAgICAgIGlmICghcmVzcG9uc2Uub2spIHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGpzb24pO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4geyBqc29uLCBfcmVzcG9uc2U6IHJlc3BvbnNlIH07XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4geyBqc29uOiB7fSwgX3Jlc3BvbnNlOiByZXNwb25zZSB9O1xuICAgIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgY2FsbEFwaTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc2VydmljZXMvdXRpbHMvY2FsbEFwaS50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImlzb21vcnBoaWMtZmV0Y2hcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImlzb21vcnBoaWMtZmV0Y2hcIlxuICoqIG1vZHVsZSBpZCA9IDc3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBqc29ucChmdWxsVXJsKSB7XG4gICAgaWYgKGZ1bGxVcmwuaW5kZXhPZignZG91YmFuJykgIT09IC0xKSB7XG4gICAgICAgIGxldCBpZCA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgICAgICBsZXQganNvbnBJZCA9ICdqc29ucC0nICsgaWQ7XG4gICAgICAgIGxldCBqc29ucENhbGxiYWNrID0gJ2pzb25wQ2FsbGJhY2snICsgaWQ7XG4gICAgICAgIGxldCBqc29ucENhbGxiYWNrRGF0YSA9IGBfX0pTT05QX0RBVEFfJHtpZH1fX2A7XG4gICAgICAgIHdpbmRvd1tqc29ucENhbGxiYWNrXSA9IGZ1bmN0aW9uIChkYXRhKSB7XG4gICAgICAgICAgICB3aW5kb3dbanNvbnBDYWxsYmFja0RhdGFdID0gZGF0YTtcbiAgICAgICAgfTtcbiAgICAgICAgbGV0IHNjcmlwdCA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ3NjcmlwdCcpO1xuICAgICAgICBzY3JpcHQuc2V0QXR0cmlidXRlKCdzcmMnLCBgJHtmdWxsVXJsfSZjYWxsYmFjaz0ke2pzb25wQ2FsbGJhY2t9YCk7XG4gICAgICAgIHNjcmlwdC5zZXRBdHRyaWJ1dGUoJ2lkJywganNvbnBJZCk7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQoc2NyaXB0KTtcbiAgICAgICAgcmV0dXJuIG5ldyBQcm9taXNlKHJlc29sdmUgPT4ge1xuICAgICAgICAgICAgc2NyaXB0Lm9ubG9hZCA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgICAgICBkb2N1bWVudC5ib2R5LnJlbW92ZUNoaWxkKGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGpzb25wSWQpKTtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHsganNvbjogd2luZG93W2pzb25wQ2FsbGJhY2tEYXRhXSB9KTtcbiAgICAgICAgICAgIH07XG4gICAgICAgIH0pO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc2VydmljZXMvdXRpbHMvanNvbnAudHNcbiAqKi8iLCJpbXBvcnQgTW9kZWwgZnJvbSAnLi4vbW9kZWxzL21vZGVsJztcbmltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBodW1wcyBmcm9tICdodW1wcyc7XG5jb25zdCBwcm9ncmVzc01vZGVsID0gbmV3IE1vZGVsKHNjaGVtYXMucHJvZ3Jlc3MpO1xuZXhwb3J0IGZ1bmN0aW9uIGdldFJlYWRpbmdQcm9ncmVzcyh1c2VySWQsIGJvb2tJZCkge1xuICAgIGNvbnN0IHF1ZXJ5ID0gaHVtcHMuZGVjYW1lbGl6ZUtleXMoeyB1c2VySWQsIGJvb2tJZCB9KTtcbiAgICByZXR1cm4gcHJvZ3Jlc3NNb2RlbC5saXN0KHsgZGlzYWJsZVBhZ2luYXRpb246IHRydWUsIHJhdzogdHJ1ZSwgcXVlcnkgfSkudGhlbihyZXMgPT4ge1xuICAgICAgICBpZiAocmVzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICAgICAgcmV0dXJuIHByb2dyZXNzTW9kZWwub3V0cHV0RW1wdHkoe1xuICAgICAgICAgICAgICAgIHVzZXJfaWQ6IHVzZXJJZCxcbiAgICAgICAgICAgICAgICBib29rX2lkOiBib29rSWRcbiAgICAgICAgICAgIH0pO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiByZXNbMF07XG4gICAgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0UmVhZGluZ1Byb2dyZXNzKHVzZXJJZCwgYm9va0lkLCBkYXRhKSB7XG4gICAgY29uc3QgcXVlcnkgPSBodW1wcy5kZWNhbWVsaXplS2V5cyh7IHVzZXJJZCwgYm9va0lkIH0pO1xuICAgIHJldHVybiBwcm9ncmVzc01vZGVsLnVwZGF0ZShxdWVyeSwgZGF0YSwge1xuICAgICAgICB1cHNlcnQ6IHRydWVcbiAgICB9KTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9hcGkvdXNlci50c1xuICoqLyIsImltcG9ydCBNb2RlbCBmcm9tICcuLi9tb2RlbHMvbW9kZWwnO1xuaW1wb3J0ICogYXMgc2NoZW1hcyBmcm9tICcuLi9kYXRhL3NjaGVtYXMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCB7IFJPTEVTIH0gZnJvbSAnLi4vLi4vaXNvbW9ycGhpYy9jb25zdGFudHMvY29tbW9uJztcbmNvbnN0IHVzZXJNb2RlbCA9IG5ldyBNb2RlbChzY2hlbWFzLnVzZXIpO1xuZXhwb3J0IGZ1bmN0aW9uIGZpbmRVc2VyKGlkKSB7XG4gICAgcmV0dXJuIHVzZXJNb2RlbC5maW5kT25lKGlkKS50aGVuKGVudGl0eSA9PiB7XG4gICAgICAgIHJldHVybiBfLm9taXQoZW50aXR5LCBbJ3Bhc3N3b3JkJ10pO1xuICAgIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZFVzZXIodXNlckluZm8pIHtcbiAgICByZXR1cm4gdXNlck1vZGVsLmFkZChfLmFzc2lnbih7fSwgdXNlckluZm8sIHtcbiAgICAgICAgcm9sZTogUk9MRVMuVVNFUlxuICAgIH0pKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9hcGkvdXNlcnMudHNcbiAqKi8iLCJpbXBvcnQgTW9kZWwgZnJvbSAnLi4vbW9kZWxzL21vZGVsJztcbmltcG9ydCAqIGFzIHNjaGVtYXMgZnJvbSAnLi4vZGF0YS9zY2hlbWFzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5jb25zdCBjb2xsZWN0aW9uTW9kZWwgPSBuZXcgTW9kZWwoc2NoZW1hcy5jb2xsZWN0aW9uKTtcbmV4cG9ydCBmdW5jdGlvbiBsaXN0Q29sbGVjdGlvbihwYWdlKSB7XG4gICAgcmV0dXJuIGNvbGxlY3Rpb25Nb2RlbC5saXN0KHtcbiAgICAgICAgcGFnZSxcbiAgICAgICAgZGlzYWJsZVBhZ2luYXRpb246IF8uaXNOaWwocGFnZSksXG4gICAgICAgIG1hcHBpbmc6IGVudGl0eSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIGVudGl0eSwge1xuICAgICAgICAgICAgICAgIGl0ZW1zOiBlbnRpdHlbJ2l0ZW1zJ10ubWFwKGl0ZW0gPT4gXy5vbWl0KGl0ZW0sICdjb250ZW50JykpXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2FwaS9jb2xsZWN0aW9ucy50c1xuICoqLyIsImltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgTW9kZWwgZnJvbSAnLi4vbW9kZWxzL21vZGVsJztcbmNsYXNzIEJhc2ljQXBpIHtcbiAgICBjb25zdHJ1Y3RvcihzY2hlbWEpIHtcbiAgICAgICAgdGhpcy5fc2NoZW1hID0gc2NoZW1hO1xuICAgICAgICB0aGlzLl9tb2RlbCA9IG5ldyBNb2RlbChzY2hlbWEpO1xuICAgIH1cbiAgICBmaW5kT25lKGlkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tb2RlbC5maW5kT25lKGlkKTtcbiAgICB9XG4gICAgbGlzdChwYWdlLCBrZXl3b3JkKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tb2RlbC5saXN0KHtcbiAgICAgICAgICAgIHBhZ2UsXG4gICAgICAgICAgICBkaXNhYmxlUGFnaW5hdGlvbjogXy5pc05pbChwYWdlKSxcbiAgICAgICAgICAgIC8vIFRPRE9cbiAgICAgICAgICAgIGZpbHRlcjogZW50aXR5ID0+IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGFkZChkYXRhKSB7XG4gICAgICAgIHJldHVybiB0aGlzLl9tb2RlbC5hZGQoZGF0YSk7XG4gICAgfVxuICAgIHVwZGF0ZShpZCwgZGF0YSkge1xuICAgICAgICAvLyB0b2RvXG4gICAgICAgIC8vIOaXoOazleaPkOWJjeefpemBk+aYr+WQpuS4uiB1cHNlcnTvvIzmiYDku6Xml6Dms5XpooTlhYjlhrPlrprmmK/lkKbpqozor4EgZmllbGRzXG4gICAgICAgIC8vIOWPr+iDveS8mumAoOaIkCB1cHNlcnQg55qE5pWw5o2uIGZpZWxkcyDkuI3lhajnmoTpl67pophcbiAgICAgICAgcmV0dXJuIHRoaXMuX21vZGVsLnVwZGF0ZShpZCwgZGF0YSk7XG4gICAgfVxuICAgIHJlbW92ZShpZCkge1xuICAgICAgICByZXR1cm4gdGhpcy5fbW9kZWwucmVtb3ZlKGlkKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBCYXNpY0FwaTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9hcGkvYmFzaWMtYXBpLnRzXG4gKiovIiwiY29uc3QgbWFrZUJhc2ljRW5kcG9pbnQgPSAoYXBpRm5zKSA9PiB7XG4gICAgY29uc3QgZmluZE9uZSA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICByZXEuYXBpUmVzdWx0cyA9IGFwaUZucy5maW5kT25lKHJlcS5wYXJhbXMuaWQpO1xuICAgICAgICBuZXh0KCk7XG4gICAgfTtcbiAgICBjb25zdCBsaXN0ID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpRm5zLmxpc3QocmVxLnF1ZXJ5LnBhZ2UgfHwgMSk7XG4gICAgICAgIG5leHQoKTtcbiAgICB9O1xuICAgIGNvbnN0IGFkZCA9IChyZXEsIHJlcywgbmV4dCkgPT4ge1xuICAgICAgICByZXEuYXBpUmVzdWx0cyA9IGFwaUZucy5hZGQocmVxLmJvZHkpO1xuICAgICAgICBuZXh0KCk7XG4gICAgfTtcbiAgICBjb25zdCB1cGRhdGUgPSAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgcmVxLmFwaVJlc3VsdHMgPSBhcGlGbnMudXBkYXRlKHJlcS5wYXJhbXMuaWQsIHJlcS5ib2R5KTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH07XG4gICAgY29uc3QgcmVtb3ZlID0gKHJlcSwgcmVzLCBuZXh0KSA9PiB7XG4gICAgICAgIHJlcS5hcGlSZXN1bHRzID0gYXBpRm5zLnJlbW92ZShyZXEucGFyYW1zLmlkKTtcbiAgICAgICAgbmV4dCgpO1xuICAgIH07XG4gICAgcmV0dXJuIHsgZmluZE9uZSwgbGlzdCwgYWRkLCB1cGRhdGUsIHJlbW92ZSB9O1xufTtcbmV4cG9ydCBkZWZhdWx0IG1ha2VCYXNpY0VuZHBvaW50O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2VuZHBvaW50cy9tYWtlLWJhc2ljLWVuZHBvaW50LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibXVsdGVyXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJtdWx0ZXJcIlxuICoqIG1vZHVsZSBpZCA9IDg0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgb3B0aW9ucyBmcm9tICcuLi9vcHRpb25zJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgY3JlYXRlUm91dGVzIGZyb20gJy4uLy4uL2lzb21vcnBoaWMvcm91dGVzL2NyZWF0ZVJvdXRlcyc7XG5pbXBvcnQgcmVuZGVyLCB7IHJlbmRlcjUwMCB9IGZyb20gJy4uL3JlbmRlcic7XG5jb25zdCBQUk9EX0VSUk9SX01TRyA9ICfnqI3lronli7/ouoHvvIzlt6XnqIvluIjmraPlnKjop6PlhrPpl67popggLi4uJztcbmNvbnN0IGlzUm9vdCA9IHVybCA9PiB7XG4gICAgbGV0IHVybFBhcnRzID0gdXJsLnNwbGl0KCc/JylbMF0uc3BsaXQoJy8nKTtcbiAgICBpZiAodXJsUGFydHMubGVuZ3RoICE9PSAyKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgaWYgKF8ubGFzdCh1cmxQYXJ0cykgIT09ICcnKSB7XG4gICAgICAgIHJldHVybiBmYWxzZTtcbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59O1xuZnVuY3Rpb24gcGFnZXMocmVxLCByZXMpIHtcbiAgICAvLyDmnI3liqHnq6/ot6/nlLHlhbPpl63vvIjku4XpmZDlvIDlj5HmqKHlvI/vvIlcbiAgICBpZiAob3B0aW9ucy5yb3V0ZSA9PT0gZmFsc2UpIHtcbiAgICAgICAgaWYgKCFpc1Jvb3QocmVxLnVybCkpIHtcbiAgICAgICAgICAgIHJlcy5zdGF0dXMoNDA0KS5zZW5kKGBcbiAgICAgICAgPGRpdiBzdHlsZT1cIm1hcmdpbjogNjBweCBhdXRvOyB3aWR0aDogNjAwcHg7IHBhZGRpbmc6IDVweCAyMHB4OyBib3JkZXI6IDFweCBzb2xpZCAjMjIyO1wiPlxuICAgICAgICAgIDxoMSBzdHlsZT1cImZvbnQtd2VpZ2h0OiBib2xkOyBmb250LXNpemU6IDIycHg7IG1hcmdpbjogMTBweCAwO1wiPjQwNCBOb3QgRm91bmQ8L2gxPlxuICAgICAgICAgIDxwIHN0eWxlPVwibWFyZ2luOiAxMHB4IDA7XCI+RGV2IG1vZGUgd2l0aCBzZXJ2ZXIgcm91dGluZyBkaXNhYmxlZDwvcD5cbiAgICAgICAgPC9kaXY+XG4gICAgICBgKTtcbiAgICAgICAgICAgIHJldHVybiBmYWxzZTtcbiAgICAgICAgfVxuICAgICAgICByZW5kZXIoKS50aGVuKHJlc3VsdCA9PiB7XG4gICAgICAgICAgICByZXMuc2VuZChyZXN1bHQpO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cbiAgICBjb25zdCBpc1Byb2QgPSBvcHRpb25zLnByb2R1Y3Rpb247XG4gICAgdHJ5IHtcbiAgICAgICAgcmVuZGVyKHtcbiAgICAgICAgICAgIHJlcVVybDogcmVxLnVybCxcbiAgICAgICAgICAgIHJvdXRlczogY3JlYXRlUm91dGVzKHsgcmVxdWVzdDogcmVxLCByZXNwb25zZTogcmVzIH0pLFxuICAgICAgICAgICAgaXNQcm9kLFxuICAgICAgICAgICAgZmV0Y2hEYXRhOiBvcHRpb25zLnJlbmRlcixcbiAgICAgICAgICAgIGlzSG90OiBvcHRpb25zLmhvdCxcbiAgICAgICAgICAgIHVzZXJTZXNzaW9uOiByZXEuY29udGV4dC51c2VyXG4gICAgICAgIH0pLnRoZW4oKHsgaHRtbCwgcmVkaXJlY3RMb2NhdGlvbiwgc3RhdHVzQ29kZSB9KSA9PiB7XG4gICAgICAgICAgICBpZiAocmVkaXJlY3RMb2NhdGlvbikge1xuICAgICAgICAgICAgICAgIHJlcy5yZWRpcmVjdCgzMDIsIHJlZGlyZWN0TG9jYXRpb24ucGF0aG5hbWUgKyByZWRpcmVjdExvY2F0aW9uLnNlYXJjaCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXMuc3RhdHVzKHN0YXR1c0NvZGUpLnNlbmQoaHRtbCk7XG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc3QgZXJyb3JNc2cgPSBpc1Byb2QgPyBQUk9EX0VSUk9SX01TRyA6IGVycm9yLm1lc3NhZ2U7XG4gICAgICAgIGNvbnN0IGh0bWxTdHJpbmcgPSByZW5kZXI1MDAoZXJyb3JNc2csIGlzUHJvZCk7XG4gICAgICAgIHJlcy5zdGF0dXMoNTAwKS5zZW5kKGh0bWxTdHJpbmcpO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IHBhZ2VzO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JvdXRlcy9wYWdlcy50c3hcbiAqKi8iLCJpbXBvcnQgYXJndiBmcm9tICcuL2hlbHBlcnMvcGFyc2VkLWFyZ3YnO1xuaW1wb3J0IGV4cHJlc3MgZnJvbSAnZXhwcmVzcyc7XG4vKipcbiAqIFNlcnZlciDmlK/mjIHnmoTpgInpoblcbiAqIC0taG90IOeDremHjei9vVxuICogLS1wcm9kdWN0aW9uIOeUn+S6p+eOr+Wig1xuICogLS1ub1JlbmRlciDmnI3liqHnq6/muLLmn5NcbiAqIC0tbm9Sb3V0ZSDmnI3liqHnq6/ot6/nlLFcbiAqL1xuY29uc3QgYXBwID0gZXhwcmVzcygpO1xuY29uc3QgYXBwRW52ID0gYXBwLmdldCgnZW52Jyk7XG5sZXQgcmVuZGVyID0gIUJvb2xlYW4oYXJndlsnbm9SZW5kZXInXSk7XG5jb25zdCBob3QgPSBCb29sZWFuKGFyZ3ZbJ2hvdCddKTtcbmNvbnN0IHJvdXRlID0gIUJvb2xlYW4oYXJndlsnbm9Sb3V0ZSddKTtcbmlmIChyb3V0ZSA9PT0gZmFsc2UpIHtcbiAgICByZW5kZXIgPSBmYWxzZTtcbn1cbmxldCBwcm9kdWN0aW9uID0gQm9vbGVhbihhcmd2Wydwcm9kdWN0aW9uJ10pO1xuaWYgKGFwcEVudiA9PT0gJ3Byb2R1Y3Rpb24nKSB7XG4gICAgcHJvZHVjdGlvbiA9IHRydWU7XG59XG5jb25zdCBvcHRpb25zID0ge1xuICAgIGhvdCxcbiAgICByZW5kZXIsXG4gICAgcm91dGUsXG4gICAgcHJvZHVjdGlvblxufTtcbmV4cG9ydCBkZWZhdWx0IG9wdGlvbnM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvb3B0aW9ucy50c1xuICoqLyIsImltcG9ydCBtaW5pbWlzdCBmcm9tICdtaW5pbWlzdCc7XG5jb25zdCBhcmd2ID0gbWluaW1pc3QocHJvY2Vzcy5hcmd2LnNsaWNlKDIpKTtcbmV4cG9ydCBkZWZhdWx0IGFyZ3Y7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvaGVscGVycy9wYXJzZWQtYXJndi50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIm1pbmltaXN0XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJtaW5pbWlzdFwiXG4gKiogbW9kdWxlIGlkID0gODhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xuaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBNYXN0ZXIgZnJvbSAnLi4vY29udGFpbmVycy9NYXN0ZXInO1xuaW1wb3J0IEFwcCBmcm9tICcuLi9jb250YWluZXJzL0FwcCc7XG5pbXBvcnQgQ29uc29sZSBmcm9tICcuLi9jb250YWluZXJzL0NvbnNvbGUnO1xuaW1wb3J0IHsgUm91dGUsIEluZGV4UmVkaXJlY3QsIEluZGV4Um91dGUgfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IGFwaSBmcm9tICcuLi9zZXJ2aWNlcy9hcGknO1xuaW1wb3J0IHsgUk9MRVMgfSBmcm9tICcuLi9jb25zdGFudHMvY29tbW9uJztcbmNvbnN0IGNyZWF0ZVJvdXRlcyA9IChjb250ZXh0ID0ge30pID0+IHtcbiAgICBjb25zdCB7IHJlcXVlc3QsIHJlc3BvbnNlIH0gPSBjb250ZXh0O1xuICAgIGNvbnN0IGhhbmRsZUNvbnNvbGVFbnRlciA9IChuZXh0U3RhdGUsIHJlcGxhY2UsIGNhbGxiYWNrKSA9PiB7XG4gICAgICAgIGlmIChyZXF1ZXN0KSB7XG4gICAgICAgICAgICAvLyDmnI3liqHnq6/moKHpqozmlrnlvI9cbiAgICAgICAgICAgIGNvbnN0IHsgY29udGV4dDogeyB1c2VyOiB7IHJvbGUgfSB9IH0gPSByZXF1ZXN0O1xuICAgICAgICAgICAgaWYgKHJvbGUgIT09IFJPTEVTLkFETUlOKSB7XG4gICAgICAgICAgICAgICAgcmVzcG9uc2UucmVkaXJlY3QoJy8nKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAvLyDlrqLmiLfnq6/moKHpqozmlrnlvI9cbiAgICAgICAgICAgIHRyeSB7XG4gICAgICAgICAgICAgICAgYXBpLmF1dGgoKS50aGVuKHJlcyA9PiB7XG4gICAgICAgICAgICAgICAgICAgIGlmIChyZXMuanNvbi5yb2xlICE9PSBST0xFUy5BRE1JTikge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmVwbGFjZSgnLycpO1xuICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIGNhbGxiYWNrKCk7XG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICBhbGVydCgn5pyN5Yqh5Zmo5byC5bi477yM6K+356iN5ZCO5YaN6K+V77yBJyk7XG4gICAgICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBwYXRoOiBcIi9cIiwgY29tcG9uZW50OiBNYXN0ZXIgfSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcInZpZXdlci9ib29rLzppZFwiIH0sIHJlcXVpcmUoJy4vVmlld2VyJykpKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcInRlc3RcIiB9LCByZXF1aXJlKCcuL1Rlc3RQbGFjZScpKSksXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgY29tcG9uZW50OiBBcHAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5kZXhSb3V0ZSwgX19hc3NpZ24oe30sIHJlcXVpcmUoJy4vQXBwSG9tZScpKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwiYnJvd3NlXCIgfSwgcmVxdWlyZSgnLi9Ccm93c2UnKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImJvb2svOmlkXCIgfSwgcmVxdWlyZSgnLi9Cb29rRGV0YWlsJykpKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJjb2xsZWN0aW9uc1wiIH0sIHJlcXVpcmUoJy4vQ29sbGVjdGlvbnMnKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImNvbGxlY3Rpb25zLzppZFwiIH0sIHJlcXVpcmUoJy4vQ29sbGVjdGlvbkRldGFpbCcpKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwic2lnbmluXCIgfSwgcmVxdWlyZSgnLi9TaWduaW4nKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcInNpZ251cFwiIH0sIHJlcXVpcmUoJy4vU2lnbnVwJykpKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIHsgcGF0aDogXCJ1c2VyXCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEluZGV4UmVkaXJlY3QsIHsgdG86IFwiL3VzZXIvcHJvZmlsZVwiIH0pLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJzaGVsZlwiIH0sIHJlcXVpcmUoJy4vU2hlbGYnKSkpLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJwcmVmZXJlbmNlXCIgfSwgcmVxdWlyZSgnLi9QcmVmZXJlbmNlJykpKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwicHJvZmlsZVwiIH0sIHJlcXVpcmUoJy4vUHJvZmlsZScpKSkpKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgeyBvbkVudGVyOiBoYW5kbGVDb25zb2xlRW50ZXIsIHBhdGg6IFwiY29uc29sZVwiLCBjb21wb25lbnQ6IENvbnNvbGUgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSW5kZXhSZWRpcmVjdCwgeyB0bzogXCIvY29uc29sZS9ib29rc1wiIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImJvb2tzXCIgfSwgcmVxdWlyZSgnLi9NYW5hZ2VCb29rcycpKSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwidXNlcnNcIiB9LCByZXF1aXJlKCcuL01hbmFnZVVzZXJzJykpKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoUm91dGUsIF9fYXNzaWduKHsgcGF0aDogXCJib29rcy9uZXdcIiB9LCByZXF1aXJlKCcuL0FkZEJvb2snKSkpLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZSwgX19hc3NpZ24oeyBwYXRoOiBcImNvbGxlY3Rpb25zL25ld1wiIH0sIHJlcXVpcmUoJy4vQWRkQ29sbGVjdGlvbicpKSkpLFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFJvdXRlLCBfX2Fzc2lnbih7IHBhdGg6IFwiKlwiIH0sIHJlcXVpcmUoJy4vTm9NYXRjaCcpKSkpKTtcbn07XG5leHBvcnQgZGVmYXVsdCBjcmVhdGVSb3V0ZXM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9jcmVhdGVSb3V0ZXMudHN4XG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3RcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlYWN0XCJcbiAqKiBtb2R1bGUgaWQgPSA5MFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBzZW5kTm90aWZpY2F0aW9uLCBoaWRlTm90aWZpY2F0aW9uLCBjbG9zZUNvbmZpcm1Nb2RhbCwgdXNlckF1dGgsIGNsb3NlTW9kYWwgfSBmcm9tICcuLi9zdG9yZS9hY3Rpb25zJztcbmltcG9ydCB7IEFsZXJ0cyB9IGZyb20gJy4uL2VsZW1lbnRzL0FsZXJ0JztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBDb25maXJtTW9kYWwgfSBmcm9tICcuLi9lbGVtZW50cy9Nb2RhbCc7XG5pbXBvcnQgeyBNb2RhbFBsdXMgfSBmcm9tICcuLi9lbGVtZW50cy9Nb2RhbCc7XG5jbGFzcyBNYXN0ZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHN0YXRpYyBmZXRjaERhdGEoeyBzdG9yZSwgdXNlclNlc3Npb24gfSkge1xuICAgICAgICByZXR1cm4gc3RvcmUuZGlzcGF0Y2godXNlckF1dGgodXNlclNlc3Npb24pKTtcbiAgICB9XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICBjb25zdCBoYXNOZXdFcnJvck1zZyA9IHRoaXMucHJvcHMuZXJyb3JNZXNzYWdlLmxlbmd0aCAhPT0gbmV4dFByb3BzLmVycm9yTWVzc2FnZS5sZW5ndGg7XG4gICAgICAgIGNvbnN0IHJvdXRlckNoYW5nZWQgPSBuZXh0UHJvcHMucm91dGluZy5sb2NhdGlvbkJlZm9yZVRyYW5zaXRpb25zLnBhdGhuYW1lICE9PSB0aGlzLnByb3BzLnJvdXRpbmcubG9jYXRpb25CZWZvcmVUcmFuc2l0aW9ucy5wYXRobmFtZTtcbiAgICAgICAgaWYgKGhhc05ld0Vycm9yTXNnKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLnNlbmROb3RpZmljYXRpb24oXy5sYXN0KG5leHRQcm9wcy5lcnJvck1lc3NhZ2UpLnRvU3RyaW5nKCksICdlcnJvcicsIDApO1xuICAgICAgICB9XG4gICAgICAgIGlmIChyb3V0ZXJDaGFuZ2VkKSB7XG4gICAgICAgICAgICAvLyDov5Tlm57pobbpg6hcbiAgICAgICAgICAgIHdpbmRvdy5kb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA9IDA7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50RGlkTW91bnQoKSB7XG4gICAgICAgIHRoaXMucHJvcHMudXNlckF1dGgoKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNvbmZpcm1Nb2RhbCwgY2xvc2VDb25maXJtTW9kYWwsIG1vZGFsLCBjbG9zZU1vZGFsIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiYXBwLXJvb3RcIiB9LFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChDb25maXJtTW9kYWwsIHsgb3BlbjogY29uZmlybU1vZGFsLm9wZW4sIHRpdGxlOiBjb25maXJtTW9kYWwudGl0bGUsIG9uQ29uZmlybTogY29uZmlybU1vZGFsLm9uQ29uZmlybSwgb25SZXF1ZXN0Q2xvc2U6IGNsb3NlQ29uZmlybU1vZGFsLCB3aWR0aDogNTAwIH0sIGNvbmZpcm1Nb2RhbC5jb250ZW50KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWxQbHVzLCB7IG9wZW46IG1vZGFsLm9wZW4sIHdpZHRoOiA1MDAsIG9uUmVxdWVzdENsb3NlOiBjbG9zZU1vZGFsLCB0aXRsZTogbW9kYWwudGl0bGUgfSwgbW9kYWwuY29udGVudCksXG4gICAgICAgICAgICB0aGlzLnByb3BzLm5vdGlmaWNhdGlvbnMuZmlsdGVyKG5vdGkgPT4gbm90aS52aXNpYmxlKS5sZW5ndGggPiAwICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KEFsZXJ0cywgeyBvblJlcXVlc3RDbG9zZTogdGhpcy5wcm9wcy5oaWRlTm90aWZpY2F0aW9uLCBtZXNzYWdlczogdGhpcy5wcm9wcy5ub3RpZmljYXRpb25zLm1hcChub3RpID0+ICh7XG4gICAgICAgICAgICAgICAgICAgIGNvbnRlbnQ6IG5vdGkubWVzc2FnZSB8fCAn5Y+R55Sf6ZSZ6K+v77yBJyxcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogbm90aS50eXBlLFxuICAgICAgICAgICAgICAgICAgICB2aXNpYmxlOiBub3RpLnZpc2libGUsXG4gICAgICAgICAgICAgICAgICAgIGlkOiBub3RpLmlkXG4gICAgICAgICAgICAgICAgfSkpIH0pKSxcbiAgICAgICAgICAgIHRoaXMucHJvcHMuY2hpbGRyZW4pKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KHN0YXRlID0+ICh7XG4gICAgbm90aWZpY2F0aW9uczogc3RhdGUuY29tcG9uZW50cy5ub3RpZmljYXRpb25zLFxuICAgIGVycm9yTWVzc2FnZTogc3RhdGUuZXJyb3JNZXNzYWdlLFxuICAgIGNvbmZpcm1Nb2RhbDogc3RhdGUuY29tcG9uZW50cy5jb25maXJtTW9kYWwsXG4gICAgbW9kYWw6IHN0YXRlLmNvbXBvbmVudHMubW9kYWwsXG4gICAgcm91dGluZzogc3RhdGUucm91dGluZyxcbiAgICBzZXNzaW9uOiBzdGF0ZS5zZXNzaW9uLFxufSksIHsgc2VuZE5vdGlmaWNhdGlvbiwgaGlkZU5vdGlmaWNhdGlvbiwgY2xvc2VDb25maXJtTW9kYWwsIHVzZXJBdXRoLCBjbG9zZU1vZGFsIH0pKE1hc3Rlcik7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvTWFzdGVyLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXJlZHV4XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWFjdC1yZWR1eFwiXG4gKiogbW9kdWxlIGlkID0gOTJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB7IGFjdGlvbnMgYXMgZm9ybSB9IGZyb20gJ2JldHRlci1yZWR1eC1mb3JtJztcbmV4cG9ydCAqIGZyb20gJy4vYXBpJztcbmV4cG9ydCAqIGZyb20gJy4vY29tbW9uJztcbmV4cG9ydCAqIGZyb20gJy4vdGVzdCc7XG5leHBvcnQgKiBmcm9tICcuL3ZpZXdlcic7XG4vLyBmb3JtXG5leHBvcnQgY29uc3QgaW5pdGlhbGl6ZUZvcm0gPSBmb3JtLmluaXRpYWxpemU7XG5leHBvcnQgY29uc3QgcmVzZXRGb3JtID0gZm9ybS5yZXNldDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9pbmRleC50c1xuICoqLyIsImltcG9ydCB1dGlscyBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgc2NoZW1hcyBmcm9tICcuLi8uLi9zZXJ2aWNlcy9zY2hlbWFzJztcbmltcG9ydCB7IERPVUJBTl9BUElfUk9PVCB9IGZyb20gJy4uLy4uL2NvbnN0YW50cy9jb21tb24nO1xuaW1wb3J0IHsgY3JlYXRlQWN0aW9uRW50aXR5LCBhY3Rpb24gfSBmcm9tICcuL3V0aWxzJztcbmltcG9ydCAqIGFzIEFjdGlvblR5cGVzIGZyb20gJy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5leHBvcnQgY29uc3QgcmVtb3ZlRW50aXR5ID0gKG5hbWUsIGlkKSA9PiAoeyB0eXBlOiBBY3Rpb25UeXBlcy5SRU1PVkVfRU5USVRZLCBuYW1lLCBpZCB9KTtcbmV4cG9ydCBjb25zdCBib29rID0gY3JlYXRlQWN0aW9uRW50aXR5KEFjdGlvblR5cGVzLkJPT0spO1xuZXhwb3J0IGNvbnN0IGxvYWRCb29rID0gKGlkKSA9PiBhY3Rpb24oQWN0aW9uVHlwZXMuTE9BRF9CT09LLCB7IGlkIH0pO1xuZXhwb3J0IGNvbnN0IGJvb2tDb250ZW50ID0gY3JlYXRlQWN0aW9uRW50aXR5KEFjdGlvblR5cGVzLkJPT0tfQ09OVEVOVCk7XG5leHBvcnQgY29uc3QgbG9hZEJvb2tDb250ZW50ID0gKGlkKSA9PiBhY3Rpb24oQWN0aW9uVHlwZXMuTE9BRF9CT09LX0NPTlRFTlQsIHsgaWQgfSk7XG5leHBvcnQgY29uc3QgYm9va3MgPSBjcmVhdGVBY3Rpb25FbnRpdHkoQWN0aW9uVHlwZXMuQk9PS1MpO1xuZXhwb3J0IGNvbnN0IGxvYWRCb29rcyA9IChvcHRpb25zLCBrZXkpID0+IGFjdGlvbihBY3Rpb25UeXBlcy5MT0FEX0JPT0tTLCB7IG9wdGlvbnMsIGtleSB9KTtcbmV4cG9ydCBjb25zdCB1c2VycyA9IGNyZWF0ZUFjdGlvbkVudGl0eShBY3Rpb25UeXBlcy5VU0VSUyk7XG5leHBvcnQgY29uc3QgbG9hZFVzZXJzID0gKG9wdGlvbnMpID0+IGFjdGlvbihBY3Rpb25UeXBlcy5MT0FEX1VTRVJTLCB7IG9wdGlvbnMgfSk7XG5leHBvcnQgY29uc3QgbG9nb3V0ID0gY3JlYXRlQWN0aW9uRW50aXR5KEFjdGlvblR5cGVzLkxPR09VVCk7XG5leHBvcnQgY29uc3QgdXNlckxvZ291dCA9ICgpID0+IGFjdGlvbihBY3Rpb25UeXBlcy5VU0VSX0xPR09VVCk7XG5leHBvcnQgY29uc3QgcHJvZ3Jlc3MgPSBjcmVhdGVBY3Rpb25FbnRpdHkoQWN0aW9uVHlwZXMuQk9PS19QUk9HUkVTUyk7XG5leHBvcnQgY29uc3QgbG9hZEJvb2tQcm9ncmVzcyA9IChpZCkgPT4gYWN0aW9uKEFjdGlvblR5cGVzLkxPQURfQk9PS19QUk9HUkVTUywgeyBpZCB9KTtcbi8vIGRlZmluZSBsb2FkIGFjdGlvbnMgaGFuZGxlZCBpbiBzYWdhc1xuZXhwb3J0IGNvbnN0IExPQURfQUNUSU9OUyA9IFtBY3Rpb25UeXBlcy5MT0FEX0JPT0ssIEFjdGlvblR5cGVzLkxPQURfQk9PS19DT05URU5ULCBBY3Rpb25UeXBlcy5MT0FEX0JPT0tTLCBBY3Rpb25UeXBlcy5MT0FEX1VTRVJTXTtcbi8qKlxuICogbGVnYWN5IGNhbGwgYXBpIGFjdGlvbnNcbiAqL1xuZXhwb3J0IGZ1bmN0aW9uIGZldGNoQXV0aG9ycyhvcHRpb25zKSB7XG4gICAgY29uc3QgQ0FMTF9BUEkgPSB7XG4gICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuQVVUSE9SUy5SRVFVRVNULCBBY3Rpb25UeXBlcy5BVVRIT1JTLlNVQ0NFU1MsIEFjdGlvblR5cGVzLkFVVEhPUlMuRkFJTFVSRV0sXG4gICAgICAgIGVuZHBvaW50OiBgYXV0aG9ycz8ke3V0aWxzLnBhcnNlVXJsZW5jb2RlZChvcHRpb25zKX1gLFxuICAgICAgICBzY2hlbWE6IHNjaGVtYXMuQVVUSE9SX0FSUkFZLFxuICAgICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgICAgICBuYW1lOiAnYXV0aG9ycycsXG4gICAgICAgICAgICBxOiBvcHRpb25zLnFcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHsgQ0FMTF9BUEkgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaENvbGxlY3Rpb25zKGZsb3dUeXBlID0gJ25ld2VzdCcpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBmbG93VHlwZSxcbiAgICAgICAgQ0FMTF9BUEk6IHtcbiAgICAgICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuQ09MTEVDVElPTlMuUkVRVUVTVCwgQWN0aW9uVHlwZXMuQ09MTEVDVElPTlMuU1VDQ0VTUywgQWN0aW9uVHlwZXMuQ09MTEVDVElPTlMuRkFJTFVSRV0sXG4gICAgICAgICAgICBlbmRwb2ludDogYGNvbGxlY3Rpb25zYCxcbiAgICAgICAgICAgIHNjaGVtYTogc2NoZW1hcy5DT0xMRUNUSU9OX0FSUkFZXG4gICAgICAgIH1cbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoQ29sbGVjdGlvbihjb2xsZWN0aW9uSWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICBjb2xsZWN0aW9uSWQsXG4gICAgICAgIENBTExfQVBJOiB7XG4gICAgICAgICAgICB0eXBlczogW0FjdGlvblR5cGVzLkNPTExFQ1RJT04uUkVRVUVTVCwgQWN0aW9uVHlwZXMuQ09MTEVDVElPTi5TVUNDRVNTLCBBY3Rpb25UeXBlcy5DT0xMRUNUSU9OLkZBSUxVUkVdLFxuICAgICAgICAgICAgZW5kcG9pbnQ6IGBjb2xsZWN0aW9ucy8ke2NvbGxlY3Rpb25JZH1gLFxuICAgICAgICAgICAgc2NoZW1hOiBzY2hlbWFzLkNPTExFQ1RJT05cbiAgICAgICAgfVxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gc2VhcmNoRG91YmFuQm9va3MocSkge1xuICAgIGNvbnN0IENBTExfQVBJID0ge1xuICAgICAgICB0eXBlczogW0FjdGlvblR5cGVzLkRPVUJBTl9CT09LUy5SRVFVRVNULCBBY3Rpb25UeXBlcy5ET1VCQU5fQk9PS1MuU1VDQ0VTUywgQWN0aW9uVHlwZXMuRE9VQkFOX0JPT0tTLkZBSUxVUkVdLFxuICAgICAgICBlbmRwb2ludDogYGJvb2svc2VhcmNoP2NvdW50PTEwJnE9JHtxfWAsXG4gICAgICAgIGFwaVVybDogRE9VQkFOX0FQSV9ST09ULFxuICAgICAgICBzY2hlbWE6IHNjaGVtYXMuRE9VQkFOX0JPT0tfU0VBUkNIX1JFU1VMVFMsXG4gICAgICAgIG9wdGlvbnM6IHsgdXNlSnNvbnA6IHRydWUgfSxcbiAgICAgICAgcGFnaW5hdGlvbjoge1xuICAgICAgICAgICAgbmFtZTogJ2RvdWJhbkJvb2tzJyxcbiAgICAgICAgICAgIHFcbiAgICAgICAgfVxuICAgIH07XG4gICAgcmV0dXJuIHsgcSwgQ0FMTF9BUEkgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBmZXRjaFByb2ZpbGUoKSB7XG4gICAgY29uc3QgQ0FMTF9BUEkgPSB7XG4gICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuUFJPRklMRS5SRVFVRVNULCBBY3Rpb25UeXBlcy5QUk9GSUxFLlNVQ0NFU1MsIEFjdGlvblR5cGVzLlBST0ZJTEUuRkFJTFVSRV0sXG4gICAgICAgIGVuZHBvaW50OiBgdXNlci9wcm9maWxlYCxcbiAgICAgICAgc2NoZW1hOiBzY2hlbWFzLlBST0ZJTEVcbiAgICB9O1xuICAgIHJldHVybiB7IENBTExfQVBJIH07XG59XG5leHBvcnQgZnVuY3Rpb24gdXNlckF1dGgodXNlclNlc3Npb24pIHtcbiAgICAvLyDmnI3liqHnq6/muLLmn5Mgc2Vzc2lvblxuICAgIGlmICh1c2VyU2Vzc2lvbikge1xuICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgU0VSVkVSX1NUT1JFOiB7XG4gICAgICAgICAgICAgICAgYm9keToge1xuICAgICAgICAgICAgICAgICAgICByZXNwb25zZTogdXNlclNlc3Npb24sXG4gICAgICAgICAgICAgICAgICAgIHR5cGU6IEFjdGlvblR5cGVzLkFVVEguU1VDQ0VTU1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmV0dXJuIHtcbiAgICAgICAgQ0FMTF9BUEk6IHtcbiAgICAgICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuQVVUSC5SRVFVRVNULCBBY3Rpb25UeXBlcy5BVVRILlNVQ0NFU1MsIEFjdGlvblR5cGVzLkFVVEguRkFJTFVSRV0sXG4gICAgICAgICAgICBlbmRwb2ludDogJ2F1dGgnXG4gICAgICAgIH1cbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGZldGNoU2hlbGYoKSB7XG4gICAgY29uc3QgQ0FMTF9BUEkgPSB7XG4gICAgICAgIHR5cGVzOiBbQWN0aW9uVHlwZXMuU0hFTEYuUkVRVUVTVCwgQWN0aW9uVHlwZXMuU0hFTEYuU1VDQ0VTUywgQWN0aW9uVHlwZXMuU0hFTEYuRkFJTFVSRV0sXG4gICAgICAgIGVuZHBvaW50OiBgdXNlci9ib29rcy9zaGVsZmAsXG4gICAgICAgIHNjaGVtYTogc2NoZW1hcy5TSEVMRl9CT09LX0FSUkFZLFxuICAgICAgICBwYWdpbmF0aW9uOiB7XG4gICAgICAgICAgICBuYW1lOiAnYm9va1NoZWx2ZXMnXG4gICAgICAgIH1cbiAgICB9O1xuICAgIHJldHVybiB7IENBTExfQVBJIH07XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvYXBpLnRzXG4gKiovIiwiaW1wb3J0IGdldEN1cnJlbnRUaW1lIGZyb20gJy4vZ2V0Q3VycmVudFRpbWUnO1xuaW1wb3J0IHBhZE51bWJlcldpdGhaZXJvIGZyb20gJy4vcGFkTnVtYmVyV2l0aFplcm8nO1xuaW1wb3J0IHBhcnNlUXVlcnkgZnJvbSAnLi9wYXJzZVF1ZXJ5JztcbmltcG9ydCBwYXJzZVVybGVuY29kZWQgZnJvbSAnLi9wYXJzZVVybGVuY29kZWQnO1xuaW1wb3J0IGRvbSBmcm9tICcuL2RvbSc7XG5pbXBvcnQgYnJvd3NlciBmcm9tICcuL2Jyb3dzZXInO1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbih7XG4gICAgZ2V0Q3VycmVudFRpbWUsXG4gICAgcGFkTnVtYmVyV2l0aFplcm8sXG4gICAgcGFyc2VRdWVyeSxcbiAgICBwYXJzZVVybGVuY29kZWRcbn0sIGRvbSwgYnJvd3Nlcik7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IHBhZE51bWJlcldpdGhaZXJvIGZyb20gJy4vcGFkTnVtYmVyV2l0aFplcm8nO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0Q3VycmVudFRpbWUoKSB7XG4gICAgY29uc3QgZCA9IG5ldyBEYXRlKCk7XG4gICAgY29uc3QgdGltZSA9IFtkLmdldEZ1bGxZZWFyKCksIGQuZ2V0TW9udGgoKSArIDEsIGQuZ2V0RGF0ZSgpLCBkLmdldEhvdXJzKCksIGQuZ2V0TWludXRlcygpLCBkLmdldFNlY29uZHMoKV07XG4gICAgcmV0dXJuIHRpbWUubWFwKHQgPT4ge1xuICAgICAgICByZXR1cm4gcGFkTnVtYmVyV2l0aFplcm8odCk7XG4gICAgfSkuam9pbignJyk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2dldEN1cnJlbnRUaW1lLnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gcGFkTnVtYmVyV2l0aFplcm8obnVtKSB7XG4gICAgbGV0IG51bVN0cldpdGhaZXJvO1xuICAgIGlmIChudW0gPCAxMCkge1xuICAgICAgICBudW1TdHJXaXRoWmVybyA9ICcwJyArIG51bS50b1N0cmluZygpO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbnVtU3RyV2l0aFplcm8gPSBudW0udG9TdHJpbmcoKTtcbiAgICB9XG4gICAgcmV0dXJuIG51bVN0cldpdGhaZXJvO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9wYWROdW1iZXJXaXRoWmVyby50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhcnNlUXVlcnkocXVlcnlTdHJpbmcpIHtcbiAgICBjb25zdCBwYXJhbXMgPSBxdWVyeVN0cmluZy5zcGxpdCgnJicpO1xuICAgIGxldCBvYmplY3QgPSB7fTtcbiAgICBwYXJhbXMuZm9yRWFjaChwYXJhbSA9PiB7XG4gICAgICAgIGNvbnN0IGtleSA9IHBhcmFtLnNwbGl0KCc9JylbMF07XG4gICAgICAgIGNvbnN0IHZhbCA9IHBhcmFtLnNwbGl0KCc9JylbMV07XG4gICAgICAgIG9iamVjdFtrZXldID0gdmFsO1xuICAgIH0pO1xuICAgIHJldHVybiBvYmplY3Q7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL3BhcnNlUXVlcnkudHNcbiAqKi8iLCJpbXBvcnQgaXNEZXNjZW5kYW50IGZyb20gJy4vaXNEZXNjZW5kYW50JztcbmV4cG9ydCBkZWZhdWx0IHtcbiAgICBpc0Rlc2NlbmRhbnRcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2RvbS9pbmRleC50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGlzRGVzY2VuZGFudChwYXJlbnQsIGNoaWxkKSB7XG4gICAgbGV0IG5vZGUgPSBjaGlsZC5wYXJlbnROb2RlO1xuICAgIHdoaWxlIChub2RlICE9IG51bGwpIHtcbiAgICAgICAgaWYgKG5vZGUgPT09IHBhcmVudCkge1xuICAgICAgICAgICAgcmV0dXJuIHRydWU7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZSA9IG5vZGUucGFyZW50Tm9kZTtcbiAgICB9XG4gICAgcmV0dXJuIGZhbHNlO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9kb20vaXNEZXNjZW5kYW50LnRzXG4gKiovIiwiaW1wb3J0IGdldFNjcmVlbkluZm8gZnJvbSAnLi9nZXRTY3JlZW5JbmZvJztcbmltcG9ydCBpc0lFIGZyb20gJy4vaXNJRSc7XG5pbXBvcnQgbG9ja1Njcm9sbCBmcm9tICcuL2xvY2tTY3JvbGwnO1xuaW1wb3J0IHVubG9ja1Njcm9sbCBmcm9tICcuL3VubG9ja1Njcm9sbCc7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgZ2V0U2NyZWVuSW5mbyxcbiAgICBpc0lFLFxuICAgIGxvY2tTY3JvbGwsXG4gICAgdW5sb2NrU2Nyb2xsXG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2luZGV4LnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gZ2V0U2NyZWVuSW5mbygpIHtcbiAgICBpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcignd2luZG93IGlzIHVuZGVmaW5lZCwgZW1wdHkgaW5mbyBvYmplY3Qgd2lsbCBiZSByZXR1cm5lZCEnKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIHZpZXc6IHt9LFxuICAgICAgICAgICAgc2NyZWVuOiB7fVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4ge1xuICAgICAgICB2aWV3OiB7XG4gICAgICAgICAgICB3aWR0aDogd2luZG93LmlubmVyV2lkdGgsXG4gICAgICAgICAgICBoZWlnaHQ6IHdpbmRvdy5pbm5lckhlaWdodCxcbiAgICAgICAgICAgIGFzcGVjdFJhdGlvOiB3aW5kb3cuaW5uZXJXaWR0aCAvIHdpbmRvdy5pbm5lckhlaWdodFxuICAgICAgICB9LFxuICAgICAgICBzY3JlZW46IHdpbmRvdy5zY3JlZW5cbiAgICB9O1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2dldFNjcmVlbkluZm8udHNcbiAqKi8iLCJleHBvcnQgZnVuY3Rpb24gaXNJRSh2ZXIpIHtcbiAgICBpZiAodHlwZW9mIHZlciA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgdmVyID0gbnVsbDtcbiAgICB9XG4gICAgdmFyIGIgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdiJyk7XG4gICAgYi5pbm5lckhUTUwgPSAnPCEtLVtpZiBJRSAnICsgdmVyICsgJ10+PGk+PC9pPjwhW2VuZGlmXS0tPic7XG4gICAgcmV0dXJuIGIuZ2V0RWxlbWVudHNCeVRhZ05hbWUoJ2knKS5sZW5ndGggPT09IDE7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3V0aWxzL2Jyb3dzZXIvaXNJRS50c1xuICoqLyIsImV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGxvY2tTY3JvbGwoKSB7XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICdoaWRkZW4nO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy91dGlscy9icm93c2VyL2xvY2tTY3JvbGwudHNcbiAqKi8iLCJleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiB1bmxvY2tTY3JvbGwoKSB7XG4gICAgZG9jdW1lbnQuYm9keS5zdHlsZS5vdmVyZmxvdyA9ICd2aXNpYmxlJztcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvdXRpbHMvYnJvd3Nlci91bmxvY2tTY3JvbGwudHNcbiAqKi8iLCJpbXBvcnQgeyBTY2hlbWEsIGFycmF5T2YgfSBmcm9tICdub3JtYWxpenInO1xuY29uc3QgYm9vayA9IG5ldyBTY2hlbWEoJ2Jvb2tzJywge1xuICAgIGlkQXR0cmlidXRlOiAnaWQnXG59KTtcbmNvbnN0IGJvb2tDb250ZW50ID0gbmV3IFNjaGVtYSgnYm9va0NvbnRlbnRzJywge1xuICAgIGlkQXR0cmlidXRlOiAnaWQnXG59KTtcbmNvbnN0IGF1dGhvciA9IG5ldyBTY2hlbWEoJ2F1dGhvcnMnLCB7XG4gICAgaWRBdHRyaWJ1dGU6ICdpZCdcbn0pO1xuY29uc3QgY29sbGVjdGlvbiA9IG5ldyBTY2hlbWEoJ2Jvb2tDb2xsZWN0aW9ucycsIHtcbiAgICBpZEF0dHJpYnV0ZTogJ2lkJ1xufSk7XG5jb2xsZWN0aW9uLmRlZmluZSh7XG4gICAgaXRlbXM6IGFycmF5T2YoYm9vaylcbn0pO1xuY29uc3QgcHJvZmlsZSA9IG5ldyBTY2hlbWEoJ3Byb2ZpbGVzJywge1xuICAgIGlkQXR0cmlidXRlOiAnaWQnXG59KTtcbmNvbnN0IHVzZXIgPSBuZXcgU2NoZW1hKCd1c2VycycsIHtcbiAgICBpZEF0dHJpYnV0ZTogJ2lkJ1xufSk7XG5jb25zdCBkb3ViYW5Cb29rID0gbmV3IFNjaGVtYSgnZG91YmFuQm9va3MnLCB7XG4gICAgaWRBdHRyaWJ1dGU6ICdpZCdcbn0pO1xuY29uc3Qgc2hlbGZCb29rID0gbmV3IFNjaGVtYSgnc2hlbGZCb29rcycsIHtcbiAgICBpZEF0dHJpYnV0ZTogJ2lkJ1xufSk7XG5jb25zdCBib29rUHJvZ3Jlc3MgPSBuZXcgU2NoZW1hKCdib29rUHJvZ3Jlc3MnLCB7XG4gICAgaWRBdHRyaWJ1dGU6ICdib29rSWQnXG59KTtcbmNvbnN0IG1hdGNoZWRCb29rcyA9IG5ldyBTY2hlbWEoJ2Jvb2tzJywge1xuICAgIGlkQXR0cmlidXRlOiAnYm9va0lkJ1xufSk7XG5leHBvcnQgZGVmYXVsdCB7XG4gICAgQk9PSzogYm9vayxcbiAgICBCT09LX0NPTlRFTlQ6IGJvb2tDb250ZW50LFxuICAgIEJPT0tfUFJPR1JFU1M6IGJvb2tQcm9ncmVzcyxcbiAgICBCT09LX0FSUkFZOiBhcnJheU9mKGJvb2spLFxuICAgIERPVUJBTl9CT09LX1NFQVJDSF9SRVNVTFRTOiB7IGJvb2tzOiBhcnJheU9mKGRvdWJhbkJvb2spIH0sXG4gICAgVVNFUl9BUlJBWTogYXJyYXlPZih1c2VyKSxcbiAgICBNQVRDSEVEX0JPT0tfQVJSQVk6IGFycmF5T2YobWF0Y2hlZEJvb2tzKSxcbiAgICBDT0xMRUNUSU9OOiBjb2xsZWN0aW9uLFxuICAgIENPTExFQ1RJT05fQVJSQVk6IGFycmF5T2YoY29sbGVjdGlvbiksXG4gICAgUFJPRklMRTogcHJvZmlsZSxcbiAgICBBVVRIT1I6IGF1dGhvcixcbiAgICBBVVRIT1JfQVJSQVk6IGFycmF5T2YoYXV0aG9yKSxcbiAgICBTSEVMRl9CT09LX0FSUkFZOiBhcnJheU9mKHNoZWxmQm9vaylcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3NjaGVtYXMudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJub3JtYWxpenJcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIm5vcm1hbGl6clwiXG4gKiogbW9kdWxlIGlkID0gMTA3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJjb25zdCBSRVFVRVNUID0gJ1JFUVVFU1QnO1xuY29uc3QgU1VDQ0VTUyA9ICdTVUNDRVNTJztcbmNvbnN0IEZBSUxVUkUgPSAnRkFJTFVSRSc7XG5jb25zdCBMT0FEX0NBQ0hFID0gJ0xPQURfQ0FDSEUnO1xuZXhwb3J0IGNvbnN0IGFjdGlvbiA9ICh0eXBlLCBwYXlsb2FkID0ge30pID0+IHtcbiAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwge1xuICAgICAgICB0eXBlXG4gICAgfSwgcGF5bG9hZCk7XG59O1xuZXhwb3J0IGNvbnN0IGNyZWF0ZVJlcXVlc3RUeXBlcyA9IGJhc2UgPT4ge1xuICAgIHJldHVybiBbUkVRVUVTVCwgU1VDQ0VTUywgRkFJTFVSRSwgTE9BRF9DQUNIRV0ucmVkdWNlKChhY2MsIHR5cGUpID0+IHtcbiAgICAgICAgYWNjW3R5cGVdID0gYGFwaS8ke2Jhc2V9LyR7dHlwZX1gO1xuICAgICAgICByZXR1cm4gYWNjO1xuICAgIH0sIHt9KTtcbn07XG5leHBvcnQgY29uc3QgY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSA9IChuYW1lLCBvcGVyYXRpb24pID0+IGBjb21wb25lbnRzLyR7bmFtZX0vJHtvcGVyYXRpb259YDtcbmV4cG9ydCBjb25zdCBjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUgPSAob3BlcmF0aW9uKSA9PiBgc2FnYS10cmlnZ2Vycy8ke29wZXJhdGlvbn1gO1xuZXhwb3J0IGNvbnN0IGNyZWF0ZUFjdGlvbkVudGl0eSA9IChyZXF1ZXN0VHlwZXMpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICByZXF1ZXN0OiAocGF5bG9hZCkgPT4gYWN0aW9uKHJlcXVlc3RUeXBlcy5SRVFVRVNULCBwYXlsb2FkKSxcbiAgICAgICAgc3VjY2VzczogKHJlc3BvbnNlLCBwYXlsb2FkKSA9PiBhY3Rpb24ocmVxdWVzdFR5cGVzLlNVQ0NFU1MsIE9iamVjdC5hc3NpZ24oe30sIHsgcmVzcG9uc2UgfSwgcGF5bG9hZCkpLFxuICAgICAgICAvLyBUT0RPXG4gICAgICAgIGxvYWRDYWNoZTogKHJlc3BvbnNlLCBwYXlsb2FkKSA9PiBhY3Rpb24ocmVxdWVzdFR5cGVzLlNVQ0NFU1MsIE9iamVjdC5hc3NpZ24oe30sIHsgcmVzcG9uc2UgfSwgcGF5bG9hZCwgeyBsb2FkZWRGcm9tQ2FjaGU6IHRydWUgfSkpLFxuICAgICAgICBmYWlsdXJlOiAoZXJyb3IsIHBheWxvYWQpID0+IGFjdGlvbihyZXF1ZXN0VHlwZXMuRkFJTFVSRSwgT2JqZWN0LmFzc2lnbih7fSwgeyBlcnJvciB9LCBwYXlsb2FkKSksXG4gICAgfTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL2FjdGlvbnMvdXRpbHMudHNcbiAqKi8iLCJpbXBvcnQgeyBjcmVhdGVSZXF1ZXN0VHlwZXMsIGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUsIGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSB9IGZyb20gJy4uL3N0b3JlL2FjdGlvbnMvdXRpbHMnO1xuLyoqXG4gKiBhcGlcbiAqL1xuZXhwb3J0IGNvbnN0IFJFTU9WRV9FTlRJVFkgPSAnUkVNT1ZFX0VOVElUWSc7XG5leHBvcnQgY29uc3QgQk9PSyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYm9vaycpO1xuZXhwb3J0IGNvbnN0IExPQURfQk9PSyA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9CT09LJyk7XG5leHBvcnQgY29uc3QgQk9PS19DT05URU5UID0gY3JlYXRlUmVxdWVzdFR5cGVzKCdib29rLWNvbnRlbnQnKTtcbmV4cG9ydCBjb25zdCBMT0FEX0JPT0tfQ09OVEVOVCA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9CT09LX0NPTlRFTlQnKTtcbmV4cG9ydCBjb25zdCBCT09LUyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYm9va3MnKTtcbmV4cG9ydCBjb25zdCBMT0FEX0JPT0tTID0gY3JlYXRlU2FnYVRyaWdnZXJBY3Rpb25UeXBlKCdMT0FEX0JPT0tTJyk7XG5leHBvcnQgY29uc3QgVVNFUlMgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ3VzZXJzJyk7XG5leHBvcnQgY29uc3QgTE9BRF9VU0VSUyA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9VU0VSUycpO1xuZXhwb3J0IGNvbnN0IExPR09VVCA9IGNyZWF0ZVJlcXVlc3RUeXBlcygncmV2b2tlJyk7XG5leHBvcnQgY29uc3QgVVNFUl9MT0dPVVQgPSBjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUoJ1VTRVJfTE9HT1VUJyk7XG5leHBvcnQgY29uc3QgQk9PS19QUk9HUkVTUyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYm9vay1wcm9ncmVzcycpO1xuZXhwb3J0IGNvbnN0IExPQURfQk9PS19QUk9HUkVTUyA9IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZSgnTE9BRF9CT09LX1BST0dSRVNTJyk7XG5leHBvcnQgY29uc3QgQVVUSE9SUyA9IGNyZWF0ZVJlcXVlc3RUeXBlcygnYXV0aG9ycycpO1xuZXhwb3J0IGNvbnN0IENPTExFQ1RJT05TID0gY3JlYXRlUmVxdWVzdFR5cGVzKCdjb2xsZWN0aW9ucycpO1xuZXhwb3J0IGNvbnN0IENPTExFQ1RJT04gPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ2NvbGxlY3Rpb24nKTtcbmV4cG9ydCBjb25zdCBET1VCQU5fQk9PS1MgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ2RvdWJhbi1ib29rcycpO1xuZXhwb3J0IGNvbnN0IFBST0ZJTEUgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ3Byb2ZpbGUnKTtcbmV4cG9ydCBjb25zdCBBVVRIID0gY3JlYXRlUmVxdWVzdFR5cGVzKCdhdXRoJyk7XG5leHBvcnQgY29uc3QgU0hFTEYgPSBjcmVhdGVSZXF1ZXN0VHlwZXMoJ3NoZWxmJyk7XG4vKipcbiAqIGNvbXBvbmVudHNcbiAqL1xuLy8gZ2VuZXJhbFxuZXhwb3J0IGNvbnN0IE5PVElGSUNBVElPTiA9IHtcbiAgICBTSE9XOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCdub3RpZmljYXRpb24nLCAnU0hPVycpLFxuICAgIEhJREU6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ25vdGlmaWNhdGlvbicsICdISURFJyksXG59O1xuZXhwb3J0IGNvbnN0IE9QRU5fQ09ORklSTV9NT0RBTCA9IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ2NvbmZpcm0tbW9kYWwnLCAnT1BFTicpO1xuZXhwb3J0IGNvbnN0IENMT1NFX0NPTkZJUk1fTU9EQUwgPSBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCdjb25maXJtLW1vZGFsJywgJ0NMT1NFJyk7XG5leHBvcnQgY29uc3QgTU9EQUwgPSB7XG4gICAgT1BFTjogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgnbW9kYWwnLCAnU0hPVycpLFxuICAgIENMT1NFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCdtb2RhbCcsICdISURFJyksXG59O1xuLy8gdmlld2VyXG5leHBvcnQgY29uc3QgVklFV0VSID0ge1xuICAgIElOSVRJQUxJWkU6IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZShjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXInLCAnSU5JVElBTElaRScpKSxcbiAgICBJTklUSUFMSVpFX0NPTkZJRzogY3JlYXRlU2FnYVRyaWdnZXJBY3Rpb25UeXBlKGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlcicsICdJTklUSUFMSVpFX0NPTkZJRycpKSxcbiAgICBDT05GSUc6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlcicsICdDT05GSUcnKSxcbiAgICBDQUxDX1NUQVJUOiBjcmVhdGVTYWdhVHJpZ2dlckFjdGlvblR5cGUoY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyJywgJ0NBTENfU1RBUlQnKSksXG4gICAgQ0FMQ19TVUNDRVNTOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXInLCAnQ0FMQ19TVUNDRVNTJyksXG4gICAgQ0FMQ19GQUlMVVJFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXInLCAnQ0FMQ19GQUlMVVJFJyksXG4gICAgQk9PS19QUk9HUkVTU19VUERBVEU6IGNyZWF0ZVNhZ2FUcmlnZ2VyQWN0aW9uVHlwZShjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXIvcHJvZ3Jlc3MnLCAnVVBEQVRFJykpLFxuICAgIC8vIFRPRE86IOi/meS4quWlveWDj+ayoeeUqFxuICAgIEJPT0tfUFJPR1JFU1NfSU5JVElBTElaRTogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyL3Byb2dyZXNzJywgJ0lOSVRJQUxJWkUnKSxcbiAgICAvLyBUT0RPOiDov5nkuKrlpb3lg4/kuZ/msqHnlKhcbiAgICBCT09LX1BST0dSRVNTX0RFU1RST1k6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlci9wcm9ncmVzcycsICdERVNUUk9ZJyksXG4gICAgSlVNUDogY3JlYXRlU2FnYVRyaWdnZXJBY3Rpb25UeXBlKGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlcicsICdKVU1QJykpLFxuICAgIEZPTlRfQ0hBTkdFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXIvcHJlZmVyZW5jZScsICdDSEFOR0VfRk9OVF9TSVpFJyksXG4gICAgUEFORUxfVE9HR0xFOiBjcmVhdGVDb21wb25lbnRBY3Rpb25UeXBlKCd2aWV3ZXIvY29tcG9uZW50cy9wYW5lbCcsICdUT0dHTEUnKSxcbiAgICBQUkVGRVJFTkNFX1RPR0dMRTogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyL2NvbXBvbmVudHMvcHJlZmVyZW5jZScsICdUT0dHTEUnKSxcbiAgICBOQVZJR0FUSU9OX1RPR0dMRTogY3JlYXRlQ29tcG9uZW50QWN0aW9uVHlwZSgndmlld2VyL2NvbXBvbmVudHMvbmF2aWdhdGlvbicsICdUT0dHTEUnKSxcbiAgICBUSEVNRV9DSEFOR0U6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlci90aGVtZScsICdDSEFOR0UnKSxcbiAgICBTQ1JPTExfTU9ERV9UT0dHTEU6IGNyZWF0ZUNvbXBvbmVudEFjdGlvblR5cGUoJ3ZpZXdlci9zY3JvbGwtbW9kZScsICdUT0dHTEUnKVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29uc3RhbnRzL2FjdGlvblR5cGVzLnRzXG4gKiovIiwiaW1wb3J0ICogYXMgQWN0aW9uVHlwZXMgZnJvbSAnLi4vLi4vY29uc3RhbnRzL2FjdGlvblR5cGVzJztcbmV4cG9ydCBjb25zdCBzZW5kTm90aWZpY2F0aW9uID0gKG1lc3NhZ2UsIG1zZ1R5cGUgPSAnc3VjY2VzcycsIHQgPSAyMDAwKSA9PiB7XG4gICAgcmV0dXJuIChkaXNwYXRjaCwgZ2V0U3RhdGUpID0+IHtcbiAgICAgICAgY29uc3QgaWQgPSBNYXRoLnJhbmRvbSgpLnRvRml4ZWQoOCkuc3Vic3RyKDIpO1xuICAgICAgICBkaXNwYXRjaChzaG93Tm90aWZpY2F0aW9uKGlkLCBtZXNzYWdlLCBtc2dUeXBlKSk7XG4gICAgICAgIGlmICh0ICE9PSAwKSB7XG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICBkaXNwYXRjaChoaWRlTm90aWZpY2F0aW9uKGlkKSk7XG4gICAgICAgICAgICB9LCB0KTtcbiAgICAgICAgfVxuICAgIH07XG59O1xuZXhwb3J0IGZ1bmN0aW9uIHNob3dOb3RpZmljYXRpb24oaWQsIG1lc3NhZ2UsIG1zZ1R5cGUgPSAnc3VjY2VzcycpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBBY3Rpb25UeXBlcy5OT1RJRklDQVRJT04uU0hPVyxcbiAgICAgICAgbWVzc2FnZSxcbiAgICAgICAgbXNnVHlwZSxcbiAgICAgICAgaWRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIGhpZGVOb3RpZmljYXRpb24oaWQpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBBY3Rpb25UeXBlcy5OT1RJRklDQVRJT04uSElERSxcbiAgICAgICAgaWRcbiAgICB9O1xufVxuZXhwb3J0IGZ1bmN0aW9uIG9wZW5Db25maXJtTW9kYWwoZGF0YSkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IEFjdGlvblR5cGVzLk9QRU5fQ09ORklSTV9NT0RBTCxcbiAgICAgICAgZGF0YVxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gY2xvc2VDb25maXJtTW9kYWwoKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogQWN0aW9uVHlwZXMuQ0xPU0VfQ09ORklSTV9NT0RBTFxuICAgIH07XG59XG5leHBvcnQgZnVuY3Rpb24gb3Blbk1vZGFsKGRhdGEpIHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiBBY3Rpb25UeXBlcy5NT0RBTC5PUEVOLFxuICAgICAgICBkYXRhXG4gICAgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBjbG9zZU1vZGFsKCkge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6IEFjdGlvblR5cGVzLk1PREFMLkNMT1NFXG4gICAgfTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy9jb21tb24udHNcbiAqKi8iLCJleHBvcnQgY29uc3QgbG9hZFNvbWV0aGluZyA9ICgpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICB0eXBlOiAnTE9BRCdcbiAgICB9O1xufTtcbmV4cG9ydCBjb25zdCBzYXZlU29tZXRoaW5nID0gKCkgPT4ge1xuICAgIHJldHVybiB7XG4gICAgICAgIHR5cGU6ICdTQVZFJ1xuICAgIH07XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9hY3Rpb25zL3Rlc3QudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBzZWxlY3RvcnMgZnJvbSAnLi4vc2VsZWN0b3JzJztcbmltcG9ydCAqIGFzIEFDVElPTl9UWVBFUyBmcm9tICcuLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi4vLi4vaGVscGVycyc7XG4vLyB2aWV3ZXJcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplVmlld2VyQ29uZmlnID0gKGJvb2tJZCwgY29uZmlnID0ge30pID0+ICh7IGJvb2tJZCwgY29uZmlnLCB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLklOSVRJQUxJWkVfQ09ORklHIH0pO1xuZXhwb3J0IGNvbnN0IGluaXRpYWxpemVWaWV3ZXIgPSAoYm9va0lkKSA9PiAoeyBib29rSWQsIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuSU5JVElBTElaRSB9KTtcbmV4cG9ydCBjb25zdCBjb25maWdWaWV3ZXIgPSAoYm9va0lkLCBwYXlsb2FkKSA9PiAoe1xuICAgIGJvb2tJZCxcbiAgICBwYXlsb2FkLFxuICAgIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuQ09ORklHLFxufSk7XG4vLyBib29rXG5leHBvcnQgY29uc3QgY2FsY0Jvb2sgPSAoYm9va0lkLCB3cmFwKSA9PiAoe1xuICAgIGJvb2tJZCxcbiAgICB3cmFwLFxuICAgIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuQ0FMQ19TVEFSVCxcbn0pO1xuZXhwb3J0IGNvbnN0IGNhbGNCb29rU3VjY2VzcyA9IChib29rSWQsIGNvbXB1dGVkKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgYm9va0lkLFxuICAgICAgICBjb21wdXRlZCxcbiAgICAgICAgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5DQUxDX1NVQ0NFU1MsXG4gICAgfTtcbn07XG5leHBvcnQgY29uc3QgY2FsY0Jvb2tGYWlsdXJlID0gKGJvb2tJZCwgZXJyb3IpID0+IHtcbiAgICByZXR1cm4ge1xuICAgICAgICBib29rSWQsXG4gICAgICAgIGVycm9yLFxuICAgICAgICB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLkNBTENfRkFJTFVSRSxcbiAgICB9O1xufTtcbmV4cG9ydCBjb25zdCBpbml0aWFsaXplQm9va1Byb2dyZXNzID0gKCkgPT4gKHsgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX0lOSVRJQUxJWkUgfSk7XG4vLyBwcm9ncmVzc1xuZXhwb3J0IGNvbnN0IHVwZGF0ZUJvb2tQcm9ncmVzcyA9IChwZXJjZW50YWdlKSA9PiAoZGlzcGF0Y2gsIGdldFN0YXRlKSA9PiB7XG4gICAgaGVscGVycy5wcmludCgnQWN0aW9uIHVwZGF0ZUJvb2tQcm9ncmVzcycpO1xuICAgIGNvbnN0IHN0YXRlID0gZ2V0U3RhdGUoKTtcbiAgICBjb25zdCB7IGJvb2tJZCB9ID0gc2VsZWN0b3JzLnZpZXdlci5jb25maWcoc3RhdGUpO1xuICAgIGNvbnN0IGNvbXB1dGVkID0gc2VsZWN0b3JzLnZpZXdlci5jb21wdXRlZChib29rSWQpKHN0YXRlKTtcbiAgICBjb25zdCBwYWdlTm8gPSBNYXRoLmZsb29yKGNvbXB1dGVkLmxlbmd0aCAqIHBlcmNlbnRhZ2UpICsgMTtcbiAgICByZXR1cm4gZGlzcGF0Y2goe1xuICAgICAgICBpZDogYm9va0lkLFxuICAgICAgICBwZXJjZW50YWdlLFxuICAgICAgICBwYWdlTm8sXG4gICAgICAgIHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuQk9PS19QUk9HUkVTU19VUERBVEUsXG4gICAgfSk7XG59O1xuZXhwb3J0IGNvbnN0IGRlc3Ryb3lCb29rUHJvZ3Jlc3MgPSAoKSA9PiB7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX0RFU1RST1ksXG4gICAgfTtcbn07XG5leHBvcnQgY29uc3Qgdmlld2VySnVtcFRvID0gKHBlcmNlbnRhZ2UpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuSlVNUCwgcGVyY2VudGFnZSB9KTtcbi8vIHN1YiBjb21wb25lbnRzXG5leHBvcnQgY29uc3QgdG9nZ2xlVmlld2VyUGFuZWwgPSAocmVzZXQpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuUEFORUxfVE9HR0xFLCByZXNldCB9KTtcbmV4cG9ydCBjb25zdCB0b2dnbGVWaWV3ZXJQcmVmZXJlbmNlID0gKHJlc2V0KSA9PiAoeyB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLlBSRUZFUkVOQ0VfVE9HR0xFLCByZXNldCB9KTtcbmV4cG9ydCBjb25zdCB0b2dnbGVWaWV3ZXJOYXZpZ2F0aW9uID0gKHJlc2V0KSA9PiAoeyB0eXBlOiBBQ1RJT05fVFlQRVMuVklFV0VSLk5BVklHQVRJT05fVE9HR0xFLCByZXNldCB9KTtcbi8vIGNvbmZpZ1xuZXhwb3J0IGNvbnN0IGNoYW5nZVZpZXdlckZvbnRTaXplID0gKGZvbnRTaXplSW5QaXhlbCkgPT4gKHsgdHlwZTogQUNUSU9OX1RZUEVTLlZJRVdFUi5GT05UX0NIQU5HRSwgZm9udFNpemU6IGZvbnRTaXplSW5QaXhlbCB9KTtcbmV4cG9ydCBjb25zdCBjaGFuZ2VWaWV3ZXJUaGVtZSA9ICh0aGVtZU5hbWUpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuVEhFTUVfQ0hBTkdFLCB0aGVtZTogdGhlbWVOYW1lIH0pO1xuZXhwb3J0IGNvbnN0IHRvZ2dsZVZpZXdlclNjcm9sbE1vZGUgPSAocmVzZXQpID0+ICh7IHR5cGU6IEFDVElPTl9UWVBFUy5WSUVXRVIuU0NST0xMX01PREVfVE9HR0xFLCByZXNldCB9KTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvYWN0aW9ucy92aWV3ZXIudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBjb21tb24gZnJvbSAnLi9jb21tb24nO1xuaW1wb3J0IHsgc2VsZWN0b3JzIGFzIGZvcm0gfSBmcm9tICdiZXR0ZXItcmVkdXgtZm9ybSc7XG5pbXBvcnQgKiBhcyB2aWV3ZXIgZnJvbSAnLi92aWV3ZXInO1xuZXhwb3J0ICogZnJvbSAnLi9lbnRpdGllcyc7XG5leHBvcnQgeyBjb21tb24sIGZvcm0sIHZpZXdlciB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgeyBjcmVhdGVTZWxlY3RvciB9IGZyb20gJ3Jlc2VsZWN0JztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBwYWdlZEVudGl0aWVzIH0gZnJvbSAnLi9jb21tb24nO1xuZXhwb3J0IGNvbnN0IGRvdWJhbkJvb2tzID0ga2V5ID0+IGNyZWF0ZVNlbGVjdG9yKHBhZ2VkRW50aXRpZXMoe1xuICAgIGVudGl0aWVzTmFtZTogJ2RvdWJhbkJvb2tzJyxcbiAgICBwYWdpbmF0aW9uTmFtZTogJ2RvdWJhbkJvb2tzJyxcbiAgICBwYWdpbmF0aW9uS2V5OiBrZXlcbn0pLCBib29rcyA9PiBib29rcyk7XG5leHBvcnQgY29uc3QgYXV0aG9ycyA9IGtleSA9PiBwYWdlZEVudGl0aWVzKHtcbiAgICBlbnRpdGllc05hbWU6ICdhdXRob3JzJyxcbiAgICBwYWdpbmF0aW9uTmFtZTogJ2F1dGhvcnMnLFxuICAgIHBhZ2luYXRpb25LZXk6IGtleVxufSk7XG5leHBvcnQgY29uc3Qgc2hlbGZCb29rcyA9IChrZXkpID0+IHBhZ2VkRW50aXRpZXMoe1xuICAgIGVudGl0aWVzTmFtZTogJ3NoZWxmQm9va3MnLFxuICAgIHBhZ2luYXRpb25OYW1lOiAnYm9va1NoZWx2ZXMnLFxuICAgIHBhZ2luYXRpb25LZXk6IGtleVxufSk7XG5leHBvcnQgY29uc3QgYm9va3MgPSAoa2V5LCBwYWdlKSA9PiBwYWdlZEVudGl0aWVzKHtcbiAgICBlbnRpdGllc05hbWU6ICdib29rcycsXG4gICAgcGFnaW5hdGlvbk5hbWU6ICdib29rcycsXG4gICAgcGFnaW5hdGlvbktleToga2V5LFxuICAgIHBhZ2Vcbn0pO1xuZXhwb3J0IGNvbnN0IGRvdWJhbkJvb2tzQXNPcHRpb25zID0ga2V5ID0+IGNyZWF0ZVNlbGVjdG9yKGRvdWJhbkJvb2tzKGtleSksIHNlbGVjdGVkQm9va3MgPT4ge1xuICAgIHJldHVybiBzZWxlY3RlZEJvb2tzLm1hcChib29rID0+ICh7XG4gICAgICAgIG5hbWU6IGJvb2sudGl0bGUsXG4gICAgICAgIHZhbHVlOiBib29rLmlkLFxuICAgICAgICBhZGRpdGlvbmFsOiB7XG4gICAgICAgICAgICBkZXNjcmlwdGlvbjogYm9vay5zdW1tYXJ5LFxuICAgICAgICAgICAgY292ZXI6IGJvb2suaW1hZ2VzLmxhcmdlLFxuICAgICAgICAgICAgYXV0aG9yOiBib29rLmF1dGhvci5qb2luKCcsICcpXG4gICAgICAgIH1cbiAgICB9KSk7XG59KTtcbmV4cG9ydCBjb25zdCBhdXRob3JzQXNPcHRpb25zID0ga2V5ID0+IGNyZWF0ZVNlbGVjdG9yKGF1dGhvcnMoa2V5KSwgaXRlbXMgPT4ge1xuICAgIHJldHVybiBpdGVtcy5tYXAoaXRlbSA9PiAoe1xuICAgICAgICBuYW1lOiBpdGVtLm5hbWUsXG4gICAgICAgIHZhbHVlOiBpdGVtLmlkXG4gICAgfSkpO1xufSk7XG5leHBvcnQgY29uc3QgYm9va3NBc09wdGlvbnMgPSAoa2V5KSA9PiBjcmVhdGVTZWxlY3Rvcihib29rcyhrZXkpLCBpdGVtcyA9PiB7XG4gICAgcmV0dXJuIGl0ZW1zLm1hcChpdGVtID0+ICh7XG4gICAgICAgIG5hbWU6IGl0ZW0udGl0bGUsXG4gICAgICAgIHZhbHVlOiBpdGVtLmlkXG4gICAgfSkpO1xufSk7XG5leHBvcnQgY29uc3QgdXNlcnMgPSBwYWdlZEVudGl0aWVzKHtcbiAgICBlbnRpdGllc05hbWU6ICd1c2VycycsXG4gICAgcGFnaW5hdGlvbk5hbWU6ICd1c2VycycsXG59KTtcbmV4cG9ydCBjb25zdCBzZXNzaW9uVXNlcklkID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydzZXNzaW9uJywgJ3VzZXInLCAnaWQnXSk7XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zZWxlY3RvcnMvZW50aXRpZXMudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJyZXNlbGVjdFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVzZWxlY3RcIlxuICoqIG1vZHVsZSBpZCA9IDExNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IHsgY3JlYXRlU2VsZWN0b3IgfSBmcm9tICdyZXNlbGVjdCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3QgREVGQVVMVF9LRVkgPSAnZGVmYXVsdCc7XG5leHBvcnQgY29uc3Qgc2Vzc2lvbiA9IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5nZXQoc3RhdGUsIFsnc2Vzc2lvbiddLCB7fSk7XG59O1xuZXhwb3J0IGNvbnN0IGVudGl0aWVzID0gbmFtZSA9PiBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIHN0YXRlLmVudGl0aWVzW25hbWVdIHx8IHt9O1xufTtcbmV4cG9ydCBjb25zdCBlbnRpdHkgPSAobmFtZSwgaWQpID0+IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5nZXQoc3RhdGUsIFsnZW50aXRpZXMnLCBuYW1lLCBpZF0sIHt9KTtcbn07XG5leHBvcnQgY29uc3QgaXNQYWdpbmF0aW9uRmV0Y2hpbmcgPSAobmFtZSwga2V5ID0gREVGQVVMVF9LRVkpID0+IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5nZXQoc3RhdGUsIFsncGFnaW5hdGlvbicsIG5hbWUsIGtleSwgJ2lzRmV0Y2hpbmcnXSwgdHJ1ZSk7XG59O1xuZXhwb3J0IGNvbnN0IHBhZ2luYXRpb25QYWdlcyA9IChuYW1lLCBrZXkgPSBERUZBVUxUX0tFWSkgPT4gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydwYWdpbmF0aW9uJywgbmFtZSwga2V5LCAncGFnZXMnXSwge30pO1xufTtcbmV4cG9ydCBjb25zdCBwYWdpbmF0aW9uTGlua3MgPSAobmFtZSwga2V5ID0gREVGQVVMVF9LRVkpID0+IHN0YXRlID0+IHtcbiAgICByZXR1cm4gXy5waWNrKF8uZ2V0KHN0YXRlLnBhZ2luYXRpb24sIGAke25hbWV9LiR7a2V5fWAsIHt9KSwgWyduZXh0JywgJ2xhc3QnXSk7XG59O1xuZXhwb3J0IGNvbnN0IG5leHRQYWdlID0gKG5hbWUsIGtleSA9IERFRkFVTFRfS0VZKSA9PiBjcmVhdGVTZWxlY3RvcihwYWdpbmF0aW9uTGlua3MobmFtZSwga2V5KSwgc2VsZWN0ZWRQYWdpbmF0aW9uTGlua3MgPT4ge1xuICAgIHJldHVybiBfLmdldChzZWxlY3RlZFBhZ2luYXRpb25MaW5rcywgJ25leHQucGFnZScsIDApO1xufSk7XG5leHBvcnQgY29uc3QgY3VycmVudFBhZ2UgPSAobmFtZSwga2V5ID0gREVGQVVMVF9LRVkpID0+IGNyZWF0ZVNlbGVjdG9yKHBhZ2luYXRpb25MaW5rcyhuYW1lLCBrZXkpLCBzZWxlY3RlZFBhZ2luYXRpb25MaW5rcyA9PiB7XG4gICAgY29uc3QgbmV4dCA9IF8uZ2V0KHNlbGVjdGVkUGFnaW5hdGlvbkxpbmtzLCAnbmV4dC5wYWdlJyk7XG4gICAgY29uc3QgbGFzdCA9IF8uZ2V0KHNlbGVjdGVkUGFnaW5hdGlvbkxpbmtzLCAnbGFzdC5wYWdlJyk7XG4gICAgcmV0dXJuIG5leHRcbiAgICAgICAgPyBuZXh0IC0gMVxuICAgICAgICA6IGxhc3Q7XG59KTtcbmV4cG9ydCBjb25zdCBlbnRpdHlQYWdlcyA9IChvcHRpb25zKSA9PiB7XG4gICAgY29uc3QgeyBlbnRpdGllc05hbWUsIHBhZ2luYXRpb25OYW1lLCBwYWdpbmF0aW9uS2V5IH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBjcmVhdGVTZWxlY3RvcihlbnRpdGllcyhlbnRpdGllc05hbWUpLCBwYWdpbmF0aW9uUGFnZXMocGFnaW5hdGlvbk5hbWUsIHBhZ2luYXRpb25LZXkpLCAoc2VsZWN0ZWRFbnRpdGllcywgcGFnZXMpID0+IHtcbiAgICAgICAgcmV0dXJuIF8ubWFwVmFsdWVzKHBhZ2VzLCBpZHMgPT4ge1xuICAgICAgICAgICAgcmV0dXJuIGlkc1xuICAgICAgICAgICAgICAgIC5tYXAoaWQgPT4gc2VsZWN0ZWRFbnRpdGllc1tpZF0pXG4gICAgICAgICAgICAgICAgLmZpbHRlcihpdGVtID0+IEJvb2xlYW4oaXRlbSkpO1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgcGFnZWRFbnRpdGllcyA9IChvcHRpb25zKSA9PiB7XG4gICAgY29uc3QgeyBwYWdlIH0gPSBvcHRpb25zO1xuICAgIHJldHVybiBjcmVhdGVTZWxlY3RvcihlbnRpdHlQYWdlcyhvcHRpb25zKSwgcGFnZXMgPT4ge1xuICAgICAgICBpZiAocGFnZSkge1xuICAgICAgICAgICAgcmV0dXJuIF8uZ2V0KHBhZ2VzLCBbcGFnZV0sIFtdKTtcbiAgICAgICAgfVxuICAgICAgICBsZXQgYWxsRW50aXRpZXMgPSBbXTtcbiAgICAgICAgXy5rZXlzKHBhZ2VzKS5mb3JFYWNoKHAgPT4ge1xuICAgICAgICAgICAgYWxsRW50aXRpZXMgPSBhbGxFbnRpdGllcy5jb25jYXQocGFnZXNbcF0pO1xuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIGFsbEVudGl0aWVzO1xuICAgIH0pO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2VsZWN0b3JzL2NvbW1vbi50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJldHRlci1yZWR1eC1mb3JtXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJiZXR0ZXItcmVkdXgtZm9ybVwiXG4gKiogbW9kdWxlIGlkID0gMTE3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0ICogYXMgY29tbW9uIGZyb20gJy4vY29tbW9uJztcbmltcG9ydCB7IGNyZWF0ZVNlbGVjdG9yIH0gZnJvbSAncmVzZWxlY3QnO1xuZXhwb3J0IGNvbnN0IHNlbGYgPSBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIF8uZ2V0KHN0YXRlLCBbJ2NvbXBvbmVudHMnLCAndmlld2VyJ10sIHt9KTtcbn07XG5leHBvcnQgY29uc3QgY29uZmlnID0gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydjb21wb25lbnRzJywgJ3ZpZXdlcicsICdjb25maWcnXSwge30pO1xufTtcbmV4cG9ydCBjb25zdCBjb21wdXRlZCA9IGJvb2tJZCA9PiBzdGF0ZSA9PiB7XG4gICAgcmV0dXJuIF8uZ2V0KHN0YXRlLCBbJ2NvbXBvbmVudHMnLCAndmlld2VyJywgJ2NvbnRlbnRzJywgYm9va0lkLCAnY29tcHV0ZWQnXSwgW10pO1xufTtcbmV4cG9ydCBjb25zdCBuYXZEYXRhID0gYm9va0lkID0+IHN0YXRlID0+IHtcbiAgICBjb25zdCBib29rQ29udGVudCA9IGNvbW1vbi5lbnRpdHkoJ2Jvb2tDb250ZW50cycsIGJvb2tJZCkoc3RhdGUpO1xuICAgIHJldHVybiBfLmdldChib29rQ29udGVudCwgJ25hdicsIFtdKTtcbn07XG5leHBvcnQgY29uc3QgcHJvZ3Jlc3MgPSBib29rSWQgPT4gc3RhdGUgPT4ge1xuICAgIHJldHVybiBfLmdldChzdGF0ZSwgWydjb21wb25lbnRzJywgJ3ZpZXdlcicsICdwcm9ncmVzcycsIGJvb2tJZF0sIHt9KTtcbn07XG4vLyBzdWIgY29tcG9uZW50c1xuZXhwb3J0IGNvbnN0IHBhbmVsID0gY3JlYXRlU2VsZWN0b3Ioc2VsZiwgX3NlbGYgPT4ge1xuICAgIHJldHVybiBfLmdldChfc2VsZiwgWydjb21wb25lbnRzJywgJ3BhbmVsJ10sIHt9KTtcbn0pO1xuZXhwb3J0IGNvbnN0IHByZWZlcmVuY2UgPSBjcmVhdGVTZWxlY3RvcihzZWxmLCBfc2VsZiA9PiB7XG4gICAgcmV0dXJuIF8uZ2V0KF9zZWxmLCBbJ2NvbXBvbmVudHMnLCAncHJlZmVyZW5jZSddLCB7fSk7XG59KTtcbmV4cG9ydCBjb25zdCBuYXZpZ2F0aW9uID0gY3JlYXRlU2VsZWN0b3Ioc2VsZiwgX3NlbGYgPT4ge1xuICAgIHJldHVybiBfLmdldChfc2VsZiwgWydjb21wb25lbnRzJywgJ25hdmlnYXRpb24nXSwge30pO1xufSk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3NlbGVjdG9ycy92aWV3ZXIudHNcbiAqKi8iLCJpbXBvcnQgQWxlcnQgZnJvbSAnLi9BbGVydCc7XG5pbXBvcnQgQWxlcnRzIGZyb20gJy4vQWxlcnRzJztcbmV4cG9ydCB7IEFsZXJ0cywgQWxlcnQgfTtcbmV4cG9ydCBkZWZhdWx0IEFsZXJ0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9BbGVydC9pbmRleC50c3hcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEljb24gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgQ1NTTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0FsZXJ0LnNjc3MnKTtcbmxldCBBbGVydCA9IGNsYXNzIEFsZXJ0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHR5cGUgPSB0aGlzLnByb3BzLnR5cGUgPyB0aGlzLnByb3BzLnR5cGUgOiAnc3VjY2Vzcyc7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLCB0aGlzLnByb3BzLnZpc2libGUgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IGBhbGVydC0tJHt0eXBlfWAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IFwiYWxlcnQtY2xvc2VcIiB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoSWNvbiwgeyBvbkNsaWNrOiB0aGlzLnByb3BzLm9uUmVxdWVzdENsb3NlLCBuYW1lOiBcImNsb3NlXCIsIHNpemU6IDE1IH0pKSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IFwiY29udGVudFwiIH0sIHRoaXMucHJvcHMubWVzc2FnZSkpKSkpO1xuICAgIH1cbn07XG5BbGVydCA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgQWxlcnQpO1xuZXhwb3J0IGRlZmF1bHQgQWxlcnQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0LnRzeFxuICoqLyIsImltcG9ydCBJY29uIGZyb20gJy4vSWNvbic7XG5leHBvcnQgZGVmYXVsdCBJY29uO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JY29uL2luZGV4LnRzXG4gKiovIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG52YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5pbXBvcnQgc3ZnSWNvbnMgZnJvbSAnLi9zdmctaWNvbnMnO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9JY29uLnNjc3MnKTtcbmxldCBJY29uID0gY2xhc3MgSWNvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB7IG5hbWUsIG9uQ2xpY2ssIHNpemUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBjbGFzc05hbWUgPSBjbGFzc25hbWVzKCdpY29uJywgYGljb24tJHtuYW1lfWAsIHRoaXMucHJvcHMuY2xhc3NOYW1lKTtcbiAgICAgICAgaWYgKHR5cGVvZiBzdmdJY29uc1tuYW1lXSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ0ljb24gbmFtZSAoJXMpIG5vdCBmb3VuZCEgJywgbmFtZSk7XG4gICAgICAgIH1cbiAgICAgICAgc2l6ZSA9IHNpemUgfHwgMzA7XG4gICAgICAgIGNvbnN0IHN2Z1dyYXBTdHlsZSA9IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnYWJzb2x1dGUnLFxuICAgICAgICAgICAgdG9wOiAnNTAlJyxcbiAgICAgICAgICAgIG1hcmdpblRvcDogLXNpemUgLyAyXG4gICAgICAgIH07XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBzdHlsZU5hbWU6IFwiaWNvblwiLCBzdHlsZTogeyBtaW5XaWR0aDogc2l6ZSwgbWluSGVpZ2h0OiBzaXplIH0sIGNsYXNzTmFtZTogY2xhc3NOYW1lLCBvbkNsaWNrOiBvbkNsaWNrIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHN2Z1dyYXBTdHlsZSB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzdmdcIiwgX19hc3NpZ24oe30sIHN2Z0ljb25zW25hbWVdLnZpZXdCb3ggJiYgeyB2aWV3Qm94OiBzdmdJY29uc1tuYW1lXS52aWV3Qm94IH0sIHsgd2lkdGg6IHNpemUsIGhlaWdodDogc2l6ZSwgc3R5bGVOYW1lOiBcInN2Zy1zaGFwZVwiIH0pLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwicGF0aFwiLCB7IGQ6IHN2Z0ljb25zW25hbWVdLnBhdGggfSkpKSkpO1xuICAgIH1cbn07XG5JY29uID0gX19kZWNvcmF0ZShbXG4gICAgQ1NTTW9kdWxlcyhzdHlsZXMsIHtcbiAgICAgICAgYWxsb3dNdWx0aXBsZTogdHJ1ZVxuICAgIH0pXG5dLCBJY29uKTtcbmV4cG9ydCBkZWZhdWx0IEljb247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vSWNvbi50c3hcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJjbGFzc25hbWVzXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJjbGFzc25hbWVzXCJcbiAqKiBtb2R1bGUgaWQgPSAxMjNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydCBkZWZhdWx0IHtcbiAgICBjbG9zZToge1xuICAgICAgICBwYXRoOiAnTTcuNDggOGwzLjc1IDMuNzUtMS40OCAxLjQ4TDYgOS40OGwtMy43NSAzLjc1LTEuNDgtMS40OEw0LjUyIDggLjc3IDQuMjVsMS40OC0xLjQ4TDYgNi41MmwzLjc1LTMuNzUgMS40OCAxLjQ4eicsXG4gICAgICAgIHZpZXdCb3g6ICcwIDAgMTIgMTYnXG4gICAgfSxcbiAgICBzdGFyOiB7XG4gICAgICAgIHBhdGg6ICdNMTQgNmwtNC45LS42NEw3IDEgNC45IDUuMzYgMCA2bDMuNiAzLjI2TDIuNjcgMTQgNyAxMS42NyAxMS4zMyAxNGwtLjkzLTQuNzR6JyxcbiAgICB9LFxuICAgIHVzZXJzOiB7XG4gICAgICAgIHBhdGg6ICdNMTYgMTFjMS42NiAwIDIuOTktMS4zNCAyLjk5LTNTMTcuNjYgNSAxNiA1Yy0xLjY2IDAtMyAxLjM0LTMgM3MxLjM0IDMgMyAzem0tOCAwYzEuNjYgMCAyLjk5LTEuMzQgMi45OS0zUzkuNjYgNSA4IDVDNi4zNCA1IDUgNi4zNCA1IDhzMS4zNCAzIDMgM3ptMCAyYy0yLjMzIDAtNyAxLjE3LTcgMy41VjE5aDE0di0yLjVjMC0yLjMzLTQuNjctMy41LTctMy41em04IDBjLS4yOSAwLS42Mi4wMi0uOTcuMDUgMS4xNi44NCAxLjk3IDEuOTcgMS45NyAzLjQ1VjE5aDZ2LTIuNWMwLTIuMzMtNC42Ny0zLjUtNy0zLjV6JyxcbiAgICB9LFxuICAgIGZvbGRlcjoge1xuICAgICAgICBwYXRoOiAnTTEwIDRINGMtMS4xIDAtMS45OS45LTEuOTkgMkwyIDE4YzAgMS4xLjkgMiAyIDJoMTZjMS4xIDAgMi0uOSAyLTJWOGMwLTEuMS0uOS0yLTItMmgtOGwtMi0yeicsXG4gICAgfSxcbiAgICBkYXRhYmFzZToge1xuICAgICAgICBwYXRoOiAnTTIwLjIgNS45bC44LS44QzE5LjYgMy43IDE3LjggMyAxNiAzcy0zLjYuNy01IDIuMWwuOC44QzEzIDQuOCAxNC41IDQuMiAxNiA0LjJzMyAuNiA0LjIgMS43em0tLjkuOGMtLjktLjktMi4xLTEuNC0zLjMtMS40cy0yLjQuNS0zLjMgMS40bC44LjhjLjctLjcgMS42LTEgMi41LTEgLjkgMCAxLjguMyAyLjUgMWwuOC0uOHpNMTkgMTNoLTJWOWgtMnY0SDVjLTEuMSAwLTIgLjktMiAydjRjMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMnYtNGMwLTEuMS0uOS0yLTItMnpNOCAxOEg2di0yaDJ2MnptMy41IDBoLTJ2LTJoMnYyem0zLjUgMGgtMnYtMmgydjJ6J1xuICAgIH0sXG4gICAgc3RhdGlzdGljczoge1xuICAgICAgICBwYXRoOiAnTTIxIDJIM2MtMS4xIDAtMiAuOS0yIDJ2MTJjMCAxLjEuOSAyIDIgMmg3djJIOHYyaDh2LTJoLTJ2LTJoN2MxLjEgMCAyLS45IDItMlY0YzAtMS4xLS45LTItMi0yem0wIDE0SDNWNGgxOHYxMnonLFxuICAgIH0sXG4gICAgYm9va3M6IHtcbiAgICAgICAgcGF0aDogJ00yMC41NCA1LjIzbC0xLjM5LTEuNjhDMTguODggMy4yMSAxOC40NyAzIDE4IDNINmMtLjQ3IDAtLjg4LjIxLTEuMTYuNTVMMy40NiA1LjIzQzMuMTcgNS41NyAzIDYuMDIgMyA2LjVWMTljMCAxLjEuOSAyIDIgMmgxNGMxLjEgMCAyLS45IDItMlY2LjVjMC0uNDgtLjE3LS45My0uNDYtMS4yN3pNMTIgMTcuNUw2LjUgMTJIMTB2LTJoNHYyaDMuNUwxMiAxNy41ek01LjEyIDVsLjgxLTFoMTJsLjk0IDFINS4xMnonLFxuICAgIH0sXG4gICAgYmFjazoge1xuICAgICAgICAvLyBwYXRoOiAnTTczMiA4MzJsLTU1IDU1bC01MDUgLTUwNWw1MDUgLTUwNWw1NSA1NGwtNDUxIDQ1MXonXG4gICAgICAgIC8vIHBhdGg6ICdNMTQgNmwtNC45LS42NEw3IDEgNC45IDUuMzYgMCA2bDMuNiAzLjI2TDIuNjcgMTQgNyAxMS42NyAxMS4zMyAxNGwtLjkzLTQuNzR6JyxcbiAgICAgICAgcGF0aDogJ20gMjYsMjUgYyAtMC40Njc1NzQsMCAtMC45MDk0MzQsMC4xNjg2NSAtMS4yNSwwLjQzNzUgQyAyNC41NTUyNzksMjUuNTkxMjE1IDYuNjEzMDUxNiw0Mi41NDYyODUgNi40Njg3NSw0Mi43MTg3NSA2LjE3ODIzMzIsNDMuMDY1OTYgNiw0My41MTE4NyA2LDQ0IDYsNDQuNTE5NDYgNi4yMDY1NTY2LDQ0Ljk4ODE4IDYuNTMxMjUsNDUuMzQzNzUgNi42NjgzOTkyLDQ1LjQ5Mzk0MSAyNC42MjUsNjIuNDM3NSAyNC42MjUsNjIuNDM3NSBjIDAuNzU5ODQyLDAuNzI1MTUyIDIuMTIxODQyLDAuNzAwNDIxIDIuODQzNzUsLTAuMDYyNSAwLjcyMTkwOCwtMC43NjI5MyAwLjY3MjI0NCwtMi4xMjUwOTkgLTAuMDkzNzUsLTIuODQzNzUgTCAxMy4wMzEyNSw0NiA2NCw0NiBjIDEzLjg4ODg3MSwwIDI1LjY2MDM5MiwxMS42Mzk1NSAyNiwyNi4wMzEyNSAwLjAwMzUsMC4xNDA1NTcgMCwwLjc3NDg1IDAsMC45Njg3NSAwLDEuMTA4IDAuODkyLDIgMiwyIDEuMTA4LDAgMiwtMC44OTIgMiwtMiBsIDAsLTEuMDYyNSBDIDkzLjYxMDIwOCw1NS40MTk0IDgwLjExODUyOSw0MiA2NCw0MiBMIDEzLjAzMTI1LDQyIEMgMTMuMDMxMjUsNDIgMjcuMzYyNzMyLDI4LjQ5NTk1OSAyNy41LDI4LjM0Mzc1IDI3LjgxOTcxLDI3Ljk4OTI1IDI4LDI3LjUxNDk3IDI4LDI3IDI4LDI1Ljg5NTQzIDI3LjEwNDU2OSwyNSAyNiwyNSB6JyxcbiAgICAgICAgdmlld0JveDogJzAgMCAxMDAgMTI1J1xuICAgIH0sXG4gICAgcHJlZmVyZW5jZToge1xuICAgICAgICBwYXRoOiAnTSAxNy43ODEyNSA4Ljk2ODc1IEEgMi4wMDAyIDIuMDAwMiAwIDAgMCAxNiAxMSBMIDE2IDU2LjI1IEMgMTIuMDA4MTg4IDU3LjE2ODMwMiA5IDYwLjc0MTQwNiA5IDY1IEMgOSA2OS4yNTkyMjQgMTIuMDA3NDI3IDcyLjg2MzUzNCAxNiA3My43ODEyNSBMIDE2IDg5IEEgMi4wMDAyIDIuMDAwMiAwIDEgMCAyMCA4OSBMIDIwIDczLjc4MTI1IEMgMjMuOTkyNTczIDcyLjg2MzUzNCAyNyA2OS4yNTkyMjQgMjcgNjUgQyAyNyA2MC43NDE0MDYgMjMuOTkxODEyIDU3LjE2ODMwMiAyMCA1Ni4yNSBMIDIwIDExIEEgMi4wMDAyIDIuMDAwMiAwIDAgMCAxNy43ODEyNSA4Ljk2ODc1IHogTSA0OS43ODEyNSA4Ljk2ODc1IEEgMi4wMDAyIDIuMDAwMiAwIDAgMCA0OCAxMSBMIDQ4IDI2LjI1IEMgNDQuMDA4MTg4IDI3LjE2ODMwNSA0MSAzMC43NDE0MjMgNDEgMzUgQyA0MSAzOS4yNTkxMiA0NC4wMDc0MjcgNDIuODYzNTExIDQ4IDQzLjc4MTI1IEwgNDggODkgQSAyLjAwMDIgMi4wMDAyIDAgMSAwIDUyIDg5IEwgNTIgNDMuNzgxMjUgQyA1NS45OTI1NzMgNDIuODYzNTExIDU5IDM5LjI1OTEyIDU5IDM1IEMgNTkgMzAuNzQxNDIzIDU1Ljk5MTgxMiAyNy4xNjgzMDUgNTIgMjYuMjUgTCA1MiAxMSBBIDIuMDAwMiAyLjAwMDIgMCAwIDAgNDkuNzgxMjUgOC45Njg3NSB6IE0gODEuNzgxMjUgOC45Njg3NSBBIDIuMDAwMiAyLjAwMDIgMCAwIDAgODAgMTEgTCA4MCA1Ni4yNSBDIDc2LjAwODE4OCA1Ny4xNjgzMDIgNzMgNjAuNzQxNDA2IDczIDY1IEMgNzMgNjkuMjU5MjI0IDc2LjAwNzQyNyA3Mi44NjM1MzQgODAgNzMuNzgxMjUgTCA4MCA4OSBBIDIuMDAwMiAyLjAwMDIgMCAxIDAgODQgODkgTCA4NCA3My43ODEyNSBDIDg3Ljk5MjU3MyA3Mi44NjM1MzQgOTEgNjkuMjU5MjI0IDkxIDY1IEMgOTEgNjAuNzQxNDA2IDg3Ljk5MTgxMiA1Ny4xNjgzMDIgODQgNTYuMjUgTCA4NCAxMSBBIDIuMDAwMiAyLjAwMDIgMCAwIDAgODEuNzgxMjUgOC45Njg3NSB6IE0gNTAgMzAgQyA1Mi43ODUxMTYgMzAgNTUgMzIuMjE0ODggNTUgMzUgQyA1NSAzNy43ODUxMiA1Mi43ODUxMTYgNDAgNTAgNDAgQyA0Ny4yMTQ4ODQgNDAgNDUgMzcuNzg1MTIgNDUgMzUgQyA0NSAzMi4yMTQ4OCA0Ny4yMTQ4ODQgMzAgNTAgMzAgeiBNIDE4IDYwIEMgMjAuNzg1MTE2IDYwIDIzIDYyLjIxNDkgMjMgNjUgQyAyMyA2Ny43ODUyIDIwLjc4NTExNiA3MCAxOCA3MCBDIDE1LjIxNDg4NCA3MCAxMyA2Ny43ODUyIDEzIDY1IEMgMTMgNjIuMjE0OSAxNS4yMTQ4ODQgNjAgMTggNjAgeiBNIDgyIDYwIEMgODQuNzg1MTE2IDYwIDg3IDYyLjIxNDkgODcgNjUgQyA4NyA2Ny43ODUyIDg0Ljc4NTExNiA3MCA4MiA3MCBDIDc5LjIxNDg4NCA3MCA3NyA2Ny43ODUyIDc3IDY1IEMgNzcgNjIuMjE0OSA3OS4yMTQ4ODQgNjAgODIgNjAgeiAnLFxuICAgICAgICB2aWV3Qm94OiAnMCAwIDEwMCAxMjUnXG4gICAgfSxcbiAgICBmb250OiB7XG4gICAgICAgIC8vIHBhdGg6ICdNMTQgOC43N3YtMS42bC0xLjk0LS42NC0uNDUtMS4wOS44OC0xLjg0LTEuMTMtMS4xMy0xLjgxLjkxLTEuMDktLjQ1LS42OS0xLjkyaC0xLjZsLS42MyAxLjk0LTEuMTEuNDUtMS44NC0uODgtMS4xMyAxLjEzLjkxIDEuODEtLjQ1IDEuMDlMMCA3LjIzdjEuNTlsMS45NC42NC40NSAxLjA5LS44OCAxLjg0IDEuMTMgMS4xMyAxLjgxLS45MSAxLjA5LjQ1LjY5IDEuOTJoMS41OWwuNjMtMS45NCAxLjExLS40NSAxLjg0Ljg4IDEuMTMtMS4xMy0uOTItMS44MS40Ny0xLjA5TDE0IDguNzV2LjAyek03IDExYy0xLjY2IDAtMy0xLjM0LTMtM3MxLjM0LTMgMy0zIDMgMS4zNCAzIDMtMS4zNCAzLTMgM3onXG4gICAgICAgIHBhdGg6ICdNMTQgNmwtNC45LS42NEw3IDEgNC45IDUuMzYgMCA2bDMuNiAzLjI2TDIuNjcgMTQgNyAxMS42NyAxMS4zMyAxNGwtLjkzLTQuNzR6JyxcbiAgICB9LFxuICAgIGFycm93UmlnaHQ6IHtcbiAgICAgICAgcGF0aDogJ00tMjkwLjksNDMwLjFsLTAuNy0wLjdsOC4yLTguNmwtOC4yLTguMmwwLjctMC43bDguOSw4LjlMLTI5MC45LDQzMC4xeicsXG4gICAgICAgIHZpZXdCb3g6ICctMjkyIDQxMS45IDExIDE4J1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0ljb24vc3ZnLWljb25zLnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3QtY3NzLW1vZHVsZXNcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlYWN0LWNzcy1tb2R1bGVzXCJcbiAqKiBtb2R1bGUgaWQgPSAxMjVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vSWNvbi5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9JY29uLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxMjZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnN2Zy1zaGFwZV80MjNXYiB7XFxuICBmaWxsOiBjdXJyZW50Q29sb3I7XFxuICBvdmVyZmxvdzogaGlkZGVuOyB9XFxuXFxuLmljb25fMnM2VDMge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwic3ZnLXNoYXBlXCI6IFwic3ZnLXNoYXBlXzQyM1diXCIsXG5cdFwiaWNvblwiOiBcImljb25fMnM2VDNcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSWNvbi9JY29uLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxMjdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIi8qXHJcblx0TUlUIExpY2Vuc2UgaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9taXQtbGljZW5zZS5waHBcclxuXHRBdXRob3IgVG9iaWFzIEtvcHBlcnMgQHNva3JhXHJcbiovXHJcbi8vIGNzcyBiYXNlIGNvZGUsIGluamVjdGVkIGJ5IHRoZSBjc3MtbG9hZGVyXHJcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24oKSB7XHJcblx0dmFyIGxpc3QgPSBbXTtcclxuXHJcblx0Ly8gcmV0dXJuIHRoZSBsaXN0IG9mIG1vZHVsZXMgYXMgY3NzIHN0cmluZ1xyXG5cdGxpc3QudG9TdHJpbmcgPSBmdW5jdGlvbiB0b1N0cmluZygpIHtcclxuXHRcdHZhciByZXN1bHQgPSBbXTtcclxuXHRcdGZvcih2YXIgaSA9IDA7IGkgPCB0aGlzLmxlbmd0aDsgaSsrKSB7XHJcblx0XHRcdHZhciBpdGVtID0gdGhpc1tpXTtcclxuXHRcdFx0aWYoaXRlbVsyXSkge1xyXG5cdFx0XHRcdHJlc3VsdC5wdXNoKFwiQG1lZGlhIFwiICsgaXRlbVsyXSArIFwie1wiICsgaXRlbVsxXSArIFwifVwiKTtcclxuXHRcdFx0fSBlbHNlIHtcclxuXHRcdFx0XHRyZXN1bHQucHVzaChpdGVtWzFdKTtcclxuXHRcdFx0fVxyXG5cdFx0fVxyXG5cdFx0cmV0dXJuIHJlc3VsdC5qb2luKFwiXCIpO1xyXG5cdH07XHJcblxyXG5cdC8vIGltcG9ydCBhIGxpc3Qgb2YgbW9kdWxlcyBpbnRvIHRoZSBsaXN0XHJcblx0bGlzdC5pID0gZnVuY3Rpb24obW9kdWxlcywgbWVkaWFRdWVyeSkge1xyXG5cdFx0aWYodHlwZW9mIG1vZHVsZXMgPT09IFwic3RyaW5nXCIpXHJcblx0XHRcdG1vZHVsZXMgPSBbW251bGwsIG1vZHVsZXMsIFwiXCJdXTtcclxuXHRcdHZhciBhbHJlYWR5SW1wb3J0ZWRNb2R1bGVzID0ge307XHJcblx0XHRmb3IodmFyIGkgPSAwOyBpIDwgdGhpcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaWQgPSB0aGlzW2ldWzBdO1xyXG5cdFx0XHRpZih0eXBlb2YgaWQgPT09IFwibnVtYmVyXCIpXHJcblx0XHRcdFx0YWxyZWFkeUltcG9ydGVkTW9kdWxlc1tpZF0gPSB0cnVlO1xyXG5cdFx0fVxyXG5cdFx0Zm9yKGkgPSAwOyBpIDwgbW9kdWxlcy5sZW5ndGg7IGkrKykge1xyXG5cdFx0XHR2YXIgaXRlbSA9IG1vZHVsZXNbaV07XHJcblx0XHRcdC8vIHNraXAgYWxyZWFkeSBpbXBvcnRlZCBtb2R1bGVcclxuXHRcdFx0Ly8gdGhpcyBpbXBsZW1lbnRhdGlvbiBpcyBub3QgMTAwJSBwZXJmZWN0IGZvciB3ZWlyZCBtZWRpYSBxdWVyeSBjb21iaW5hdGlvbnNcclxuXHRcdFx0Ly8gIHdoZW4gYSBtb2R1bGUgaXMgaW1wb3J0ZWQgbXVsdGlwbGUgdGltZXMgd2l0aCBkaWZmZXJlbnQgbWVkaWEgcXVlcmllcy5cclxuXHRcdFx0Ly8gIEkgaG9wZSB0aGlzIHdpbGwgbmV2ZXIgb2NjdXIgKEhleSB0aGlzIHdheSB3ZSBoYXZlIHNtYWxsZXIgYnVuZGxlcylcclxuXHRcdFx0aWYodHlwZW9mIGl0ZW1bMF0gIT09IFwibnVtYmVyXCIgfHwgIWFscmVhZHlJbXBvcnRlZE1vZHVsZXNbaXRlbVswXV0pIHtcclxuXHRcdFx0XHRpZihtZWRpYVF1ZXJ5ICYmICFpdGVtWzJdKSB7XHJcblx0XHRcdFx0XHRpdGVtWzJdID0gbWVkaWFRdWVyeTtcclxuXHRcdFx0XHR9IGVsc2UgaWYobWVkaWFRdWVyeSkge1xyXG5cdFx0XHRcdFx0aXRlbVsyXSA9IFwiKFwiICsgaXRlbVsyXSArIFwiKSBhbmQgKFwiICsgbWVkaWFRdWVyeSArIFwiKVwiO1xyXG5cdFx0XHRcdH1cclxuXHRcdFx0XHRsaXN0LnB1c2goaXRlbSk7XHJcblx0XHRcdH1cclxuXHRcdH1cclxuXHR9O1xyXG5cdHJldHVybiBsaXN0O1xyXG59O1xyXG5cblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1xuICoqIG1vZHVsZSBpZCA9IDEyOFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiJ3VzZSBzdHJpY3QnO1xuXG52YXIgX2Fzc2lnbiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduJyk7XG5cbnZhciBfYXNzaWduMiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2Fzc2lnbik7XG5cbnZhciBfc3RyaW5naWZ5ID0gcmVxdWlyZSgnYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5Jyk7XG5cbnZhciBfc3RyaW5naWZ5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX3N0cmluZ2lmeSk7XG5cbnZhciBfc2xpY2VkVG9BcnJheTIgPSByZXF1aXJlKCdiYWJlbC1ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheScpO1xuXG52YXIgX3NsaWNlZFRvQXJyYXkzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfc2xpY2VkVG9BcnJheTIpO1xuXG52YXIgX2dldEl0ZXJhdG9yMiA9IHJlcXVpcmUoJ2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9nZXQtaXRlcmF0b3InKTtcblxudmFyIF9nZXRJdGVyYXRvcjMgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9nZXRJdGVyYXRvcjIpO1xuXG5mdW5jdGlvbiBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KG9iaikgeyByZXR1cm4gb2JqICYmIG9iai5fX2VzTW9kdWxlID8gb2JqIDogeyBkZWZhdWx0OiBvYmogfTsgfVxuXG4vKipcbiAqIElzb21vcnBoaWMgQ1NTIHN0eWxlIGxvYWRlciBmb3IgV2VicGFja1xuICpcbiAqIENvcHlyaWdodCDCqSAyMDE1LTIwMTYgS3JpYXNvZnQsIExMQy4gQWxsIHJpZ2h0cyByZXNlcnZlZC5cbiAqXG4gKiBUaGlzIHNvdXJjZSBjb2RlIGlzIGxpY2Vuc2VkIHVuZGVyIHRoZSBNSVQgbGljZW5zZSBmb3VuZCBpbiB0aGVcbiAqIExJQ0VOU0UudHh0IGZpbGUgaW4gdGhlIHJvb3QgZGlyZWN0b3J5IG9mIHRoaXMgc291cmNlIHRyZWUuXG4gKi9cblxudmFyIHByZWZpeCA9ICdzJztcbnZhciBpbnNlcnRlZCA9IHt9O1xuXG4vLyBCYXNlNjQgZW5jb2RpbmcgYW5kIGRlY29kaW5nIC0gVGhlIFwiVW5pY29kZSBQcm9ibGVtXCJcbi8vIGh0dHBzOi8vZGV2ZWxvcGVyLm1vemlsbGEub3JnL2VuLVVTL2RvY3MvV2ViL0FQSS9XaW5kb3dCYXNlNjQvQmFzZTY0X2VuY29kaW5nX2FuZF9kZWNvZGluZyNUaGVfVW5pY29kZV9Qcm9ibGVtXG5mdW5jdGlvbiBiNjRFbmNvZGVVbmljb2RlKHN0cikge1xuICByZXR1cm4gYnRvYShlbmNvZGVVUklDb21wb25lbnQoc3RyKS5yZXBsYWNlKC8lKFswLTlBLUZdezJ9KS9nLCBmdW5jdGlvbiAobWF0Y2gsIHAxKSB7XG4gICAgcmV0dXJuIFN0cmluZy5mcm9tQ2hhckNvZGUoJzB4JyArIHAxKTtcbiAgfSkpO1xufVxuXG4vKipcbiAqIFJlbW92ZSBzdHlsZS9saW5rIGVsZW1lbnRzIGZvciBzcGVjaWZpZWQgbm9kZSBJRHNcbiAqIGlmIHRoZXkgYXJlIG5vIGxvbmdlciByZWZlcmVuY2VkIGJ5IFVJIGNvbXBvbmVudHMuXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZUNzcyhpZHMpIHtcbiAgdmFyIF9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gPSB0cnVlO1xuICB2YXIgX2RpZEl0ZXJhdG9yRXJyb3IgPSBmYWxzZTtcbiAgdmFyIF9pdGVyYXRvckVycm9yID0gdW5kZWZpbmVkO1xuXG4gIHRyeSB7XG4gICAgZm9yICh2YXIgX2l0ZXJhdG9yID0gKDAsIF9nZXRJdGVyYXRvcjMuZGVmYXVsdCkoaWRzKSwgX3N0ZXA7ICEoX2l0ZXJhdG9yTm9ybWFsQ29tcGxldGlvbiA9IChfc3RlcCA9IF9pdGVyYXRvci5uZXh0KCkpLmRvbmUpOyBfaXRlcmF0b3JOb3JtYWxDb21wbGV0aW9uID0gdHJ1ZSkge1xuICAgICAgdmFyIGlkID0gX3N0ZXAudmFsdWU7XG5cbiAgICAgIGlmICgtLWluc2VydGVkW2lkXSA8PSAwKSB7XG4gICAgICAgIHZhciBlbGVtID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQocHJlZml4ICsgaWQpO1xuICAgICAgICBpZiAoZWxlbSkge1xuICAgICAgICAgIGVsZW0ucGFyZW50Tm9kZS5yZW1vdmVDaGlsZChlbGVtKTtcbiAgICAgICAgfVxuICAgICAgfVxuICAgIH1cbiAgfSBjYXRjaCAoZXJyKSB7XG4gICAgX2RpZEl0ZXJhdG9yRXJyb3IgPSB0cnVlO1xuICAgIF9pdGVyYXRvckVycm9yID0gZXJyO1xuICB9IGZpbmFsbHkge1xuICAgIHRyeSB7XG4gICAgICBpZiAoIV9pdGVyYXRvck5vcm1hbENvbXBsZXRpb24gJiYgX2l0ZXJhdG9yLnJldHVybikge1xuICAgICAgICBfaXRlcmF0b3IucmV0dXJuKCk7XG4gICAgICB9XG4gICAgfSBmaW5hbGx5IHtcbiAgICAgIGlmIChfZGlkSXRlcmF0b3JFcnJvcikge1xuICAgICAgICB0aHJvdyBfaXRlcmF0b3JFcnJvcjtcbiAgICAgIH1cbiAgICB9XG4gIH1cbn1cblxuLyoqXG4gKiBFeGFtcGxlOlxuICogICAvLyBJbnNlcnQgQ1NTIHN0eWxlcyBvYmplY3QgZ2VuZXJhdGVkIGJ5IGBjc3MtbG9hZGVyYCBpbnRvIERPTVxuICogICB2YXIgcmVtb3ZlQ3NzID0gaW5zZXJ0Q3NzKFtbMSwgJ2JvZHkgeyBjb2xvcjogcmVkOyB9J11dKTtcbiAqXG4gKiAgIC8vIFJlbW92ZSBpdCBmcm9tIHRoZSBET01cbiAqICAgcmVtb3ZlQ3NzKCk7XG4gKi9cbmZ1bmN0aW9uIGluc2VydENzcyhzdHlsZXMsIG9wdGlvbnMpIHtcbiAgdmFyIF9PYmplY3QkYXNzaWduID0gKDAsIF9hc3NpZ24yLmRlZmF1bHQpKHtcbiAgICByZXBsYWNlOiBmYWxzZSxcbiAgICBwcmVwZW5kOiBmYWxzZVxuICB9LCBvcHRpb25zKTtcblxuICB2YXIgcmVwbGFjZSA9IF9PYmplY3QkYXNzaWduLnJlcGxhY2U7XG4gIHZhciBwcmVwZW5kID0gX09iamVjdCRhc3NpZ24ucHJlcGVuZDtcblxuXG4gIHZhciBpZHMgPSBbXTtcbiAgZm9yICh2YXIgaSA9IDA7IGkgPCBzdHlsZXMubGVuZ3RoOyBpKyspIHtcbiAgICB2YXIgX3N0eWxlcyRpID0gKDAsIF9zbGljZWRUb0FycmF5My5kZWZhdWx0KShzdHlsZXNbaV0sIDQpO1xuXG4gICAgdmFyIG1vZHVsZUlkID0gX3N0eWxlcyRpWzBdO1xuICAgIHZhciBjc3MgPSBfc3R5bGVzJGlbMV07XG4gICAgdmFyIG1lZGlhID0gX3N0eWxlcyRpWzJdO1xuICAgIHZhciBzb3VyY2VNYXAgPSBfc3R5bGVzJGlbM107XG5cbiAgICB2YXIgaWQgPSBtb2R1bGVJZCArICctJyArIGk7XG5cbiAgICBpZHMucHVzaChpZCk7XG5cbiAgICBpZiAoaW5zZXJ0ZWRbaWRdKSB7XG4gICAgICBpZiAoIXJlcGxhY2UpIHtcbiAgICAgICAgaW5zZXJ0ZWRbaWRdKys7XG4gICAgICAgIGNvbnRpbnVlO1xuICAgICAgfVxuICAgIH1cblxuICAgIGluc2VydGVkW2lkXSA9IDE7XG5cbiAgICB2YXIgZWxlbSA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKHByZWZpeCArIGlkKTtcbiAgICB2YXIgY3JlYXRlID0gZmFsc2U7XG5cbiAgICBpZiAoIWVsZW0pIHtcbiAgICAgIGNyZWF0ZSA9IHRydWU7XG5cbiAgICAgIGVsZW0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdzdHlsZScpO1xuICAgICAgZWxlbS5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAndGV4dC9jc3MnKTtcbiAgICAgIGVsZW0uaWQgPSBwcmVmaXggKyBpZDtcblxuICAgICAgaWYgKG1lZGlhKSB7XG4gICAgICAgIGVsZW0uc2V0QXR0cmlidXRlKCdtZWRpYScsIG1lZGlhKTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICB2YXIgY3NzVGV4dCA9IGNzcztcbiAgICBpZiAoc291cmNlTWFwKSB7XG4gICAgICBjc3NUZXh0ICs9ICdcXG4vKiMgc291cmNlTWFwcGluZ1VSTD1kYXRhOmFwcGxpY2F0aW9uL2pzb247YmFzZTY0LCcgKyBiNjRFbmNvZGVVbmljb2RlKCgwLCBfc3RyaW5naWZ5Mi5kZWZhdWx0KShzb3VyY2VNYXApKSArICcqLyc7XG4gICAgICBjc3NUZXh0ICs9ICdcXG4vKiMgc291cmNlVVJMPScgKyBzb3VyY2VNYXAuZmlsZSArICcqLyc7XG4gICAgfVxuXG4gICAgaWYgKCd0ZXh0Q29udGVudCcgaW4gZWxlbSkge1xuICAgICAgZWxlbS50ZXh0Q29udGVudCA9IGNzc1RleHQ7XG4gICAgfSBlbHNlIHtcbiAgICAgIGVsZW0uc3R5bGVTaGVldC5jc3NUZXh0ID0gY3NzVGV4dDtcbiAgICB9XG5cbiAgICBpZiAoY3JlYXRlKSB7XG4gICAgICBpZiAocHJlcGVuZCkge1xuICAgICAgICBkb2N1bWVudC5oZWFkLmluc2VydEJlZm9yZShlbGVtLCBkb2N1bWVudC5oZWFkLmNoaWxkTm9kZXNbMF0pO1xuICAgICAgfSBlbHNlIHtcbiAgICAgICAgZG9jdW1lbnQuaGVhZC5hcHBlbmRDaGlsZChlbGVtKTtcbiAgICAgIH1cbiAgICB9XG4gIH1cblxuICByZXR1cm4gcmVtb3ZlQ3NzLmJpbmQobnVsbCwgaWRzKTtcbn1cblxubW9kdWxlLmV4cG9ydHMgPSBpbnNlcnRDc3M7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1xuICoqIG1vZHVsZSBpZCA9IDEyOVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9hc3NpZ25cIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9vYmplY3QvYXNzaWduXCJcbiAqKiBtb2R1bGUgaWQgPSAxMzBcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvY29yZS1qcy9qc29uL3N0cmluZ2lmeVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiYmFiZWwtcnVudGltZS9jb3JlLWpzL2pzb24vc3RyaW5naWZ5XCJcbiAqKiBtb2R1bGUgaWQgPSAxMzFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcImJhYmVsLXJ1bnRpbWUvaGVscGVycy9zbGljZWRUb0FycmF5XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJiYWJlbC1ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheVwiXG4gKiogbW9kdWxlIGlkID0gMTMyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJiYWJlbC1ydW50aW1lL2NvcmUtanMvZ2V0LWl0ZXJhdG9yXCJcbiAqKiBtb2R1bGUgaWQgPSAxMzNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vQWxlcnQuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0LnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxMzRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmFsZXJ0c19sTll5UyB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICB3aWR0aDogMTAwJTtcXG4gIHBhZGRpbmc6IDAgMjBweDtcXG4gIHRvcDogMTBweDtcXG4gIGxlZnQ6IDA7XFxuICB6LWluZGV4OiA5OTk5OyB9XFxuXFxuLmFsZXJ0X1RnNkFMLCAuYWxlcnQtLXN1Y2Nlc3NfaWJJb2wsIC5hbGVydC0tZXJyb3JfMzZpT2QsIC5hbGVydC0td2FybmluZ182XzE5WCB7XFxuICBwYWRkaW5nOiAxMHB4IDA7XFxuICBmb250LXNpemU6IDE2cHg7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgYm94LXNoYWRvdzogMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMzIpO1xcbiAgZm9udC1zaXplOiAxcmVtO1xcbiAgZm9udC13ZWlnaHQ6IGJvbGQ7XFxuICBib3JkZXItcmFkaXVzOiAzcHg7XFxuICB3aWR0aDogNzAwcHg7XFxuICBtYXJnaW46IDAgYXV0byAxMHB4OyB9XFxuICBAbWVkaWEgKG1heC13aWR0aDogNTQwcHgpIHtcXG4gICAgLmFsZXJ0X1RnNkFMLCAuYWxlcnQtLXN1Y2Nlc3NfaWJJb2wsIC5hbGVydC0tZXJyb3JfMzZpT2QsIC5hbGVydC0td2FybmluZ182XzE5WCB7XFxuICAgICAgbWF4LXdpZHRoOiAxMDAlOyB9IH1cXG5cXG4uY29udGVudF8yQ0lMZyB7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcGFkZGluZzogMCAzMHB4OyB9XFxuXFxuLmFsZXJ0LWNsb3NlXzNDa3otIHtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxMHB4O1xcbiAgdG9wOiAxMXB4O1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XFxuXFxuLmFsZXJ0LS1zdWNjZXNzX2liSW9sIHtcXG4gIGJhY2tncm91bmQ6ICM3MmVmYTg7XFxuICBjb2xvcjogIzIwNGQzMzsgfVxcblxcbi5hbGVydC0tZXJyb3JfMzZpT2Qge1xcbiAgYmFja2dyb3VuZDogI2NjMDAwMDtcXG4gIGNvbG9yOiAjZmZmOyB9XFxuXFxuLmFsZXJ0LS13YXJuaW5nXzZfMTlYIHtcXG4gIGJhY2tncm91bmQ6IG9yYW5nZTtcXG4gIGNvbG9yOiBibGFjazsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImFsZXJ0c1wiOiBcImFsZXJ0c19sTll5U1wiLFxuXHRcImFsZXJ0XCI6IFwiYWxlcnRfVGc2QUxcIixcblx0XCJhbGVydC0tc3VjY2Vzc1wiOiBcImFsZXJ0LS1zdWNjZXNzX2liSW9sXCIsXG5cdFwiYWxlcnQtLWVycm9yXCI6IFwiYWxlcnQtLWVycm9yXzM2aU9kXCIsXG5cdFwiYWxlcnQtLXdhcm5pbmdcIjogXCJhbGVydC0td2FybmluZ182XzE5WFwiLFxuXHRcImNvbnRlbnRcIjogXCJjb250ZW50XzJDSUxnXCIsXG5cdFwiYWxlcnQtY2xvc2VcIjogXCJhbGVydC1jbG9zZV8zQ2t6LVwiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9BbGVydC9BbGVydC5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTM1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEFsZXJ0IGZyb20gJy4vQWxlcnQnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9BbGVydC5zY3NzJyk7XG5mdW5jdGlvbiBBbGVydHMocHJvcHMpIHtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IHN0eWxlcy5hbGVydHMgfSwgcHJvcHMubWVzc2FnZXMubWFwKChtc2csIGluZGV4KSA9PiAoUmVhY3QuY3JlYXRlRWxlbWVudChBbGVydCwgeyBrZXk6IGluZGV4LCB0eXBlOiBtc2cudHlwZSwgbWVzc2FnZTogbXNnLmNvbnRlbnQsIHZpc2libGU6IG1zZy52aXNpYmxlLCBvblJlcXVlc3RDbG9zZTogKCkgPT4ge1xuICAgICAgICAgICAgcHJvcHMub25SZXF1ZXN0Q2xvc2UobXNnLmlkKTtcbiAgICAgICAgfSB9KSkpKSk7XG59XG5leHBvcnQgZGVmYXVsdCBBbGVydHM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0FsZXJ0L0FsZXJ0cy50c3hcbiAqKi8iLCJpbXBvcnQgTW9kYWwgZnJvbSAnLi9Nb2RhbCc7XG5pbXBvcnQgTW9kYWxQbHVzIGZyb20gJy4vTW9kYWxQbHVzJztcbmltcG9ydCBDb25maXJtTW9kYWwgZnJvbSAnLi9Db25maXJtTW9kYWwnO1xuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG5leHBvcnQgKiBmcm9tICcuL01vZGFsJztcbmV4cG9ydCB7IE1vZGFsUGx1cywgQ29uZmlybU1vZGFsIH07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdERPTSBmcm9tICdyZWFjdC1kb20nO1xuaW1wb3J0IHV0aWxzIGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCBGYWRlIGZyb20gJy4uL0ZhZGUnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9Nb2RhbC5zY3NzJztcbmNsYXNzIE1vZGFsIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBtb2RhbEhlaWdodDogMCxcbiAgICAgICAgICAgIGlzTW9kYWxIaWRkZW46IGZhbHNlLFxuICAgICAgICAgICAgaXNNb2RhbFZlcnRpY2FsQ2VudGVyOiB0cnVlLFxuICAgICAgICAgICAgY2xpY2tzOiAwXG4gICAgICAgIH07XG4gICAgICAgIHRoaXMuc2V0VmlldyA9IHRoaXMuc2V0Vmlldy5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmhpZGVNb2RhbCA9IHRoaXMuaGlkZU1vZGFsLmJpbmQodGhpcyk7XG4gICAgfVxuICAgIGhpZGVNb2RhbCgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy5vblJlcXVlc3RDbG9zZSgpO1xuICAgICAgICB1dGlscy51bmxvY2tTY3JvbGwoKTtcbiAgICB9XG4gICAgc2V0VmlldygpIHtcbiAgICAgICAgbGV0IG1vZGFsSGVpZ2h0ID0gUmVhY3RET00uZmluZERPTU5vZGUodGhpcy5tb2RhbCkuY2xpZW50SGVpZ2h0O1xuICAgICAgICBsZXQgaXNNb2RhbFZlcnRpY2FsQ2VudGVyID0gdHJ1ZTtcbiAgICAgICAgbGV0IGRvY3VtZW50SGVpZ2h0ID0gZG9jdW1lbnQuYm9keS5jbGllbnRIZWlnaHQ7XG4gICAgICAgIGlmICh3aW5kb3cuaW5uZXJIZWlnaHQgPCBtb2RhbEhlaWdodCkge1xuICAgICAgICAgICAgaXNNb2RhbFZlcnRpY2FsQ2VudGVyID0gZmFsc2U7XG4gICAgICAgIH1cbiAgICAgICAgaWYgKHdpbmRvdy5pbm5lckhlaWdodCA+IGRvY3VtZW50LmJvZHkuY2xpZW50SGVpZ2h0KSB7XG4gICAgICAgICAgICBkb2N1bWVudEhlaWdodCA9IHdpbmRvdy5pbm5lckhlaWdodDtcbiAgICAgICAgfVxuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIG1vZGFsSGVpZ2h0LFxuICAgICAgICAgICAgaXNNb2RhbFZlcnRpY2FsQ2VudGVyLFxuICAgICAgICAgICAgZG9jdW1lbnRIZWlnaHRcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgfVxuICAgIHNob3VsZENvbXBvbmVudFVwZGF0ZShuZXh0UHJvcHMsIG5leHRTdGF0ZSkge1xuICAgICAgICByZXR1cm4gIV8uaXNFcXVhbCh0aGlzLnN0YXRlLCBuZXh0U3RhdGUpIHx8ICFfLmlzRXF1YWwodGhpcy5wcm9wcywgbmV4dFByb3BzKTtcbiAgICB9XG4gICAgY29tcG9uZW50RGlkVXBkYXRlKHByZXZQcm9wcykge1xuICAgICAgICAvLyBtb2RhbCBzaG93XG4gICAgICAgIGlmICghcHJldlByb3BzLm9wZW4gJiYgdGhpcy5wcm9wcy5vcGVuID09PSB0cnVlKSB7XG4gICAgICAgICAgICB0aGlzLnNldFZpZXcoKTtcbiAgICAgICAgICAgIHV0aWxzLmxvY2tTY3JvbGwoKTtcbiAgICAgICAgICAgIHdpbmRvdy5hZGRFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldFZpZXcpO1xuICAgICAgICB9XG4gICAgICAgIC8vIG1vZGFsIGhpZGVcbiAgICAgICAgaWYgKHByZXZQcm9wcy5vcGVuID09PSB0cnVlICYmIHRoaXMucHJvcHMub3BlbiA9PT0gZmFsc2UpIHtcbiAgICAgICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldFZpZXcpO1xuICAgICAgICAgICAgdXRpbHMudW5sb2NrU2Nyb2xsKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFVubW91bnQoKSB7XG4gICAgICAgIHdpbmRvdy5yZW1vdmVFdmVudExpc3RlbmVyKCdyZXNpemUnLCB0aGlzLnNldFZpZXcpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgb3BlbiB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgZGVmYXVsdENsYXNzID0gJ21vZGFsJztcbiAgICAgICAgY29uc3QgbW9kYWxJZCA9IGBtb2RhbC0keyhuZXcgRGF0ZSgpKS52YWx1ZU9mKCl9YDtcbiAgICAgICAgbGV0IGNsYXNzTmFtZSA9IHRoaXMucHJvcHMuY2xhc3NOYW1lID8gYCR7ZGVmYXVsdENsYXNzfSAke3RoaXMucHJvcHMuY2xhc3NOYW1lfWAgOiBkZWZhdWx0Q2xhc3M7XG4gICAgICAgIGxldCB3aWR0aCA9IHRoaXMucHJvcHMud2lkdGggPyB0aGlzLnByb3BzLndpZHRoIDogNTAwO1xuICAgICAgICBsZXQgaGVpZ2h0ID0gdGhpcy5zdGF0ZS5tb2RhbEhlaWdodDtcbiAgICAgICAgbGV0IHN0eWxlID0ge1xuICAgICAgICAgICAgYmFja2Ryb3A6IHt9LFxuICAgICAgICAgICAgdmVydGljYWxDZW50ZXI6IHt9LFxuICAgICAgICAgICAgc2Nyb2xsOiB7fSxcbiAgICAgICAgICAgIG1vZGFsOiB7fVxuICAgICAgICB9O1xuICAgICAgICBzdHlsZS5iYWNrZHJvcCA9IHtcbiAgICAgICAgICAgIHBvc2l0aW9uOiAnZml4ZWQnLFxuICAgICAgICAgICAgaGVpZ2h0OiAnMTAwJScsXG4gICAgICAgICAgICB3aWR0aDogJzEwMCUnLFxuICAgICAgICAgICAgbGVmdDogMCxcbiAgICAgICAgICAgIHRvcDogMCxcbiAgICAgICAgICAgIGJhY2tncm91bmQ6ICdyZ2JhKDAsIDAsIDAsIDAuMjMpJyxcbiAgICAgICAgICAgIG92ZXJmbG93OiAnc2Nyb2xsJ1xuICAgICAgICB9O1xuICAgICAgICBzdHlsZS52ZXJ0aWNhbENlbnRlciA9IHtcbiAgICAgICAgICAgIHdpZHRoLFxuICAgICAgICAgICAgbWFyZ2luVG9wOiAtaGVpZ2h0IC8gMixcbiAgICAgICAgICAgIG1hcmdpbkxlZnQ6IC13aWR0aCAvIDIsXG4gICAgICAgICAgICBwb3NpdGlvbjogJ2Fic29sdXRlJyxcbiAgICAgICAgICAgIGxlZnQ6ICc1MCUnLFxuICAgICAgICAgICAgdG9wOiAnNTAlJ1xuICAgICAgICB9O1xuICAgICAgICBzdHlsZS5zY3JvbGwgPSB7XG4gICAgICAgICAgICB3aWR0aCxcbiAgICAgICAgICAgIG1hcmdpbjogJzUwcHggYXV0bydcbiAgICAgICAgfTtcbiAgICAgICAgc3R5bGUubW9kYWwgPSB7fTtcbiAgICAgICAgaWYgKHRoaXMuc3RhdGUuaXNNb2RhbFZlcnRpY2FsQ2VudGVyKSB7XG4gICAgICAgICAgICBzdHlsZS5tb2RhbCA9IE9iamVjdC5hc3NpZ24oe30sIHN0eWxlLm1vZGFsLCBzdHlsZS52ZXJ0aWNhbENlbnRlcik7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdHlsZS5tb2RhbCA9IE9iamVjdC5hc3NpZ24oe30sIHN0eWxlLm1vZGFsLCBzdHlsZS5zY3JvbGwpO1xuICAgICAgICB9XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChGYWRlLCBudWxsLCBvcGVuID09PSB0cnVlICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgb25DbGljazogZSA9PiB7XG4gICAgICAgICAgICAgICAgLy8g5L2/55So6Zi75q2i5YaS5rOh5Lya6YCg5oiQ6Zeu6aKYXG4gICAgICAgICAgICAgICAgaWYgKGUudGFyZ2V0LnF1ZXJ5U2VsZWN0b3IoYCMke21vZGFsSWR9YCkpIHtcbiAgICAgICAgICAgICAgICAgICAgdGhpcy5oaWRlTW9kYWwoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9LCBjbGFzc05hbWU6IHN0eWxlc1snbW9kYWwtYmFja2Ryb3AnXSwgc3R5bGU6IHN0eWxlLmJhY2tkcm9wIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgaWQ6IG1vZGFsSWQsIHN0eWxlOiBzdHlsZS5tb2RhbCwgY2xhc3NOYW1lOiBgJHtzdHlsZXNbJ21vZGFsJ119ICR7Y2xhc3NOYW1lfWAsIHJlZjogcmVmID0+IHsgdGhpcy5tb2RhbCA9IHJlZjsgfSB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKSkpKSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgTW9kYWw7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LWRvbVwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVhY3QtZG9tXCJcbiAqKiBtb2R1bGUgaWQgPSAxMzlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBGYWRlIGZyb20gJy4vRmFkZSc7XG5leHBvcnQgZGVmYXVsdCBGYWRlO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9GYWRlL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBSZWFjdENTU1RyYW5zaXRpb25Hcm91cCBmcm9tICdyZWFjdC1hZGRvbnMtY3NzLXRyYW5zaXRpb24tZ3JvdXAnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9GYWRlLnNjc3MnKTtcbmV4cG9ydCBkZWZhdWx0IHByb3BzID0+IHtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUmVhY3RDU1NUcmFuc2l0aW9uR3JvdXAsIHsgY29tcG9uZW50OiBcImRpdlwiLCB0cmFuc2l0aW9uTmFtZTogc3R5bGVzLCB0cmFuc2l0aW9uRW50ZXJUaW1lb3V0OiAzMDAsIHRyYW5zaXRpb25MZWF2ZVRpbWVvdXQ6IDMwMCB9LCBwcm9wcy5jaGlsZHJlbikpO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LWFkZG9ucy1jc3MtdHJhbnNpdGlvbi1ncm91cFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVhY3QtYWRkb25zLWNzcy10cmFuc2l0aW9uLWdyb3VwXCJcbiAqKiBtb2R1bGUgaWQgPSAxNDJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vRmFkZS5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS10aW1lOiAuM3M7IH1cXG5cXG4uZW50ZXJfYjA4bEYge1xcbiAgb3BhY2l0eTogMC4wMTtcXG4gIHRyYW5zaXRpb246IG9wYWNpdHkgdmFyKC0tdGltZSkgZWFzZS1pbjsgfVxcblxcbi5lbnRlckFjdGl2ZV8ybFBHeiB7XFxuICBvcGFjaXR5OiAxOyB9XFxuXFxuLmxlYXZlXzNTMlEtIHtcXG4gIG9wYWNpdHk6IDE7XFxuICB0cmFuc2l0aW9uOiBvcGFjaXR5IHZhcigtLXRpbWUpIGVhc2UtaW47IH1cXG5cXG4ubGVhdmVBY3RpdmVfMmk0cUgge1xcbiAgb3BhY2l0eTogMDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImVudGVyXCI6IFwiZW50ZXJfYjA4bEZcIixcblx0XCJlbnRlckFjdGl2ZVwiOiBcImVudGVyQWN0aXZlXzJsUEd6XCIsXG5cdFwibGVhdmVcIjogXCJsZWF2ZV8zUzJRLVwiLFxuXHRcImxlYXZlQWN0aXZlXCI6IFwibGVhdmVBY3RpdmVfMmk0cUhcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvRmFkZS9GYWRlLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vTW9kYWwuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDVcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm1vZGFsXzIwQVoxIHtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICBwYWRkaW5nOiAwO1xcbiAgYm94LXNoYWRvdzogMCAzcHggMTBweCByZ2JhKDAsIDAsIDAsIDAuMTUpO1xcbiAgYm9yZGVyLXJhZGl1czogM3B4OyB9XFxuICAubW9kYWxfMjBBWjEgLmljb24tY2xvc2VfNXV1TGEge1xcbiAgICBjdXJzb3I6IHBvaW50ZXI7IH1cXG5cXG4ubW9kYWwtYmFja2Ryb3BfM3JxMGsge1xcbiAgei1pbmRleDogOTAwOyB9XFxuXFxuLm1vZGFsLWJvZHlfMmdUMjMge1xcbiAgbWFyZ2luOiAxMHB4IDAgMDsgfVxcblxcbi5tb2RhbC1oZWFkZXJfMmR6Njgge1xcbiAgbWFyZ2luOiAxMHB4IDA7IH1cXG5cXG4ubW9kYWwtdGl0bGVfOHBPZkUge1xcbiAgZm9udC1zaXplOiAxLjRyZW07XFxuICBmb250LXdlaWdodDogbm9ybWFsO1xcbiAgY29sb3I6ICMzMzM7XFxuICBtYXJnaW46IDVweCAwOyB9XFxuXFxuLm1vZGFsLWZvb3Rlcl9meVp0UyB7XFxuICBib3JkZXItdG9wOiAzcHggc29saWQgI2U5ZWJmMjtcXG4gIHRleHQtYWxpZ246IHJpZ2h0O1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxcbiAgLm1vZGFsLWZvb3Rlcl9meVp0UyAuYnRuLXJlZF8zem9taSB7XFxuICAgIGZsb2F0OiBsZWZ0O1xcbiAgICBtYXJnaW4tbGVmdDogMDsgfVxcbiAgLm1vZGFsLWZvb3Rlcl9meVp0UyBidXR0b24ge1xcbiAgICBtYXJnaW46IDVweCAwIDVweCAxMHB4OyB9XFxuXFxuLm1vZGFsLWNvbnRlbnRfM1pJSGIge1xcbiAgbWFyZ2luOiAxNXB4IDA7XFxuICBsaW5lLWhlaWdodDogMS41OyB9XFxuXFxuLmNvbmZpcm0tbW9kYWxfazVHRjAge1xcbiAgYmFja2dyb3VuZDogI2ZmZjtcXG4gIHBhZGRpbmc6IDIwcHggMzBweDsgfVxcbiAgLmNvbmZpcm0tbW9kYWxfazVHRjAgcCB7XFxuICAgIGZvbnQtc2l6ZTogMS4ycmVtOyB9XFxuXFxuLm1vZGFsLXBsdXNfMV9UU1Qge1xcbiAgcGFkZGluZzogMjBweCAzMHB4OyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwibW9kYWxcIjogXCJtb2RhbF8yMEFaMVwiLFxuXHRcImljb24tY2xvc2VcIjogXCJpY29uLWNsb3NlXzV1dUxhXCIsXG5cdFwibW9kYWwtYmFja2Ryb3BcIjogXCJtb2RhbC1iYWNrZHJvcF8zcnEwa1wiLFxuXHRcIm1vZGFsLWJvZHlcIjogXCJtb2RhbC1ib2R5XzJnVDIzXCIsXG5cdFwibW9kYWwtaGVhZGVyXCI6IFwibW9kYWwtaGVhZGVyXzJkejY4XCIsXG5cdFwibW9kYWwtdGl0bGVcIjogXCJtb2RhbC10aXRsZV84cE9mRVwiLFxuXHRcIm1vZGFsLWZvb3RlclwiOiBcIm1vZGFsLWZvb3Rlcl9meVp0U1wiLFxuXHRcImJ0bi1yZWRcIjogXCJidG4tcmVkXzN6b21pXCIsXG5cdFwibW9kYWwtY29udGVudFwiOiBcIm1vZGFsLWNvbnRlbnRfM1pJSGJcIixcblx0XCJjb25maXJtLW1vZGFsXCI6IFwiY29uZmlybS1tb2RhbF9rNUdGMFwiLFxuXHRcIm1vZGFsLXBsdXNcIjogXCJtb2RhbC1wbHVzXzFfVFNUXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNDZcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgTW9kYWwgZnJvbSAnLi9Nb2RhbCc7XG5pbXBvcnQgc3R5bGVzIGZyb20gJy4vTW9kYWwuc2Nzcyc7XG5jbGFzcyBNb2RhbFBsdXMgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyB0aXRsZSwgb3Blbiwgb25SZXF1ZXN0Q2xvc2UsIHdpZHRoLCBhY3Rpb25zIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoTW9kYWwsIHsgb3Blbjogb3Blbiwgb25SZXF1ZXN0Q2xvc2U6IG9uUmVxdWVzdENsb3NlLCB3aWR0aDogd2lkdGggfHwgNjAwIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBzdHlsZXNbJ21vZGFsLXBsdXMnXSB9LFxuICAgICAgICAgICAgICAgIHRpdGxlICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBzdHlsZXNbJ21vZGFsLWhlYWRlciddIH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCB7IGNsYXNzTmFtZTogc3R5bGVzWydtb2RhbC10aXRsZSddIH0sIHRpdGxlKSkpLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IHN0eWxlc1snbW9kYWwtYm9keSddIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pLFxuICAgICAgICAgICAgICAgIGFjdGlvbnMgJiYgKGFjdGlvbnMubWFwKChhY3Rpb24sIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiBSZWFjdC5jbG9uZUVsZW1lbnQoYWN0aW9uLCB7XG4gICAgICAgICAgICAgICAgICAgICAgICBrZXk6IGluZGV4XG4gICAgICAgICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgICAgIH0pKSkpKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBNb2RhbFBsdXM7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL01vZGFsL01vZGFsUGx1cy50c3hcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IE1vZGFsIGZyb20gJy4uL01vZGFsJztcbmltcG9ydCBNb2RhbEZvb3RlciBmcm9tICcuL01vZGFsRm9vdGVyJztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vTW9kYWwuc2NzcycpO1xubGV0IERpYWxvZyA9IGNsYXNzIERpYWxvZyBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IG9uQ29uZmlybSwgb25SZXF1ZXN0Q2xvc2UsIG9wZW4gfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChNb2RhbCwgeyBvcGVuOiBvcGVuLCBvblJlcXVlc3RDbG9zZTogb25SZXF1ZXN0Q2xvc2UsIHdpZHRoOiB0aGlzLnByb3BzLndpZHRoIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImNvbmZpcm0tbW9kYWxcIiB9LFxuICAgICAgICAgICAgICAgIHRoaXMucHJvcHMudGl0bGUgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IFwibW9kYWwtaGVhZGVyXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImgxXCIsIHsgc3R5bGVOYW1lOiBcIm1vZGFsLXRpdGxlXCIgfSwgdGhpcy5wcm9wcy50aXRsZSkpKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcIm1vZGFsLWNvbnRlbnRcIiB9LCB0aGlzLnByb3BzLmNoaWxkcmVuKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KE1vZGFsRm9vdGVyLCB7IG9uQ29uZmlybTogb25Db25maXJtLCBvbkNhbmNlbDogb25SZXF1ZXN0Q2xvc2UgfSkpKSk7XG4gICAgfVxufTtcbkRpYWxvZyA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzKVxuXSwgRGlhbG9nKTtcbmV4cG9ydCBkZWZhdWx0IERpYWxvZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvQ29uZmlybU1vZGFsLnRzeFxuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBCdXR0b24gfSBmcm9tICcuLi9mb3JtJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vTW9kYWxGb290ZXIuc2NzcycpO1xuZnVuY3Rpb24gTW9kYWxGb290ZXIocHJvcHMpIHtcbiAgICBjb25zdCB7IG9uQ29uZmlybSwgb25DYW5jZWwgfSA9IHByb3BzO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzWydtb2RhbC1mb290ZXInXSB9LFxuICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJ1dHRvbiwgeyBjb2xvcjogXCJibHVlXCIsIG9uQ2xpY2s6IG9uQ29uZmlybSB9LCBcIlxcdTc4NkVcXHU4QkE0XCIpLFxuICAgICAgICBvbkNhbmNlbCAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChCdXR0b24sIHsgY29sb3I6IFwid2hpdGVcIiwgb25DbGljazogb25DYW5jZWwgfSwgXCJcXHU1M0Q2XFx1NkQ4OFwiKSkpKTtcbn1cbmV4cG9ydCBkZWZhdWx0IE1vZGFsRm9vdGVyO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Nb2RhbC9Nb2RhbEZvb3Rlci50c3hcbiAqKi8iLCJpbXBvcnQgQnV0dG9uIGZyb20gJy4vQnV0dG9uJztcbmltcG9ydCBJbnB1dCBmcm9tICcuL0lucHV0JztcbmltcG9ydCBTZWxlY3RpemVJbnB1dCBmcm9tICcuL1NlbGVjdGl6ZUlucHV0JztcbmltcG9ydCBUZXh0YXJlYSBmcm9tICcuL1RleHRhcmVhJztcbmV4cG9ydCB7IEJ1dHRvbiwgSW5wdXQsIFNlbGVjdGl6ZUlucHV0LCBUZXh0YXJlYSB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9mb3JtLnRzXG4gKiovIiwiaW1wb3J0IEJ1dHRvbiBmcm9tICcuL0J1dHRvbic7XG5leHBvcnQgZGVmYXVsdCBCdXR0b247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0J1dHRvbi9pbmRleC50c1xuICoqLyIsInZhciBfX2Fzc2lnbiA9ICh0aGlzICYmIHRoaXMuX19hc3NpZ24pIHx8IE9iamVjdC5hc3NpZ24gfHwgZnVuY3Rpb24odCkge1xuICAgIGZvciAodmFyIHMsIGkgPSAxLCBuID0gYXJndW1lbnRzLmxlbmd0aDsgaSA8IG47IGkrKykge1xuICAgICAgICBzID0gYXJndW1lbnRzW2ldO1xuICAgICAgICBmb3IgKHZhciBwIGluIHMpIGlmIChPYmplY3QucHJvdG90eXBlLmhhc093blByb3BlcnR5LmNhbGwocywgcCkpXG4gICAgICAgICAgICB0W3BdID0gc1twXTtcbiAgICB9XG4gICAgcmV0dXJuIHQ7XG59O1xudmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmltcG9ydCBjbGFzc25hbWVzIGZyb20gJ2NsYXNzbmFtZXMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uLy4uL2hlbHBlcnMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9fYnV0dG9uLnNjc3MnKTtcbmxldCBCdXR0b24gPSBjbGFzcyBCdXR0b24gZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzTW91c2VPdmVyOiBmYWxzZSxcbiAgICAgICAgfTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgeyBvbkNsaWNrLCBjbGFzc05hbWUsIGNvbG9yLCBzaXplLCBpc0ZsdWlkLCB3aWR0aCwgdG8gfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCBzdHlsZSA9IHt9O1xuICAgICAgICBjb25zdCBzdHlsZU5hbWUgPSBjbGFzc25hbWVzKHtcbiAgICAgICAgICAgICdidG4nOiB0cnVlLFxuICAgICAgICAgICAgJ2J0bi0taG92ZXInOiB0aGlzLnN0YXRlLmlzTW91c2VPdmVyLFxuICAgICAgICAgICAgJ2J0bi0tZmx1aWQnOiBpc0ZsdWlkLFxuICAgICAgICAgICAgW2BidG4tLSR7Y29sb3J9YF06IEJvb2xlYW4oY29sb3IpLFxuICAgICAgICAgICAgW2BidG4tLSR7c2l6ZX1gXTogQm9vbGVhbihzaXplKSxcbiAgICAgICAgfSk7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnRvKSB7XG4gICAgICAgICAgICBvbkNsaWNrID0gZSA9PiB7XG4gICAgICAgICAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgICAgICAgICAgICAgIGhlbHBlcnMucmVkaXJlY3QodG8pO1xuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIG9uQ2xpY2sgPSBlID0+IHtcbiAgICAgICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KCk7XG4gICAgICAgICAgICAgICAgaWYgKHRoaXMucHJvcHMub25DbGljaykge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uQ2xpY2soZSk7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodHlwZW9mIHdpZHRoICE9PSAndW5kZWZpbmVkJykge1xuICAgICAgICAgICAgc3R5bGUgPSB7XG4gICAgICAgICAgICAgICAgd2lkdGhcbiAgICAgICAgICAgIH07XG4gICAgICAgIH1cbiAgICAgICAgY29uc3QgcHJvcHMgPSBfKHRoaXMucHJvcHMpXG4gICAgICAgICAgICAub21pdChbJ3RvJywgJ2NvbG9yJywgJ3NpemUnLCAnaXNGbHVpZCcsICd3aWR0aCcsICdzdHlsZXMnXSlcbiAgICAgICAgICAgIC5hc3NpZ24oe30sIHtcbiAgICAgICAgICAgIGNsYXNzTmFtZTogY2xhc3NOYW1lIHx8ICcnLFxuICAgICAgICAgICAgb25DbGljayxcbiAgICAgICAgICAgIHN0eWxlXG4gICAgICAgIH0pXG4gICAgICAgICAgICAudmFsdWUoKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiYnV0dG9uXCIsIF9fYXNzaWduKHt9LCBwcm9wcywgeyBzdHlsZU5hbWU6IHN0eWxlTmFtZSwgb25Nb3VzZU92ZXI6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgaXNNb3VzZU92ZXI6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIH0sIG9uTW91c2VPdXQ6ICgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgICAgICAgICAgaXNNb3VzZU92ZXI6IGZhbHNlXG4gICAgICAgICAgICAgICAgfSk7XG4gICAgICAgICAgICB9IH0pLCB0aGlzLnByb3BzLmNoaWxkcmVuKSk7XG4gICAgfVxufTtcbkJ1dHRvbiA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgQnV0dG9uKTtcbkJ1dHRvbi5kZWZhdWx0UHJvcHMgPSB7XG4gICAgY29sb3I6ICdibHVlJ1xufTtcbmV4cG9ydCBkZWZhdWx0IEJ1dHRvbjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQnV0dG9uL0J1dHRvbi50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL19idXR0b24uc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0J1dHRvbi9fYnV0dG9uLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNTNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLmJ0bl9NMk5oUSB7XFxuICBjb2xvcjogI2ZmZjtcXG4gIGJhY2tncm91bmQtY29sb3I6ICMxQjI2N0Y7XFxuICBib3JkZXItY29sb3I6ICMxQjI2N0Y7XFxuICBwYWRkaW5nOiAzcHggMTJweDtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIHRyYW5zaXRpb246IGFsbCAwLjJzIDBzO1xcbiAgb3V0bGluZTogbm9uZTtcXG4gIGJvcmRlcjogMXB4IHNvbGlkIHRyYW5zcGFyZW50O1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgbWFyZ2luOiA1cHggMDtcXG4gIGN1cnNvcjogcG9pbnRlcjsgfVxcbiAgLmJ0bl9NMk5oUTpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7IH1cXG4gIC5idG5fTTJOaFE6Zm9jdXMsIC5idG5fTTJOaFEuZm9jdXNfcHRLRF8ge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEyMTk1NTtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMTAxNzRkO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICMyNDMzYTk7IH1cXG4gIC5idG5fTTJOaFE6YWN0aXZlLCAuYnRuX00yTmhRLmFjdGl2ZV8xNTZsSyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggIzI0MzNhOTsgfVxcbiAgICAuYnRuX00yTmhROmFjdGl2ZTpob3ZlciwgLmJ0bl9NMk5oUTphY3RpdmU6Zm9jdXMsIC5idG5fTTJOaFE6YWN0aXZlLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmFjdGl2ZV8xNTZsSzpob3ZlciwgLmJ0bl9NMk5oUS5hY3RpdmVfMTU2bEs6Zm9jdXMsIC5idG5fTTJOaFEuYWN0aXZlXzE1NmxLLmZvY3VzX3B0S0RfIHtcXG4gICAgICBjb2xvcjogI2ZmZjtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMGMxMTM4O1xcbiAgICAgIGJvcmRlci1jb2xvcjogIzA1MDcxNjtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICMyNDMzYTkgIWltcG9ydGFudDsgfVxcbiAgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaDpmb2N1cywgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaC5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUTpkaXNhYmxlZDpmb2N1cywgLmJ0bl9NMk5oUTpkaXNhYmxlZC5mb2N1c19wdEtEXyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxQjI2N0Y7XFxuICAgIGJvcmRlci1jb2xvcjogIzFCMjY3RjsgfVxcbiAgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaDpob3ZlciwgLmJ0bl9NMk5oUTpkaXNhYmxlZDpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICMxQjI2N0Y7XFxuICAgIGJvcmRlci1jb2xvcjogIzFCMjY3RjsgfVxcbiAgLmJ0bl9NMk5oUS5kaXNhYmxlZF8yR2xYaCwgLmJ0bl9NMk5oUTpkaXNhYmxlZCB7XFxuICAgIGN1cnNvcjogbm90LWFsbG93ZWQ7XFxuICAgIG9wYWNpdHk6IC42NTsgfVxcbiAgLmJ0bl9NMk5oUTphY3RpdmU6aG92ZXIge1xcbiAgICBib3gtc2hhZG93OiBub25lOyB9XFxuXFxuLmJ0bi0taG92ZXJfMkt3VXYge1xcbiAgYm94LXNoYWRvdzogMCAxcHggM3B4IHJnYmEoMCwgMCwgMCwgMC4xMiksIDAgMXB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMjQpOyB9XFxuXFxuLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW8ge1xcbiAgY29sb3I6ICNmZmY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUIyNjdGO1xcbiAgYm9yZGVyLWNvbG9yOiAjMUIyNjdGOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRbzpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5mb2N1c19wdEtEXyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMTIxOTU1O1xcbiAgICBib3JkZXItY29sb3I6ICMxMDE3NGQ7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggIzI0MzNhOTsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86YWN0aXZlLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5hY3RpdmVfMTU2bEsge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzEyMTk1NTtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMTAxNzRkO1xcbiAgICBiYWNrZ3JvdW5kLWltYWdlOiBub25lO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICMyNDMzYTk7IH1cXG4gICAgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86YWN0aXZlOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRbzphY3RpdmU6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvOmFjdGl2ZS5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW8uYWN0aXZlXzE1NmxLOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5hY3RpdmVfMTU2bEs6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvLmFjdGl2ZV8xNTZsSy5mb2N1c19wdEtEXyB7XFxuICAgICAgY29sb3I6ICNmZmY7XFxuICAgICAgYmFja2dyb3VuZC1jb2xvcjogIzBjMTEzODtcXG4gICAgICBib3JkZXItY29sb3I6ICMwNTA3MTY7XFxuICAgICAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNmZmYsIDAgMCAwIDNweCAjMjQzM2E5ICFpbXBvcnRhbnQ7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvLmRpc2FibGVkXzJHbFhoOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5kaXNhYmxlZF8yR2xYaC5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86ZGlzYWJsZWQ6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1ibHVlXzIwWVFvOmRpc2FibGVkLmZvY3VzX3B0S0RfIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogIzFCMjY3RjtcXG4gICAgYm9yZGVyLWNvbG9yOiAjMUIyNjdGOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tYmx1ZV8yMFlRby5kaXNhYmxlZF8yR2xYaDpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLWJsdWVfMjBZUW86ZGlzYWJsZWQ6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjMUIyNjdGO1xcbiAgICBib3JkZXItY29sb3I6ICMxQjI2N0Y7IH1cXG5cXG4uYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzIHtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2VlOTMzMztcXG4gIGJvcmRlci1jb2xvcjogI2VlOTMzMzsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpob3ZlciB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGM3YTEyO1xcbiAgICBib3JkZXItY29sb3I6ICNkMjc0MTI7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3M6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3MuZm9jdXNfcHRLRF8ge1xcbiAgICBjb2xvcjogI2ZmZjtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2RjN2ExMjtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZDI3NDEyO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICNmMmFjNjI7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3M6YWN0aXZlLCAuYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzLmFjdGl2ZV8xNTZsSyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZGM3YTEyO1xcbiAgICBib3JkZXItY29sb3I6ICNkMjc0MTI7XFxuICAgIGJhY2tncm91bmQtaW1hZ2U6IG5vbmU7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggI2YyYWM2MjsgfVxcbiAgICAuYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzOmFjdGl2ZTpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczphY3RpdmU6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3M6YWN0aXZlLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0tb3JhbmdlX0VjbjNzLmFjdGl2ZV8xNTZsSzpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5hY3RpdmVfMTU2bEs6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS1vcmFuZ2VfRWNuM3MuYWN0aXZlXzE1NmxLLmZvY3VzX3B0S0RfIHtcXG4gICAgICBjb2xvcjogI2ZmZjtcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYmI2NzEwO1xcbiAgICAgIGJvcmRlci1jb2xvcjogIzk1NTMwYztcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4ICNmMmFjNjIgIWltcG9ydGFudDsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5kaXNhYmxlZF8yR2xYaDpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5kaXNhYmxlZF8yR2xYaC5mb2N1c19wdEtEXywgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpkaXNhYmxlZDpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpkaXNhYmxlZC5mb2N1c19wdEtEXyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZTkzMzM7XFxuICAgIGJvcmRlci1jb2xvcjogI2VlOTMzMzsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zcy5kaXNhYmxlZF8yR2xYaDpob3ZlciwgLmJ0bl9NMk5oUS5idG4tLW9yYW5nZV9FY24zczpkaXNhYmxlZDpob3ZlciB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlZTkzMzM7XFxuICAgIGJvcmRlci1jb2xvcjogI2VlOTMzMzsgfVxcblxcbi5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzMge1xcbiAgY29sb3I6ICNmZmY7XFxuICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDQyMDIwO1xcbiAgYm9yZGVyLWNvbG9yOiAjZDQyMDIwOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmhvdmVyIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNhODE5MTk7XFxuICAgIGJvcmRlci1jb2xvcjogIzlmMTgxODsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMzpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMy5mb2N1c19wdEtEXyB7XFxuICAgIGNvbG9yOiAjZmZmO1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYTgxOTE5O1xcbiAgICBib3JkZXItY29sb3I6ICM5ZjE4MTg7XFxuICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggI2UzNDQ0NDsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMzphY3RpdmUsIC5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzMuYWN0aXZlXzE1NmxLIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNhODE5MTk7XFxuICAgIGJvcmRlci1jb2xvcjogIzlmMTgxODtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNmZmYsIDAgMCAwIDNweCAjZTM0NDQ0OyB9XFxuICAgIC5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzM6YWN0aXZlOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmFjdGl2ZTpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMzphY3RpdmUuZm9jdXNfcHRLRF8sIC5idG5fTTJOaFEuYnRuLS1yZWRfM0VLQzMuYWN0aXZlXzE1NmxLOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmFjdGl2ZV8xNTZsSzpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXJlZF8zRUtDMy5hY3RpdmVfMTU2bEsuZm9jdXNfcHRLRF8ge1xcbiAgICAgIGNvbG9yOiAjZmZmO1xcbiAgICAgIGJhY2tncm91bmQtY29sb3I6ICM4OTE1MTU7XFxuICAgICAgYm9yZGVyLWNvbG9yOiAjNjUwZjBmO1xcbiAgICAgIGJveC1zaGFkb3c6IDAgMCAwIDFweCAjZmZmLCAwIDAgMCAzcHggI2UzNDQ0NCAhaW1wb3J0YW50OyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmRpc2FibGVkXzJHbFhoOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmRpc2FibGVkXzJHbFhoLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmRpc2FibGVkOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmRpc2FibGVkLmZvY3VzX3B0S0RfIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0MjAyMDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZDQyMDIwOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzLmRpc2FibGVkXzJHbFhoOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0tcmVkXzNFS0MzOmRpc2FibGVkOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2Q0MjAyMDtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZDQyMDIwOyB9XFxuXFxuLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKIHtcXG4gIGNvbG9yOiAjMzMzO1xcbiAgYmFja2dyb3VuZC1jb2xvcjogI2ZmZjtcXG4gIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKOmhvdmVyIHtcXG4gICAgY29sb3I6ICMzMzM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XFxuICAgIGJvcmRlci1jb2xvcjogI2UwZTBlMDsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouZm9jdXNfcHRLRF8ge1xcbiAgICBjb2xvcjogIzMzMztcXG4gICAgYmFja2dyb3VuZC1jb2xvcjogI2U2ZTZlNjtcXG4gICAgYm9yZGVyLWNvbG9yOiAjZTBlMGUwO1xcbiAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4IHdoaXRlOyB9XFxuICAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLIHtcXG4gICAgY29sb3I6ICMzMzM7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNlNmU2ZTY7XFxuICAgIGJvcmRlci1jb2xvcjogI2UwZTBlMDtcXG4gICAgYmFja2dyb3VuZC1pbWFnZTogbm9uZTtcXG4gICAgYm94LXNoYWRvdzogMCAwIDAgMXB4ICNmZmYsIDAgMCAwIDNweCB3aGl0ZTsgfVxcbiAgICAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6YWN0aXZlLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLOmZvY3VzLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2MkouYWN0aXZlXzE1NmxLLmZvY3VzX3B0S0RfIHtcXG4gICAgICBjb2xvcjogIzMzMztcXG4gICAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZDRkNGQ0O1xcbiAgICAgIGJvcmRlci1jb2xvcjogI2JmYmZiZjtcXG4gICAgICBib3gtc2hhZG93OiAwIDAgMCAxcHggI2ZmZiwgMCAwIDAgM3B4IHdoaXRlICFpbXBvcnRhbnQ7IH1cXG4gIC5idG5fTTJOaFEuYnRuLS13aGl0ZV8zUnYySi5kaXNhYmxlZF8yR2xYaDpmb2N1cywgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKLmRpc2FibGVkXzJHbFhoLmZvY3VzX3B0S0RfLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6ZGlzYWJsZWQ6Zm9jdXMsIC5idG5fTTJOaFEuYnRuLS13aGl0ZV8zUnYySjpkaXNhYmxlZC5mb2N1c19wdEtEXyB7XFxuICAgIGJhY2tncm91bmQtY29sb3I6ICNmZmY7XFxuICAgIGJvcmRlci1jb2xvcjogI2ZmZjsgfVxcbiAgLmJ0bl9NMk5oUS5idG4tLXdoaXRlXzNSdjJKLmRpc2FibGVkXzJHbFhoOmhvdmVyLCAuYnRuX00yTmhRLmJ0bi0td2hpdGVfM1J2Mko6ZGlzYWJsZWQ6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmO1xcbiAgICBib3JkZXItY29sb3I6ICNmZmY7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJidG5cIjogXCJidG5fTTJOaFFcIixcblx0XCJmb2N1c1wiOiBcImZvY3VzX3B0S0RfXCIsXG5cdFwiYWN0aXZlXCI6IFwiYWN0aXZlXzE1NmxLXCIsXG5cdFwiZGlzYWJsZWRcIjogXCJkaXNhYmxlZF8yR2xYaFwiLFxuXHRcImJ0bi0taG92ZXJcIjogXCJidG4tLWhvdmVyXzJLd1V2XCIsXG5cdFwiYnRuLS1ibHVlXCI6IFwiYnRuLS1ibHVlXzIwWVFvXCIsXG5cdFwiYnRuLS1vcmFuZ2VcIjogXCJidG4tLW9yYW5nZV9FY24zc1wiLFxuXHRcImJ0bi0tcmVkXCI6IFwiYnRuLS1yZWRfM0VLQzNcIixcblx0XCJidG4tLXdoaXRlXCI6IFwiYnRuLS13aGl0ZV8zUnYySlwiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9CdXR0b24vX2J1dHRvbi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTU0XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgSW5wdXQgZnJvbSAnLi9JbnB1dCc7XG5leHBvcnQgZGVmYXVsdCBJbnB1dDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvSW5wdXQvaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuaW1wb3J0IGNsYXNzbmFtZXMgZnJvbSAnY2xhc3NuYW1lcyc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0lucHV0LnNjc3MnKTtcbmxldCBJbnB1dCA9IGNsYXNzIElucHV0IGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IHByb3BzID0gT2JqZWN0LmFzc2lnbih7fSwgdGhpcy5wcm9wcyk7XG4gICAgICAgIGRlbGV0ZSBwcm9wcy5jbGFzc05hbWU7XG4gICAgICAgIGNvbnN0IHsgZXJyb3IsIHRvdWNoZWQgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGNvbnN0IHNob3dFcnJvciA9IGVycm9yICYmIHRvdWNoZWQ7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogY2xhc3NuYW1lcyh7ICdpbnB1dC13cmFwJzogIXNob3dFcnJvciwgJ2lucHV0LXdyYXAtLWVycm9yJzogc2hvd0Vycm9yIH0pLCBjbGFzc05hbWU6IHRoaXMucHJvcHMuY2xhc3NOYW1lIHx8ICcnIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiaW5wdXRcIiwgeyBzdHlsZU5hbWU6IFwiaW5wdXRcIiwgcGxhY2Vob2xkZXI6IHRoaXMucHJvcHMucGxhY2Vob2xkZXIsIHZhbHVlOiB0aGlzLnByb3BzLnZhbHVlLCBvbkNoYW5nZTogZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMub25DaGFuZ2UoZSk7XG4gICAgICAgICAgICAgICAgfSwgdHlwZTogdGhpcy5wcm9wcy50eXBlID8gdGhpcy5wcm9wcy50eXBlIDogJ3RleHQnLCBuYW1lOiB0aGlzLnByb3BzLm5hbWUgPyB0aGlzLnByb3BzLm5hbWUgOiBudWxsIH0pLFxuICAgICAgICAgICAgc2hvd0Vycm9yICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImVycm9yLW1zZ1wiIH0sIGVycm9yKSkpKTtcbiAgICB9XG59O1xuSW5wdXQgPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIElucHV0KTtcbmV4cG9ydCBkZWZhdWx0IElucHV0O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0lucHV0LnNjc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTU3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5pbnB1dC13cmFwXzF1TDlpLCAuaW5wdXQtd3JhcC0tZXJyb3Jfb09IeHgge1xcbiAgbWFyZ2luOiAxMHB4IDA7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cXG5cXG4uaW5wdXRfYzF0aGcge1xcbiAgd2lkdGg6IDEwMCU7XFxuICBwYWRkaW5nOiA1cHggNXB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcXG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAuM3M7XFxuICBsaW5lLWhlaWdodDogMjVweDtcXG4gIG91dGxpbmU6IG5vbmU7IH1cXG5cXG4uaW5wdXRfYzF0aGc6Zm9jdXMge1xcbiAgYm9yZGVyLWNvbG9yOiAjMUIyNjdGOyB9XFxuXFxuLmlucHV0LXdyYXAtLWVycm9yX29PSHh4IC5pbnB1dF9jMXRoZyB7XFxuICBib3JkZXItY29sb3I6ICNjYzAwMDA7IH1cXG5cXG4uZXJyb3ItbXNnXzFWalBzIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiAxMHB4O1xcbiAgdG9wOiA2cHg7XFxuICBsaW5lLWhlaWdodDogMjVweDtcXG4gIGNvbG9yOiAjY2MwMDAwOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiaW5wdXQtd3JhcFwiOiBcImlucHV0LXdyYXBfMXVMOWlcIixcblx0XCJpbnB1dC13cmFwLS1lcnJvclwiOiBcImlucHV0LXdyYXAtLWVycm9yX29PSHh4XCIsXG5cdFwiaW5wdXRcIjogXCJpbnB1dF9jMXRoZ1wiLFxuXHRcImVycm9yLW1zZ1wiOiBcImVycm9yLW1zZ18xVmpQc1wiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9JbnB1dC9JbnB1dC5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTU4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgU2VsZWN0aXplSW5wdXQgZnJvbSAnLi9TZWxlY3RpemVJbnB1dCc7XG5leHBvcnQgZGVmYXVsdCBTZWxlY3RpemVJbnB1dDtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IEljb24gZnJvbSAnLi4vSWNvbic7XG5pbXBvcnQgY2xhc3NuYW1lcyBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmltcG9ydCBpc0Rlc2NlbmRhbnQgZnJvbSAnLi4vLi4vdXRpbHMvZG9tL2lzRGVzY2VuZGFudCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9TZWxlY3RpemVJbnB1dC5zY3NzJyk7XG5sZXQgU2VsZWN0aXplSW5wdXQgPSBjbGFzcyBTZWxlY3RpemVJbnB1dCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLnN0YXRlID0ge1xuICAgICAgICAgICAgc2hvd09wdGlvbnM6IGZhbHNlLFxuICAgICAgICAgICAgZm9jdXM6IGZhbHNlLFxuICAgICAgICAgICAgdmFsdWU6ICcnLFxuICAgICAgICAgICAgZXhwZW5kZWRPcHRpb25JbmRleDogMFxuICAgICAgICB9O1xuICAgICAgICB0aGlzLmhhbmRsZU91dHNpZGVDbGljayA9IHRoaXMuaGFuZGxlT3V0c2lkZUNsaWNrLmJpbmQodGhpcyk7XG4gICAgICAgIHRoaXMuZm9jdXNJbnB1dCA9IHRoaXMuZm9jdXNJbnB1dC5iaW5kKHRoaXMpO1xuICAgICAgICB0aGlzLmhhbmRsZUlucHV0Q2hhbmdlID0gdGhpcy5oYW5kbGVJbnB1dENoYW5nZS5iaW5kKHRoaXMpO1xuICAgIH1cbiAgICBhZGRWYWx1ZShuZXdWYWx1ZSkge1xuICAgICAgICBpZiAoIXRoaXMucHJvcHMudXNlVmFsdWUpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25WYWx1ZXNDaGFuZ2UodGhpcy5wcm9wcy52YWx1ZXMuY29uY2F0KG5ld1ZhbHVlKSk7XG4gICAgICAgICAgICBpZiAodGhpcy5wcm9wcy5vbk9wdGlvbnNDaGFuZ2UpIHtcbiAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uT3B0aW9uc0NoYW5nZSh0aGlzLnByb3BzLm9wdGlvbnMubWFwKG9wdGlvbiA9PiAob3B0aW9uLnZhbHVlID09PSBuZXdWYWx1ZS52YWx1ZVxuICAgICAgICAgICAgICAgICAgICA/IE9iamVjdC5hc3NpZ24oe30sIG9wdGlvbiwgeyBkaXNhYmxlZDogdHJ1ZSB9KVxuICAgICAgICAgICAgICAgICAgICA6IG9wdGlvbikpKTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIC8vIFJlYWN0IHNldFN0YXRlIOaYr+W8guatpeeahO+8jOWmguaenOmDveaYr+eUqCBzdGF0ZSDnrqHnkIbliJnkvJrlh7rnjrDlkIzml7bosIPnlKggc2V0U3RhdGUg55qE5oOF5Ya177yM5LuO6ICM6YCg5oiQ6Zeu6aKYXG4gICAgICAgICAgICBzZXRUaW1lb3V0KCgpID0+IHtcbiAgICAgICAgICAgICAgICB0aGlzLmNsZWFySW5wdXRWYWx1ZSgpO1xuICAgICAgICAgICAgfSwgMSk7XG4gICAgICAgICAgICBpZiAodHlwZW9mIHRoaXMucHJvcHMuc3RheUZvY3VzZWQgPT09ICd1bmRlZmluZWQnIHx8IHRoaXMucHJvcHMuc3RheUZvY3VzZWQgIT09IGZhbHNlKSB7XG4gICAgICAgICAgICAgICAgdGhpcy5mb2N1c0lucHV0KCk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICB0aGlzLmhpZGVPcHRpb25zKCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLm9uSW5wdXRDaGFuZ2UobmV3VmFsdWUubmFtZSk7XG4gICAgICAgICAgICB0aGlzLmhpZGVPcHRpb25zKCk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgc2hvd09wdGlvbnMoKSB7XG4gICAgICAgIHRoaXMuc2V0U3RhdGUoe1xuICAgICAgICAgICAgc2hvd09wdGlvbnM6IHRydWVcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIGhpZGVPcHRpb25zKCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIHNob3dPcHRpb25zOiBmYWxzZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmVtb3ZlVmFsdWUoaW5kZXgpIHtcbiAgICAgICAgbGV0IG5ld1ZhbHVlcyA9IFtdO1xuICAgICAgICBsZXQgcmVtb3ZlZFZhbHVlO1xuICAgICAgICBpZiAoaW5kZXggPT09IC0xKSB7XG4gICAgICAgICAgICBuZXdWYWx1ZXMgPSB0aGlzLnByb3BzLnZhbHVlcy5zbGljZSgwLCB0aGlzLnByb3BzLnZhbHVlcy5sZW5ndGggLSAxKTtcbiAgICAgICAgICAgIHJlbW92ZWRWYWx1ZSA9IHRoaXMucHJvcHMudmFsdWVzW3RoaXMucHJvcHMudmFsdWVzLmxlbmd0aCAtIDFdLnZhbHVlO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgbmV3VmFsdWVzID0gdGhpcy5wcm9wcy52YWx1ZXNcbiAgICAgICAgICAgICAgICAuZmlsdGVyKCh2LCBpKSA9PiB7XG4gICAgICAgICAgICAgICAgcmVtb3ZlZFZhbHVlID0gdi52YWx1ZTtcbiAgICAgICAgICAgICAgICByZXR1cm4gaSAhPT0gaW5kZXg7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBpZiAodGhpcy5wcm9wcy5vbk9wdGlvbnNDaGFuZ2UpIHtcbiAgICAgICAgICAgIHRoaXMucHJvcHMub25PcHRpb25zQ2hhbmdlKHRoaXMucHJvcHMub3B0aW9ucy5tYXAob3B0aW9uID0+IChvcHRpb24udmFsdWUgPT09IHJlbW92ZWRWYWx1ZVxuICAgICAgICAgICAgICAgID8gT2JqZWN0LmFzc2lnbih7fSwgb3B0aW9uLCB7IGRpc2FibGVkOiBmYWxzZSB9KVxuICAgICAgICAgICAgICAgIDogb3B0aW9uKSkpO1xuICAgICAgICB9XG4gICAgICAgIHRoaXMucHJvcHMub25WYWx1ZXNDaGFuZ2UobmV3VmFsdWVzKTtcbiAgICB9XG4gICAgY2xlYXJJbnB1dFZhbHVlKCkge1xuICAgICAgICB0aGlzLnByb3BzLm9uSW5wdXRDaGFuZ2UoJycpO1xuICAgIH1cbiAgICBoYW5kbGVLZXlQcmVzcyhlKSB7XG4gICAgICAgIGlmIChlLmtleUNvZGUgPT09IDggJiYgIXRoaXMucHJvcHMudmFsdWUgJiYgdGhpcy5wcm9wcy52YWx1ZXMubGVuZ3RoICE9PSAwKSB7XG4gICAgICAgICAgICB0aGlzLnJlbW92ZVZhbHVlKC0xKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBoYW5kbGVJbnB1dENoYW5nZShlKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25JbnB1dENoYW5nZShlLnRhcmdldC52YWx1ZSk7XG4gICAgICAgIGlmICgodGhpcy5wcm9wcy5vcHRpb25zIHx8IFtdKS5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd09wdGlvbnMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBmb2N1c0lucHV0KCkge1xuICAgICAgICB0aGlzLmlucHV0LmZvY3VzKCk7XG4gICAgfVxuICAgIGhhbmRsZU91dHNpZGVDbGljayhlKSB7XG4gICAgICAgIGlmIChpc0Rlc2NlbmRhbnQodGhpcy5pbnB1dFdyYXAsIGUudGFyZ2V0KSB8fCB0aGlzLmlucHV0V3JhcCA9PT0gZS50YXJnZXQpIHtcbiAgICAgICAgICAgIHRoaXMuZm9jdXNJbnB1dCgpO1xuICAgICAgICAgICAgdGhpcy5zaG93T3B0aW9ucygpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgdGhpcy5oaWRlT3B0aW9ucygpO1xuICAgICAgICB9XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxSZWNlaXZlUHJvcHMobmV4dFByb3BzKSB7XG4gICAgICAgIGNvbnN0IG9wdGlvbnNMb2FkZWQgPSAobmV4dFByb3BzLm9wdGlvbnMgfHwgW10pLmxlbmd0aCAhPT0gMCAmJiAodGhpcy5wcm9wcy5vcHRpb25zIHx8IFtdKS5sZW5ndGggPT09IDA7XG4gICAgICAgIGlmIChvcHRpb25zTG9hZGVkICYmIHRoaXMuc3RhdGUuZm9jdXMpIHtcbiAgICAgICAgICAgIHRoaXMuc2hvd09wdGlvbnMoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVPdXRzaWRlQ2xpY2spO1xuICAgIH1cbiAgICBjb21wb25lbnRXaWxsVW5tb3VudCgpIHtcbiAgICAgICAgd2luZG93LnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVPdXRzaWRlQ2xpY2spO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgbGFiZWwsIHZhbHVlcywgb25BZGROZXdWYWx1ZSwgb21pdFNlbGVjdGVkVmFsdWVzRnJvbU9wdGlvbnMgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIGxldCB2YWx1ZSA9IHRoaXMucHJvcHMudmFsdWUgfHwgJyc7XG4gICAgICAgIGxldCBvcHRpb25zID0gdGhpcy5wcm9wcy5vcHRpb25zIHx8IFtdO1xuICAgICAgICBsZXQgaW5wdXRXaWR0aCA9IHZhbHVlcy5sZW5ndGggPiAwID8gKHZhbHVlLmxlbmd0aCA9PT0gMCA/IDE2IDogdmFsdWUubGVuZ3RoICogMTYpIDogJzEwMCUnO1xuICAgICAgICBsZXQgcGxhY2Vob2xkZXIgPSB2YWx1ZXMubGVuZ3RoID4gMCA/ICcnIDogdGhpcy5wcm9wcy5wbGFjZWhvbGRlcjtcbiAgICAgICAgbGV0IGZpbHRlcmVkT3B0aW9ucyA9IG9wdGlvbnNcbiAgICAgICAgICAgIC5maWx0ZXIob3B0aW9uID0+IHtcbiAgICAgICAgICAgIGlmIChvbWl0U2VsZWN0ZWRWYWx1ZXNGcm9tT3B0aW9ucykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHZhbHVlT2ZWYWx1ZXMgPSBfLm1hcCh2YWx1ZXMsICd2YWx1ZScpO1xuICAgICAgICAgICAgICAgIHJldHVybiB2YWx1ZU9mVmFsdWVzLmluZGV4T2Yob3B0aW9uLnZhbHVlKSA9PT0gLTE7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICByZXR1cm4gdHJ1ZTtcbiAgICAgICAgfSk7XG4gICAgICAgIGNvbnN0IHNlbGVjdGl6ZUlucHV0U3R5bGVOYW1lID0gY2xhc3NuYW1lcyh7XG4gICAgICAgICAgICAnc2VsZWN0aXplLWlucHV0JzogdHJ1ZSxcbiAgICAgICAgICAgICdzZWxlY3RpemUtaW5wdXQtLWZvY3VzJzogdGhpcy5zdGF0ZS5mb2N1cyxcbiAgICAgICAgICAgICdzZWxlY3RpemUtaW5wdXQtLWVtcHR5JzogdmFsdWVzLmxlbmd0aCA9PT0gMFxuICAgICAgICB9KTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcInNlbGVjdGl6ZS13cmFwXCIsIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUgfHwgJycgfSxcbiAgICAgICAgICAgIGxhYmVsID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsYWJlbFwiLCB7IGNsYXNzTmFtZTogXCJmb3JtLWxhYmVsXCIgfSwgbGFiZWwpKSA6IG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBzZWxlY3RpemVJbnB1dFN0eWxlTmFtZSwgcmVmOiByZWYgPT4geyB0aGlzLmlucHV0V3JhcCA9IHJlZjsgfSB9LFxuICAgICAgICAgICAgICAgIHZhbHVlcy5tYXAoKHYsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBrZXk6IGluZGV4LCBzdHlsZU5hbWU6IFwic2VsZWN0aXplLXRhZ1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICB2Lm5hbWUsXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEljb24sIHsgc3R5bGVOYW1lOiBcImljb24tcmVtb3ZlXCIsIHNpemU6IDIwLCBuYW1lOiBcImNsb3NlXCIsIG9uQ2xpY2s6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICB0aGlzLnJlbW92ZVZhbHVlKGluZGV4KTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB9IH0pKSk7XG4gICAgICAgICAgICAgICAgfSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImlucHV0XCIsIHsgc3R5bGU6IHsgd2lkdGg6IGlucHV0V2lkdGggfSwgcmVmOiByZWYgPT4geyB0aGlzLmlucHV0ID0gcmVmOyB9LCB2YWx1ZTogdmFsdWUsIHBsYWNlaG9sZGVyOiBwbGFjZWhvbGRlciwgb25CbHVyOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuc2V0U3RhdGUoeyBmb2N1czogZmFsc2UgfSk7XG4gICAgICAgICAgICAgICAgICAgIH0sIG9uRm9jdXM6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7IGZvY3VzOiB0cnVlIH0pO1xuICAgICAgICAgICAgICAgICAgICB9LCBvbkNoYW5nZTogdGhpcy5oYW5kbGVJbnB1dENoYW5nZSwgb25LZXlEb3duOiBlID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuaGFuZGxlS2V5UHJlc3MoZSk7XG4gICAgICAgICAgICAgICAgICAgIH0gfSkpLFxuICAgICAgICAgICAgdGhpcy5zdGF0ZS5zaG93T3B0aW9ucyAmJiAoZmlsdGVyZWRPcHRpb25zLmxlbmd0aCAhPT0gMCB8fCBvbkFkZE5ld1ZhbHVlKSA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgeyBzdHlsZU5hbWU6IFwicXVlcnktcmVzdWx0c1wiIH0sXG4gICAgICAgICAgICAgICAgZmlsdGVyZWRPcHRpb25zXG4gICAgICAgICAgICAgICAgICAgIC5tYXAoKG9wdGlvbiwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKG9wdGlvbi5kaXNhYmxlZCkge1xuICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGtleTogaW5kZXgsIGNsYXNzTmFtZTogXCJkaXNhYmxlZFwiIH0sIG9wdGlvbi5uYW1lKTtcbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGtleTogaW5kZXgsIG9uQ2xpY2s6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMuYWRkVmFsdWUob3B0aW9uKTtcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpZiAodGhpcy5wcm9wcy5vbk9wdGlvbkNsaWNrKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHRoaXMucHJvcHMub25PcHRpb25DbGljayhvcHRpb24pO1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIG51bGwsIG9wdGlvbi5uYW1lKSkpO1xuICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgIG9uQWRkTmV3VmFsdWUgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHsgb25DbGljazogZSA9PiB7XG4gICAgICAgICAgICAgICAgICAgICAgICBvbkFkZE5ld1ZhbHVlKHRoaXMucHJvcHMudmFsdWUpO1xuICAgICAgICAgICAgICAgICAgICB9LCBjbGFzc05hbWU6IFwiYWRkXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgXCJcXHU2REZCXFx1NTJBMCBcIixcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInN0cm9uZ1wiLCBudWxsLCB0aGlzLnByb3BzLnZhbHVlKSkpIDogbnVsbCkpIDogbnVsbCkpO1xuICAgIH1cbn07XG5TZWxlY3RpemVJbnB1dCA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgU2VsZWN0aXplSW5wdXQpO1xuU2VsZWN0aXplSW5wdXRbJ2RlZmF1bHRQcm9wcyddID0ge1xuICAgIG9taXRTZWxlY3RlZFZhbHVlc0Zyb21PcHRpb25zOiB0cnVlXG59O1xuZXhwb3J0IGRlZmF1bHQgU2VsZWN0aXplSW5wdXQ7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1NlbGVjdGl6ZUlucHV0L1NlbGVjdGl6ZUlucHV0LnRzeFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vU2VsZWN0aXplSW5wdXQuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1NlbGVjdGl6ZUlucHV0L1NlbGVjdGl6ZUlucHV0LnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNjFcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLnNlbGVjdGl6ZS13cmFwX1AteTItIHtcXG4gIG1hcmdpbjogMTBweCAwO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuXFxuLnNlbGVjdGl6ZS1pbnB1dF8zNlVMZSB7XFxuICBtaW4td2lkdGg6IDMwMHB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgI2RkZDtcXG4gIG1hcmdpbjogMTBweCAwO1xcbiAgYm94LXNpemluZzogYm9yZGVyLWJveDtcXG4gIHRyYW5zaXRpb246IGFsbCAwcztcXG4gIGN1cnNvcjogdGV4dDtcXG4gIGJhY2tncm91bmQ6ICNmZmY7IH1cXG4gIC5zZWxlY3RpemUtaW5wdXRfMzZVTGUgaW5wdXQge1xcbiAgICBiYWNrZ3JvdW5kOiB0cmFuc3BhcmVudDtcXG4gICAgbGluZS1oZWlnaHQ6IDIycHg7IH1cXG5cXG4uc2VsZWN0aXplLWlucHV0LS1mb2N1c18zMExVNSB7XFxuICBib3JkZXItY29sb3I6ICMxQjI2N0Y7IH1cXG5cXG4uc2VsZWN0aXplLWlucHV0LS1lbXB0eV8zZUFtSSB7XFxuICBiYWNrZ3JvdW5kOiAjZmZmO1xcbiAgcGFkZGluZzogNXB4IDVweCAwOyB9XFxuXFxuLnNlbGVjdGl6ZS1pbnB1dF8zNlVMZSBpbnB1dCB7XFxuICBib3JkZXI6IG5vbmU7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgbWFyZ2luLWJvdHRvbTogNXB4OyB9XFxuXFxuLnF1ZXJ5LXJlc3VsdHNfM1BoLVoge1xcbiAgbWFyZ2luLXRvcDogLTNweDtcXG4gIG1hcmdpbi1ib3R0b206IDVweDtcXG4gIHBhZGRpbmc6IDVweDtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB3aWR0aDogMTAwJTtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDEycHggcmdiYSgwLCAwLCAwLCAwLjMyKTtcXG4gIGJhY2tncm91bmQ6ICNmZmY7XFxuICB6LWluZGV4OiA5MDA7IH1cXG5cXG4ucXVlcnktcmVzdWx0c18zUGgtWiBsaSB7XFxuICBwYWRkaW5nOiAwIDdweDtcXG4gIGxpbmUtaGVpZ2h0OiAyO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgYm9yZGVyLXJhZGl1czogM3B4OyB9XFxuICAucXVlcnktcmVzdWx0c18zUGgtWiBsaTpob3ZlciB7XFxuICAgIGJhY2tncm91bmQ6ICMxQjI2N0Y7XFxuICAgIGNvbG9yOiAjZmZmOyB9XFxuXFxuLnNlbGVjdGl6ZS10YWdfMVBXREUge1xcbiAgYmFja2dyb3VuZDogIzFCMjY3RjtcXG4gIGN1cnNvcjogcG9pbnRlcjtcXG4gIGJvcmRlci1yYWRpdXM6IDNweDtcXG4gIHBhZGRpbmc6IDNweCAyNXB4IDNweCA1cHg7XFxuICBtYXJnaW46IDVweDtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgcG9zaXRpb246IHJlbGF0aXZlOyB9XFxuXFxuLmljb24tcmVtb3ZlXzJCdVNWIHtcXG4gIGZvbnQtc2l6ZTogMC44cmVtO1xcbiAgbWFyZ2luLWxlZnQ6IDVweDtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHJpZ2h0OiA1cHg7XFxuICB0b3A6IDJweDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNlbGVjdGl6ZS13cmFwXCI6IFwic2VsZWN0aXplLXdyYXBfUC15Mi1cIixcblx0XCJzZWxlY3RpemUtaW5wdXRcIjogXCJzZWxlY3RpemUtaW5wdXRfMzZVTGVcIixcblx0XCJzZWxlY3RpemUtaW5wdXQtLWZvY3VzXCI6IFwic2VsZWN0aXplLWlucHV0LS1mb2N1c18zMExVNVwiLFxuXHRcInNlbGVjdGl6ZS1pbnB1dC0tZW1wdHlcIjogXCJzZWxlY3RpemUtaW5wdXQtLWVtcHR5XzNlQW1JXCIsXG5cdFwicXVlcnktcmVzdWx0c1wiOiBcInF1ZXJ5LXJlc3VsdHNfM1BoLVpcIixcblx0XCJzZWxlY3RpemUtdGFnXCI6IFwic2VsZWN0aXplLXRhZ18xUFdERVwiLFxuXHRcImljb24tcmVtb3ZlXCI6IFwiaWNvbi1yZW1vdmVfMkJ1U1ZcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvU2VsZWN0aXplSW5wdXQvU2VsZWN0aXplSW5wdXQuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE2MlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFRleHRhcmVhIGZyb20gJy4vVGV4dGFyZWEnO1xuZXhwb3J0IGRlZmF1bHQgVGV4dGFyZWE7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL2luZGV4LnRzXG4gKiovIiwidmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vVGV4dGFyZWEuY3NzJyk7XG5sZXQgVGV4dGFyZWEgPSBjbGFzcyBUZXh0YXJlYSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJ0ZXh0YXJlYS13cmFwXCIsIGNsYXNzTmFtZTogdGhpcy5wcm9wcy5jbGFzc05hbWUgfHwgJycgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ0ZXh0YXJlYVwiLCB7IHBsYWNlaG9sZGVyOiB0aGlzLnByb3BzLnBsYWNlaG9sZGVyLCB2YWx1ZTogdGhpcy5wcm9wcy52YWx1ZSwgb25DaGFuZ2U6IGUgPT4ge1xuICAgICAgICAgICAgICAgICAgICB0aGlzLnByb3BzLm9uQ2hhbmdlKGUpO1xuICAgICAgICAgICAgICAgIH0sIHN0eWxlTmFtZTogXCJ0ZXh0YXJlYVwiLCB0eXBlOiB0aGlzLnByb3BzLnR5cGUgPyB0aGlzLnByb3BzLnR5cGUgOiAndGV4dCcsIG5hbWU6IHRoaXMucHJvcHMubmFtZSA/IHRoaXMucHJvcHMubmFtZSA6IG51bGwgfSkpKTtcbiAgICB9XG59O1xuVGV4dGFyZWEgPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIFRleHRhcmVhKTtcbmV4cG9ydCBkZWZhdWx0IFRleHRhcmVhO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9UZXh0YXJlYS9UZXh0YXJlYS50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL1RleHRhcmVhLmNzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL1RleHRhcmVhL1RleHRhcmVhLmNzc1xuICoqIG1vZHVsZSBpZCA9IDE2NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5leHBvcnRzLmkocmVxdWlyZShcIi0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIXN0eWxlcy92YXJpYWJsZXMuY3NzXCIpLCBcIlwiKTtcblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIudGV4dGFyZWEtd3JhcF8xQlRKVSB7XFxuICBtYXJnaW46IDEwcHggMDtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG59XFxuXFxuLnRleHRhcmVhXzJ4U3h2IHtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgcGFkZGluZzogNXB4O1xcbiAgYm9yZGVyOiAxcHggc29saWQgdmFyKC0tZ3JheSk7XFxuICBvdXRsaW5lOiBub25lO1xcbiAgaGVpZ2h0OiAxMDBweDtcXG4gIHRyYW5zaXRpb246IGJvcmRlci1jb2xvciAuM3M7XFxufVxcblxcbi50ZXh0YXJlYV8yeFN4djpmb2N1cyB7XFxuICBib3JkZXItY29sb3I6IHZhcigtLWJsdWUpO1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJ0ZXh0YXJlYS13cmFwXCI6IFwidGV4dGFyZWEtd3JhcF8xQlRKVVwiLFxuXHRcInRleHRhcmVhXCI6IFwidGV4dGFyZWFfMnhTeHZcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vcG9zdGNzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvVGV4dGFyZWEvVGV4dGFyZWEuY3NzXG4gKiogbW9kdWxlIGlkID0gMTY2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC8qIGNvbG9ycyAqL1xcbiAgLS10ZXh0OiAjNjY2O1xcbiAgLS10ZXh0LWRhcms6ICMzMzM7XFxuICAtLXRleHQtbGlnaHQ6ICM5OTk7XFxuICAtLWJsdWU6ICMxQjI2N0Y7XFxuICAtLXNoaW55LWJsdWU6ICMxQjI2N0Y7XFxuICAtLWRhcmstYmx1ZTogIzA0MDgyRTtcXG4gIC0tZ3JheTogI2RkZDtcXG5cXG4gIC0tYnJhbmRpbmctaGVpZ2h0OiA2MHB4O1xcbiAgLS1zaWRlYmFyLXdpZHRoOiAzMDBweDtcXG4gIC0taW5wdXQtbGluZS1oZWlnaHQ6IDI1cHg7XFxuICAtLWlucHV0LXBhZGRpbmc6IDVweDtcXG4gIC0tcmVhZGluZy13aWR0aDogNzAwcHg7XFxuXFxuICAvKiBzdHlsZSB2YWx1ZXMgKi9cXG4gIC0tZm9udC1zaXplLXJvb3Q6IDE2cHg7XFxuICAtLWJvcmRlci1yYWRpdXM6IDNweDtcXG4gIC0tZm9udC1mYW1pbHk6IEhlbHZldGljYSwgQXJpYWwsIFxcXCJIaXJhZ2lubyBTYW5zIEdCXFxcIiwgXFxcIkhpcmFnaW5vIFNhbnMgR0IgVzNcXFwiLCBcXFwiTWljcm9zb2Z0IFlhaGVpXFxcIiwgc2Fucy1zZXJpZjtcXG4gIC0tZm9udC1mYW1pbHktbW9ubzogQ29uc29sYXMsIFxcXCJMaWJlcmF0aW9uIE1vbm9cXFwiLCBNZW5sbywgQ291cmllciwgbW9ub3NwYWNlO1xcblxcbiAgLS1zaGFkb3ctejE6IDAgMXB4IDNweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDFweCAycHggcmdiYSgwLCAwLCAwLCAwLjI0KTtcXG4gIC0tc2hhZG93LXoyOiAwIDNweCA2cHggcmdiYSgwLCAwLCAwLCAwLjE2KSwgMCAzcHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxuICAtLXNoYWRvdy16MzogMCAxMHB4IDIwcHggcmdiYSgwLCAwLCAwLCAwLjE5KSwgMCA2cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4yMyk7XFxuICAtLXNoYWRvdy16NDogMCAxNHB4IDI4cHggcmdiYSgwLCAwLCAwLCAwLjI1KSwgMCAxMHB4IDEwcHggcmdiYSgwLCAwLCAwLCAwLjIyKTtcXG4gIC0tc2hhZG93LXo1OiAwIDE5cHggMzhweCByZ2JhKDAsIDAsIDAsIDAuMyksIDAgMTVweCAxMnB4IHJnYmEoMCwgMCwgMCwgMC4yMik7XFxuXFxuICAtLXNoYWRvdy15MTogMCAycHggMTJweCByZ2JhKDAsIDAsIDAsIDAuMzIpO1xcblxcbiAgXFxcXC0tcGFnZS10aXRsZToge1xcbiAgICBtYXJnaW46IDM1cHggMDtcXG4gICAgZm9udC1zaXplOiAxLjVyZW07XFxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xcbiAgICBjb2xvcjogIzMzMztcXG4gIH07XFxuXFxuICAvKiB6LWluZGV4ICovXFxuICAtLXotc2VsZWN0aXplLW9wdGlvbnM6IDkwMDtcXG4gIC0tei1kcm9wZG93bi1tZW51OiA5MDA7XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcblxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9wb3N0Y3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9zdHlsZXMvdmFyaWFibGVzLmNzc1xuICoqIG1vZHVsZSBpZCA9IDE2N1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiXG4gICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UhLi9Nb2RhbEZvb3Rlci5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxGb290ZXIuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE2OFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0cyA9IG1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIi4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvbGliL2Nzcy1iYXNlLmpzXCIpKCk7XG4vLyBpbXBvcnRzXG5cblxuLy8gbW9kdWxlXG5leHBvcnRzLnB1c2goW21vZHVsZS5pZCwgXCIubW9kYWwtZm9vdGVyX0ZhSGlVIGJ1dHRvbiB7XFxuICBtYXJnaW4tcmlnaHQ6IDEwcHg7IH1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJtb2RhbC1mb290ZXJcIjogXCJtb2RhbC1mb290ZXJfRmFIaVVcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvTW9kYWwvTW9kYWxGb290ZXIuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE2OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB7IGNvbm5lY3QgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgQnJhbmRpbmcgZnJvbSAnLi4vY29tcG9uZW50cy9CcmFuZGluZyc7XG5pbXBvcnQgQ29sb3Bob24gZnJvbSAnLi4vY29tcG9uZW50cy9Db2xvcGhvbic7XG5pbXBvcnQgeyBmZXRjaFNoZWxmLCB1c2VyTG9nb3V0IH0gZnJvbSAnLi4vc3RvcmUvYWN0aW9ucyc7XG5pbXBvcnQgKiBhcyBzZWxlY3RvcnMgZnJvbSAnLi4vc3RvcmUvc2VsZWN0b3JzJztcbmNsYXNzIEFwcCBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLmhhbmRsZUxvZ291dCA9IHRoaXMuaGFuZGxlTG9nb3V0LmJpbmQodGhpcyk7XG4gICAgfVxuICAgIGhhbmRsZUxvZ291dCgpIHtcbiAgICAgICAgdGhpcy5wcm9wcy51c2VyTG9nb3V0KCk7XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgICAgICBpZiAodGhpcy5wcm9wcy5zZXNzaW9uLnVzZXIucm9sZSAhPT0gJ3Zpc2l0b3InKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmZldGNoU2hlbGYoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnRXaWxsUmVjZWl2ZVByb3BzKG5leHRQcm9wcykge1xuICAgICAgICBjb25zdCB1c2VyTG9nZ2VkSW4gPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlID09PSAndmlzaXRvcidcbiAgICAgICAgICAgICYmIG5leHRQcm9wcy5zZXNzaW9uLnVzZXIucm9sZSAhPT0gJ3Zpc2l0b3InO1xuICAgICAgICBpZiAodXNlckxvZ2dlZEluKSB7XG4gICAgICAgICAgICB0aGlzLnByb3BzLmZldGNoU2hlbGYoKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBpc0FkbWluID0gZmFsc2U7XG4gICAgICAgIGxldCB1c2VybmFtZSA9IG51bGw7XG4gICAgICAgIGlmICh0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlICE9PSAndmlzaXRvcicpIHtcbiAgICAgICAgICAgIGlzQWRtaW4gPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlID09PSAnYWRtaW4nO1xuICAgICAgICAgICAgdXNlcm5hbWUgPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci51c2VybmFtZTtcbiAgICAgICAgfVxuICAgICAgICBjb25zdCB7IGJvb2tTaGVsZiB9ID0gdGhpcy5wcm9wcztcbiAgICAgICAgY29uc3QgYm9va1NoZWxmTGlzdCA9IGJvb2tTaGVsZlxuICAgICAgICAgICAgLm1hcChib29rID0+ICh7XG4gICAgICAgICAgICB0aXRsZTogYm9vay50aXRsZSxcbiAgICAgICAgICAgIGlkOiBib29rLmlkXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEJyYW5kaW5nLCB7IHJlY2VudFJlYWRpbmc6IGJvb2tTaGVsZkxpc3QsIGlzQWRtaW46IGlzQWRtaW4sIHVzZXJuYW1lOiB1c2VybmFtZSwgb25Mb2dvdXQ6IHRoaXMuaGFuZGxlTG9nb3V0IH0pLFxuICAgICAgICAgICAgdGhpcy5wcm9wcy5jaGlsZHJlbixcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29sb3Bob24sIG51bGwpKSk7XG4gICAgfVxufVxuZXhwb3J0IGRlZmF1bHQgY29ubmVjdChzdGF0ZSA9PiAoe1xuICAgIG5vdGlmaWNhdGlvbjogc3RhdGUuY29tcG9uZW50cy5ub3RpZmljYXRpb24sXG4gICAgc2Vzc2lvbjogc3RhdGUuc2Vzc2lvbixcbiAgICBib29rU2hlbGY6IHNlbGVjdG9ycy5zaGVsZkJvb2tzKCkoc3RhdGUpXG59KSwgeyBmZXRjaFNoZWxmLCB1c2VyTG9nb3V0IH0pKEFwcCk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvQXBwLnRzeFxuICoqLyIsImltcG9ydCBCcmFuZGluZyBmcm9tICcuL0JyYW5kaW5nJztcbmV4cG9ydCBkZWZhdWx0IEJyYW5kaW5nO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0JyYW5kaW5nL2luZGV4LnRzeFxuICoqLyIsInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBDb250YWluZXIgfSBmcm9tICcuLi8uLi9lbGVtZW50cy9sYXlvdXQnO1xuaW1wb3J0IHsgRHJvcGRvd24sIERyb3Bkb3duSXRlbSwgRHJvcGRvd25JdGVtU2VwIH0gZnJvbSAnLi4vLi4vZWxlbWVudHMvRHJvcGRvd24nO1xuaW1wb3J0IExvZ28gZnJvbSAnLi4vTG9nbyc7XG5pbXBvcnQgQ1NTTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vQnJhbmRpbmcuc2NzcycpO1xubGV0IEJyYW5kaW5nID0gY2xhc3MgQnJhbmRpbmcgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oYW5kbGVMb2dvdXRDbGljayA9IHRoaXMuaGFuZGxlTG9nb3V0Q2xpY2suYmluZCh0aGlzKTtcbiAgICB9XG4gICAgdG9nZ2xlRHJvcGRvd25NZW51KCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogIXRoaXMuc3RhdGUuaXNEcm9wZG93bk1lbnVWaXNpYmxlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBoYW5kbGVMb2dvdXRDbGljayhlKSB7XG4gICAgICAgIHRoaXMucHJvcHMub25Mb2dvdXQoKTtcbiAgICAgICAgZS5wcmV2ZW50RGVmYXVsdCgpO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCBpc0FkbWluID0gdGhpcy5wcm9wcy5pc0FkbWluID8gdGhpcy5wcm9wcy5pc0FkbWluIDogZmFsc2U7XG4gICAgICAgIGNvbnN0IHsgdXNlcm5hbWUsIHJlY2VudFJlYWRpbmcgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogYGJyYW5kaW5nICR7dGhpcy5wcm9wcy5jbGFzc05hbWUgPyB0aGlzLnByb3BzLmNsYXNzTmFtZSA6ICcnfWAgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCB7IGNsYXNzTmFtZTogXCJjbGVhcmZpeFwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImxlZnRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2dvLCBudWxsKSksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwibGVmdFwiLCBzdHlsZU5hbWU6IFwibmF2XCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7IHN0eWxlTmFtZTogXCJuYXYtbGlua3NcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IHN0eWxlTmFtZTogXCJuYXYtaXRlbVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyBzdHlsZU5hbWU6IFwibmF2LWxpbmtcIiwgdG86IFwiL2Jyb3dzZVwiIH0sIFwiXFx1NkQ0RlxcdTg5QzhcIikpKSksXG4gICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lXG4gICAgICAgICAgICAgICAgICAgICAgICA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcIm5hdi0tdXNlclwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgcmVjZW50UmVhZGluZy5sZW5ndGggIT09IDAgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd24sIHsgc3R5bGVOYW1lOiBcImRyb3Bkb3duLXJlY2VudC1yZWFkaW5nXCIsIHRpdGxlOiBcIuacgOi/kemYheivu1wiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHJlY2VudFJlYWRpbmcuc2xpY2UoMCwgNSkubWFwKChib29rLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgeyBrZXk6IGluZGV4IH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHRvOiBgL3ZpZXdlci9ib29rLyR7Ym9vay5pZH1gIH0sIGJvb2sudGl0bGUpKSk7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbVNlcCwgbnVsbCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHRvOiBgL3VzZXIvc2hlbGZgIH0sIFwiXFx1NjdFNVxcdTc3MEJcXHU1MTY4XFx1OTBFOFwiKSkpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duLCB7IHRpdGxlOiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlOiB7IGRpc3BsYXk6ICdpbmxpbmUtYmxvY2snIH0gfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHVzZXJuYW1lLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNBZG1pbiAmJiBSZWFjdC5jcmVhdGVFbGVtZW50KFwic3BhblwiLCB7IGNsYXNzTmFtZTogXCJiYWRnZVwiIH0sIFwiXFx1N0JBMVxcdTc0MDZcXHU1NDU4XCIpKSkgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgaXNBZG1pbiA9PT0gdHJ1ZSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93bkl0ZW0sIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IFwiL2NvbnNvbGVcIiB9LCBcIlxcdTYzQTdcXHU1MjM2XFx1NTNGMFwiKSkpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogYC91c2VyL3NoZWxmYCB9LCBcIlxcdTRFNjZcXHU2N0I2XCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93bkl0ZW0sIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IGAvdXNlci9wcm9maWxlYCB9LCBcIlxcdTRFMkFcXHU0RUJBXFx1NEUzQlxcdTk4NzVcIikpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogYC91c2VyL3ByZWZlcmVuY2VgIH0sIFwiXFx1OEJCRVxcdTdGNkVcIikpLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbVNlcCwgbnVsbCksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImFcIiwgeyBvbkNsaWNrOiB0aGlzLmhhbmRsZUxvZ291dENsaWNrLCBocmVmOiBcIiNcIiB9LCBcIlxcdTkwMDBcXHU1MUZBXCIpKSkpKVxuICAgICAgICAgICAgICAgICAgICAgICAgOiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJuYXYtLXVzZXJcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJ1bFwiLCB7IHN0eWxlTmFtZTogXCJuYXYtbGlua3NcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgeyBzdHlsZU5hbWU6IFwibmF2LWl0ZW1cIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHN0eWxlTmFtZTogXCJuYXYtbGlua1wiLCB0bzogXCIvc2lnbmluXCIgfSwgXCJcXHU3NjdCXFx1NUY1NVwiKSksXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IHN0eWxlTmFtZTogXCJuYXYtaXRlbVwiIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgc3R5bGVOYW1lOiBcIm5hdi1saW5rXCIsIHRvOiBcIi9zaWdudXBcIiB9LCBcIlxcdTZDRThcXHU1MThDXCIpKSkpKSkpKSk7XG4gICAgfVxufTtcbkJyYW5kaW5nID0gX19kZWNvcmF0ZShbXG4gICAgQ1NTTW9kdWxlcyhzdHlsZXMsIHtcbiAgICAgICAgYWxsb3dNdWx0aXBsZTogdHJ1ZVxuICAgIH0pXG5dLCBCcmFuZGluZyk7XG5leHBvcnQgZGVmYXVsdCBCcmFuZGluZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9CcmFuZGluZy9CcmFuZGluZy50c3hcbiAqKi8iLCJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vQ29udGFpbmVyJztcbmV4cG9ydCB7IENvbnRhaW5lciB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9sYXlvdXQudHNcbiAqKi8iLCJpbXBvcnQgQ29udGFpbmVyIGZyb20gJy4vQ29udGFpbmVyJztcbmV4cG9ydCBkZWZhdWx0IENvbnRhaW5lcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvZWxlbWVudHMvQ29udGFpbmVyL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmNsYXNzIENvbnRhaW5lciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBsZXQgY2xhc3NOYW1lID0gKHRoaXMucHJvcHMuaXNGbHVpZCA/ICdjb250YWluZXItZmx1aWQnIDogJ2NvbnRhaW5lcicpICsgKHRoaXMucHJvcHMuY2xhc3NOYW1lID8gYCAke3RoaXMucHJvcHMuY2xhc3NOYW1lfWAgOiAnJyk7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogY2xhc3NOYW1lIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBDb250YWluZXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0NvbnRhaW5lci9Db250YWluZXIudHN4XG4gKiovIiwiaW1wb3J0IERyb3Bkb3duIGZyb20gJy4vRHJvcGRvd24nO1xuaW1wb3J0IERyb3Bkb3duSXRlbSBmcm9tICcuL0Ryb3Bkb3duSXRlbSc7XG5pbXBvcnQgRHJvcGRvd25JdGVtU2VwIGZyb20gJy4vRHJvcGRvd25JdGVtU2VwJztcbmV4cG9ydCB7IERyb3Bkb3duSXRlbSwgRHJvcGRvd24sIERyb3Bkb3duSXRlbVNlcCB9O1xuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL2luZGV4LnRzXG4gKiovIiwidmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCBDU1NNb2R1bGVzIGZyb20gJ3JlYWN0LWNzcy1tb2R1bGVzJztcbmltcG9ydCBpc0Rlc2NlbmRhbnQgZnJvbSAnLi4vLi4vdXRpbHMvZG9tL2lzRGVzY2VuZGFudCc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0Ryb3Bkb3duLnNjc3MnKTtcbmxldCBEcm9wZG93biA9IGNsYXNzIERyb3Bkb3duIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgICAgIHRoaXMuc3RhdGUgPSB7XG4gICAgICAgICAgICBzaG93TWVudTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oYW5kbGVHbG9iYWxDbGljayA9IHRoaXMuaGFuZGxlR2xvYmFsQ2xpY2suYmluZCh0aGlzKTtcbiAgICB9XG4gICAgaGFuZGxlR2xvYmFsQ2xpY2soZSkge1xuICAgICAgICAvLyDmo4Dmn6Xngrnlh7vnmoQgZG9tIOaYr+WQpuaYryBkcm9wZG93biDnmoTlrZDlhYPntKBcbiAgICAgICAgLy8g5aaC5p6c5piv6YKj5LmI5bCx5LiN5YGa5aSE55CG77yM6ICMIHRvZ2dsZURyb3Bkb3duIOS8muWTjeW6lFxuICAgICAgICAvLyDop6PlhrPkuobpobXpnaLkuIrlkIzml7bnlKjkuKTkuKogZHJvcGRvd24g5pe277yM5YW25Lit5LiA5Liq5bGV5byA77yM54K55Ye75Y+m5LiA5Liq5YmN6ICF5LiN5ZCI5LiK55qE6Zeu6aKYXG4gICAgICAgIGlmICghaXNEZXNjZW5kYW50KHRoaXMuZHJvcGRvd24sIGUudGFyZ2V0KSkge1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc2hvd01lbnU6IGZhbHNlXG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIOWmguaenOS9v+eUqOS6huWOn+eUn+S6i+S7tu+8jOWwvemHj+S4jeimgea3t+WQiOS9v+eUqCBzeW50aGV0aWMg5LqL5Lu277yMcmVhY3Qg55qE55Sf5Lqn54mI5pys5Ly85LmO5Lya5Ye6546w55u45YWz55qEIGJ1Z1xuICAgICAgICAgICAgdGhpcy5zZXRTdGF0ZSh7XG4gICAgICAgICAgICAgICAgc2hvd01lbnU6ICF0aGlzLnN0YXRlLnNob3dNZW51XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBjb21wb25lbnREaWRNb3VudCgpIHtcbiAgICAgICAgd2luZG93LmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgdGhpcy5oYW5kbGVHbG9iYWxDbGljayk7XG4gICAgfVxuICAgIGNvbXBvbmVudFdpbGxVbm1vdW50KCkge1xuICAgICAgICB3aW5kb3cucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLCB0aGlzLmhhbmRsZUdsb2JhbENsaWNrKTtcbiAgICB9XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IGNsYXNzTmFtZSwgc3R5bGUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHJlZjogcmVmID0+IHsgdGhpcy5kcm9wZG93biA9IHJlZjsgfSwgc3R5bGVOYW1lOiBcImRyb3Bkb3duXCIsIGNsYXNzTmFtZTogY2xhc3NOYW1lIHx8ICcnIH0sXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImRyb3Bkb3duLXRvZ2dsZVwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCwgdGhpcy5wcm9wcy50aXRsZSksXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgeyBzdHlsZU5hbWU6IFwiZHJvcGRvd24tY2FyZXRcIiB9KSksXG4gICAgICAgICAgICB0aGlzLnN0YXRlLnNob3dNZW51ICYmIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBzdHlsZSA9PT0gJ2RhcmsnID8gJ2Ryb3Bkb3duLW1lbnUtLWRhcmsnIDogJ2Ryb3Bkb3duLW1lbnUnIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIG51bGwsIHRoaXMucHJvcHMuY2hpbGRyZW4pKSkpKTtcbiAgICB9XG59O1xuRHJvcGRvd24gPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIERyb3Bkb3duKTtcbmV4cG9ydCBkZWZhdWx0IERyb3Bkb3duO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bi50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0Ryb3Bkb3duLnNjc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTc4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5kcm9wZG93bi1pdGVtXzJDMWR6IHtcXG4gIHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xcbiAgd2hpdGUtc3BhY2U6IG5vd3JhcDtcXG4gIG92ZXJmbG93OiBoaWRkZW47IH1cXG5cXG4ubGlnaHQtbGlua18yUURlQSB7XFxuICBjb2xvcjogI2RkZDsgfVxcbiAgLmxpZ2h0LWxpbmtfMlFEZUE6aG92ZXIge1xcbiAgICBjb2xvcjogI2ZmZjsgfVxcblxcbi5kcm9wZG93bl9TWmZ5cCB7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxuICBjdXJzb3I6IHBvaW50ZXI7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7IH1cXG5cXG4uZHJvcGRvd24tdG9nZ2xlXzM0UWZkIHtcXG4gIGRpc3BsYXk6IGJsb2NrO1xcbiAgdXNlci1zZWxlY3Q6IG5vbmU7XFxuICAtd2Via2l0LXVzZXItc2VsZWN0OiBub25lO1xcbiAgbWF4LWhlaWdodDogMTAwJTsgfVxcblxcbi5kcm9wZG93bi1tZW51XzFIZ2JTIHtcXG4gIGJveC1zaGFkb3c6IDAgMnB4IDRweCByZ2JhKDAsIDAsIDAsIDAuMjIpO1xcbiAgbGluZS1oZWlnaHQ6IDIuMjtcXG4gIGZvbnQtc2l6ZTogMXJlbTtcXG4gIHRleHQtYWxpZ246IGxlZnQ7XFxuICBiYWNrZ3JvdW5kOiAjMjIyO1xcbiAgcG9zaXRpb246IGFic29sdXRlO1xcbiAgcmlnaHQ6IDA7XFxuICB3aWR0aDogMTUwcHg7XFxuICBvdmVyZmxvdzogaGlkZGVuO1xcbiAgcGFkZGluZzogNXB4IDA7XFxuICB6LWluZGV4OiA5MDA7IH1cXG5cXG4uZHJvcGRvd24tY2FyZXRfRmNCV0kge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgd2lkdGg6IDA7XFxuICBoZWlnaHQ6IDA7XFxuICB2ZXJ0aWNhbC1hbGlnbjogbWlkZGxlO1xcbiAgY29udGVudDogXFxcIlxcXCI7XFxuICBib3JkZXI6IDRweCBzb2xpZDtcXG4gIGJvcmRlci1yaWdodC1jb2xvcjogdHJhbnNwYXJlbnQ7XFxuICBib3JkZXItYm90dG9tLWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIGJvcmRlci1sZWZ0LWNvbG9yOiB0cmFuc3BhcmVudDtcXG4gIG1hcmdpbi1sZWZ0OiA1cHg7IH1cXG5cXG4uZHJvcGRvd24taXRlbV8yQzFkeiB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHBhZGRpbmc6IDAgMjVweDtcXG4gIHRyYW5zaXRpb246IGFsbCAwczsgfVxcbiAgLmRyb3Bkb3duLWl0ZW1fMkMxZHo6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kOiAjM2MzYzNjOyB9XFxuICAuZHJvcGRvd24taXRlbV8yQzFkejphY3RpdmUge1xcbiAgICBiYWNrZ3JvdW5kOiAjM2MzYzNjOyB9XFxuXFxuLnNlcF8xMFkwbyB7XFxuICBtYXJnaW46IDVweCAwO1xcbiAgaGVpZ2h0OiAxcHg7XFxuICBiYWNrZ3JvdW5kOiAjM2MzYzNjOyB9XFxuXFxuLmRyb3Bkb3duLW1lbnUtLWRhcmtfNmVWUFgge1xcbiAgYmFja2dyb3VuZDogIzFCMjY3RjsgfVxcbiAgLmRyb3Bkb3duLW1lbnUtLWRhcmtfNmVWUFggLnNlcF8xMFkwbyB7XFxuICAgIGJhY2tncm91bmQ6ICMxZjJjOTQ7IH1cXG4gIC5kcm9wZG93bi1tZW51LS1kYXJrXzZlVlBYIC5kcm9wZG93bi1pdGVtXzJDMWR6OmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZDogIzFmMmM5NDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImRyb3Bkb3duLWl0ZW1cIjogXCJkcm9wZG93bi1pdGVtXzJDMWR6IGxpZ2h0LWxpbmtfMlFEZUFcIixcblx0XCJsaWdodC1saW5rXCI6IFwibGlnaHQtbGlua18yUURlQVwiLFxuXHRcImRyb3Bkb3duXCI6IFwiZHJvcGRvd25fU1pmeXBcIixcblx0XCJkcm9wZG93bi10b2dnbGVcIjogXCJkcm9wZG93bi10b2dnbGVfMzRRZmRcIixcblx0XCJkcm9wZG93bi1tZW51XCI6IFwiZHJvcGRvd24tbWVudV8xSGdiU1wiLFxuXHRcImRyb3Bkb3duLWNhcmV0XCI6IFwiZHJvcGRvd24tY2FyZXRfRmNCV0lcIixcblx0XCJzZXBcIjogXCJzZXBfMTBZMG9cIixcblx0XCJkcm9wZG93bi1tZW51LS1kYXJrXCI6IFwiZHJvcGRvd24tbWVudS0tZGFya182ZVZQWCBkcm9wZG93bi1tZW51XzFIZ2JTXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2VsZW1lbnRzL0Ryb3Bkb3duL0Ryb3Bkb3duLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxNzlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5jb25zdCBzdHlsZXMgPSByZXF1aXJlKCcuL0Ryb3Bkb3duLnNjc3MnKTtcbmZ1bmN0aW9uIERyb3Bkb3duSXRlbShwcm9wcykge1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIG51bGwsIHR5cGVvZiBwcm9wcy5jaGlsZHJlbiA9PT0gJ3N0cmluZydcbiAgICAgICAgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGNsYXNzTmFtZTogc3R5bGVzWydkcm9wZG93bi1pdGVtJ10gfSwgcHJvcHMuY2hpbGRyZW4pKVxuICAgICAgICA6IFJlYWN0LmNsb25lRWxlbWVudChwcm9wcy5jaGlsZHJlbiwge1xuICAgICAgICAgICAgY2xhc3NOYW1lOiBzdHlsZXNbJ2Ryb3Bkb3duLWl0ZW0nXVxuICAgICAgICB9KSkpO1xufVxuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd25JdGVtO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bkl0ZW0udHN4XG4gKiovIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vRHJvcGRvd24uc2NzcycpO1xuZnVuY3Rpb24gRHJvcGRvd25JdGVtU2VwKHByb3BzKSB7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlcIiwgeyBjbGFzc05hbWU6IHN0eWxlc1snc2VwJ10gfSkpO1xufVxuZXhwb3J0IGRlZmF1bHQgRHJvcGRvd25JdGVtU2VwO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9lbGVtZW50cy9Ecm9wZG93bi9Ecm9wZG93bkl0ZW1TZXAudHN4XG4gKiovIiwiaW1wb3J0IExvZ28gZnJvbSAnLi9Mb2dvJztcbmV4cG9ydCBkZWZhdWx0IExvZ287XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9pbmRleC50c1xuICoqLyIsImltcG9ydCBSZWFjdCBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vTG9nby5jc3MnKTtcbmZ1bmN0aW9uIExvZ28ocHJvcHMpIHtcbiAgICBjb25zdCB7IGRhcmssIHRvIH0gPSBwcm9wcztcbiAgICBjb25zdCBzdHlsZU5hbWUgPSBkYXJrID8gJ2xvZ28tLWRhcmsnIDogJ2xvZ28nO1xuICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImgxXCIsIHsgY2xhc3NOYW1lOiBzdHlsZXNbJ2xvZ28td3JhcCddIH0sXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyBjbGFzc05hbWU6IHN0eWxlc1tzdHlsZU5hbWVdLCB0bzogdG8gfSwgXCJyZWFkclwiKSkpO1xufVxuTG9nb1snZGVmYXVsdFByb3BzJ10gPSB7XG4gICAgdG86ICcvJ1xufTtcbmV4cG9ydCBkZWZhdWx0IExvZ287XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvTG9nby9Mb2dvLnRzeFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvcG9zdGNzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vTG9nby5jc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0xvZ28vTG9nby5jc3NcbiAqKiBtb2R1bGUgaWQgPSAxODRcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiOnJvb3Qge1xcbiAgLS1icmFuZGluZy1oZWlnaHQ6IDYwcHg7XFxufVxcblxcbi5sb2dvLXdyYXBfQ1A1UDkge1xcbiAgbWFyZ2luOiAwO1xcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWJyYW5kaW5nLWhlaWdodCk7XFxuICBjb2xvcjogI2ZmZjtcXG4gIG1hcmdpbi10b3A6IC0zcHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XFxufVxcblxcbi5sb2dvXzNxY2JWIHtcXG4gIGJhY2tncm91bmQ6IHVybChcIiArIHJlcXVpcmUoXCJhc3NldHMvaW1nL2xvZ28ucG5nXCIpICsgXCIpIG5vLXJlcGVhdCBsZWZ0O1xcbiAgd2lkdGg6IDcwcHg7XFxuICBoZWlnaHQ6IHZhcigtLWJyYW5kaW5nLWhlaWdodCk7XFxuICBiYWNrZ3JvdW5kLXNpemU6IDcwcHg7XFxuICB0ZXh0LWluZGVudDogLTk5OWVtO1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbn1cXG5cXG4ubG9nby0tZGFya18zOEYtSCB7XFxuICBiYWNrZ3JvdW5kOiB1cmwoXCIgKyByZXF1aXJlKFwiYXNzZXRzL2ltZy9sb2dvLWRhcmsucG5nXCIpICsgXCIpIG5vLXJlcGVhdCBsZWZ0O1xcbiAgYmFja2dyb3VuZC1zaXplOiA3MHB4O1xcbn1cXG5cIiwgXCJcIl0pO1xuXG4vLyBleHBvcnRzXG5leHBvcnRzLmxvY2FscyA9IHtcblx0XCJsb2dvLXdyYXBcIjogXCJsb2dvLXdyYXBfQ1A1UDlcIixcblx0XCJsb2dvXCI6IFwibG9nb18zcWNiVlwiLFxuXHRcImxvZ28tLWRhcmtcIjogXCJsb2dvLS1kYXJrXzM4Ri1IIGxvZ29fM3FjYlZcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vcG9zdGNzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Mb2dvL0xvZ28uY3NzXG4gKiogbW9kdWxlIGlkID0gMTg1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IF9fd2VicGFja19wdWJsaWNfcGF0aF9fICsgXCJpbWcvbG9nby44MWViODNkN2Y3LnBuZ1wiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvYXNzZXRzL2ltZy9sb2dvLnBuZ1xuICoqIG1vZHVsZSBpZCA9IDE4NlxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyArIFwiaW1nL2xvZ28tZGFyay40NzU0ZThhYTc4LnBuZ1wiO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvYXNzZXRzL2ltZy9sb2dvLWRhcmsucG5nXG4gKiogbW9kdWxlIGlkID0gMTg3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0JyYW5kaW5nLnNjc3NcIik7XG4gICAgdmFyIGluc2VydENzcyA9IHJlcXVpcmUoXCIhLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvaXNvbW9ycGhpYy1zdHlsZS1sb2FkZXIvbGliL2luc2VydENzcy5qc1wiKTtcblxuICAgIGlmICh0eXBlb2YgY29udGVudCA9PT0gJ3N0cmluZycpIHtcbiAgICAgIGNvbnRlbnQgPSBbW21vZHVsZS5pZCwgY29udGVudCwgJyddXTtcbiAgICB9XG5cbiAgICBtb2R1bGUuZXhwb3J0cyA9IGNvbnRlbnQubG9jYWxzIHx8IHt9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9nZXRDc3MgPSBmdW5jdGlvbigpIHsgcmV0dXJuIGNvbnRlbnQudG9TdHJpbmcoKTsgfTtcbiAgICBtb2R1bGUuZXhwb3J0cy5faW5zZXJ0Q3NzID0gZnVuY3Rpb24ob3B0aW9ucykgeyByZXR1cm4gaW5zZXJ0Q3NzKGNvbnRlbnQsIG9wdGlvbnMpIH07XG4gIFxuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0JyYW5kaW5nL0JyYW5kaW5nLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxODhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuXG5cbi8vIG1vZHVsZVxuZXhwb3J0cy5wdXNoKFttb2R1bGUuaWQsIFwiLm5hdi1saW5rXzNYMFQ4IHtcXG4gIGNvbG9yOiAjZmZmOyB9XFxuICAubmF2LWxpbmtfM1gwVDg6aG92ZXIge1xcbiAgICBjb2xvcjogI2RkZDsgfVxcblxcbi5icmFuZGluZ184RVZBdCB7XFxuICBtaW4taGVpZ2h0OiA2MHB4O1xcbiAgYmFja2dyb3VuZDogIzIyMjsgfVxcblxcbi5kcm9wZG93bi1tZW51XzVTYzUwIHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIHRvcDogNjBweDtcXG4gIHJpZ2h0OiAwO1xcbiAgei1pbmRleDogOTk5OyB9XFxuXFxuLnVzZXJuYW1lXzNNbTZ6LFxcbi5uYXYtbGlua3NfMndUWVkge1xcbiAgbGluZS1oZWlnaHQ6IDYwcHg7IH1cXG5cXG4ubmF2XzFvajF6LCAubmF2LS11c2VyXzFMN0xiIHtcXG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcXG4gIGNvbG9yOiAjZmZmO1xcbiAgY3Vyc29yOiBwb2ludGVyO1xcbiAgcGFkZGluZzogMCAxMHB4O1xcbiAgbGluZS1oZWlnaHQ6IDYwcHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cXG5cXG4uZHJvcGRvd24tcmVjZW50LXJlYWRpbmdfMm95akgge1xcbiAgbWFyZ2luLXJpZ2h0OiAxNXB4OyB9XFxuXFxuLm5hdi0tdXNlcl8xTDdMYiB7XFxuICBmbG9hdDogcmlnaHQ7IH1cXG5cXG4ubmF2LWxpbmtfM1gwVDgge1xcbiAgcGFkZGluZzogMCA1cHg7IH1cXG5cXG4ubmF2LWl0ZW1fZjgzYmgge1xcbiAgZGlzcGxheTogaW5saW5lLWJsb2NrOyB9XFxuXFxuLnJlY2VudC1yZWFkaW5nXzFrSktoIHtcXG4gIG1hcmdpbi1yaWdodDogMTVweDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcIm5hdi1saW5rXCI6IFwibmF2LWxpbmtfM1gwVDhcIixcblx0XCJicmFuZGluZ1wiOiBcImJyYW5kaW5nXzhFVkF0XCIsXG5cdFwiZHJvcGRvd24tbWVudVwiOiBcImRyb3Bkb3duLW1lbnVfNVNjNTBcIixcblx0XCJ1c2VybmFtZVwiOiBcInVzZXJuYW1lXzNNbTZ6XCIsXG5cdFwibmF2LWxpbmtzXCI6IFwibmF2LWxpbmtzXzJ3VFlZXCIsXG5cdFwibmF2XCI6IFwibmF2XzFvajF6XCIsXG5cdFwibmF2LS11c2VyXCI6IFwibmF2LS11c2VyXzFMN0xiXCIsXG5cdFwiZHJvcGRvd24tcmVjZW50LXJlYWRpbmdcIjogXCJkcm9wZG93bi1yZWNlbnQtcmVhZGluZ18yb3lqSFwiLFxuXHRcIm5hdi1pdGVtXCI6IFwibmF2LWl0ZW1fZjgzYmhcIixcblx0XCJyZWNlbnQtcmVhZGluZ1wiOiBcInJlY2VudC1yZWFkaW5nXzFrSktoXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQnJhbmRpbmcvQnJhbmRpbmcuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDE4OVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IENvbG9waG9uIGZyb20gJy4vQ29sb3Bob24nO1xuZXhwb3J0IGRlZmF1bHQgQ29sb3Bob247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IENvbnRhaW5lciBmcm9tICcuLi8uLi9lbGVtZW50cy9Db250YWluZXInO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9Db2xvcGhvbi5zY3NzJyk7XG5sZXQgQ29sb3Bob24gPSBjbGFzcyBDb2xvcGhvbiBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiY29sb3Bob25cIiwgc3R5bGVOYW1lOiBcImNvbG9waG9uXCIgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCBudWxsLFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJwXCIsIG51bGwsIFwiXFx1MDBBOSAyMDE1XFx1RkYwRDIwMTYgcmVhZHJ3ZWIuY29tLCBhbGwgcmlnaHRzIHJlc2VydmVkXCIpKSkpO1xuICAgIH1cbn07XG5Db2xvcGhvbiA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzLCB7XG4gICAgICAgIGFsbG93TXVsdGlwbGU6IHRydWVcbiAgICB9KVxuXSwgQ29sb3Bob24pO1xuZXhwb3J0IGRlZmF1bHQgQ29sb3Bob247XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29sb3Bob24vQ29sb3Bob24udHN4XG4gKiovIiwiXG4gICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UhLi9Db2xvcGhvbi5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db2xvcGhvbi9Db2xvcGhvbi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTkyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb2xvcGhvbl8zY1FKMCB7XFxuICBmb250LXNpemU6IDFyZW07XFxuICBwYWRkaW5nOiAyMHB4IDA7XFxuICBjb2xvcjogIzk5OTsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImNvbG9waG9uXCI6IFwiY29sb3Bob25fM2NRSjBcIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vc2Fzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db2xvcGhvbi9Db2xvcGhvbi5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTkzXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgY29ubmVjdCB9IGZyb20gJ3JlYWN0LXJlZHV4JztcbmltcG9ydCB7IENvbnRhaW5lciB9IGZyb20gJy4uL2VsZW1lbnRzL2xheW91dCc7XG5pbXBvcnQgQ29uc29sZUJyYW5kaW5nIGZyb20gJy4uL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nJztcbmltcG9ydCB7IHVzZXJBdXRoLCBzZW5kTm90aWZpY2F0aW9uLCB1c2VyTG9nb3V0IH0gZnJvbSAnLi4vc3RvcmUvYWN0aW9ucyc7XG5pbXBvcnQgQ29uc29sZVNpZGViYXIgZnJvbSAnLi4vY29tcG9uZW50cy9Db25zb2xlU2lkZWJhcic7XG5pbXBvcnQgbWVudXMgZnJvbSAnLi4vY29udGVudC9tZW51cyc7XG5pbXBvcnQgRG9jQ29udGFpbmVyIGZyb20gJy4uL2NvbnRhaW5lcnMvRG9jQ29udGFpbmVyJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uL2hlbHBlcnMnO1xuY2xhc3MgQ29uc29sZSBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgY29uc3RydWN0b3IocHJvcHMpIHtcbiAgICAgICAgc3VwZXIocHJvcHMpO1xuICAgICAgICB0aGlzLmhhbmRsZUxvZ291dCA9IHRoaXMuaGFuZGxlTG9nb3V0LmJpbmQodGhpcyk7XG4gICAgfVxuICAgIHJlZGlyZWN0SWZOb3RBZG1pbihwcm9wcyA9IHRoaXMucHJvcHMpIHtcbiAgICAgICAgaWYgKHByb3BzLnNlc3Npb24udXNlci5yb2xlICE9PSAnYWRtaW4nKSB7XG4gICAgICAgICAgICBoZWxwZXJzLnJlZGlyZWN0KCcvJyk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaGFuZGxlTG9nb3V0KCkge1xuICAgICAgICB0aGlzLnByb3BzLnVzZXJMb2dvdXQoKTtcbiAgICB9XG4gICAgY29tcG9uZW50V2lsbFJlY2VpdmVQcm9wcyhuZXh0UHJvcHMpIHtcbiAgICAgICAgY29uc3QgdXNlclJvbGVDaGFuZ2VkID0gdGhpcy5wcm9wcy5zZXNzaW9uLnVzZXIucm9sZSAhPT0gbmV4dFByb3BzLnNlc3Npb24udXNlci5yb2xlO1xuICAgICAgICBpZiAodXNlclJvbGVDaGFuZ2VkKSB7XG4gICAgICAgICAgICB0aGlzLnJlZGlyZWN0SWZOb3RBZG1pbihuZXh0UHJvcHMpO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJlbmRlcigpIHtcbiAgICAgICAgbGV0IGlzQWRtaW4gPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci5yb2xlID09PSAnYWRtaW4nO1xuICAgICAgICBsZXQgdXNlcm5hbWUgPSB0aGlzLnByb3BzLnNlc3Npb24udXNlci51c2VybmFtZTtcbiAgICAgICAgbGV0IHBhdGhuYW1lID0gdGhpcy5wcm9wcy5yb3V0aW5nLmxvY2F0aW9uQmVmb3JlVHJhbnNpdGlvbnNcbiAgICAgICAgICAgID8gdGhpcy5wcm9wcy5yb3V0aW5nLmxvY2F0aW9uQmVmb3JlVHJhbnNpdGlvbnMucGF0aG5hbWVcbiAgICAgICAgICAgIDogJ2NvbnNvbGUnO1xuICAgICAgICBjb25zdCBjb250ZW50U3R5bGUgPSB7XG4gICAgICAgICAgICBtYXJnaW5MZWZ0OiAzMjAsXG4gICAgICAgICAgICBwYWRkaW5nVG9wOiA2MFxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gKGlzQWRtaW5cbiAgICAgICAgICAgID8gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoRG9jQ29udGFpbmVyLCB7IGJvZHlDbGFzczogXCJjb25zb2xlXCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnNvbGVCcmFuZGluZywgeyBpc0FkbWluOiBpc0FkbWluLCB1c2VybmFtZTogdXNlcm5hbWUsIG9uTG9nb3V0OiB0aGlzLmhhbmRsZUxvZ291dCB9KSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KENvbnRhaW5lciwgeyBpc0ZsdWlkOiB0cnVlIH0sXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29uc29sZVNpZGViYXIsIHsgbWVudU1hcHBpbmc6IG1lbnVzLCBjdXJyZW50UGF0aDogcGF0aG5hbWUgfSksXG4gICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZTogY29udGVudFN0eWxlIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pKSkpXG4gICAgICAgICAgICA6IChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGU6IHsgdGV4dEFsaWduOiAnY2VudGVyJywgbWFyZ2luOiAnMjBweCAwJyB9IH0sIFwiQUNDRVNTIERFTklFRCFcIikpKTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBjb25uZWN0KHN0YXRlID0+ICh7XG4gICAgbm90aWZpY2F0aW9uczogc3RhdGUuY29tcG9uZW50cy5ub3RpZmljYXRpb25zLFxuICAgIHNlc3Npb246IHN0YXRlLnNlc3Npb24sXG4gICAgcm91dGluZzogc3RhdGUucm91dGluZ1xufSksIHsgc2VuZE5vdGlmaWNhdGlvbiwgdXNlckF1dGgsIHVzZXJMb2dvdXQgfSkoQ29uc29sZSk7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvQ29uc29sZS50c3hcbiAqKi8iLCJpbXBvcnQgQ29uc29sZUJyYW5kaW5nIGZyb20gJy4vQ29uc29sZUJyYW5kaW5nJztcbmV4cG9ydCBkZWZhdWx0IENvbnNvbGVCcmFuZGluZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlQnJhbmRpbmcvaW5kZXgudHNcbiAqKi8iLCJ2YXIgX19kZWNvcmF0ZSA9ICh0aGlzICYmIHRoaXMuX19kZWNvcmF0ZSkgfHwgZnVuY3Rpb24gKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKSB7XG4gICAgdmFyIGMgPSBhcmd1bWVudHMubGVuZ3RoLCByID0gYyA8IDMgPyB0YXJnZXQgOiBkZXNjID09PSBudWxsID8gZGVzYyA9IE9iamVjdC5nZXRPd25Qcm9wZXJ0eURlc2NyaXB0b3IodGFyZ2V0LCBrZXkpIDogZGVzYywgZDtcbiAgICBpZiAodHlwZW9mIFJlZmxlY3QgPT09IFwib2JqZWN0XCIgJiYgdHlwZW9mIFJlZmxlY3QuZGVjb3JhdGUgPT09IFwiZnVuY3Rpb25cIikgciA9IFJlZmxlY3QuZGVjb3JhdGUoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpO1xuICAgIGVsc2UgZm9yICh2YXIgaSA9IGRlY29yYXRvcnMubGVuZ3RoIC0gMTsgaSA+PSAwOyBpLS0pIGlmIChkID0gZGVjb3JhdG9yc1tpXSkgciA9IChjIDwgMyA/IGQocikgOiBjID4gMyA/IGQodGFyZ2V0LCBrZXksIHIpIDogZCh0YXJnZXQsIGtleSkpIHx8IHI7XG4gICAgcmV0dXJuIGMgPiAzICYmIHIgJiYgT2JqZWN0LmRlZmluZVByb3BlcnR5KHRhcmdldCwga2V5LCByKSwgcjtcbn07XG5pbXBvcnQgUmVhY3QsIHsgQ29tcG9uZW50IH0gZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgTGluayB9IGZyb20gJ3JlYWN0LXJvdXRlcic7XG5pbXBvcnQgQ29udGFpbmVyIGZyb20gJy4uLy4uL2VsZW1lbnRzL0NvbnRhaW5lcic7XG5pbXBvcnQgeyBEcm9wZG93biwgRHJvcGRvd25JdGVtLCBEcm9wZG93bkl0ZW1TZXAgfSBmcm9tICcuLi8uLi9lbGVtZW50cy9Ecm9wZG93bic7XG5pbXBvcnQgQ1NTTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7XG5pbXBvcnQgTG9nbyBmcm9tICcuLi9Mb2dvJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vQ29uc29sZUJyYW5kaW5nLnNjc3MnKTtcbmxldCBDb25zb2xlQnJhbmRpbmcgPSBjbGFzcyBDb25zb2xlQnJhbmRpbmcgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIGNvbnN0cnVjdG9yKHByb3BzKSB7XG4gICAgICAgIHN1cGVyKHByb3BzKTtcbiAgICAgICAgdGhpcy5zdGF0ZSA9IHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogZmFsc2VcbiAgICAgICAgfTtcbiAgICAgICAgdGhpcy5oYW5kbGVMb2dvdXRDbGljayA9IHRoaXMuaGFuZGxlTG9nb3V0Q2xpY2suYmluZCh0aGlzKTtcbiAgICB9XG4gICAgaGFuZGxlTG9nb3V0Q2xpY2soZSkge1xuICAgICAgICB0aGlzLnByb3BzLm9uTG9nb3V0KCk7XG4gICAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9XG4gICAgdG9nZ2xlRHJvcGRvd25NZW51KCkge1xuICAgICAgICB0aGlzLnNldFN0YXRlKHtcbiAgICAgICAgICAgIGlzRHJvcGRvd25NZW51VmlzaWJsZTogIXRoaXMuc3RhdGUuaXNEcm9wZG93bk1lbnVWaXNpYmxlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGxldCB1c2VybmFtZSA9IHRoaXMucHJvcHMudXNlcm5hbWU7XG4gICAgICAgIGxldCBpc0FkbWluID0gdGhpcy5wcm9wcy5pc0FkbWluID8gdGhpcy5wcm9wcy5pc0FkbWluIDogJ2ZhbHNlJztcbiAgICAgICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImJyYW5kaW5nXCIgfSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoQ29udGFpbmVyLCB7IGlzRmx1aWQ6IHRydWUsIGNsYXNzTmFtZTogXCJjbGVhcmZpeFwiIH0sXG4gICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcImxlZnRcIiB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMb2dvLCB7IHRvOiBcIi9jb25zb2xlXCIgfSkpLFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcInN1Yi1uYW1lXCIgfSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgc3R5bGVOYW1lOiBcInN1YlwiIH0sIFwiXFx1NjNBN1xcdTUyMzZcXHU1M0YwXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJuYXYgcmlnaHRcIiB9LCB1c2VybmFtZSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93biwgeyBzdHlsZTogXCJkYXJrXCIsIHRpdGxlOiAoUmVhY3QuY3JlYXRlRWxlbWVudChcInNwYW5cIiwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICB1c2VybmFtZSxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBpc0FkbWluICYmIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzcGFuXCIsIHsgY2xhc3NOYW1lOiBcImJhZGdlIGJhZGdlLS1kYXJrXCIgfSwgXCJcXHU3QkExXFx1NzQwNlxcdTU0NThcIikpKSB9LFxuICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChEcm9wZG93bkl0ZW0sIG51bGwsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChMaW5rLCB7IHRvOiBcIi9cIiB9LCBcIlxcdTU2REVcXHU1MjMwIFJlYWRyXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogYC91c2VyL3Byb2ZpbGVgIH0sIFwiXFx1NEUyQVxcdTRFQkFcXHU0RTNCXFx1OTg3NVwiKSksXG4gICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KERyb3Bkb3duSXRlbSwgbnVsbCxcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IGAvdXNlci9wcmVmZXJlbmNlYCB9LCBcIlxcdThCQkVcXHU3RjZFXCIpKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtU2VwLCBudWxsKSxcbiAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoRHJvcGRvd25JdGVtLCBudWxsLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJhXCIsIHsgb25DbGljazogdGhpcy5oYW5kbGVMb2dvdXRDbGljaywgaHJlZjogXCIjXCIgfSwgXCJcXHU5MDAwXFx1NTFGQVwiKSkpKSkpKSkpO1xuICAgIH1cbn07XG5Db25zb2xlQnJhbmRpbmcgPSBfX2RlY29yYXRlKFtcbiAgICBDU1NNb2R1bGVzKHN0eWxlcywge1xuICAgICAgICBhbGxvd011bHRpcGxlOiB0cnVlXG4gICAgfSlcbl0sIENvbnNvbGVCcmFuZGluZyk7XG5leHBvcnQgZGVmYXVsdCBDb25zb2xlQnJhbmRpbmc7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL0NvbnNvbGVCcmFuZGluZy50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0NvbnNvbGVCcmFuZGluZy5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlQnJhbmRpbmcvQ29uc29sZUJyYW5kaW5nLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAxOTdcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCIuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2xpYi9jc3MtYmFzZS5qc1wiKSgpO1xuLy8gaW1wb3J0c1xuZXhwb3J0cy5pKHJlcXVpcmUoXCItIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuLi9CcmFuZGluZy9CcmFuZGluZy5zY3NzXCIpLCB1bmRlZmluZWQpO1xuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5icmFuZGluZ18zZ29SRyB7XFxuICBiYWNrZ3JvdW5kOiAjMUIyNjdGO1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgdG9wOiAwO1xcbiAgbGVmdDogMDtcXG4gIHdpZHRoOiAxMDAlO1xcbiAgei1pbmRleDogODAwO1xcbiAgaGVpZ2h0OiA2MHB4OyB9XFxuXFxuLnNlcF9BVDZHbCB7XFxuICBtYXJnaW46IDAgMTBweDtcXG4gIG9wYWNpdHk6IC42O1xcbiAgZm9udC1zaXplOiAxcmVtOyB9XFxuXFxuLnN1Yl9JeWhtcyB7XFxuICBvcGFjaXR5OiAuODtcXG4gIGZvbnQtc2l6ZTogMS4ycmVtO1xcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcXG4gIG1hcmdpbi10b3A6IC0zcHg7XFxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7IH1cXG5cXG4ucmlnaHRfMVpBUVAge1xcbiAgZmxvYXQ6IHJpZ2h0OyB9XFxuXFxuLnN1Yi1uYW1lXzJUOGFoIHtcXG4gIGZsb2F0OiBsZWZ0O1xcbiAgbWFyZ2luLWxlZnQ6IDE1cHg7IH1cXG4gIC5zdWItbmFtZV8yVDhhaCBzcGFuIHtcXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xcbiAgICBsaW5lLWhlaWdodDogNjBweDtcXG4gICAgaGVpZ2h0OiA2MHB4O1xcbiAgICBjb2xvcjogI2ZmZjsgfVxcblxcbi5uYXZfMTB5bjQge1xcbiAgY29sb3I6ICNmZmY7XFxuICBsaW5lLWhlaWdodDogNjBweDtcXG4gIGhlaWdodDogNjBweDsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImJyYW5kaW5nXCI6IFwiYnJhbmRpbmdfM2dvUkdcIixcblx0XCJzZXBcIjogXCJzZXBfQVQ2R2xcIixcblx0XCJzdWJcIjogXCJzdWJfSXlobXNcIixcblx0XCJyaWdodFwiOiBcInJpZ2h0XzFaQVFQXCIsXG5cdFwic3ViLW5hbWVcIjogXCJzdWItbmFtZV8yVDhhaFwiLFxuXHRcIm5hdlwiOiBcIm5hdl8xMHluNCBcIiArIHJlcXVpcmUoXCItIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Nhc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuLi9CcmFuZGluZy9CcmFuZGluZy5zY3NzXCIpLmxvY2Fsc1tcIm5hdlwiXSArIFwiXCJcbn07XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL34vY3NzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi9+L3Nhc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSEuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZUJyYW5kaW5nL0NvbnNvbGVCcmFuZGluZy5zY3NzXG4gKiogbW9kdWxlIGlkID0gMTk4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgQ29uc29sZVNpZGViYXIgZnJvbSAnLi9Db25zb2xlU2lkZWJhcic7XG5leHBvcnQgZGVmYXVsdCBDb25zb2xlU2lkZWJhcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9pbmRleC50c1xuICoqLyIsInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBJY29uIGZyb20gJy4uLy4uL2VsZW1lbnRzL0ljb24nO1xuaW1wb3J0IENTU01vZHVsZXMgZnJvbSAncmVhY3QtY3NzLW1vZHVsZXMnO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9Db25zb2xlU2lkZWJhci5jc3MnKTtcbmxldCBDb25zb2xlU2lkZWJhciA9IGNsYXNzIENvbnNvbGVTaWRlYmFyIGV4dGVuZHMgQ29tcG9uZW50IHtcbiAgICBjb25zdHJ1Y3Rvcihwcm9wcykge1xuICAgICAgICBzdXBlcihwcm9wcyk7XG4gICAgfVxuICAgIGNvbXBvbmVudERpZE1vdW50KCkge1xuICAgIH1cbiAgICByZW5kZXIoKSB7XG4gICAgICAgIGNvbnN0IHsgbWVudU1hcHBpbmcsIGN1cnJlbnRQYXRoIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICBsZXQgY3VycmVudE1lbnUgPSB7XG4gICAgICAgICAgICByb290SW5kZXg6IDAsXG4gICAgICAgICAgICBzdWJJbmRleDogMFxuICAgICAgICB9O1xuICAgICAgICBtZW51TWFwcGluZy5mb3JFYWNoKChtZW51LCByb290SW5kZXgpID0+IHtcbiAgICAgICAgICAgIGxldCBzdWJJbmRleDtcbiAgICAgICAgICAgIGxldCByZXN1bHQgPSBtZW51LnN1Yk1lbnUuZmlsdGVyKChpdGVtLCBpbmRleCkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChpdGVtLnBhdGggPT09IGN1cnJlbnRQYXRoKSB7XG4gICAgICAgICAgICAgICAgICAgIHN1YkluZGV4ID0gaW5kZXg7XG4gICAgICAgICAgICAgICAgICAgIHJldHVybiB0cnVlO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgaWYgKHJlc3VsdC5sZW5ndGggPiAwKSB7XG4gICAgICAgICAgICAgICAgY3VycmVudE1lbnUucm9vdEluZGV4ID0gcm9vdEluZGV4O1xuICAgICAgICAgICAgICAgIGN1cnJlbnRNZW51LnN1YkluZGV4ID0gc3ViSW5kZXg7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgICAgICBsZXQgcm9vdE1lbnUgPSAoUmVhY3QuY3JlYXRlRWxlbWVudChcInVsXCIsIHsgc3R5bGVOYW1lOiBcIm5hdi1zaWRlLXJvb3RcIiB9LCBtZW51TWFwcGluZy5tYXAoKG1lbnUsIGluZGV4KSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaVwiLCB7IGtleTogaW5kZXgsIHN0eWxlTmFtZTogaW5kZXggIT09IGN1cnJlbnRNZW51LnJvb3RJbmRleCA/ICdyb290LWl0ZW0nIDogJ3Jvb3QtaXRlbS0tY3VycmVudCcgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExpbmssIHsgdG86IG1lbnUucGF0aCB9LFxuICAgICAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KEljb24sIHsgc2l6ZTogMjUsIHN0eWxlTmFtZTogXCJpY29uXCIsIG5hbWU6IG1lbnUuY29tcG9uZW50IH0pKSkpO1xuICAgICAgICB9KSkpO1xuICAgICAgICBsZXQgc3ViTWVudSA9IChSZWFjdC5jcmVhdGVFbGVtZW50KFwidWxcIiwgeyBzdHlsZU5hbWU6IFwibmF2LXNpZGUtc3ViXCIgfSwgbWVudU1hcHBpbmdbY3VycmVudE1lbnUucm9vdEluZGV4XS5zdWJNZW51Lm1hcCgobWVudSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImxpXCIsIHsga2V5OiBpbmRleCwgc3R5bGVOYW1lOiBpbmRleCAhPT0gY3VycmVudE1lbnUuc3ViSW5kZXggPyAnc3ViLWl0ZW0nIDogJ3N1Yi1pdGVtLS1jdXJyZW50JyB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoTGluaywgeyB0bzogbWVudS5wYXRoIH0sIG1lbnUuZGlzcGxheU5hbWUpKSk7XG4gICAgICAgIH0pKSk7XG4gICAgICAgIHJldHVybiAoUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IHN0eWxlTmFtZTogXCJzaWRlYmFyLWxlZnRcIiB9LFxuICAgICAgICAgICAgcm9vdE1lbnUsXG4gICAgICAgICAgICBzdWJNZW51KSk7XG4gICAgfVxufTtcbkNvbnNvbGVTaWRlYmFyID0gX19kZWNvcmF0ZShbXG4gICAgQ1NTTW9kdWxlcyhzdHlsZXMsIHtcbiAgICAgICAgYWxsb3dNdWx0aXBsZTogdHJ1ZVxuICAgIH0pXG5dLCBDb25zb2xlU2lkZWJhcik7XG5leHBvcnQgZGVmYXVsdCBDb25zb2xlU2lkZWJhcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9Db25zb2xlU2lkZWJhci50c3hcbiAqKi8iLCJcbiAgICB2YXIgY29udGVudCA9IHJlcXVpcmUoXCIhIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2Nzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL3Bvc3Rjc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSEuL0NvbnNvbGVTaWRlYmFyLmNzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQ29uc29sZVNpZGViYXIvQ29uc29sZVNpZGViYXIuY3NzXG4gKiogbW9kdWxlIGlkID0gMjAxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcbmV4cG9ydHMuaShyZXF1aXJlKFwiLSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9wb3N0Y3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2Uhc3R5bGVzL3ZhcmlhYmxlcy5jc3NcIiksIFwiXCIpO1xuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIjpyb290IHtcXG4gIC0tbmF2LXJvb3Qtd2lkdGg6IDgwcHg7XFxuICAtLWl0ZW0tbGluZS1oZWlnaHQ6IDUwcHg7XFxufVxcblxcbi5zaWRlYmFyLWxlZnRfMk5mdmEge1xcbiAgcG9zaXRpb246IGZpeGVkO1xcbiAgbGVmdDogMDtcXG4gIHRvcDogdmFyKC0tYnJhbmRpbmctaGVpZ2h0KTtcXG4gIGhlaWdodDogMTAwJTtcXG4gIHdpZHRoOiB2YXIoLS1zaWRlYmFyLXdpZHRoKTtcXG4gIGJhY2tncm91bmQ6ICNFNEU0RTQ7XFxufVxcblxcbi5uYXYtc2lkZV8zTDhmNiB7XFxuICBwb3NpdGlvbjogZml4ZWQ7XFxuICBsZWZ0OiAwO1xcbiAgaGVpZ2h0OiAxMDAlO1xcbn1cXG5cXG4ubmF2LXNpZGUtcm9vdF8xX1BCZyB7XFxuICB3aWR0aDogdmFyKC0tbmF2LXJvb3Qtd2lkdGgpO1xcbiAgYmFja2dyb3VuZDogIzA0MDgyRTtcXG59XFxuXFxuLm5hdi1zaWRlLXJvb3QtLWN1cnJlbnRfM0JWNXQge1xcbiAgYmFja2dyb3VuZDogcmVkO1xcbn1cXG5cXG4ubmF2LXNpZGUtc3ViXzVRX2Y1IHtcXG4gIHdpZHRoOiBjYWxjKHZhcigtLXNpZGViYXItd2lkdGgpIC0gdmFyKC0tbmF2LXJvb3Qtd2lkdGgpKTtcXG4gIGxlZnQ6IHZhcigtLW5hdi1yb290LXdpZHRoKTtcXG59XFxuXFxuLyogaXRlbSAqL1xcbi5uYXYtaXRlbV8ycjF6biB7XFxuICBoZWlnaHQ6IHZhcigtLWl0ZW0tbGluZS1oZWlnaHQpO1xcbiAgbGluZS1oZWlnaHQ6IHZhcigtLWl0ZW0tbGluZS1oZWlnaHQpO1xcblxcbiAgJiBhIHtcXG4gICAgZGlzcGxheTogYmxvY2s7XFxuICAgIHBhZGRpbmc6IDAgMTVweDtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIGhlaWdodDogdmFyKC0taXRlbS1saW5lLWhlaWdodCk7XFxuICB9XFxufVxcblxcbi5pY29uXzI2UHdHIHtcXG4gIG1hcmdpbi10b3A6IDEycHg7XFxufVxcblxcbi5yb290LWl0ZW1fVlB3dU0ge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyO1xcblxcbiAgJiBhOmhvdmVyIHtcXG4gICAgYmFja2dyb3VuZDogY29sb3IodmFyKC0tZGFyay1ibHVlKSBsKCsgMTAlKSk7XFxuICB9XFxufVxcblxcbi5yb290LWl0ZW0tLWN1cnJlbnRfM0xNbkQge1xcbiAgYmFja2dyb3VuZDogdmFyKC0tYmx1ZSk7XFxufVxcblxcbi5zdWItaXRlbV93YUEtTyB7XFxuXFxuICAmIGEge1xcbiAgICBjb2xvcjogdmFyKC0tdGV4dCk7XFxuICB9XFxuICAmIGE6aG92ZXIge1xcbiAgICBiYWNrZ3JvdW5kOiBncmF5KDIwMCk7XFxuICB9XFxufVxcblxcbi5zdWItaXRlbS0tY3VycmVudF8zQ3ptTSB7XFxuXFxuICAmIGEsXFxuICAmIGE6aG92ZXIge1xcbiAgICBjb2xvcjogdmFyKC0tYmx1ZSk7XFxuICAgIGJhY2tncm91bmQ6ICNmZmY7XFxuICB9XFxufVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcInNpZGViYXItbGVmdFwiOiBcInNpZGViYXItbGVmdF8yTmZ2YVwiLFxuXHRcIm5hdi1zaWRlXCI6IFwibmF2LXNpZGVfM0w4ZjZcIixcblx0XCJuYXYtc2lkZS1yb290XCI6IFwibmF2LXNpZGUtcm9vdF8xX1BCZyBuYXYtc2lkZV8zTDhmNlwiLFxuXHRcIm5hdi1zaWRlLXJvb3QtLWN1cnJlbnRcIjogXCJuYXYtc2lkZS1yb290LS1jdXJyZW50XzNCVjV0IG5hdi1zaWRlLXJvb3RfMV9QQmcgbmF2LXNpZGVfM0w4ZjZcIixcblx0XCJuYXYtc2lkZS1zdWJcIjogXCJuYXYtc2lkZS1zdWJfNVFfZjUgbmF2LXNpZGVfM0w4ZjZcIixcblx0XCJuYXYtaXRlbVwiOiBcIm5hdi1pdGVtXzJyMXpuXCIsXG5cdFwiaWNvblwiOiBcImljb25fMjZQd0dcIixcblx0XCJyb290LWl0ZW1cIjogXCJyb290LWl0ZW1fVlB3dU0gbmF2LWl0ZW1fMnIxem5cIixcblx0XCJyb290LWl0ZW0tLWN1cnJlbnRcIjogXCJyb290LWl0ZW0tLWN1cnJlbnRfM0xNbkQgcm9vdC1pdGVtX1ZQd3VNIG5hdi1pdGVtXzJyMXpuXCIsXG5cdFwic3ViLWl0ZW1cIjogXCJzdWItaXRlbV93YUEtTyBuYXYtaXRlbV8ycjF6blwiLFxuXHRcInN1Yi1pdGVtLS1jdXJyZW50XCI6IFwic3ViLWl0ZW0tLWN1cnJlbnRfM0N6bU0gc3ViLWl0ZW1fd2FBLU8gbmF2LWl0ZW1fMnIxem5cIlxufTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vfi9jc3MtbG9hZGVyP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuL34vcG9zdGNzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlIS4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9Db25zb2xlU2lkZWJhci9Db25zb2xlU2lkZWJhci5jc3NcbiAqKiBtb2R1bGUgaWQgPSAyMDJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImNvbnN0IG1lbnVzID0gW1xuICAgIHtcbiAgICAgICAgY29tcG9uZW50OiAnYm9va3MnLFxuICAgICAgICBkaXNwbGF5TmFtZTogJycsXG4gICAgICAgIHBhdGg6ICcvY29uc29sZS9ib29rcycsXG4gICAgICAgIHN1Yk1lbnU6IFtcbiAgICAgICAgICAgIHtcbiAgICAgICAgICAgICAgICBjb21wb25lbnQ6ICdtYW5hZ2Vib29rcycsXG4gICAgICAgICAgICAgICAgZGlzcGxheU5hbWU6ICfkuabnsY3nrqHnkIYnLFxuICAgICAgICAgICAgICAgIHBhdGg6ICcvY29uc29sZS9ib29rcydcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAvLyB7XG4gICAgICAgICAgICAvLyAgIGNvbXBvbmVudDogJ2FkZGJvb2snLFxuICAgICAgICAgICAgLy8gICBkaXNwbGF5TmFtZTogJ+a3u+WKoOS5puexjScsXG4gICAgICAgICAgICAvLyAgIHBhdGg6ICcvY29uc29sZS9ib29rcy9uZXcnXG4gICAgICAgICAgICAvLyB9LFxuICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgIGNvbXBvbmVudDogJ2FkZGNvbGxlY3Rpb24nLFxuICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiAn5re75Yqg5ZCI6ZuGJyxcbiAgICAgICAgICAgICAgICBwYXRoOiAnL2NvbnNvbGUvY29sbGVjdGlvbnMvbmV3J1xuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfSxcbiAgICB7XG4gICAgICAgIGNvbXBvbmVudDogJ3VzZXJzJyxcbiAgICAgICAgZGlzcGxheU5hbWU6ICcnLFxuICAgICAgICBwYXRoOiAnL2NvbnNvbGUvdXNlcnMnLFxuICAgICAgICBzdWJNZW51OiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgY29tcG9uZW50OiAnbWFuYWdldXNlcnMnLFxuICAgICAgICAgICAgICAgIGRpc3BsYXlOYW1lOiAn55So5oi3566h55CGJyxcbiAgICAgICAgICAgICAgICBwYXRoOiAnL2NvbnNvbGUvdXNlcnMnXG4gICAgICAgICAgICB9XG4gICAgICAgIF1cbiAgICB9LFxuXTtcbmV4cG9ydCBkZWZhdWx0IG1lbnVzO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb250ZW50L21lbnVzLnRzXG4gKiovIiwidmFyIF9fZGVjb3JhdGUgPSAodGhpcyAmJiB0aGlzLl9fZGVjb3JhdGUpIHx8IGZ1bmN0aW9uIChkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYykge1xuICAgIHZhciBjID0gYXJndW1lbnRzLmxlbmd0aCwgciA9IGMgPCAzID8gdGFyZ2V0IDogZGVzYyA9PT0gbnVsbCA/IGRlc2MgPSBPYmplY3QuZ2V0T3duUHJvcGVydHlEZXNjcmlwdG9yKHRhcmdldCwga2V5KSA6IGRlc2MsIGQ7XG4gICAgaWYgKHR5cGVvZiBSZWZsZWN0ID09PSBcIm9iamVjdFwiICYmIHR5cGVvZiBSZWZsZWN0LmRlY29yYXRlID09PSBcImZ1bmN0aW9uXCIpIHIgPSBSZWZsZWN0LmRlY29yYXRlKGRlY29yYXRvcnMsIHRhcmdldCwga2V5LCBkZXNjKTtcbiAgICBlbHNlIGZvciAodmFyIGkgPSBkZWNvcmF0b3JzLmxlbmd0aCAtIDE7IGkgPj0gMDsgaS0tKSBpZiAoZCA9IGRlY29yYXRvcnNbaV0pIHIgPSAoYyA8IDMgPyBkKHIpIDogYyA+IDMgPyBkKHRhcmdldCwga2V5LCByKSA6IGQodGFyZ2V0LCBrZXkpKSB8fCByO1xuICAgIHJldHVybiBjID4gMyAmJiByICYmIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh0YXJnZXQsIGtleSwgciksIHI7XG59O1xuaW1wb3J0IFJlYWN0LCB7IENvbXBvbmVudCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB3aXRoU2lkZUVmZmVjdCBmcm9tICdyZWFjdC1zaWRlLWVmZmVjdCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuY29uc3QgZGVmYXVsdFRpdGxlID0gJ1JlYWRyJztcbmxldCBEb2NDb250YWluZXIgPSBjbGFzcyBEb2NDb250YWluZXIgZXh0ZW5kcyBDb21wb25lbnQge1xuICAgIHJlbmRlcigpIHtcbiAgICAgICAgY29uc3QgeyBjbGFzc05hbWUgfSA9IHRoaXMucHJvcHM7XG4gICAgICAgIHJldHVybiAoY2xhc3NOYW1lXG4gICAgICAgICAgICA/IChSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiAnZ2ItZG9jLWNvbnRhaW5lcicgKyBjbGFzc05hbWUgfSwgdGhpcy5wcm9wcy5jaGlsZHJlbikpXG4gICAgICAgICAgICA6IFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBjbGFzc05hbWU6IFwiZ2ItZG9jLWNvbnRhaW5lclwiIH0sIHRoaXMucHJvcHMuY2hpbGRyZW4pKTtcbiAgICB9XG59O1xuRG9jQ29udGFpbmVyID0gX19kZWNvcmF0ZShbXG4gICAgd2l0aFNpZGVFZmZlY3QocmVkdWNlUHJvcHNUb1N0YXRlLCBoYW5kbGVTdGF0ZUNoYW5nZU9uQ2xpZW50KVxuXSwgRG9jQ29udGFpbmVyKTtcbmZ1bmN0aW9uIHJlZHVjZVByb3BzVG9TdGF0ZShwcm9wc0xpc3QpIHtcbiAgICBjb25zdCBpbm5lcm1vc3RQcm9wcyA9IHByb3BzTGlzdFtwcm9wc0xpc3QubGVuZ3RoIC0gMV07XG4gICAgbGV0IGRhdGEgPSB7fTtcbiAgICBpZiAoaW5uZXJtb3N0UHJvcHMpIHtcbiAgICAgICAgZGF0YSA9IF8ucGljayhpbm5lcm1vc3RQcm9wcywgWyd0aXRsZScsICdib2R5Q2xhc3MnXSk7XG4gICAgICAgIGlmIChkYXRhLnRpdGxlICYmICFpbm5lcm1vc3RQcm9wcy51c2VBc01hc3RlclRpdGxlKSB7XG4gICAgICAgICAgICBkYXRhLnRpdGxlID0gYCR7ZGF0YS50aXRsZX0gfCAke2RlZmF1bHRUaXRsZX1gO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgZGF0YS50aXRsZSA9IGRhdGEudGl0bGUgfHwgZGVmYXVsdFRpdGxlO1xuICAgICAgICB9XG4gICAgfVxuICAgIGRhdGEuYm9keUNsYXNzID0gcHJvcHNMaXN0XG4gICAgICAgIC5maWx0ZXIocHJvcCA9PiBwcm9wLmJvZHlDbGFzcylcbiAgICAgICAgLm1hcChwcm9wID0+IHByb3AuYm9keUNsYXNzKVxuICAgICAgICAuam9pbignICcpO1xuICAgIHJldHVybiBkYXRhO1xufVxuZnVuY3Rpb24gaGFuZGxlU3RhdGVDaGFuZ2VPbkNsaWVudChwcm9wTGlzdCkge1xuICAgIGNvbnN0IHsgdGl0bGUsIGJvZHlDbGFzcyB9ID0gcHJvcExpc3Q7XG4gICAgaWYgKHR5cGVvZiBib2R5Q2xhc3MgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGRvY3VtZW50LmJvZHkuY2xhc3NOYW1lID0gYm9keUNsYXNzO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgZG9jdW1lbnQuYm9keS5yZW1vdmVBdHRyaWJ1dGUoJ2NsYXNzJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgdGl0bGUgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIGRvY3VtZW50LnRpdGxlID0gdGl0bGU7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBkb2N1bWVudC50aXRsZSA9IGRlZmF1bHRUaXRsZTtcbiAgICB9XG59XG5leHBvcnQgZGVmYXVsdCBEb2NDb250YWluZXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbnRhaW5lcnMvRG9jQ29udGFpbmVyLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LXNpZGUtZWZmZWN0XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWFjdC1zaWRlLWVmZmVjdFwiXG4gKiogbW9kdWxlIGlkID0gMjA1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgKiBhcyBhcGkgZnJvbSAnLi9hcGknO1xuZXhwb3J0ICogZnJvbSAnLi9hcGknO1xuZXhwb3J0IGRlZmF1bHQgT2JqZWN0LmFzc2lnbih7fSwgYXBpKTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc2VydmljZXMvYXBpL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IGNhbGxBcGkgZnJvbSAnLi4vdXRpbHMvY2FsbEFwaSc7XG5pbXBvcnQgaGVscGVycyBmcm9tICcuLi8uLi9oZWxwZXJzJztcbmltcG9ydCBub3JtYWxpemVSZXNwb25zZSBmcm9tICcuLi91dGlscy9ub3JtYWxpemVSZXNwb25zZSc7XG5pbXBvcnQgc2NoZW1hcyBmcm9tICcuLi9zY2hlbWFzJztcbmltcG9ydCB1dGlscyBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgRE9VQkFOX0FQSV9ST09UIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL2NvbW1vbic7XG5jb25zdCBBUElfUk9PVCA9IGhlbHBlcnMuZ2V0QXBpUm9vdCgpO1xuLyoqXG4gKiBnZW5lcmFsIGhlbHBlciBmdW5jdGlvbnNcbiAqL1xuY29uc3QgcGFyc2VFbmRwb2ludFdpdGhPcHRpb25zID0gKGVuZHBvaW50LCBvcHRpb25zKSA9PiB7XG4gICAgaWYgKHR5cGVvZiBvcHRpb25zID09PSAnc3RyaW5nJykge1xuICAgICAgICByZXR1cm4gb3B0aW9ucztcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIGNvbnN0IHF1ZXJ5U3RyaW5nID0gdXRpbHMucGFyc2VVcmxlbmNvZGVkKG9wdGlvbnMpO1xuICAgICAgICByZXR1cm4gYCR7ZW5kcG9pbnR9PyR7cXVlcnlTdHJpbmd9YDtcbiAgICB9XG59O1xuZXhwb3J0IGZ1bmN0aW9uIGZldGNoTm9ybWFsaXplZChlbmRwb2ludCwgc2NoZW1hLCBmZXRjaE9wdGlvbnMgPSB7fSkge1xuICAgIGlmIChlbmRwb2ludC5pbmRleE9mKCdodHRwOi8vJykgIT09IC0xKSB7XG4gICAgICAgIHJldHVybiBub3JtYWxpemVSZXNwb25zZShjYWxsQXBpKGVuZHBvaW50LCBmZXRjaE9wdGlvbnMpLCBzY2hlbWEpO1xuICAgIH1cbiAgICByZXR1cm4gbm9ybWFsaXplUmVzcG9uc2UoY2FsbEFwaShgJHtBUElfUk9PVH0vJHtlbmRwb2ludH1gLCBmZXRjaE9wdGlvbnMpLCBzY2hlbWEpO1xufVxuLyoqXG4gKiBzcGVjaWZpYyBhcGkgc2VydmljZXNcbiAqL1xuZXhwb3J0IGNvbnN0IGZldGNoQm9va1Byb2dyZXNzID0gaWQgPT4ge1xuICAgIHJldHVybiBmZXRjaE5vcm1hbGl6ZWQoYHVzZXIvYm9va3MvJHtpZH0vcHJvZ3Jlc3NgLCBzY2hlbWFzLkJPT0tfUFJPR1JFU1MpO1xufTtcbmV4cG9ydCBjb25zdCBmZXRjaEJvb2sgPSBpZCA9PiB7XG4gICAgcmV0dXJuIGZldGNoTm9ybWFsaXplZChgYm9va3MvJHtpZH1gLCBzY2hlbWFzLkJPT0spO1xufTtcbmV4cG9ydCBjb25zdCBmZXRjaEJvb2tDb250ZW50ID0gaWQgPT4ge1xuICAgIHJldHVybiBmZXRjaE5vcm1hbGl6ZWQoYGJvb2tzLyR7aWR9L2NvbnRlbnRgLCBzY2hlbWFzLkJPT0tfQ09OVEVOVCk7XG59O1xuZXhwb3J0IGNvbnN0IGZldGNoQm9va3MgPSAob3B0aW9ucyA9IHt9KSA9PiB7XG4gICAgY29uc3QgeyB3aXRoQ29udGVudCB9ID0gb3B0aW9ucztcbiAgICBsZXQgYXBpT3B0aW9ucyA9ICF3aXRoQ29udGVudFxuICAgICAgICA/IHtcbiAgICAgICAgICAgIGV4Y2x1ZGU6ICdjb250ZW50J1xuICAgICAgICB9XG4gICAgICAgIDoge307XG4gICAgYXBpT3B0aW9ucyA9IF8uYXNzaWduKHt9LCBfLm9taXQob3B0aW9ucywgWyd3aXRoQ29udGVudCddKSwgYXBpT3B0aW9ucyk7XG4gICAgcmV0dXJuIGZldGNoTm9ybWFsaXplZChwYXJzZUVuZHBvaW50V2l0aE9wdGlvbnMoJ2Jvb2tzJywgYXBpT3B0aW9ucyksIHNjaGVtYXMuQk9PS19BUlJBWSk7XG59O1xuZXhwb3J0IGNvbnN0IGZldGNoVXNlcnMgPSAob3B0aW9ucykgPT4ge1xuICAgIHJldHVybiBmZXRjaE5vcm1hbGl6ZWQocGFyc2VFbmRwb2ludFdpdGhPcHRpb25zKCd1c2VycycsIG9wdGlvbnMpLCBzY2hlbWFzLlVTRVJfQVJSQVkpO1xufTtcbi8vIGV4dGVybmFsIGFwaXNcbmV4cG9ydCBjb25zdCBmZXRjaERvdWJhbkJvb2tzID0ga2V5d29yZCA9PiBjYWxsQXBpKGAke0RPVUJBTl9BUElfUk9PVH0vYm9vay9zZWFyY2g/Y291bnQ9MTAmcT0ke2tleXdvcmR9YCwge1xuICAgIHVzZUpzb25wOiB0cnVlXG59KTtcbmV4cG9ydCBjb25zdCB1c2VyTG9naW4gPSAoZGF0YSkgPT4gY2FsbEFwaShgJHtBUElfUk9PVH0vYXV0aGAsIHtcbiAgICBtZXRob2Q6ICdQT1NUJyxcbiAgICBkYXRhXG59KTtcbmV4cG9ydCBjb25zdCB1c2VyU2lnbnVwID0gKGRhdGEpID0+IGNhbGxBcGkoYCR7QVBJX1JPT1R9L3VzZXJzYCwge1xuICAgIG1ldGhvZDogJ1BPU1QnLFxuICAgIGRhdGFcbn0pO1xuZXhwb3J0IGNvbnN0IGF1dGggPSAoKSA9PiB7XG4gICAgcmV0dXJuIGNhbGxBcGkoYCR7QVBJX1JPT1R9L2F1dGhgLCB7XG4gICAgICAgIG1ldGhvZDogJ0dFVCdcbiAgICB9KTtcbn07XG5leHBvcnQgY29uc3QgbG9nb3V0ID0gKCkgPT4ge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9hdXRoL3Jldm9rZWAsIHtcbiAgICAgICAgbWV0aG9kOiAnUFVUJ1xuICAgIH0pO1xufTtcbmV4cG9ydCBmdW5jdGlvbiBhZGRDb2xsZWN0aW9uKGRhdGEpIHtcbiAgICByZXR1cm4gY2FsbEFwaShgJHtBUElfUk9PVH0vY29sbGVjdGlvbnNgLCB7IG1ldGhvZDogJ1BPU1QnLCBkYXRhIH0pO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGFkZEJvb2soZGF0YSkge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9ib29rc2AsIHsgbWV0aG9kOiAnUE9TVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZWRpdEJvb2tNZXRhKGJvb2tJZCwgZGF0YSkge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9ib29rcy8ke2Jvb2tJZH1gLCB7IG1ldGhvZDogJ1BVVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gYWRkQXV0aG9yKGRhdGEpIHtcbiAgICByZXR1cm4gY2FsbEFwaShgJHtBUElfUk9PVH0vYXV0aG9yc2AsIHsgbWV0aG9kOiAnUE9TVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gc2V0UHJvZ3Jlc3MoYm9va0lkLCBkYXRhKSB7XG4gICAgY2FsbEFwaShgJHtBUElfUk9PVH0vdXNlci9ib29rcy8ke2Jvb2tJZH0vcHJvZ3Jlc3NgLCB7IG1ldGhvZDogJ1BVVCcsIGRhdGEgfSk7XG59XG5leHBvcnQgZnVuY3Rpb24gZGVsZXRlQm9vayhpZCkge1xuICAgIHJldHVybiBjYWxsQXBpKGAke0FQSV9ST09UfS9ib29rcy8ke2lkfWAsIHtcbiAgICAgICAgbWV0aG9kOiAnREVMRVRFJ1xuICAgIH0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zZXJ2aWNlcy9hcGkvYXBpLnRzXG4gKiovIiwiaW1wb3J0IGhhbmRsZVJlc3BvbnNlIGZyb20gJy4vaGFuZGxlUmVzcG9uc2UnO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gbm9ybWFsaXplUmVzcG9uc2UocmVzdWx0UHJvbWlzZSwgc2NoZW1hKSB7XG4gICAgcmV0dXJuIHJlc3VsdFByb21pc2UudGhlbihyZXNwb25zZSA9PiAoeyByZXNwb25zZTogaGFuZGxlUmVzcG9uc2UocmVzcG9uc2UsIHNjaGVtYSkgfSksIGVycm9yID0+ICh7IGVycm9yIH0pKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc2VydmljZXMvdXRpbHMvbm9ybWFsaXplUmVzcG9uc2UudHNcbiAqKi8iLCJpbXBvcnQgeyBub3JtYWxpemUgfSBmcm9tICdub3JtYWxpenInO1xuaW1wb3J0IHBhcnNlUXVlcnkgZnJvbSAnLi4vLi4vdXRpbHMvcGFyc2VRdWVyeSc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IGh1bXBzIGZyb20gJ2h1bXBzJztcbmNvbnN0IHBhcnNlSGVhZGVyUGFnZUxpbmtCeVJlbCA9IChsaW5rcywgcmVsKSA9PiB7XG4gICAgY29uc3QgbGluayA9IGxpbmtzLnNwbGl0KCcsJykuZmluZChzID0+IHMuaW5kZXhPZihgcmVsPVwiJHtyZWx9XCJgKSA+IC0xKTtcbiAgICBpZiAoIWxpbmspIHtcbiAgICAgICAgcmV0dXJuIHVuZGVmaW5lZDtcbiAgICB9XG4gICAgY29uc3QgdXJsID0gbGluay5zcGxpdCgnOycpWzBdLnRyaW0oKS5zbGljZSgxLCAtMSk7XG4gICAgcmV0dXJuIHtcbiAgICAgICAgLy8gdG9kb1xuICAgICAgICBwYWdlOiBwYXJzZUludChfLmdldChwYXJzZVF1ZXJ5KHVybC5zcGxpdCgnPycpWzFdIHx8ICcnKSwgJ3BhZ2UnLCAwKSwgMTApLFxuICAgICAgICB1cmxcbiAgICB9O1xufTtcbmZ1bmN0aW9uIHBhcnNlUmVzSGVhZGVyVG9QYWdpbmF0aW9uKHJlc3BvbnNlKSB7XG4gICAgaWYgKCFyZXNwb25zZSkge1xuICAgICAgICByZXR1cm4ge307XG4gICAgfVxuICAgIGNvbnN0IGxpbmtzID0gcmVzcG9uc2UuaGVhZGVycy5nZXQoJ2xpbmsnKTtcbiAgICBpZiAoIWxpbmtzKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgY29uc3QgbmV4dCA9IHBhcnNlSGVhZGVyUGFnZUxpbmtCeVJlbChsaW5rcywgJ25leHQnKTtcbiAgICBjb25zdCBsYXN0ID0gcGFyc2VIZWFkZXJQYWdlTGlua0J5UmVsKGxpbmtzLCAnbGFzdCcpO1xuICAgIHJldHVybiB7XG4gICAgICAgIG5leHQsXG4gICAgICAgIGxhc3RcbiAgICB9O1xufVxuZnVuY3Rpb24gaGFuZGxlUmVzcG9uc2UoeyBqc29uLCBfcmVzcG9uc2UgfSwgc2NoZW1hKSB7XG4gICAgY29uc3QgY2FtZWxpemVkSnNvbiA9IGh1bXBzLmNhbWVsaXplS2V5cyhqc29uKTtcbiAgICBjb25zdCB7IG5leHQsIGxhc3QgfSA9IHBhcnNlUmVzSGVhZGVyVG9QYWdpbmF0aW9uKF9yZXNwb25zZSk7XG4gICAgaWYgKHR5cGVvZiBzY2hlbWEgIT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiBfLmFzc2lnbih7fSwgbm9ybWFsaXplKGNhbWVsaXplZEpzb24sIHNjaGVtYSksIHtcbiAgICAgICAgICAgIF9uZXh0OiBuZXh0LFxuICAgICAgICAgICAgX2xhc3Q6IGxhc3RcbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBjYW1lbGl6ZWRKc29uO1xufVxuZXhwb3J0IGRlZmF1bHQgaGFuZGxlUmVzcG9uc2U7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3NlcnZpY2VzL3V0aWxzL2hhbmRsZVJlc3BvbnNlLnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL1ZpZXdlcicpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVkdXhcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlZHV4XCJcbiAqKiBtb2R1bGUgaWQgPSAyMTJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIlxuICAgIHZhciBjb250ZW50ID0gcmVxdWlyZShcIiEhLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UmbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0hLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvc2Fzcy1sb2FkZXIvaW5kZXguanM/c291cmNlTWFwPWZhbHNlIS4vQm9va1BhZ2Uuc2Nzc1wiKTtcbiAgICB2YXIgaW5zZXJ0Q3NzID0gcmVxdWlyZShcIiEuLy4uLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9pc29tb3JwaGljLXN0eWxlLWxvYWRlci9saWIvaW5zZXJ0Q3NzLmpzXCIpO1xuXG4gICAgaWYgKHR5cGVvZiBjb250ZW50ID09PSAnc3RyaW5nJykge1xuICAgICAgY29udGVudCA9IFtbbW9kdWxlLmlkLCBjb250ZW50LCAnJ11dO1xuICAgIH1cblxuICAgIG1vZHVsZS5leHBvcnRzID0gY29udGVudC5sb2NhbHMgfHwge307XG4gICAgbW9kdWxlLmV4cG9ydHMuX2dldENzcyA9IGZ1bmN0aW9uKCkgeyByZXR1cm4gY29udGVudC50b1N0cmluZygpOyB9O1xuICAgIG1vZHVsZS5leHBvcnRzLl9pbnNlcnRDc3MgPSBmdW5jdGlvbihvcHRpb25zKSB7IHJldHVybiBpbnNlcnRDc3MoY29udGVudCwgb3B0aW9ucykgfTtcbiAgXG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9WaWV3ZXIvY29tcG9uZW50cy9Cb29rUGFnZS5zY3NzXG4gKiogbW9kdWxlIGlkID0gMjIyXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5jb250ZW50X2RlWVM0IHtcXG4gIG1hcmdpbjogMCBhdXRvO1xcbiAgd2lkdGg6IDU1MHB4O1xcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcXG4gIGxpbmUtaGVpZ2h0OiAxLjk7IH1cXG4gIC5jb250ZW50X2RlWVM0IHAge1xcbiAgICBtYXJnaW46IDA7XFxuICAgIG1pbi1oZWlnaHQ6IDI1cHg7IH1cXG5cXG4ucGFnZV8yNkpqNyB7XFxuICBkaXNwbGF5OiBibG9jaztcXG4gIHdpZHRoOiAxMDAlO1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxcblxcbi5wYWdlLS1mbHVpZF8yMGVRTSB7IH1cXG4gIC5wYWdlLS1mbHVpZF8yMGVRTSAuY29udGVudF9kZVlTNCB7XFxuICAgIHdpZHRoOiAxMDAlO1xcbiAgICBwYWRkaW5nOiAwIDIwcHg7IH1cXG5cXG4ucGFnZS0taW5pdF8xVkhWTSB7XFxuICBwb3NpdGlvbjogcmVsYXRpdmU7XFxuICBoZWlnaHQ6IGF1dG87IH1cXG4gIC5wYWdlLS1pbml0XzFWSFZNIC5jb250ZW50X2RlWVM0IHtcXG4gICAgaGVpZ2h0OiBhdXRvOyB9XFxuXFxuLmdiLWxpbmVfM1JZcUsge1xcbiAgb3ZlcmZsb3c6IGhpZGRlbjsgfVxcblxcbi5wYWdlLW5vXzJfMTg3IHtcXG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcXG4gIGxlZnQ6IDA7XFxuICB0b3A6IDA7XFxuICBib3JkZXItdG9wOiAxcHggc29saWQgI2U2ZTZlNjtcXG4gIHBhZGRpbmc6IDAgMTBweDtcXG4gIGNvbG9yOiAjZTZlNmU2O1xcbiAgZm9udC1zaXplOiAwLjhyZW07IH1cXG5cXG4ud2hpdGVfMVRWTzkge1xcbiAgY29sb3I6ICMzMzM7IH1cXG5cXG4ubmlnaHRfM2FsaDgge1xcbiAgY29sb3I6ICNlZWU7IH1cXG4gIC5uaWdodF8zYWxoOCBhIHtcXG4gICAgY29sb3I6ICNmZmY7XFxuICAgIHRleHQtZGVjb3JhdGlvbjogdW5kZXJsaW5lOyB9XFxuXFxuLnNlcGlhXzFDRjY5IHtcXG4gIGNvbG9yOiAjNTAzMjIwOyB9XFxuXCIsIFwiXCJdKTtcblxuLy8gZXhwb3J0c1xuZXhwb3J0cy5sb2NhbHMgPSB7XG5cdFwiY29udGVudFwiOiBcImNvbnRlbnRfZGVZUzRcIixcblx0XCJwYWdlXCI6IFwicGFnZV8yNkpqN1wiLFxuXHRcInBhZ2UtLWZsdWlkXCI6IFwicGFnZS0tZmx1aWRfMjBlUU0gcGFnZV8yNkpqN1wiLFxuXHRcInBhZ2UtLWluaXRcIjogXCJwYWdlLS1pbml0XzFWSFZNXCIsXG5cdFwiZ2ItbGluZVwiOiBcImdiLWxpbmVfM1JZcUtcIixcblx0XCJwYWdlLW5vXCI6IFwicGFnZS1ub18yXzE4N1wiLFxuXHRcIndoaXRlXCI6IFwid2hpdGVfMVRWTzlcIixcblx0XCJuaWdodFwiOiBcIm5pZ2h0XzNhbGg4XCIsXG5cdFwic2VwaWFcIjogXCJzZXBpYV8xQ0Y2OVwiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVmlld2VyL2NvbXBvbmVudHMvQm9va1BhZ2Uuc2Nzc1xuICoqIG1vZHVsZSBpZCA9IDIyM1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiZXhwb3J0IGNvbnN0IFRIRU1FUyA9IHtcbiAgICBXSElURTogJ1dISVRFJyxcbiAgICBOSUdIVDogJ05JR0hUJyxcbiAgICBTRVBJQTogJ1NFUElBJ1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29uc3RhbnRzL3ZpZXdlckRlZnMudHNcbiAqKi8iLCJpbXBvcnQgaGVscGVycyBmcm9tICcuLi8uLi9oZWxwZXJzJztcbmNvbnN0IHN0eWxlcyA9IHJlcXVpcmUoJy4vY29tcG9uZW50cy9Cb29rUGFnZS5zY3NzJyk7XG4vLyDmmoLkuI3mlK/mjIHljIXlkKvlm77niYfnmoTorqHnrpdcbi8vIOiuoeeul+ayoeacieetieW+heWbvueJh+WKoOi9veWujOaIkO+8jOaJgOS7pee7k+aenOaYr+S4jeato+ehrueahFxuZXhwb3J0IGZ1bmN0aW9uIGdldE5vZGVIZWlnaHRzKG5vZGVzKSB7XG4gICAgbGV0IG5vZGVzSGVpZ2h0ID0gW107XG4gICAgQXJyYXkucHJvdG90eXBlLmZvckVhY2guY2FsbChub2RlcywgKG5vZGUsIGluZGV4KSA9PiB7XG4gICAgICAgIGlmIChub2RlLmNsYXNzTmFtZSAhPT0gc3R5bGVzWydnYi1saW5lJ10pIHtcbiAgICAgICAgICAgIGNvbnNvbGUuZXJyb3IoJ1Vuc3VwcG9ydGVkIGNvbnRlbnQgZm91bmQhJyk7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZXNIZWlnaHQucHVzaChub2RlLmNsaWVudEhlaWdodCk7XG4gICAgfSk7XG4gICAgcmV0dXJuIG5vZGVzSGVpZ2h0O1xufVxuLy8gbG9uZyBwYXJhZ3JhcGggc2l0dWF0aW9uIGRvZXNuJ3Qgc2VlbSB0byBhZmZlY3QgdGhpcyBmdW5jdGlvblxuLy8gb2Zmc2V0IGRpc3RhbmNlIGlzIGFsd2F5cyBuZWd0aXZlIG9yIHplcm9cbi8vIHRoZSBpbmRleCB3aWxsIGJlIG9mIHRoZSBwYXJhZ3JhcGggd2l0aCB0aGlzIG9mZnNldCBhdCB0aGUgZW5kXG5mdW5jdGlvbiBnZXRQYWdlT2Zmc2V0KHsgcGFnZUluZGV4LCBwYWdlSGVpZ2h0LCBub2RlSGVpZ2h0cyB9KSB7XG4gICAgbGV0IG9mZnNldCA9IDA7XG4gICAgbGV0IG5vZGVJbmRleCA9IDA7XG4gICAgbGV0IG5vZGVTdGFydEluZGV4O1xuICAgIGlmIChwYWdlSW5kZXggIT09IDApIHtcbiAgICAgICAgbGV0IG5vZGVIZWlnaHRTdW0gPSAwO1xuICAgICAgICB3aGlsZSAobm9kZUhlaWdodFN1bSA8PSBwYWdlSGVpZ2h0ICogcGFnZUluZGV4KSB7XG4gICAgICAgICAgICBub2RlSGVpZ2h0U3VtICs9IG5vZGVIZWlnaHRzW25vZGVJbmRleF07XG4gICAgICAgICAgICBub2RlSW5kZXgrKztcbiAgICAgICAgfVxuICAgICAgICBvZmZzZXQgPSBub2RlSGVpZ2h0U3VtIC0gbm9kZUhlaWdodHNbbm9kZUluZGV4IC0gMV0gLSBwYWdlSW5kZXggKiBwYWdlSGVpZ2h0O1xuICAgICAgICBub2RlU3RhcnRJbmRleCA9IG5vZGVJbmRleCAtIDE7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBub2RlU3RhcnRJbmRleCA9IDA7XG4gICAgfVxuICAgIHJldHVybiB7IG9mZnNldCwgbm9kZVN0YXJ0SW5kZXggfTtcbn1cbmZ1bmN0aW9uIGdldE5vZGVzT2ZQYWdlKHsgcGFnZUluZGV4LCBub2RlcywgcGFnZUhlaWdodCwgbm9kZUhlaWdodHMgfSkge1xuICAgIGxldCB7IG9mZnNldCwgbm9kZVN0YXJ0SW5kZXggfSA9IGdldFBhZ2VPZmZzZXQoeyBwYWdlSW5kZXgsIHBhZ2VIZWlnaHQsIG5vZGVIZWlnaHRzIH0pO1xuICAgIGxldCBub2RlSW5kZXggPSBub2RlU3RhcnRJbmRleDtcbiAgICBsZXQgbm9kZUVuZEluZGV4O1xuICAgIGxldCBwYWdlTm9kZXMgPSBbXTtcbiAgICBsZXQgbm9kZUhlaWdodFN1bSA9IG9mZnNldCArIG5vZGVIZWlnaHRzW25vZGVTdGFydEluZGV4XTtcbiAgICBub2RlSW5kZXgrKztcbiAgICBpZiAobm9kZUhlaWdodFN1bSA8IHBhZ2VIZWlnaHQpIHtcbiAgICAgICAgd2hpbGUgKG5vZGVIZWlnaHRTdW0gPD0gcGFnZUhlaWdodCAmJiBub2RlSW5kZXggIT09IG5vZGVzLmxlbmd0aCkge1xuICAgICAgICAgICAgbm9kZUhlaWdodFN1bSArPSBub2RlSGVpZ2h0c1tub2RlSW5kZXhdO1xuICAgICAgICAgICAgbm9kZUluZGV4Kys7XG4gICAgICAgIH1cbiAgICAgICAgbm9kZUVuZEluZGV4ID0gbm9kZUluZGV4IC0gMTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIG5vZGVFbmRJbmRleCA9IG5vZGVTdGFydEluZGV4O1xuICAgIH1cbiAgICBmb3IgKGxldCBpID0gbm9kZVN0YXJ0SW5kZXg7IGkgPD0gbm9kZUVuZEluZGV4ICYmIGkgPD0gbm9kZXMubGVuZ3RoIC0gMTsgaSsrKSB7XG4gICAgICAgIHBhZ2VOb2Rlcy5wdXNoKG5vZGVzW2ldKTtcbiAgICB9XG4gICAgcmV0dXJuIHsgcGFnZU5vZGVzLCBvZmZzZXQgfTtcbn1cbmV4cG9ydCBmdW5jdGlvbiBncm91cE5vZGVzQnlQYWdlKG5vZGVzLCBub2RlSGVpZ2h0cywgcGFnZUhlaWdodCwgcGFnZVN0YXJ0RnJvbSA9IDAsIGNoYXB0ZXJJZCkge1xuICAgIGxldCBwYWdlcyA9IFtdO1xuICAgIGxldCBwYWdlSGVpZ2h0U3VtID0gbm9kZUhlaWdodHMucmVkdWNlKChhLCBiKSA9PiAoYSArIGIpLCAwKTtcbiAgICBsZXQgcGFnZVN1bSA9IE1hdGguY2VpbChwYWdlSGVpZ2h0U3VtIC8gcGFnZUhlaWdodCk7XG4gICAgaWYgKG5vZGVIZWlnaHRzLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICByZXR1cm4gW3tcbiAgICAgICAgICAgICAgICBub2RlcyxcbiAgICAgICAgICAgICAgICBtZXRhOiB7XG4gICAgICAgICAgICAgICAgICAgIHBhZ2VObzogMSArIHBhZ2VTdGFydEZyb20sXG4gICAgICAgICAgICAgICAgICAgIG9mZnNldDogMCxcbiAgICAgICAgICAgICAgICAgICAgY2hhcHRlcklkXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfV07XG4gICAgfVxuICAgIC8vIGZpbmFsbHlcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHBhZ2VTdW07IGkrKykge1xuICAgICAgICBjb25zdCB7IHBhZ2VOb2Rlcywgb2Zmc2V0IH0gPSBnZXROb2Rlc09mUGFnZSh7IHBhZ2VJbmRleDogaSwgbm9kZXMsIG5vZGVIZWlnaHRzLCBwYWdlSGVpZ2h0IH0pO1xuICAgICAgICBjb25zdCBmaW5kSWRPZkhUYWdzID0gKG1kTm9kZSkgPT4ge1xuICAgICAgICAgICAgY29uc3QgcGF0dGVybiA9IC88aFxcZCBpZD1cIiguKilcIj4oLiopPFxcL2hcXGQ+LztcbiAgICAgICAgICAgIGNvbnN0IHJlc3VsdCA9IG1kTm9kZS5tYXRjaChwYXR0ZXJuKTtcbiAgICAgICAgICAgIGlmIChyZXN1bHQpIHtcbiAgICAgICAgICAgICAgICByZXR1cm4gcmVzdWx0WzFdO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgcmV0dXJuIG51bGw7XG4gICAgICAgIH07XG4gICAgICAgIGNvbnN0IGhhc2ggPSBwYWdlTm9kZXNcbiAgICAgICAgICAgIC5tYXAobm9kZSA9PiB7XG4gICAgICAgICAgICByZXR1cm4gZmluZElkT2ZIVGFncyhub2RlKTtcbiAgICAgICAgfSlcbiAgICAgICAgICAgIC5maWx0ZXIoaWQgPT4gQm9vbGVhbihpZCkpO1xuICAgICAgICBwYWdlcy5wdXNoKHtcbiAgICAgICAgICAgIG5vZGVzOiBwYWdlTm9kZXMsXG4gICAgICAgICAgICBtZXRhOiB7XG4gICAgICAgICAgICAgICAgcGFnZU5vOiBwYWdlU3RhcnRGcm9tICsgaSArIDEsXG4gICAgICAgICAgICAgICAgb2Zmc2V0LFxuICAgICAgICAgICAgICAgIGNoYXB0ZXJJZCxcbiAgICAgICAgICAgICAgICBoYXNoXG4gICAgICAgICAgICB9LFxuICAgICAgICB9KTtcbiAgICB9XG4gICAgcmV0dXJuIHBhZ2VzO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdyb3VwUGFnZUZyb21DaGFwdGVycyhjb250ZW50T2ZDaGFwdGVycywgbm9kZUhlaWdodHNPZkNoYXB0ZXJzLCBwYWdlSGVpZ2h0KSB7XG4gICAgbGV0IHBhZ2VTdGFydEZyb20gPSAwO1xuICAgIGxldCBhbGxQYWdlcyA9IFtdO1xuICAgIGNvbnN0IHQwID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7XG4gICAgY29udGVudE9mQ2hhcHRlcnMuZm9yRWFjaCgoY2hhcHRlciwgaW5kZXgpID0+IHtcbiAgICAgICAgY29uc3QgcGFnZXMgPSBncm91cE5vZGVzQnlQYWdlKGNoYXB0ZXIubWFya2Rvd24uc3BsaXQoJ1xcblxcbicpLCBub2RlSGVpZ2h0c09mQ2hhcHRlcnNbaW5kZXhdLm5vZGVIZWlnaHRzLCBwYWdlSGVpZ2h0LCBwYWdlU3RhcnRGcm9tLCBjaGFwdGVyLmlkKTtcbiAgICAgICAgYWxsUGFnZXMgPSBhbGxQYWdlcy5jb25jYXQocGFnZXMpO1xuICAgICAgICBwYWdlU3RhcnRGcm9tID0gcGFnZVN0YXJ0RnJvbSArIHBhZ2VzLmxlbmd0aDtcbiAgICB9KTtcbiAgICBjb25zdCB0MSA9IG5ldyBEYXRlKCkudmFsdWVPZigpO1xuICAgIGhlbHBlcnMucHJpbnQoYEdyb3VwaW5nIG5vZGVzIHRha2VzICR7dDEgLSB0MH1tc2ApO1xuICAgIHJldHVybiBhbGxQYWdlcztcbn1cbmV4cG9ydCBmdW5jdGlvbiByZXNvbHZlQm9va0xvY2F0aW9uKGhyZWYsIGNvbXB1dGVkUGFnZXMpIHtcbiAgICBjb25zdCBjaGFwdGVySWQgPSBocmVmLnNwbGl0KCckJylbMF07XG4gICAgY29uc3QgaGFzaCA9IGhyZWYuc3BsaXQoJyQnKVsxXTtcbiAgICBsZXQgaSA9IDA7XG4gICAgbGV0IGZvdW5kQ2hhcHRlclBhZ2U7XG4gICAgd2hpbGUgKGkgPCBjb21wdXRlZFBhZ2VzLmxlbmd0aCkge1xuICAgICAgICBjb25zdCBwYWdlID0gY29tcHV0ZWRQYWdlc1tpXTtcbiAgICAgICAgaWYgKGAjJHtwYWdlLm1ldGEuY2hhcHRlcklkfWAgPT09IGNoYXB0ZXJJZCkge1xuICAgICAgICAgICAgZm91bmRDaGFwdGVyUGFnZSA9IHBhZ2UubWV0YS5wYWdlTm87XG4gICAgICAgICAgICBpZiAoaGFzaCkge1xuICAgICAgICAgICAgICAgIGlmIChwYWdlLm1ldGEuaGFzaCAmJiBwYWdlLm1ldGEuaGFzaC5pbmRleE9mKGhhc2gpICE9PSAtMSkge1xuICAgICAgICAgICAgICAgICAgICBoZWxwZXJzLnByaW50KCd3aXRoIGhhc2gnLCBwYWdlLm1ldGEucGFnZU5vKTtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIHBhZ2UubWV0YS5wYWdlTm87XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICAgICAgaGVscGVycy5wcmludCgnd2l0aG91dCBoYXNoJywgcGFnZS5tZXRhLnBhZ2VObyk7XG4gICAgICAgICAgICAgICAgcmV0dXJuIHBhZ2UubWV0YS5wYWdlTm87XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgICAgaSsrO1xuICAgIH1cbiAgICBpZiAoIWZvdW5kQ2hhcHRlclBhZ2UpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfmnKrmib7liLDkvY3nva7vvIEnKTtcbiAgICB9XG4gICAgY29uc29sZS53YXJuKCfmiYDlnKjnq6DoioLmnKrmib7liLDkvY3nva7vvIzlt7Lot7Povazoh7Pnq6DoioLvvIEnKTtcbiAgICBoZWxwZXJzLnByaW50KCdmb3VuZENoYXB0ZXJQYWdlJywgZm91bmRDaGFwdGVyUGFnZSk7XG4gICAgcmV0dXJuIGZvdW5kQ2hhcHRlclBhZ2U7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9WaWV3ZXIvVmlld2VyLnV0aWxzLnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL1Rlc3RQbGFjZScpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvVGVzdFBsYWNlL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL0FwcEhvbWUnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL0FwcEhvbWUvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vQnJvd3NlJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9Ccm93c2UvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vQm9va0RldGFpbCcpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQm9va0RldGFpbC9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9Db2xsZWN0aW9ucycpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQ29sbGVjdGlvbnMvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vQ29sbGVjdGlvbkRldGFpbCcpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQ29sbGVjdGlvbkRldGFpbC9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9TaWduaW4nKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1NpZ25pbi9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9TaWdudXAnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL1NpZ251cC9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9TaGVsZicpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvU2hlbGYvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vUHJlZmVyZW5jZScpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvUHJlZmVyZW5jZS9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9Qcm9maWxlJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9Qcm9maWxlL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL01hbmFnZUJvb2tzJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9NYW5hZ2VCb29rcy9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9NYW5hZ2VVc2VycycpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvTWFuYWdlVXNlcnMvaW5kZXgudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHtcbiAgICBnZXRDb21wb25lbnQobmV4dFN0YXRlLCBmbikge1xuICAgICAgICByZXF1aXJlLmVuc3VyZShbXSwgZnVuY3Rpb24gKHJlcXVpcmUpIHtcbiAgICAgICAgICAgIGZuKG51bGwsIHJlcXVpcmUoJy4vQWRkQm9vaycpLmRlZmF1bHQpO1xuICAgICAgICB9KTtcbiAgICB9XG59O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9yb3V0ZXMvQWRkQm9vay9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0ge1xuICAgIGdldENvbXBvbmVudChuZXh0U3RhdGUsIGZuKSB7XG4gICAgICAgIHJlcXVpcmUuZW5zdXJlKFtdLCBmdW5jdGlvbiAocmVxdWlyZSkge1xuICAgICAgICAgICAgZm4obnVsbCwgcmVxdWlyZSgnLi9BZGRDb2xsZWN0aW9uJykuZGVmYXVsdCk7XG4gICAgICAgIH0pO1xuICAgIH1cbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3JvdXRlcy9BZGRDb2xsZWN0aW9uL2luZGV4LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSB7XG4gICAgZ2V0Q29tcG9uZW50KG5leHRTdGF0ZSwgZm4pIHtcbiAgICAgICAgcmVxdWlyZS5lbnN1cmUoW10sIGZ1bmN0aW9uIChyZXF1aXJlKSB7XG4gICAgICAgICAgICBmbihudWxsLCByZXF1aXJlKCcuL05vTWF0Y2gnKS5kZWZhdWx0KTtcbiAgICAgICAgfSk7XG4gICAgfVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvcm91dGVzL05vTWF0Y2gvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgQXBwRXJyb3IgZnJvbSAnLi9BcHBFcnJvcic7XG5leHBvcnQgZGVmYXVsdCBBcHBFcnJvcjtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9BcHBFcnJvci9pbmRleC50c1xuICoqLyIsInZhciBfX2RlY29yYXRlID0gKHRoaXMgJiYgdGhpcy5fX2RlY29yYXRlKSB8fCBmdW5jdGlvbiAoZGVjb3JhdG9ycywgdGFyZ2V0LCBrZXksIGRlc2MpIHtcbiAgICB2YXIgYyA9IGFyZ3VtZW50cy5sZW5ndGgsIHIgPSBjIDwgMyA/IHRhcmdldCA6IGRlc2MgPT09IG51bGwgPyBkZXNjID0gT2JqZWN0LmdldE93blByb3BlcnR5RGVzY3JpcHRvcih0YXJnZXQsIGtleSkgOiBkZXNjLCBkO1xuICAgIGlmICh0eXBlb2YgUmVmbGVjdCA9PT0gXCJvYmplY3RcIiAmJiB0eXBlb2YgUmVmbGVjdC5kZWNvcmF0ZSA9PT0gXCJmdW5jdGlvblwiKSByID0gUmVmbGVjdC5kZWNvcmF0ZShkZWNvcmF0b3JzLCB0YXJnZXQsIGtleSwgZGVzYyk7XG4gICAgZWxzZSBmb3IgKHZhciBpID0gZGVjb3JhdG9ycy5sZW5ndGggLSAxOyBpID49IDA7IGktLSkgaWYgKGQgPSBkZWNvcmF0b3JzW2ldKSByID0gKGMgPCAzID8gZChyKSA6IGMgPiAzID8gZCh0YXJnZXQsIGtleSwgcikgOiBkKHRhcmdldCwga2V5KSkgfHwgcjtcbiAgICByZXR1cm4gYyA+IDMgJiYgciAmJiBPYmplY3QuZGVmaW5lUHJvcGVydHkodGFyZ2V0LCBrZXksIHIpLCByO1xufTtcbmltcG9ydCBSZWFjdCwgeyBDb21wb25lbnQgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgQ1NTTW9kdWxlcyBmcm9tICdyZWFjdC1jc3MtbW9kdWxlcyc7XG5pbXBvcnQgTG9nbyBmcm9tICcuLi8uLi9jb21wb25lbnRzL0xvZ28nO1xuY29uc3Qgc3R5bGVzID0gcmVxdWlyZSgnLi9BcHBFcnJvci5zY3NzJyk7XG5sZXQgQXBwRXJyb3IgPSBjbGFzcyBBcHBFcnJvciBleHRlbmRzIENvbXBvbmVudCB7XG4gICAgcmVuZGVyKCkge1xuICAgICAgICBjb25zdCB7IHRpdGxlLCBtZXNzYWdlIH0gPSB0aGlzLnByb3BzO1xuICAgICAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgbnVsbCxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJkaXZcIiwgeyBzdHlsZU5hbWU6IFwiaGVhZGVyXCIgfSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KExvZ28sIHsgZGFyazogdHJ1ZSB9KSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgc3R5bGVOYW1lOiBcImJvZHlcIiB9LFxuICAgICAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoMVwiLCB7IHN0eWxlTmFtZTogXCJ0aXRsZVwiIH0sIHRpdGxlKSxcbiAgICAgICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIG51bGwsIG1lc3NhZ2UpKSkpO1xuICAgIH1cbn07XG5BcHBFcnJvciA9IF9fZGVjb3JhdGUoW1xuICAgIENTU01vZHVsZXMoc3R5bGVzKVxuXSwgQXBwRXJyb3IpO1xuZXhwb3J0IGRlZmF1bHQgQXBwRXJyb3I7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3IvQXBwRXJyb3IudHN4XG4gKiovIiwiXG4gICAgdmFyIGNvbnRlbnQgPSByZXF1aXJlKFwiISEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9jc3MtbG9hZGVyL2luZGV4LmpzP3NvdXJjZU1hcD1mYWxzZSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT1bbG9jYWxdX1toYXNoOmJhc2U2NDo1XSEuLy4uLy4uLy4uLy4uL25vZGVfbW9kdWxlcy9zYXNzLWxvYWRlci9pbmRleC5qcz9zb3VyY2VNYXA9ZmFsc2UhLi9BcHBFcnJvci5zY3NzXCIpO1xuICAgIHZhciBpbnNlcnRDc3MgPSByZXF1aXJlKFwiIS4vLi4vLi4vLi4vLi4vbm9kZV9tb2R1bGVzL2lzb21vcnBoaWMtc3R5bGUtbG9hZGVyL2xpYi9pbnNlcnRDc3MuanNcIik7XG5cbiAgICBpZiAodHlwZW9mIGNvbnRlbnQgPT09ICdzdHJpbmcnKSB7XG4gICAgICBjb250ZW50ID0gW1ttb2R1bGUuaWQsIGNvbnRlbnQsICcnXV07XG4gICAgfVxuXG4gICAgbW9kdWxlLmV4cG9ydHMgPSBjb250ZW50LmxvY2FscyB8fCB7fTtcbiAgICBtb2R1bGUuZXhwb3J0cy5fZ2V0Q3NzID0gZnVuY3Rpb24oKSB7IHJldHVybiBjb250ZW50LnRvU3RyaW5nKCk7IH07XG4gICAgbW9kdWxlLmV4cG9ydHMuX2luc2VydENzcyA9IGZ1bmN0aW9uKG9wdGlvbnMpIHsgcmV0dXJuIGluc2VydENzcyhjb250ZW50LCBvcHRpb25zKSB9O1xuICBcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIC4vc3JjL2lzb21vcnBoaWMvY29tcG9uZW50cy9BcHBFcnJvci9BcHBFcnJvci5zY3NzXG4gKiogbW9kdWxlIGlkID0gMzU3XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJleHBvcnRzID0gbW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiLi8uLi8uLi8uLi8uLi9ub2RlX21vZHVsZXMvY3NzLWxvYWRlci9saWIvY3NzLWJhc2UuanNcIikoKTtcbi8vIGltcG9ydHNcblxuXG4vLyBtb2R1bGVcbmV4cG9ydHMucHVzaChbbW9kdWxlLmlkLCBcIi5oZWFkZXJfM2pBdVEge1xcbiAgdGV4dC1hbGlnbjogY2VudGVyOyB9XFxuXFxuLnRpdGxlXzE3RlM1IHtcXG4gIGZvbnQtc2l6ZTogMS42cmVtO1xcbiAgY29sb3I6ICMyMjI7IH1cXG5cXG4uYm9keV8zdi1oaiB7XFxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XFxuICB3aWR0aDogNTAwcHg7XFxuICBtYXJnaW46IDAgYXV0bztcXG4gIHBhZGRpbmc6IDE1MHB4IDA7XFxuICBmb250LXNpemU6IDEuMXJlbTsgfVxcblwiLCBcIlwiXSk7XG5cbi8vIGV4cG9ydHNcbmV4cG9ydHMubG9jYWxzID0ge1xuXHRcImhlYWRlclwiOiBcImhlYWRlcl8zakF1UVwiLFxuXHRcInRpdGxlXCI6IFwidGl0bGVfMTdGUzVcIixcblx0XCJib2R5XCI6IFwiYm9keV8zdi1oalwiXG59O1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogLi9+L2Nzcy1sb2FkZXI/c291cmNlTWFwPWZhbHNlJm1vZHVsZXMmaW1wb3J0TG9hZGVycz0xJmxvY2FsSWRlbnROYW1lPVtsb2NhbF1fW2hhc2g6YmFzZTY0OjVdIS4vfi9zYXNzLWxvYWRlcj9zb3VyY2VNYXA9ZmFsc2UhLi9zcmMvaXNvbW9ycGhpYy9jb21wb25lbnRzL0FwcEVycm9yL0FwcEVycm9yLnNjc3NcbiAqKiBtb2R1bGUgaWQgPSAzNThcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBnZXRTdG9yZSBmcm9tICcuL2dldC1zdG9yZSc7XG5pbXBvcnQgbWF0Y2hSb3V0ZSBmcm9tICcuL21hdGNoLXJvdXRlJztcbmltcG9ydCByZW5kZXJIdG1sIGZyb20gJy4vcmVuZGVyLWh0bWwnO1xuaW1wb3J0IHJlbmRlcjUwMCBmcm9tICcuL3JlbmRlcjUwMCc7XG5leHBvcnQgeyBnZXRTdG9yZSwgbWF0Y2hSb3V0ZSwgcmVuZGVySHRtbCwgcmVuZGVyNTAwIH07XG5leHBvcnQgZGVmYXVsdCByZW5kZXJIdG1sO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JlbmRlci9pbmRleC50c1xuICoqLyIsImltcG9ydCByb290U2FnYSBmcm9tICcuLi8uLi9pc29tb3JwaGljL3N0b3JlL3NhZ2FzJztcbi8qKlxuICogR2V0IFJlZHV4IHN0b3JlIHRyZWUgd2l0aCBpbml0aWFsIGZldGNoZWQgZGF0YVxuICovXG5mdW5jdGlvbiBnZXRTdG9yZShyZW5kZXJQcm9wcywgZmV0Y2hEYXRhLCB1c2VyU2Vzc2lvbiwgc3RvcmUpIHtcbiAgICBpZiAoZmV0Y2hEYXRhID09PSB0cnVlKSB7XG4gICAgICAgIGNvbnN0IHBhcmFtcyA9IHJlbmRlclByb3BzLnBhcmFtcztcbiAgICAgICAgY29uc3QgcXVlcnkgPSByZW5kZXJQcm9wcy5sb2NhdGlvbi5xdWVyeTtcbiAgICAgICAgY29uc3QgZmV0Y2hEYXRhRm5zID0gcmVuZGVyUHJvcHMuY29tcG9uZW50c1xuICAgICAgICAgICAgLm1hcChjb21wID0+IHtcbiAgICAgICAgICAgIHJldHVybiBjb21wLmZldGNoRGF0YSB8fCBudWxsO1xuICAgICAgICB9KVxuICAgICAgICAgICAgLmZpbHRlcihjb21wID0+IEJvb2xlYW4oY29tcCkpO1xuICAgICAgICBzdG9yZS5ydW5TYWdhKHJvb3RTYWdhKTtcbiAgICAgICAgaWYgKGZldGNoRGF0YUZucy5sZW5ndGggIT09IDApIHtcbiAgICAgICAgICAgIHJldHVybiBQcm9taXNlLmFsbChmZXRjaERhdGFGbnMubWFwKGZldGNoRGF0YUZuID0+IHtcbiAgICAgICAgICAgICAgICAvLyDov5novrnlupTor6XmmK/lr7kgc3RvcmUg5YGa5LqGIG11dGF0aW9uXG4gICAgICAgICAgICAgICAgY29uc3QgcmVzdWx0ID0gZmV0Y2hEYXRhRm4oeyBzdG9yZSwgcGFyYW1zLCBxdWVyeSwgdXNlclNlc3Npb24gfSk7XG4gICAgICAgICAgICAgICAgLy8gdG9kbzog6YGH5Yiw6K+35rGC5pWw57uE5Lya5oql6ZSZXG4gICAgICAgICAgICAgICAgaWYgKEFycmF5LmlzQXJyYXkocmVzdWx0KSkge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5hbGwocmVzdWx0KS50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIHJldHVybiAwO1xuICAgICAgICAgICAgICAgICAgICB9LCBlcnJvciA9PiBlcnJvcik7XG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIC8vIHRvZG9cbiAgICAgICAgICAgICAgICAvLyDnu5PmnpzkuI3mmK8gUHJvbWlzZSwgc2FnYSDnmoQgYWN0aW9uIOaaguaXtui/meS5iOWkhOeQhlxuICAgICAgICAgICAgICAgIGlmICghcmVzdWx0IHx8ICFyZXN1bHQudGhlbikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gMDtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIHJlc3VsdC50aGVuKCgpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgcmV0dXJuIDA7XG4gICAgICAgICAgICAgICAgfSwgZXJyb3IgPT4gZXJyb3IpO1xuICAgICAgICAgICAgfSkpLnRoZW4oKCkgPT4ge1xuICAgICAgICAgICAgICAgIHJldHVybiBzdG9yZTtcbiAgICAgICAgICAgIH0sIGVycm9yID0+IGVycm9yKTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHN0b3JlKTtcbiAgICB9XG4gICAgcmV0dXJuIFByb21pc2UucmVzb2x2ZShzdG9yZSk7XG59XG5leHBvcnQgZGVmYXVsdCBnZXRTdG9yZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9yZW5kZXIvZ2V0LXN0b3JlLnRzXG4gKiovIiwiaW1wb3J0IHsgZm9yayB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5pbXBvcnQgd2F0Y2hBbGxMb2FkUmVxdWVzdHMgZnJvbSAnLi9sb2FkUmVxdWVzdHMnO1xuaW1wb3J0IHdhdGNoTG9naW5GbG93IGZyb20gJy4vbG9naW5GbG93JztcbmltcG9ydCB3YXRjaFZpZXdlciBmcm9tICcuL3ZpZXdlclRhc2tzJztcbmltcG9ydCB3YXRjaFRlc3QsIHsgd2F0Y2hUZXN0MiB9IGZyb20gJy4vdGVzdCc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogcm9vdFNhZ2EoKSB7XG4gICAgeWllbGQgW1xuICAgICAgICBmb3JrKHdhdGNoQWxsTG9hZFJlcXVlc3RzKSxcbiAgICAgICAgZm9yayh3YXRjaExvZ2luRmxvdyksXG4gICAgICAgIGZvcmsod2F0Y2hWaWV3ZXIpLFxuICAgICAgICBmb3JrKHdhdGNoVGVzdDIpLFxuICAgICAgICBmb3JrKHdhdGNoVGVzdClcbiAgICBdO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zYWdhcy9pbmRleC50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZHV4LXNhZ2EvZWZmZWN0c1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVkdXgtc2FnYS9lZmZlY3RzXCJcbiAqKiBtb2R1bGUgaWQgPSAzNjJcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB7IHRha2UsIGNhbGwsIGZvcmsgfSBmcm9tICdyZWR1eC1zYWdhL2VmZmVjdHMnO1xuaW1wb3J0ICogYXMgYWN0aW9ucyBmcm9tICcuLi9hY3Rpb25zJztcbmltcG9ydCBhcGkgZnJvbSAnLi4vLi4vc2VydmljZXMvYXBpJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgeyBmZXRjaEVudGl0eSB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0ICogYXMgQUNUSU9OX1RZUEVTIGZyb20gJy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5jb25zdCBPUFRJT05TID0gJ29wdGlvbnMnO1xuY29uc3QgSUQgPSAnaWQnO1xuY29uc3QgREFUQSA9ICdkYXRhJztcbmNvbnN0IFRZUEUgPSAndHlwZSc7XG5leHBvcnQgY29uc3QgQVBJX0NPTkZJR19LRVlTID0gW09QVElPTlMsIElELCBEQVRBXTtcbmV4cG9ydCBjb25zdCBSRVNFUlZFRF9BQ1RJT05fS1lFUyA9IFtUWVBFLCAuLi5BUElfQ09ORklHX0tFWVNdO1xuY29uc3QgZmV0Y2hCb29rID0gZmV0Y2hFbnRpdHkuYmluZChudWxsLCBhY3Rpb25zLmJvb2ssIGFwaS5mZXRjaEJvb2spO1xuY29uc3QgZmV0Y2hCb29rQ29udGVudCA9IGZldGNoRW50aXR5LmJpbmQobnVsbCwgYWN0aW9ucy5ib29rQ29udGVudCwgYXBpLmZldGNoQm9va0NvbnRlbnQpO1xuY29uc3QgZmV0Y2hCb29rcyA9IGZldGNoRW50aXR5LmJpbmQobnVsbCwgYWN0aW9ucy5ib29rcywgYXBpLmZldGNoQm9va3MpO1xuY29uc3QgZmV0Y2hVc2VycyA9IGZldGNoRW50aXR5LmJpbmQobnVsbCwgYWN0aW9ucy51c2VycywgYXBpLmZldGNoVXNlcnMpO1xuZnVuY3Rpb24qIGhhbmRsZUxvYWQoZmV0Y2hGbiwgcGFyc2VkQWN0aW9uLCBjYWxsQXBpKSB7XG4gICAgY29uc3QgeyBhcGlDb25maWcsIHBheWxvYWQgfSA9IHBhcnNlZEFjdGlvbjtcbiAgICAvLyDlnKjmo4Dmn6XmmK/lkKbmnInmlbDmja7nmoTnrpfms5XlrozmiJDkuYvliY3pu5jorqTnm7TmjqUgY2FsbCBhcGlcbiAgICBpZiAodHlwZW9mIGNhbGxBcGkgPT09ICd1bmRlZmluZWQnIHx8IGNhbGxBcGkgPT09IHRydWUpIHtcbiAgICAgICAgeWllbGQgY2FsbChmZXRjaEZuLCBhcGlDb25maWcsIHBheWxvYWQpO1xuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKiB3YXRjaEFsbExvYWRSZXF1ZXN0cygpIHtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBjb25zdCBhY3Rpb24gPSB5aWVsZCB0YWtlKGFjdGlvbnMuTE9BRF9BQ1RJT05TKTtcbiAgICAgICAgY29uc3QgYXBpQ29uZmlnID0gXy5waWNrKGFjdGlvbiwgQVBJX0NPTkZJR19LRVlTKTtcbiAgICAgICAgLy8g5aaC5p6c55u05o6l5L2/55SoIHBheWxvYWQg5Y+v6IO95ZyoIHBhZ2luYXRpb24g5LmL57G755qEIHJlZHVjZXIg6YeM6Z2i5Lya5pyJ5LiA5Lqb6bq754OmXG4gICAgICAgIC8vIOWboOS4uuWPr+iDveavlOi+g+mavuWIpOaWreWTquS4quaYryBrZXlcbiAgICAgICAgY29uc3QgcGF5bG9hZCA9IF8ub21pdChhY3Rpb24sIFJFU0VSVkVEX0FDVElPTl9LWUVTKTtcbiAgICAgICAgY29uc3QgcGFyc2VkQWN0aW9uID0geyBhcGlDb25maWcsIHBheWxvYWQgfTtcbiAgICAgICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICAgICAgY2FzZSBBQ1RJT05fVFlQRVMuTE9BRF9VU0VSUzpcbiAgICAgICAgICAgICAgICB5aWVsZCBmb3JrKGhhbmRsZUxvYWQsIGZldGNoVXNlcnMsIHBhcnNlZEFjdGlvbik7XG4gICAgICAgICAgICAgICAgYnJlYWs7XG4gICAgICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5MT0FEX0JPT0tTOlxuICAgICAgICAgICAgICAgIHlpZWxkIGZvcmsoaGFuZGxlTG9hZCwgZmV0Y2hCb29rcywgcGFyc2VkQWN0aW9uKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLkxPQURfQk9PSzpcbiAgICAgICAgICAgICAgICB5aWVsZCBmb3JrKGhhbmRsZUxvYWQsIGZldGNoQm9vaywgcGFyc2VkQWN0aW9uKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLkxPQURfQk9PS19DT05URU5UOlxuICAgICAgICAgICAgICAgIHlpZWxkIGZvcmsoaGFuZGxlTG9hZCwgZmV0Y2hCb29rQ29udGVudCwgcGFyc2VkQWN0aW9uKTtcbiAgICAgICAgICAgICAgICBicmVhaztcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgIH1cbiAgICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3NhZ2FzL2xvYWRSZXF1ZXN0cy50c1xuICoqLyIsImltcG9ydCAqIGFzIGNhY2hlIGZyb20gJy4uLy4uL2RhdGEvY2FjaGUnO1xuaW1wb3J0IHsgcHV0LCBjYWxsIH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgYXBwQ29uZmlnIGZyb20gJy4uLy4uLy4uL2FwcC5jb25maWcnO1xuY29uc3QgT1BUSU9OUyA9ICdvcHRpb25zJztcbmNvbnN0IElEID0gJ2lkJztcbmNvbnN0IERBVEEgPSAnZGF0YSc7XG5jb25zdCBUWVBFID0gJ3R5cGUnO1xuZXhwb3J0IGNvbnN0IEFQSV9DT05GSUdfS0VZUyA9IFtPUFRJT05TLCBJRCwgREFUQV07XG5leHBvcnQgY29uc3QgUkVTRVJWRURfQUNUSU9OX0tZRVMgPSBbVFlQRSwgLi4uQVBJX0NPTkZJR19LRVlTXTtcbi8vIFRPRE9cbi8vIOS8vOS5jumcgOimgeS8mOWMlu+8jOe8k+WtmOeahOmAu+i+keWSjOiOt+WPlueahOiApuWQiOWkqua3seS6hlxuZXhwb3J0IGZ1bmN0aW9uKiBmZXRjaEVudGl0eShlbnRpdHksIGFwaUZuLCBhcGlDb25maWcsIHBheWxvYWQpIHtcbiAgICBjb25zdCBmdWxsUGF5bG9hZCA9IF8uYXNzaWduKHt9LCBhcGlDb25maWcsIHBheWxvYWQpO1xuICAgIGNvbnN0IGlkID0gYXBpQ29uZmlnW0lEXTtcbiAgICBjb25zdCBvcHRpb25zID0gYXBpQ29uZmlnW09QVElPTlNdO1xuICAgIGNvbnN0IGFwaUFyZ3MgPSBbaWQsIG9wdGlvbnNdLmZpbHRlcihhcmcgPT4gIV8uaXNVbmRlZmluZWQoYXJnKSk7XG4gICAgbGV0IGhhc0NhY2hlO1xuICAgIGxldCBjYWNoZUlkO1xuICAgIGlmIChpZCAmJiBhcHBDb25maWcuZW5hYmxlRW50aXR5Q2FjaGUpIHtcbiAgICAgICAgY2FjaGVJZCA9IGNhY2hlLmNyZWF0ZUNhY2hlSWQoYXBpRm4gKyBpZCArIG9wdGlvbnMpO1xuICAgICAgICBsZXQgY2FjaGVDb250ZW50ID0gY2FjaGUuZ2V0Q2FjaGUoY2FjaGVJZCk7XG4gICAgICAgIGhhc0NhY2hlID0gQm9vbGVhbihjYWNoZUNvbnRlbnQpO1xuICAgICAgICBpZiAoaGFzQ2FjaGUpIHtcbiAgICAgICAgICAgIGxldCBhY3Rpb24gPSBlbnRpdHkubG9hZENhY2hlKGNhY2hlQ29udGVudCwgZnVsbFBheWxvYWQpO1xuICAgICAgICAgICAgeWllbGQgcHV0KGVudGl0eS5yZXF1ZXN0KGZ1bGxQYXlsb2FkKSk7XG4gICAgICAgICAgICB5aWVsZCBwdXQoYWN0aW9uKTtcbiAgICAgICAgICAgIHJldHVybiBhY3Rpb247XG4gICAgICAgIH1cbiAgICB9XG4gICAgeWllbGQgcHV0KGVudGl0eS5yZXF1ZXN0KGZ1bGxQYXlsb2FkKSk7XG4gICAgY29uc3QgeyByZXNwb25zZSwgZXJyb3IgfSA9IHlpZWxkIGNhbGwoYXBpRm4sIC4uLmFwaUFyZ3MpO1xuICAgIGlmIChyZXNwb25zZSkge1xuICAgICAgICAvLyDlpoLmnpzmmK8gdW5kZWZpbmVkIOS5n+S4jeS8muacieS7u+S9leWkhOeQhlxuICAgICAgICBpZiAoaGFzQ2FjaGUgPT09IGZhbHNlKSB7XG4gICAgICAgICAgICBjYWNoZS5zZXRDYWNoZShjYWNoZUlkLCByZXNwb25zZSk7XG4gICAgICAgIH1cbiAgICAgICAgbGV0IGFjdGlvbiA9IGVudGl0eS5zdWNjZXNzKHJlc3BvbnNlLCBmdWxsUGF5bG9hZCk7XG4gICAgICAgIHlpZWxkIHB1dChhY3Rpb24pO1xuICAgICAgICByZXR1cm4gYWN0aW9uO1xuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgbGV0IGFjdGlvbiA9IGVudGl0eS5mYWlsdXJlKGVycm9yLCBmdWxsUGF5bG9hZCk7XG4gICAgICAgIHlpZWxkIHB1dChhY3Rpb24pO1xuICAgICAgICByZXR1cm4gYWN0aW9uO1xuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvdXRpbHMudHNcbiAqKi8iLCJpbXBvcnQgbWQ1IGZyb20gJy4uLy4uL3ZlbmRvcl9tb2R1bGVzL21kNSc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuZXhwb3J0IGZ1bmN0aW9uIGNyZWF0ZUNhY2hlSWQoaWRlbnRpZmllcikge1xuICAgIGlmIChfLmlzRW1wdHkoaWRlbnRpZmllcikpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCfnvJPlrZjmoIfor4bnrKbkuI3og73kuLrnqbrvvIEnKTtcbiAgICB9XG4gICAgcmV0dXJuIG1kNShpZGVudGlmaWVyLnRvU3RyaW5nKCkpO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGdldENhY2hlKGtleSkge1xuICAgIGlmICh0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ05hbWUgc2hvdWxkIGJlIHN0cmluZyEnKTtcbiAgICB9XG4gICAgbGV0IGNvbnRlbnQgPSBsb2NhbFN0b3JhZ2UuZ2V0SXRlbShrZXkpO1xuICAgIGlmICghY29udGVudCkge1xuICAgICAgICByZXR1cm4gdW5kZWZpbmVkO1xuICAgIH1cbiAgICB0cnkge1xuICAgICAgICBjb250ZW50ID0gSlNPTi5wYXJzZShjb250ZW50KTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHRocm93IGVycm9yO1xuICAgIH1cbiAgICByZXR1cm4gY29udGVudDtcbn1cbmV4cG9ydCBmdW5jdGlvbiBzZXRDYWNoZShrZXksIGNvbnRlbnQpIHtcbiAgICBpZiAodHlwZW9mIGtleSAhPT0gJ3N0cmluZycpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdOYW1lIHNob3VsZCBiZSBzdHJpbmchJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgY29udGVudCAhPT0gJ29iamVjdCcpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdDYWNoZSBjb250ZW50IHR5cGUgc2hvdWxkIGJlIG9iamVjdCEnKTtcbiAgICB9XG4gICAgY29uc3Qgc2F2ZSA9ICgpID0+IHtcbiAgICAgICAgbG9jYWxTdG9yYWdlLnNldEl0ZW0oa2V5LCBKU09OLnN0cmluZ2lmeShjb250ZW50KSk7XG4gICAgfTtcbiAgICB0cnkge1xuICAgICAgICBzYXZlKCk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICBpZiAoZXJyb3IubmFtZSA9PT0gJ1F1b3RhRXhjZWVkZWRFcnJvcicpIHtcbiAgICAgICAgICAgIC8vIFRPRE86IOiDveWQpuWPqua4hemZpOacgOaXp+eahFxuICAgICAgICAgICAgY29uc29sZS53YXJuKCfmnKzlnLDnvJPlrZjlt7Lmu6HvvIzml6fnmoTnvJPlrZjlsIbooqvmuIXpmaTvvIEnKTtcbiAgICAgICAgICAgIGxvY2FsU3RvcmFnZS5jbGVhcigpO1xuICAgICAgICAgICAgc2F2ZSgpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgcmV0dXJuIHRydWU7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL2RhdGEvY2FjaGUudHNcbiAqKi8iLCJjb25zdCBtZDUgPSByZXF1aXJlKCcuL21kNS5qcycpO1xuZXhwb3J0IGRlZmF1bHQgbWQ1O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvdmVuZG9yX21vZHVsZXMvbWQ1L2luZGV4LnRzXG4gKiovIiwiLypcbiAqIEphdmFTY3JpcHQgTUQ1XG4gKiBodHRwczovL2dpdGh1Yi5jb20vYmx1ZWltcC9KYXZhU2NyaXB0LU1ENVxuICpcbiAqIENvcHlyaWdodCAyMDExLCBTZWJhc3RpYW4gVHNjaGFuXG4gKiBodHRwczovL2JsdWVpbXAubmV0XG4gKlxuICogTGljZW5zZWQgdW5kZXIgdGhlIE1JVCBsaWNlbnNlOlxuICogaHR0cDovL3d3dy5vcGVuc291cmNlLm9yZy9saWNlbnNlcy9NSVRcbiAqXG4gKiBCYXNlZCBvblxuICogQSBKYXZhU2NyaXB0IGltcGxlbWVudGF0aW9uIG9mIHRoZSBSU0EgRGF0YSBTZWN1cml0eSwgSW5jLiBNRDUgTWVzc2FnZVxuICogRGlnZXN0IEFsZ29yaXRobSwgYXMgZGVmaW5lZCBpbiBSRkMgMTMyMS5cbiAqIFZlcnNpb24gMi4yIENvcHlyaWdodCAoQykgUGF1bCBKb2huc3RvbiAxOTk5IC0gMjAwOVxuICogT3RoZXIgY29udHJpYnV0b3JzOiBHcmVnIEhvbHQsIEFuZHJldyBLZXBlcnQsIFlkbmFyLCBMb3N0aW5ldFxuICogRGlzdHJpYnV0ZWQgdW5kZXIgdGhlIEJTRCBMaWNlbnNlXG4gKiBTZWUgaHR0cDovL3BhamhvbWUub3JnLnVrL2NyeXB0L21kNSBmb3IgbW9yZSBpbmZvLlxuICovXG5cbi8qZ2xvYmFsIHVuZXNjYXBlLCBkZWZpbmUsIG1vZHVsZSAqL1xuXG47KGZ1bmN0aW9uICgkKSB7XG4gICd1c2Ugc3RyaWN0J1xuXG4gIC8qXG4gICogQWRkIGludGVnZXJzLCB3cmFwcGluZyBhdCAyXjMyLiBUaGlzIHVzZXMgMTYtYml0IG9wZXJhdGlvbnMgaW50ZXJuYWxseVxuICAqIHRvIHdvcmsgYXJvdW5kIGJ1Z3MgaW4gc29tZSBKUyBpbnRlcnByZXRlcnMuXG4gICovXG4gIGZ1bmN0aW9uIHNhZmVfYWRkICh4LCB5KSB7XG4gICAgdmFyIGxzdyA9ICh4ICYgMHhGRkZGKSArICh5ICYgMHhGRkZGKVxuICAgIHZhciBtc3cgPSAoeCA+PiAxNikgKyAoeSA+PiAxNikgKyAobHN3ID4+IDE2KVxuICAgIHJldHVybiAobXN3IDw8IDE2KSB8IChsc3cgJiAweEZGRkYpXG4gIH1cblxuICAvKlxuICAqIEJpdHdpc2Ugcm90YXRlIGEgMzItYml0IG51bWJlciB0byB0aGUgbGVmdC5cbiAgKi9cbiAgZnVuY3Rpb24gYml0X3JvbCAobnVtLCBjbnQpIHtcbiAgICByZXR1cm4gKG51bSA8PCBjbnQpIHwgKG51bSA+Pj4gKDMyIC0gY250KSlcbiAgfVxuXG4gIC8qXG4gICogVGhlc2UgZnVuY3Rpb25zIGltcGxlbWVudCB0aGUgZm91ciBiYXNpYyBvcGVyYXRpb25zIHRoZSBhbGdvcml0aG0gdXNlcy5cbiAgKi9cbiAgZnVuY3Rpb24gbWQ1X2NtbiAocSwgYSwgYiwgeCwgcywgdCkge1xuICAgIHJldHVybiBzYWZlX2FkZChiaXRfcm9sKHNhZmVfYWRkKHNhZmVfYWRkKGEsIHEpLCBzYWZlX2FkZCh4LCB0KSksIHMpLCBiKVxuICB9XG4gIGZ1bmN0aW9uIG1kNV9mZiAoYSwgYiwgYywgZCwgeCwgcywgdCkge1xuICAgIHJldHVybiBtZDVfY21uKChiICYgYykgfCAoKH5iKSAmIGQpLCBhLCBiLCB4LCBzLCB0KVxuICB9XG4gIGZ1bmN0aW9uIG1kNV9nZyAoYSwgYiwgYywgZCwgeCwgcywgdCkge1xuICAgIHJldHVybiBtZDVfY21uKChiICYgZCkgfCAoYyAmICh+ZCkpLCBhLCBiLCB4LCBzLCB0KVxuICB9XG4gIGZ1bmN0aW9uIG1kNV9oaCAoYSwgYiwgYywgZCwgeCwgcywgdCkge1xuICAgIHJldHVybiBtZDVfY21uKGIgXiBjIF4gZCwgYSwgYiwgeCwgcywgdClcbiAgfVxuICBmdW5jdGlvbiBtZDVfaWkgKGEsIGIsIGMsIGQsIHgsIHMsIHQpIHtcbiAgICByZXR1cm4gbWQ1X2NtbihjIF4gKGIgfCAofmQpKSwgYSwgYiwgeCwgcywgdClcbiAgfVxuXG4gIC8qXG4gICogQ2FsY3VsYXRlIHRoZSBNRDUgb2YgYW4gYXJyYXkgb2YgbGl0dGxlLWVuZGlhbiB3b3JkcywgYW5kIGEgYml0IGxlbmd0aC5cbiAgKi9cbiAgZnVuY3Rpb24gYmlubF9tZDUgKHgsIGxlbikge1xuICAgIC8qIGFwcGVuZCBwYWRkaW5nICovXG4gICAgeFtsZW4gPj4gNV0gfD0gMHg4MCA8PCAobGVuICUgMzIpXG4gICAgeFsoKChsZW4gKyA2NCkgPj4+IDkpIDw8IDQpICsgMTRdID0gbGVuXG5cbiAgICB2YXIgaVxuICAgIHZhciBvbGRhXG4gICAgdmFyIG9sZGJcbiAgICB2YXIgb2xkY1xuICAgIHZhciBvbGRkXG4gICAgdmFyIGEgPSAxNzMyNTg0MTkzXG4gICAgdmFyIGIgPSAtMjcxNzMzODc5XG4gICAgdmFyIGMgPSAtMTczMjU4NDE5NFxuICAgIHZhciBkID0gMjcxNzMzODc4XG5cbiAgICBmb3IgKGkgPSAwOyBpIDwgeC5sZW5ndGg7IGkgKz0gMTYpIHtcbiAgICAgIG9sZGEgPSBhXG4gICAgICBvbGRiID0gYlxuICAgICAgb2xkYyA9IGNcbiAgICAgIG9sZGQgPSBkXG5cbiAgICAgIGEgPSBtZDVfZmYoYSwgYiwgYywgZCwgeFtpXSwgNywgLTY4MDg3NjkzNilcbiAgICAgIGQgPSBtZDVfZmYoZCwgYSwgYiwgYywgeFtpICsgMV0sIDEyLCAtMzg5NTY0NTg2KVxuICAgICAgYyA9IG1kNV9mZihjLCBkLCBhLCBiLCB4W2kgKyAyXSwgMTcsIDYwNjEwNTgxOSlcbiAgICAgIGIgPSBtZDVfZmYoYiwgYywgZCwgYSwgeFtpICsgM10sIDIyLCAtMTA0NDUyNTMzMClcbiAgICAgIGEgPSBtZDVfZmYoYSwgYiwgYywgZCwgeFtpICsgNF0sIDcsIC0xNzY0MTg4OTcpXG4gICAgICBkID0gbWQ1X2ZmKGQsIGEsIGIsIGMsIHhbaSArIDVdLCAxMiwgMTIwMDA4MDQyNilcbiAgICAgIGMgPSBtZDVfZmYoYywgZCwgYSwgYiwgeFtpICsgNl0sIDE3LCAtMTQ3MzIzMTM0MSlcbiAgICAgIGIgPSBtZDVfZmYoYiwgYywgZCwgYSwgeFtpICsgN10sIDIyLCAtNDU3MDU5ODMpXG4gICAgICBhID0gbWQ1X2ZmKGEsIGIsIGMsIGQsIHhbaSArIDhdLCA3LCAxNzcwMDM1NDE2KVxuICAgICAgZCA9IG1kNV9mZihkLCBhLCBiLCBjLCB4W2kgKyA5XSwgMTIsIC0xOTU4NDE0NDE3KVxuICAgICAgYyA9IG1kNV9mZihjLCBkLCBhLCBiLCB4W2kgKyAxMF0sIDE3LCAtNDIwNjMpXG4gICAgICBiID0gbWQ1X2ZmKGIsIGMsIGQsIGEsIHhbaSArIDExXSwgMjIsIC0xOTkwNDA0MTYyKVxuICAgICAgYSA9IG1kNV9mZihhLCBiLCBjLCBkLCB4W2kgKyAxMl0sIDcsIDE4MDQ2MDM2ODIpXG4gICAgICBkID0gbWQ1X2ZmKGQsIGEsIGIsIGMsIHhbaSArIDEzXSwgMTIsIC00MDM0MTEwMSlcbiAgICAgIGMgPSBtZDVfZmYoYywgZCwgYSwgYiwgeFtpICsgMTRdLCAxNywgLTE1MDIwMDIyOTApXG4gICAgICBiID0gbWQ1X2ZmKGIsIGMsIGQsIGEsIHhbaSArIDE1XSwgMjIsIDEyMzY1MzUzMjkpXG5cbiAgICAgIGEgPSBtZDVfZ2coYSwgYiwgYywgZCwgeFtpICsgMV0sIDUsIC0xNjU3OTY1MTApXG4gICAgICBkID0gbWQ1X2dnKGQsIGEsIGIsIGMsIHhbaSArIDZdLCA5LCAtMTA2OTUwMTYzMilcbiAgICAgIGMgPSBtZDVfZ2coYywgZCwgYSwgYiwgeFtpICsgMTFdLCAxNCwgNjQzNzE3NzEzKVxuICAgICAgYiA9IG1kNV9nZyhiLCBjLCBkLCBhLCB4W2ldLCAyMCwgLTM3Mzg5NzMwMilcbiAgICAgIGEgPSBtZDVfZ2coYSwgYiwgYywgZCwgeFtpICsgNV0sIDUsIC03MDE1NTg2OTEpXG4gICAgICBkID0gbWQ1X2dnKGQsIGEsIGIsIGMsIHhbaSArIDEwXSwgOSwgMzgwMTYwODMpXG4gICAgICBjID0gbWQ1X2dnKGMsIGQsIGEsIGIsIHhbaSArIDE1XSwgMTQsIC02NjA0NzgzMzUpXG4gICAgICBiID0gbWQ1X2dnKGIsIGMsIGQsIGEsIHhbaSArIDRdLCAyMCwgLTQwNTUzNzg0OClcbiAgICAgIGEgPSBtZDVfZ2coYSwgYiwgYywgZCwgeFtpICsgOV0sIDUsIDU2ODQ0NjQzOClcbiAgICAgIGQgPSBtZDVfZ2coZCwgYSwgYiwgYywgeFtpICsgMTRdLCA5LCAtMTAxOTgwMzY5MClcbiAgICAgIGMgPSBtZDVfZ2coYywgZCwgYSwgYiwgeFtpICsgM10sIDE0LCAtMTg3MzYzOTYxKVxuICAgICAgYiA9IG1kNV9nZyhiLCBjLCBkLCBhLCB4W2kgKyA4XSwgMjAsIDExNjM1MzE1MDEpXG4gICAgICBhID0gbWQ1X2dnKGEsIGIsIGMsIGQsIHhbaSArIDEzXSwgNSwgLTE0NDQ2ODE0NjcpXG4gICAgICBkID0gbWQ1X2dnKGQsIGEsIGIsIGMsIHhbaSArIDJdLCA5LCAtNTE0MDM3ODQpXG4gICAgICBjID0gbWQ1X2dnKGMsIGQsIGEsIGIsIHhbaSArIDddLCAxNCwgMTczNTMyODQ3MylcbiAgICAgIGIgPSBtZDVfZ2coYiwgYywgZCwgYSwgeFtpICsgMTJdLCAyMCwgLTE5MjY2MDc3MzQpXG5cbiAgICAgIGEgPSBtZDVfaGgoYSwgYiwgYywgZCwgeFtpICsgNV0sIDQsIC0zNzg1NTgpXG4gICAgICBkID0gbWQ1X2hoKGQsIGEsIGIsIGMsIHhbaSArIDhdLCAxMSwgLTIwMjI1NzQ0NjMpXG4gICAgICBjID0gbWQ1X2hoKGMsIGQsIGEsIGIsIHhbaSArIDExXSwgMTYsIDE4MzkwMzA1NjIpXG4gICAgICBiID0gbWQ1X2hoKGIsIGMsIGQsIGEsIHhbaSArIDE0XSwgMjMsIC0zNTMwOTU1NilcbiAgICAgIGEgPSBtZDVfaGgoYSwgYiwgYywgZCwgeFtpICsgMV0sIDQsIC0xNTMwOTkyMDYwKVxuICAgICAgZCA9IG1kNV9oaChkLCBhLCBiLCBjLCB4W2kgKyA0XSwgMTEsIDEyNzI4OTMzNTMpXG4gICAgICBjID0gbWQ1X2hoKGMsIGQsIGEsIGIsIHhbaSArIDddLCAxNiwgLTE1NTQ5NzYzMilcbiAgICAgIGIgPSBtZDVfaGgoYiwgYywgZCwgYSwgeFtpICsgMTBdLCAyMywgLTEwOTQ3MzA2NDApXG4gICAgICBhID0gbWQ1X2hoKGEsIGIsIGMsIGQsIHhbaSArIDEzXSwgNCwgNjgxMjc5MTc0KVxuICAgICAgZCA9IG1kNV9oaChkLCBhLCBiLCBjLCB4W2ldLCAxMSwgLTM1ODUzNzIyMilcbiAgICAgIGMgPSBtZDVfaGgoYywgZCwgYSwgYiwgeFtpICsgM10sIDE2LCAtNzIyNTIxOTc5KVxuICAgICAgYiA9IG1kNV9oaChiLCBjLCBkLCBhLCB4W2kgKyA2XSwgMjMsIDc2MDI5MTg5KVxuICAgICAgYSA9IG1kNV9oaChhLCBiLCBjLCBkLCB4W2kgKyA5XSwgNCwgLTY0MDM2NDQ4NylcbiAgICAgIGQgPSBtZDVfaGgoZCwgYSwgYiwgYywgeFtpICsgMTJdLCAxMSwgLTQyMTgxNTgzNSlcbiAgICAgIGMgPSBtZDVfaGgoYywgZCwgYSwgYiwgeFtpICsgMTVdLCAxNiwgNTMwNzQyNTIwKVxuICAgICAgYiA9IG1kNV9oaChiLCBjLCBkLCBhLCB4W2kgKyAyXSwgMjMsIC05OTUzMzg2NTEpXG5cbiAgICAgIGEgPSBtZDVfaWkoYSwgYiwgYywgZCwgeFtpXSwgNiwgLTE5ODYzMDg0NClcbiAgICAgIGQgPSBtZDVfaWkoZCwgYSwgYiwgYywgeFtpICsgN10sIDEwLCAxMTI2ODkxNDE1KVxuICAgICAgYyA9IG1kNV9paShjLCBkLCBhLCBiLCB4W2kgKyAxNF0sIDE1LCAtMTQxNjM1NDkwNSlcbiAgICAgIGIgPSBtZDVfaWkoYiwgYywgZCwgYSwgeFtpICsgNV0sIDIxLCAtNTc0MzQwNTUpXG4gICAgICBhID0gbWQ1X2lpKGEsIGIsIGMsIGQsIHhbaSArIDEyXSwgNiwgMTcwMDQ4NTU3MSlcbiAgICAgIGQgPSBtZDVfaWkoZCwgYSwgYiwgYywgeFtpICsgM10sIDEwLCAtMTg5NDk4NjYwNilcbiAgICAgIGMgPSBtZDVfaWkoYywgZCwgYSwgYiwgeFtpICsgMTBdLCAxNSwgLTEwNTE1MjMpXG4gICAgICBiID0gbWQ1X2lpKGIsIGMsIGQsIGEsIHhbaSArIDFdLCAyMSwgLTIwNTQ5MjI3OTkpXG4gICAgICBhID0gbWQ1X2lpKGEsIGIsIGMsIGQsIHhbaSArIDhdLCA2LCAxODczMzEzMzU5KVxuICAgICAgZCA9IG1kNV9paShkLCBhLCBiLCBjLCB4W2kgKyAxNV0sIDEwLCAtMzA2MTE3NDQpXG4gICAgICBjID0gbWQ1X2lpKGMsIGQsIGEsIGIsIHhbaSArIDZdLCAxNSwgLTE1NjAxOTgzODApXG4gICAgICBiID0gbWQ1X2lpKGIsIGMsIGQsIGEsIHhbaSArIDEzXSwgMjEsIDEzMDkxNTE2NDkpXG4gICAgICBhID0gbWQ1X2lpKGEsIGIsIGMsIGQsIHhbaSArIDRdLCA2LCAtMTQ1NTIzMDcwKVxuICAgICAgZCA9IG1kNV9paShkLCBhLCBiLCBjLCB4W2kgKyAxMV0sIDEwLCAtMTEyMDIxMDM3OSlcbiAgICAgIGMgPSBtZDVfaWkoYywgZCwgYSwgYiwgeFtpICsgMl0sIDE1LCA3MTg3ODcyNTkpXG4gICAgICBiID0gbWQ1X2lpKGIsIGMsIGQsIGEsIHhbaSArIDldLCAyMSwgLTM0MzQ4NTU1MSlcblxuICAgICAgYSA9IHNhZmVfYWRkKGEsIG9sZGEpXG4gICAgICBiID0gc2FmZV9hZGQoYiwgb2xkYilcbiAgICAgIGMgPSBzYWZlX2FkZChjLCBvbGRjKVxuICAgICAgZCA9IHNhZmVfYWRkKGQsIG9sZGQpXG4gICAgfVxuICAgIHJldHVybiBbYSwgYiwgYywgZF1cbiAgfVxuXG4gIC8qXG4gICogQ29udmVydCBhbiBhcnJheSBvZiBsaXR0bGUtZW5kaWFuIHdvcmRzIHRvIGEgc3RyaW5nXG4gICovXG4gIGZ1bmN0aW9uIGJpbmwycnN0ciAoaW5wdXQpIHtcbiAgICB2YXIgaVxuICAgIHZhciBvdXRwdXQgPSAnJ1xuICAgIHZhciBsZW5ndGgzMiA9IGlucHV0Lmxlbmd0aCAqIDMyXG4gICAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDMyOyBpICs9IDgpIHtcbiAgICAgIG91dHB1dCArPSBTdHJpbmcuZnJvbUNoYXJDb2RlKChpbnB1dFtpID4+IDVdID4+PiAoaSAlIDMyKSkgJiAweEZGKVxuICAgIH1cbiAgICByZXR1cm4gb3V0cHV0XG4gIH1cblxuICAvKlxuICAqIENvbnZlcnQgYSByYXcgc3RyaW5nIHRvIGFuIGFycmF5IG9mIGxpdHRsZS1lbmRpYW4gd29yZHNcbiAgKiBDaGFyYWN0ZXJzID4yNTUgaGF2ZSB0aGVpciBoaWdoLWJ5dGUgc2lsZW50bHkgaWdub3JlZC5cbiAgKi9cbiAgZnVuY3Rpb24gcnN0cjJiaW5sIChpbnB1dCkge1xuICAgIHZhciBpXG4gICAgdmFyIG91dHB1dCA9IFtdXG4gICAgb3V0cHV0WyhpbnB1dC5sZW5ndGggPj4gMikgLSAxXSA9IHVuZGVmaW5lZFxuICAgIGZvciAoaSA9IDA7IGkgPCBvdXRwdXQubGVuZ3RoOyBpICs9IDEpIHtcbiAgICAgIG91dHB1dFtpXSA9IDBcbiAgICB9XG4gICAgdmFyIGxlbmd0aDggPSBpbnB1dC5sZW5ndGggKiA4XG4gICAgZm9yIChpID0gMDsgaSA8IGxlbmd0aDg7IGkgKz0gOCkge1xuICAgICAgb3V0cHV0W2kgPj4gNV0gfD0gKGlucHV0LmNoYXJDb2RlQXQoaSAvIDgpICYgMHhGRikgPDwgKGkgJSAzMilcbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dFxuICB9XG5cbiAgLypcbiAgKiBDYWxjdWxhdGUgdGhlIE1ENSBvZiBhIHJhdyBzdHJpbmdcbiAgKi9cbiAgZnVuY3Rpb24gcnN0cl9tZDUgKHMpIHtcbiAgICByZXR1cm4gYmlubDJyc3RyKGJpbmxfbWQ1KHJzdHIyYmlubChzKSwgcy5sZW5ndGggKiA4KSlcbiAgfVxuXG4gIC8qXG4gICogQ2FsY3VsYXRlIHRoZSBITUFDLU1ENSwgb2YgYSBrZXkgYW5kIHNvbWUgZGF0YSAocmF3IHN0cmluZ3MpXG4gICovXG4gIGZ1bmN0aW9uIHJzdHJfaG1hY19tZDUgKGtleSwgZGF0YSkge1xuICAgIHZhciBpXG4gICAgdmFyIGJrZXkgPSByc3RyMmJpbmwoa2V5KVxuICAgIHZhciBpcGFkID0gW11cbiAgICB2YXIgb3BhZCA9IFtdXG4gICAgdmFyIGhhc2hcbiAgICBpcGFkWzE1XSA9IG9wYWRbMTVdID0gdW5kZWZpbmVkXG4gICAgaWYgKGJrZXkubGVuZ3RoID4gMTYpIHtcbiAgICAgIGJrZXkgPSBiaW5sX21kNShia2V5LCBrZXkubGVuZ3RoICogOClcbiAgICB9XG4gICAgZm9yIChpID0gMDsgaSA8IDE2OyBpICs9IDEpIHtcbiAgICAgIGlwYWRbaV0gPSBia2V5W2ldIF4gMHgzNjM2MzYzNlxuICAgICAgb3BhZFtpXSA9IGJrZXlbaV0gXiAweDVDNUM1QzVDXG4gICAgfVxuICAgIGhhc2ggPSBiaW5sX21kNShpcGFkLmNvbmNhdChyc3RyMmJpbmwoZGF0YSkpLCA1MTIgKyBkYXRhLmxlbmd0aCAqIDgpXG4gICAgcmV0dXJuIGJpbmwycnN0cihiaW5sX21kNShvcGFkLmNvbmNhdChoYXNoKSwgNTEyICsgMTI4KSlcbiAgfVxuXG4gIC8qXG4gICogQ29udmVydCBhIHJhdyBzdHJpbmcgdG8gYSBoZXggc3RyaW5nXG4gICovXG4gIGZ1bmN0aW9uIHJzdHIyaGV4IChpbnB1dCkge1xuICAgIHZhciBoZXhfdGFiID0gJzAxMjM0NTY3ODlhYmNkZWYnXG4gICAgdmFyIG91dHB1dCA9ICcnXG4gICAgdmFyIHhcbiAgICB2YXIgaVxuICAgIGZvciAoaSA9IDA7IGkgPCBpbnB1dC5sZW5ndGg7IGkgKz0gMSkge1xuICAgICAgeCA9IGlucHV0LmNoYXJDb2RlQXQoaSlcbiAgICAgIG91dHB1dCArPSBoZXhfdGFiLmNoYXJBdCgoeCA+Pj4gNCkgJiAweDBGKSArXG4gICAgICBoZXhfdGFiLmNoYXJBdCh4ICYgMHgwRilcbiAgICB9XG4gICAgcmV0dXJuIG91dHB1dFxuICB9XG5cbiAgLypcbiAgKiBFbmNvZGUgYSBzdHJpbmcgYXMgdXRmLThcbiAgKi9cbiAgZnVuY3Rpb24gc3RyMnJzdHJfdXRmOCAoaW5wdXQpIHtcbiAgICByZXR1cm4gdW5lc2NhcGUoZW5jb2RlVVJJQ29tcG9uZW50KGlucHV0KSlcbiAgfVxuXG4gIC8qXG4gICogVGFrZSBzdHJpbmcgYXJndW1lbnRzIGFuZCByZXR1cm4gZWl0aGVyIHJhdyBvciBoZXggZW5jb2RlZCBzdHJpbmdzXG4gICovXG4gIGZ1bmN0aW9uIHJhd19tZDUgKHMpIHtcbiAgICByZXR1cm4gcnN0cl9tZDUoc3RyMnJzdHJfdXRmOChzKSlcbiAgfVxuICBmdW5jdGlvbiBoZXhfbWQ1IChzKSB7XG4gICAgcmV0dXJuIHJzdHIyaGV4KHJhd19tZDUocykpXG4gIH1cbiAgZnVuY3Rpb24gcmF3X2htYWNfbWQ1IChrLCBkKSB7XG4gICAgcmV0dXJuIHJzdHJfaG1hY19tZDUoc3RyMnJzdHJfdXRmOChrKSwgc3RyMnJzdHJfdXRmOChkKSlcbiAgfVxuICBmdW5jdGlvbiBoZXhfaG1hY19tZDUgKGssIGQpIHtcbiAgICByZXR1cm4gcnN0cjJoZXgocmF3X2htYWNfbWQ1KGssIGQpKVxuICB9XG5cbiAgZnVuY3Rpb24gbWQ1IChzdHJpbmcsIGtleSwgcmF3KSB7XG4gICAgaWYgKCFrZXkpIHtcbiAgICAgIGlmICghcmF3KSB7XG4gICAgICAgIHJldHVybiBoZXhfbWQ1KHN0cmluZylcbiAgICAgIH1cbiAgICAgIHJldHVybiByYXdfbWQ1KHN0cmluZylcbiAgICB9XG4gICAgaWYgKCFyYXcpIHtcbiAgICAgIHJldHVybiBoZXhfaG1hY19tZDUoa2V5LCBzdHJpbmcpXG4gICAgfVxuICAgIHJldHVybiByYXdfaG1hY19tZDUoa2V5LCBzdHJpbmcpXG4gIH1cblxuICBpZiAodHlwZW9mIGRlZmluZSA9PT0gJ2Z1bmN0aW9uJyAmJiBkZWZpbmUuYW1kKSB7XG4gICAgZGVmaW5lKGZ1bmN0aW9uICgpIHtcbiAgICAgIHJldHVybiBtZDVcbiAgICB9KVxuICB9IGVsc2UgaWYgKHR5cGVvZiBtb2R1bGUgPT09ICdvYmplY3QnICYmIG1vZHVsZS5leHBvcnRzKSB7XG4gICAgbW9kdWxlLmV4cG9ydHMgPSBtZDVcbiAgfSBlbHNlIHtcbiAgICAkLm1kNSA9IG1kNVxuICB9XG59KHRoaXMpKVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvdmVuZG9yX21vZHVsZXMvbWQ1L21kNS5qc1xuICoqLyIsImltcG9ydCB7IHRha2UsIHB1dCwgY2FsbCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5pbXBvcnQgKiBhcyBhY3Rpb25zIGZyb20gJy4uL2FjdGlvbnMnO1xuaW1wb3J0IGFwaSBmcm9tICcuLi8uLi9zZXJ2aWNlcy9hcGknO1xuaW1wb3J0ICogYXMgQUNUSU9OX1RZUEVTIGZyb20gJy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiogd2F0Y2hMb2dpbkZsb3coKSB7XG4gICAgLy8g5L2/55SoIGZldGNoRW50aXR5IOS8muabtOWlveS5iO+8n1xuICAgIC8vIOebruWJjeWboOS4uui/meenjSBwdXQg57G75Z6L55qE6K+35rGC55qE6L+U5Zue5YC85ZKM5LiA6Iis55qEIGVudGl0eSDkuI3kuIDmoLfmiYDku6XkuI3og73nm7TmjqXkvb/nlKhcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICB5aWVsZCB0YWtlKEFDVElPTl9UWVBFUy5VU0VSX0xPR09VVCk7XG4gICAgICAgIHlpZWxkIHB1dChhY3Rpb25zLmxvZ291dC5yZXF1ZXN0KCkpO1xuICAgICAgICB0cnkge1xuICAgICAgICAgICAgeWllbGQgY2FsbChhcGkubG9nb3V0KTtcbiAgICAgICAgICAgIHlpZWxkIHB1dChhY3Rpb25zLmxvZ291dC5zdWNjZXNzKCkpO1xuICAgICAgICB9XG4gICAgICAgIGNhdGNoIChlcnJvcikge1xuICAgICAgICAgICAgeWllbGQgcHV0KGFjdGlvbnMubG9nb3V0LmZhaWx1cmUoZXJyb3IpKTtcbiAgICAgICAgfVxuICAgIH1cbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvc2FnYXMvbG9naW5GbG93LnRzXG4gKiovIiwiaW1wb3J0IHsgdGFrZUV2ZXJ5IH0gZnJvbSAncmVkdXgtc2FnYSc7XG5pbXBvcnQgeyB0YWtlLCBwdXQsIGNhbGwsIHNlbGVjdCwgZm9yaywgY2FuY2VsbGVkIH0gZnJvbSAncmVkdXgtc2FnYS9lZmZlY3RzJztcbmltcG9ydCAqIGFzIGFjdGlvbnMgZnJvbSAnLi4vYWN0aW9ucyc7XG5pbXBvcnQgKiBhcyBBQ1RJT05fVFlQRVMgZnJvbSAnLi4vLi4vY29uc3RhbnRzL2FjdGlvblR5cGVzJztcbmltcG9ydCBhcGkgZnJvbSAnLi4vLi4vc2VydmljZXMvYXBpJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5pbXBvcnQgKiBhcyBzZWxlY3RvcnMgZnJvbSAnLi4vLi4vc3RvcmUvc2VsZWN0b3JzJztcbmltcG9ydCB7IFJPTEVTIH0gZnJvbSAnLi4vLi4vY29uc3RhbnRzL2NvbW1vbic7XG5pbXBvcnQgeyBmZXRjaEVudGl0eSB9IGZyb20gJy4vdXRpbHMnO1xuaW1wb3J0IGhlbHBlcnMgZnJvbSAnLi4vLi4vaGVscGVycyc7XG5pbXBvcnQgKiBhcyB2aWV3ZXJVdGlscyBmcm9tICcuLi8uLi9yb3V0ZXMvVmlld2VyL1ZpZXdlci51dGlscyc7XG5pbXBvcnQgdXRpbHMgZnJvbSAnLi4vLi4vdXRpbHMnO1xuY29uc3QgREVGQVVMVF9QQUdFX0hFSUdIVCA9IDkwMDtcbmNvbnN0IERFRkFVTFRfRk9OVF9TSVpFID0gMTY7XG5jb25zdCBmZXRjaEJvb2tQcm9ncmVzcyA9IGZldGNoRW50aXR5LmJpbmQobnVsbCwgYWN0aW9ucy5wcm9ncmVzcywgYXBpLmZldGNoQm9va1Byb2dyZXNzKTtcbmZ1bmN0aW9uKiBzZXRWaWV3ZXIoYm9va0lkLCBjb25maWcgPSB7fSkge1xuICAgIGNvbnN0IHZpZXdlcldpZHRoID0gdXRpbHMuZ2V0U2NyZWVuSW5mbygpLnZpZXcud2lkdGg7XG4gICAgY29uc3QgaXNTbWFsbFNjcmVlbiA9IHZpZXdlcldpZHRoIDwgNzAwO1xuICAgIGxldCBpbml0aWFsaXplZCA9IHtcbiAgICAgICAgYm9va0lkLFxuICAgICAgICBpc0NhbGNNb2RlOiB0cnVlLFxuICAgICAgICBmbHVpZDogaXNTbWFsbFNjcmVlbixcbiAgICAgICAgaXNUb3VjaE1vZGU6IGlzU21hbGxTY3JlZW4sXG4gICAgICAgIHBhZ2VIZWlnaHQ6IERFRkFVTFRfUEFHRV9IRUlHSFQsXG4gICAgICAgIGZvbnRTaXplOiBERUZBVUxUX0ZPTlRfU0laRSxcbiAgICAgICAgd2lkdGg6IGlzU21hbGxTY3JlZW5cbiAgICAgICAgICAgID8gdmlld2VyV2lkdGhcbiAgICAgICAgICAgIDogJ21heCdcbiAgICB9O1xuICAgIGNvbnN0IGNvbXB1dGVkID0geWllbGQgc2VsZWN0KHNlbGVjdG9ycy52aWV3ZXIuY29tcHV0ZWQoYm9va0lkKSk7XG4gICAgaWYgKGNvbXB1dGVkLmxlbmd0aCA+IDApIHtcbiAgICAgICAgaW5pdGlhbGl6ZWQuaXNDYWxjTW9kZSA9IGZhbHNlO1xuICAgIH1cbiAgICBpbml0aWFsaXplZCA9IF8ubWVyZ2Uoe30sIGluaXRpYWxpemVkLCBjb25maWcpO1xuICAgIHlpZWxkIHB1dChhY3Rpb25zLmNvbmZpZ1ZpZXdlcihib29rSWQsIGluaXRpYWxpemVkKSk7XG59XG5mdW5jdGlvbiogc2V0Vmlld2VyV2l0aEFjdGlvbihhY3Rpb24pIHtcbiAgICBjb25zdCBib29rSWQgPSBhY3Rpb24uYm9va0lkO1xuICAgIGNvbnN0IGNvbmZpZyA9IGFjdGlvbi5jb25maWc7XG4gICAgeWllbGQgc2V0Vmlld2VyKGJvb2tJZCwgY29uZmlnKTtcbn1cbmZ1bmN0aW9uKiB3YXRjaEluaXRWaWV3ZXIoKSB7XG4gICAgeWllbGQqIHRha2VFdmVyeShBQ1RJT05fVFlQRVMuVklFV0VSLklOSVRJQUxJWkVfQ09ORklHLCBzZXRWaWV3ZXJXaXRoQWN0aW9uKTtcbn1cbmZ1bmN0aW9uIGNhbGNCb29rKHdyYXAsIGZsZXNoKSB7XG4gICAgY29uc3Qgc3RhcnRDYWxjSHRtbFRpbWUgPSBuZXcgRGF0ZSgpLnZhbHVlT2YoKTtcbiAgICBjb25zdCBjb21wdXRlZENoYXB0ZXJzID0gQXJyYXkucHJvdG90eXBlXG4gICAgICAgIC5tYXAuY2FsbCh3cmFwLmNoaWxkTm9kZXMsIGNoaWxkID0+IHtcbiAgICAgICAgY29uc3QgY2hpbGREaXYgPSBjaGlsZDtcbiAgICAgICAgY29uc3QgaWQgPSBjaGlsZERpdi5nZXRBdHRyaWJ1dGUoJ2lkJyk7XG4gICAgICAgIGNvbnN0IG5vZGVIZWlnaHRzID0gdmlld2VyVXRpbHMuZ2V0Tm9kZUhlaWdodHMoY2hpbGREaXYucXVlcnlTZWxlY3RvcignLmxpbmVzJykuY2hpbGROb2Rlcyk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBpZCxcbiAgICAgICAgICAgIG5vZGVIZWlnaHRzXG4gICAgICAgIH07XG4gICAgfSk7XG4gICAgY29uc3QgZW5kQ2FsY0h0bWxUaW1lID0gbmV3IERhdGUoKS52YWx1ZU9mKCk7XG4gICAgaGVscGVycy5wcmludChgQ2FsY3VsYXRpbmcgaHRtbCB0YWtlcyAke2VuZENhbGNIdG1sVGltZSAtIHN0YXJ0Q2FsY0h0bWxUaW1lfW1zYCk7XG4gICAgY29uc3QgY29tcHV0ZWRQYWdlcyA9IHZpZXdlclV0aWxzLmdyb3VwUGFnZUZyb21DaGFwdGVycyhmbGVzaCwgY29tcHV0ZWRDaGFwdGVycywgOTAwKTtcbiAgICByZXR1cm4gY29tcHV0ZWRQYWdlcztcbn1cbmZ1bmN0aW9uKiB1cGRhdGVQcm9ncmVzcyhib29rSWQsIHBlcmNlbnRhZ2UpIHtcbiAgICB0cnkge1xuICAgICAgICB5aWVsZCBjYWxsKGFwaS5zZXRQcm9ncmVzcywgYm9va0lkLCB7XG4gICAgICAgICAgICBwZXJjZW50YWdlXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgY29uc29sZS5lcnJvcihlcnJvcik7XG4gICAgfVxuICAgIGZpbmFsbHkge1xuICAgICAgICBpZiAoeWllbGQgY2FuY2VsbGVkKCkpIHtcbiAgICAgICAgICAgIGhlbHBlcnMucHJpbnQoJ3VwZGF0ZVByb2dyZXNzIGNhbmNlbGVkJyk7XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbiogd2F0Y2hDYWxjQm9vaygpIHtcbiAgICB3aGlsZSAodHJ1ZSkge1xuICAgICAgICBjb25zdCB7IGJvb2tJZCwgd3JhcCB9ID0geWllbGQgdGFrZShBQ1RJT05fVFlQRVMuVklFV0VSLkNBTENfU1RBUlQpO1xuICAgICAgICBjb25zdCBib29rQ29udGVudCA9IHlpZWxkIHNlbGVjdChzZWxlY3RvcnMuY29tbW9uLmVudGl0eSgnYm9va0NvbnRlbnRzJywgYm9va0lkKSk7XG4gICAgICAgIGNvbnN0IGZsZXNoID0gYm9va0NvbnRlbnQuZmxlc2ggfHwge307XG4gICAgICAgIHRyeSB7XG4gICAgICAgICAgICBjb25zdCBjb21wdXRlZCA9IGNhbGNCb29rKHdyYXAsIGZsZXNoKTtcbiAgICAgICAgICAgIHlpZWxkIHB1dChhY3Rpb25zLmNhbGNCb29rU3VjY2Vzcyhib29rSWQsIGNvbXB1dGVkKSk7XG4gICAgICAgICAgICB5aWVsZCBwdXQoYWN0aW9ucy5jb25maWdWaWV3ZXIoYm9va0lkLCB7XG4gICAgICAgICAgICAgICAgaXNDYWxjTW9kZTogZmFsc2VcbiAgICAgICAgICAgIH0pKTtcbiAgICAgICAgfVxuICAgICAgICBjYXRjaCAoZXJyb3IpIHtcbiAgICAgICAgICAgIHlpZWxkIHB1dChhY3Rpb25zLmNhbGNCb29rRmFpbHVyZShib29rSWQsIGVycm9yKSk7XG4gICAgICAgIH1cbiAgICB9XG59XG5mdW5jdGlvbiogd2F0Y2hQcm9ncmVzc09wZXJhdGlvbnMoKSB7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3QgYWN0aW9uID0geWllbGQgdGFrZShbQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX1VQREFURSwgQUNUSU9OX1RZUEVTLkxPQURfQk9PS19QUk9HUkVTU10pO1xuICAgICAgICBjb25zdCBzZXNzaW9uID0geWllbGQgc2VsZWN0KHNlbGVjdG9ycy5jb21tb24uc2Vzc2lvbik7XG4gICAgICAgIGNvbnN0IHVzZXJSb2xlID0gXy5nZXQoc2Vzc2lvbiwgJ3VzZXIucm9sZScpO1xuICAgICAgICBpZiAodXNlclJvbGUgIT09IFJPTEVTLlZJU0lUT1IpIHtcbiAgICAgICAgICAgIGlmIChhY3Rpb24udHlwZSA9PT0gQUNUSU9OX1RZUEVTLkxPQURfQk9PS19QUk9HUkVTUykge1xuICAgICAgICAgICAgICAgIHlpZWxkIGNhbGwoZmV0Y2hCb29rUHJvZ3Jlc3MsIHsgaWQ6IGFjdGlvbi5pZCB9KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGlmIChhY3Rpb24udHlwZSA9PT0gQUNUSU9OX1RZUEVTLlZJRVdFUi5CT09LX1BST0dSRVNTX1VQREFURSkge1xuICAgICAgICAgICAgICAgIHlpZWxkIHVwZGF0ZVByb2dyZXNzKGFjdGlvbi5pZCwgYWN0aW9uLnBlcmNlbnRhZ2UpO1xuICAgICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgaGVscGVycy5wcmludCgnTm90IGxvZ2dlZCBpbiwgcHJvZ3Jlc3Mgd2lsbCBub3QgYmUgZmV0Y2hlZCEnKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmZ1bmN0aW9uKiBqdW1wVG8oYWN0aW9uKSB7XG4gICAgY29uc3QgeyBwZXJjZW50YWdlIH0gPSBhY3Rpb247XG4gICAgY29uc3QgeyBib29rSWQsIHBhZ2VIZWlnaHQsIGlzU2Nyb2xsTW9kZSB9ID0geWllbGQgc2VsZWN0KHNlbGVjdG9ycy52aWV3ZXIuY29uZmlnKTtcbiAgICBjb25zdCBhbGxQYWdlcyA9IHlpZWxkIHNlbGVjdChzZWxlY3RvcnMudmlld2VyLmNvbXB1dGVkKGJvb2tJZCkpO1xuICAgIGNvbnN0IHBhZ2VDb3VudCA9IGFsbFBhZ2VzLmxlbmd0aDtcbiAgICBjb25zdCB0b3RhbEhlaWdodCA9IHBhZ2VDb3VudCAqIHBhZ2VIZWlnaHQ7XG4gICAgaWYgKGlzU2Nyb2xsTW9kZSkge1xuICAgICAgICBkb2N1bWVudC5ib2R5LnNjcm9sbFRvcCA9IHBlcmNlbnRhZ2VcbiAgICAgICAgICAgID8gdG90YWxIZWlnaHQgKiBwZXJjZW50YWdlXG4gICAgICAgICAgICA6IDA7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICB5aWVsZCBwdXQoYWN0aW9ucy51cGRhdGVCb29rUHJvZ3Jlc3MocGVyY2VudGFnZSkpO1xuICAgIH1cbn1cbmZ1bmN0aW9uKiB3YXRjaEp1bXBSZXF1ZXN0KCkge1xuICAgIHlpZWxkKiB0YWtlRXZlcnkoQUNUSU9OX1RZUEVTLlZJRVdFUi5KVU1QLCBqdW1wVG8pO1xufVxuZnVuY3Rpb24qIGZldGNoUHJvZ3Jlc3NBbmRKdW1wKGJvb2tJZCkge1xuICAgIHlpZWxkIHB1dChhY3Rpb25zLmxvYWRCb29rUHJvZ3Jlc3MoYm9va0lkKSk7XG4gICAgeWllbGQgdGFrZShBQ1RJT05fVFlQRVMuQk9PS19QUk9HUkVTUy5TVUNDRVNTKTtcbiAgICBjb25zdCB7IHBlcmNlbnRhZ2UgfSA9IHlpZWxkIHNlbGVjdChzZWxlY3RvcnMuY29tbW9uLmVudGl0eSgnYm9va1Byb2dyZXNzJywgYm9va0lkKSk7XG4gICAgeWllbGQgcHV0KGFjdGlvbnMudmlld2VySnVtcFRvKHBlcmNlbnRhZ2UpKTtcbn1cbmZ1bmN0aW9uKiBpbml0aWFsaXplVmlld2VyKCkge1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IHsgYm9va0lkIH0gPSB5aWVsZCB0YWtlKEFDVElPTl9UWVBFUy5WSUVXRVIuSU5JVElBTElaRSk7XG4gICAgICAgIGNvbnN0IGNvbXB1dGVkID0geWllbGQgc2VsZWN0KHNlbGVjdG9ycy52aWV3ZXIuY29tcHV0ZWQoYm9va0lkKSk7XG4gICAgICAgIGlmIChfLmlzRW1wdHkoY29tcHV0ZWQpKSB7XG4gICAgICAgICAgICB5aWVsZCBbcHV0KGFjdGlvbnMubG9hZEJvb2soYm9va0lkKSksIHB1dChhY3Rpb25zLmxvYWRCb29rQ29udGVudChib29rSWQpKV07XG4gICAgICAgICAgICB5aWVsZCBwdXQoYWN0aW9ucy5pbml0aWFsaXplVmlld2VyQ29uZmlnKGJvb2tJZCkpO1xuICAgICAgICAgICAgeWllbGQgdGFrZShBQ1RJT05fVFlQRVMuVklFV0VSLkNBTENfU1VDQ0VTUyk7XG4gICAgICAgICAgICB5aWVsZCBmZXRjaFByb2dyZXNzQW5kSnVtcChib29rSWQpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgeWllbGQgZmV0Y2hQcm9ncmVzc0FuZEp1bXAoYm9va0lkKTtcbiAgICAgICAgfVxuICAgIH1cbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKiB3YXRjaFZpZXdlcigpIHtcbiAgICB5aWVsZCBbXG4gICAgICAgIGZvcmsod2F0Y2hQcm9ncmVzc09wZXJhdGlvbnMpLFxuICAgICAgICBmb3JrKHdhdGNoQ2FsY0Jvb2spLFxuICAgICAgICBmb3JrKHdhdGNoSW5pdFZpZXdlciksXG4gICAgICAgIGZvcmsod2F0Y2hKdW1wUmVxdWVzdCksXG4gICAgICAgIGZvcmsoaW5pdGlhbGl6ZVZpZXdlcilcbiAgICBdO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zYWdhcy92aWV3ZXJUYXNrcy50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZHV4LXNhZ2FcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlZHV4LXNhZ2FcIlxuICoqIG1vZHVsZSBpZCA9IDM3MFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IHsgdGFrZSwgcHV0LCBjYW5jZWxsZWQsIGZvcmssIGNhbmNlbCB9IGZyb20gJ3JlZHV4LXNhZ2EvZWZmZWN0cyc7XG5mdW5jdGlvbiBzb21lQXN5bmNUYXNrKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIGNvbnNvbGUubG9nKCdsb2FkZWQnKTtcbiAgICAgICAgICAgIHJlc29sdmUoJ2xvYWQgZG9uZScpO1xuICAgICAgICAgICAgLy8geWllbGQgcHV0KHsgdHlwZTogJ0xPQURFRCd9KVxuICAgICAgICB9LCAxMDAwKTtcbiAgICB9KTtcbn1cbmZ1bmN0aW9uIGRvTG9hZCgpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUpID0+IHtcbiAgICAgICAgc2V0VGltZW91dChmdW5jdGlvbiAoKSB7XG4gICAgICAgICAgICByZXNvbHZlKCdsb2FkIGRvbmUnKTtcbiAgICAgICAgfSwgMzAwMCk7XG4gICAgfSk7XG59XG5mdW5jdGlvbiogZG9Mb2FkV2l0aENhbmNlbCgpIHtcbiAgICAvLyB3aGlsZSAodHJ1ZSkge1xuICAgIHRyeSB7XG4gICAgICAgIGNvbnN0IHJlcyA9IHlpZWxkIHNvbWVBc3luY1Rhc2soKTtcbiAgICAgICAgeWllbGQgcHV0KHsgdHlwZTogJ2RvbmUnLCByZXMgfSk7XG4gICAgfVxuICAgIGNhdGNoIChlcnJvcikge1xuICAgIH1cbiAgICBmaW5hbGx5IHtcbiAgICAgICAgaWYgKHlpZWxkIGNhbmNlbGxlZCgpKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnY2FuY2VsZWQnKTtcbiAgICAgICAgICAgIHlpZWxkIHB1dCh7IHR5cGU6ICdDQU5DRUxfTE9BRCcgfSk7XG4gICAgICAgIH1cbiAgICB9XG4gICAgLy8gfVxufVxuZnVuY3Rpb24gZG9TYXZlKCkge1xuICAgIHJldHVybiBuZXcgUHJvbWlzZSgocmVzb2x2ZSkgPT4ge1xuICAgICAgICBzZXRUaW1lb3V0KGZ1bmN0aW9uICgpIHtcbiAgICAgICAgICAgIHJlc29sdmUoJ3NhdmUgZG9uZScpO1xuICAgICAgICB9LCAzMDAwKTtcbiAgICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKiB3YXRjaFRlc3QoKSB7XG4gICAgd2hpbGUgKHRydWUpIHtcbiAgICAgICAgY29uc3QgYWN0aW9uID0geWllbGQgdGFrZShbJ0xPQUQnLCAnU0FWRSddKTtcbiAgICAgICAgbGV0IHJlcztcbiAgICAgICAgaWYgKGFjdGlvbi50eXBlID09PSAnTE9BRCcpIHtcbiAgICAgICAgICAgIHJlcyA9IHlpZWxkIGRvTG9hZCgpO1xuICAgICAgICAgICAgY29uc29sZS5sb2cocmVzKTtcbiAgICAgICAgfVxuICAgICAgICBpZiAoYWN0aW9uLnR5cGUgPT09ICdTQVZFJykge1xuICAgICAgICAgICAgcmVzID0geWllbGQgZG9TYXZlKCk7XG4gICAgICAgICAgICBjb25zb2xlLmxvZyhyZXMpO1xuICAgICAgICB9XG4gICAgfVxufVxuZXhwb3J0IGZ1bmN0aW9uKiB3YXRjaFRlc3QyKCkge1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIGNvbnN0IGxvYWRBY3Rpb24gPSB5aWVsZCB0YWtlKCdMT0FEJyk7XG4gICAgICAgIGNvbnN0IGxvYWRUYXNrID0geWllbGQgZm9yayhkb0xvYWRXaXRoQ2FuY2VsKTtcbiAgICAgICAgY29uc3Qgc2F2ZUFjdGlvbiA9IHlpZWxkIHRha2UoJ1NBVkUnKTtcbiAgICAgICAgaWYgKHNhdmVBY3Rpb24udHlwZSA9PT0gJ1NBVkUnKSB7XG4gICAgICAgICAgICBjb25zb2xlLmxvZygnc2F2ZT8nKTtcbiAgICAgICAgICAgIHlpZWxkIGNhbmNlbChsb2FkVGFzayk7XG4gICAgICAgIH1cbiAgICAgICAgeWllbGQgcHV0KHsgdHlwZTogJ3RoZW4gd2hhdCcgfSk7XG4gICAgfVxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9zYWdhcy90ZXN0LnRzXG4gKiovIiwiaW1wb3J0IHsgbWF0Y2ggfSBmcm9tICdyZWFjdC1yb3V0ZXInO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmZ1bmN0aW9uIG1hdGNoUm91dGUocm91dGVzLCByZXFVcmwsIGhpc3RvcnkpIHtcbiAgICByZXR1cm4gbmV3IFByb21pc2UoKHJlc29sdmUsIHJlamVjdCkgPT4ge1xuICAgICAgICBtYXRjaCh7IGhpc3RvcnksIHJvdXRlcywgbG9jYXRpb246IHJlcVVybCB9LCAoZXJyb3IsIHJlZGlyZWN0TG9jYXRpb24sIHJlbmRlclByb3BzKSA9PiB7XG4gICAgICAgICAgICBpZiAoZXJyb3IpIHtcbiAgICAgICAgICAgICAgICByZWplY3QoZXJyb3IpO1xuICAgICAgICAgICAgfVxuICAgICAgICAgICAgZWxzZSBpZiAocmVkaXJlY3RMb2NhdGlvbikge1xuICAgICAgICAgICAgICAgIHJlc29sdmUoeyByZWRpcmVjdExvY2F0aW9uLCBzdGF0dXNDb2RlOiAzMDIgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIGlmIChyZW5kZXJQcm9wcykge1xuICAgICAgICAgICAgICAgIGNvbnN0IHdyYXBwZWRDb21wb25lbnQgPSBfLmxhc3QocmVuZGVyUHJvcHMuY29tcG9uZW50cylbJ1dyYXBwZWRDb21wb25lbnQnXTtcbiAgICAgICAgICAgICAgICBjb25zdCBzdGF0dXNDb2RlID0gd3JhcHBlZENvbXBvbmVudFxuICAgICAgICAgICAgICAgICAgICA/IDIwMFxuICAgICAgICAgICAgICAgICAgICA6IDQwNDtcbiAgICAgICAgICAgICAgICByZXNvbHZlKHsgcmVuZGVyUHJvcHMsIHN0YXR1c0NvZGUgfSk7XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgICAgICByZWplY3QobmV3IEVycm9yKCdyb3V0ZXMg6YeM5LiN5a2Y5Zyo5a+5IDQwNCDnmoTlpITnkIYnKSk7XG4gICAgICAgICAgICB9XG4gICAgICAgIH0pO1xuICAgIH0pO1xufVxuZXhwb3J0IGRlZmF1bHQgbWF0Y2hSb3V0ZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9yZW5kZXIvbWF0Y2gtcm91dGUudHNcbiAqKi8iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyVG9TdGF0aWNNYXJrdXAsIHJlbmRlclRvU3RyaW5nIH0gZnJvbSAncmVhY3QtZG9tL3NlcnZlcic7XG5pbXBvcnQgeyBzeW5jSGlzdG9yeVdpdGhTdG9yZSB9IGZyb20gJ3JlYWN0LXJvdXRlci1yZWR1eCc7XG5pbXBvcnQgeyBjcmVhdGVNZW1vcnlIaXN0b3J5IH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBnZXRTdG9yZSBmcm9tICcuL2dldC1zdG9yZSc7XG5pbXBvcnQgbWF0Y2hSb3V0ZSBmcm9tICcuL21hdGNoLXJvdXRlJztcbmltcG9ydCBQYWdlIGZyb20gJy4vY29tcG9uZW50cy9QYWdlJztcbmltcG9ydCBEb2NDb250YWluZXIgZnJvbSAnLi4vLi4vaXNvbW9ycGhpYy9jb250YWluZXJzL0RvY0NvbnRhaW5lcic7XG5pbXBvcnQgU2VydmVyU2lkZUFwcFJvb3QgZnJvbSAnLi9jb21wb25lbnRzL1NlcnZlclNpZGVBcHBSb290JztcbmltcG9ydCBjb25maWd1cmVTdG9yZSBmcm9tICcuLi8uLi9pc29tb3JwaGljL3N0b3JlL2NvbmZpZ3VyZVN0b3JlJztcbmltcG9ydCB7IEVOQUJMRV9TRVJWRVJfUk9VVElORyB9IGZyb20gJy4uLy4uL2lzb21vcnBoaWMvY29uc3RhbnRzL2NvbW1vbic7XG5mdW5jdGlvbiByZW5kZXJIdG1sKGNvbmZpZykge1xuICAgIGlmICghY29uZmlnKSB7XG4gICAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUocmVuZGVyVG9TdGF0aWNNYXJrdXAoUmVhY3QuY3JlYXRlRWxlbWVudChQYWdlLCBudWxsKSkpO1xuICAgIH1cbiAgICBjb25zdCB7IHJlcVVybCwgcm91dGVzLCBpc1Byb2QsIGZldGNoRGF0YSwgaXNIb3QsIHVzZXJTZXNzaW9uIH0gPSBjb25maWc7XG4gICAgY29uc3QgbWVtb3J5SGlzdG9yeSA9IGNyZWF0ZU1lbW9yeUhpc3RvcnkocmVxVXJsKTtcbiAgICBjb25zdCBzdG9yZSA9IGNvbmZpZ3VyZVN0b3JlKCk7XG4gICAgY29uc3QgaGlzdG9yeSA9IHN5bmNIaXN0b3J5V2l0aFN0b3JlKG1lbW9yeUhpc3RvcnksIHN0b3JlKTtcbiAgICByZXR1cm4gbWF0Y2hSb3V0ZShyb3V0ZXMsIHJlcVVybCwgaGlzdG9yeSkudGhlbihyZXN1bHQgPT4ge1xuICAgICAgICBjb25zdCB7IHJlbmRlclByb3BzLCByZWRpcmVjdExvY2F0aW9uLCBzdGF0dXNDb2RlIH0gPSByZXN1bHQ7XG4gICAgICAgIGlmIChyZWRpcmVjdExvY2F0aW9uKSB7XG4gICAgICAgICAgICByZXR1cm4gUHJvbWlzZS5yZXNvbHZlKHsgcmVkaXJlY3RMb2NhdGlvbiB9KTtcbiAgICAgICAgfVxuICAgICAgICByZXR1cm4gZ2V0U3RvcmUocmVuZGVyUHJvcHMsIGZldGNoRGF0YSwgdXNlclNlc3Npb24sIHN0b3JlKS50aGVuKHN0b3JlV2l0aEZldGNoZWREYXRhID0+IHtcbiAgICAgICAgICAgIGNvbnN0IGdlblBhZ2VDb21wID0gKGJvZHlDbGFzcywgdGl0bGUsIGFwcE1hcmt1cCkgPT4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoUGFnZSwgeyB0aXRsZTogdGl0bGUsIHN0b3JlOiBzdG9yZVdpdGhGZXRjaGVkRGF0YSwgaXNQcm9kOiBpc1Byb2QsIGJvZHlDbGFzczogYm9keUNsYXNzLCBhcHBNYXJrdXA6IGFwcE1hcmt1cCwgc2NyaXB0RGF0YToge1xuICAgICAgICAgICAgICAgICAgICBbRU5BQkxFX1NFUlZFUl9ST1VUSU5HXTogdHJ1ZVxuICAgICAgICAgICAgICAgIH0gfSkpO1xuICAgICAgICAgICAgY29uc3QgYXBwUm9vdCA9IChSZWFjdC5jcmVhdGVFbGVtZW50KFNlcnZlclNpZGVBcHBSb290LCB7IHJlbmRlclBhZ2VDb250ZW50OiBmZXRjaERhdGEsIHJlbmRlclByb3BzOiByZXN1bHQucmVuZGVyUHJvcHMsIHN0b3JlOiBzdG9yZVdpdGhGZXRjaGVkRGF0YSB9KSk7XG4gICAgICAgICAgICAvLyByZXdpbmQg5b+F6aG75ZyoIHJlbmRlciDkuYvlkI7osIPnlKjvvIzmiYDku6Xlj6rog73osIPnlKjkuKTmrKEgcmVuZGVyXG4gICAgICAgICAgICAvLyDmsqHmnInmm7Tlpb3nmoTmlrnms5XkuYvliY3lhYjov5nmoLdcbiAgICAgICAgICAgIHJlbmRlclRvU3RhdGljTWFya3VwKGFwcFJvb3QpO1xuICAgICAgICAgICAgY29uc3QgZGF0YSA9IERvY0NvbnRhaW5lclsncmV3aW5kJ10oKSB8fCB7fTtcbiAgICAgICAgICAgIGxldCBhcHBSb290TWFya3VwO1xuICAgICAgICAgICAgaWYgKGZldGNoRGF0YSkge1xuICAgICAgICAgICAgICAgIGFwcFJvb3RNYXJrdXAgPSByZW5kZXJUb1N0cmluZyhhcHBSb290KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgICAgIGFwcFJvb3RNYXJrdXAgPSByZW5kZXJUb1N0YXRpY01hcmt1cChhcHBSb290KTtcbiAgICAgICAgICAgIH1cbiAgICAgICAgICAgIGNvbnN0IGh0bWwgPSByZW5kZXJUb1N0YXRpY01hcmt1cChnZW5QYWdlQ29tcChkYXRhLmJvZHlDbGFzcywgZGF0YS50aXRsZSwgYXBwUm9vdE1hcmt1cCkpO1xuICAgICAgICAgICAgcmV0dXJuIHsgaHRtbCwgc3RhdHVzQ29kZSB9O1xuICAgICAgICB9KTtcbiAgICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IHJlbmRlckh0bWw7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcmVuZGVyL3JlbmRlci1odG1sLnRzeFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlYWN0LWRvbS9zZXJ2ZXJcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInJlYWN0LWRvbS9zZXJ2ZXJcIlxuICoqIG1vZHVsZSBpZCA9IDM3NFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicmVhY3Qtcm91dGVyLXJlZHV4XCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWFjdC1yb3V0ZXItcmVkdXhcIlxuICoqIG1vZHVsZSBpZCA9IDM3NVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBIdG1sIGZyb20gJy4vSHRtbCc7XG5pbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHByaW50IGZyb20gJy4uLy4uL3V0aWxzL3ByaW50JztcbmltcG9ydCBmcyBmcm9tICdmcyc7XG5jb25zdCBERUZBVUxUX1RJVExFID0gJ1JlYWRyJztcbmNvbnN0IFNDUklQVF9DT05URU5UX0lEID0gJ3NjcmlwdC1kYXRhJztcbmNvbnN0IEFTU0VUX1BBVEggPSAnL2J1aWx0JztcbmNvbnN0IEFTU0VUX1BBVEhfUFJPRCA9ICcvYnVpbHRfcHJvZCc7XG5jb25zdCBTQ1JJUFRTX1BST0QgPSBbJ3JlYWN0X2tpdC5qcycsICd1dGlscy5qcycsICdhcHAuanMnXTtcbmNvbnN0IFNDUklQVFNfREVWID0gWydyZWFjdF9raXQuZGxsLmpzJywgJ3V0aWxzLmRsbC5qcycsICdhcHAuanMnXTtcbmNvbnN0IEdMT0JBTF9TVFlMRVMgPSBbJ2Jhc2UuZ2xvYmFsLmNzcycsICd2ZW5kb3IuZ2xvYmFsLmNzcycsICdtb2RpZmllcnMuZ2xvYmFsLmNzcyddO1xuY29uc3QgTE9DQUxfU1RZTEVTID0gWydhcHAuY3NzJ107XG5jb25zdCBDU1NfTUFOSUZFU1RfUEFUSCA9IGAke3Byb2Nlc3MuY3dkKCl9L3B1YmxpYy9idWlsdF9wcm9kL2Nzcy5tYW5pZmVzdC5qc29uYDtcbmNvbnN0IENIVU5LU19NQU5JRkVTVF9QQVRIID0gYCR7cHJvY2Vzcy5jd2QoKX0vcHVibGljL2J1aWx0X3Byb2QvY2h1bmtzLm1hbmlmZXN0Lmpzb25gO1xuY29uc3QgZ2V0TWFuaWZlc3QgPSAoKSA9PiB7XG4gICAgbGV0IGNodW5rTWFuaWZlc3QgPSB7fTtcbiAgICBsZXQgY3NzTWFuaWZlc3QgPSB7fTtcbiAgICB0cnkge1xuICAgICAgICBjc3NNYW5pZmVzdCA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKENTU19NQU5JRkVTVF9QQVRILCAndXRmOCcpKTtcbiAgICAgICAgY2h1bmtNYW5pZmVzdCA9IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKENIVU5LU19NQU5JRkVTVF9QQVRILCAndXRmOCcpKTtcbiAgICB9XG4gICAgY2F0Y2ggKGVycm9yKSB7XG4gICAgICAgIHByaW50LmVycm9yKGVycm9yLm1lc3NhZ2UpO1xuICAgIH1cbiAgICByZXR1cm4gXy5hc3NpZ24oe30sIGNodW5rTWFuaWZlc3QsIGNzc01hbmlmZXN0KTtcbn07XG5jb25zdCBnZXRIYXNoZWRGaWxlbmFtZSA9IG1hbmlmZXN0ID0+IHtcbiAgICByZXR1cm4gZmlsZW5hbWUgPT4ge1xuICAgICAgICBpZiAobWFuaWZlc3RbZmlsZW5hbWVdKSB7XG4gICAgICAgICAgICByZXR1cm4gbWFuaWZlc3RbZmlsZW5hbWVdO1xuICAgICAgICB9XG4gICAgICAgIHByaW50LmVycm9yKGBGaWxlICgke2ZpbGVuYW1lfSkgbm90IGluY2x1ZGVkIGluIG1hbmlmZXN0LCB3aWxsIHVzZSBvcmlnaW5hbCBmaWxlbmFtZSBpbnN0ZWFkIWApO1xuICAgICAgICByZXR1cm4gZmlsZW5hbWU7XG4gICAgfTtcbn07XG5mdW5jdGlvbiBQYWdlKHByb3BzKSB7XG4gICAgY29uc3QgeyB0aXRsZSwgc3RvcmUsIGluY2x1ZGVMb2NhbFN0eWxlc2hlZXRzLCBib2R5Q2xhc3MsIGFwcE1hcmt1cCwgc2NyaXB0RGF0YSwgaXNQcm9kLCBub1NjcmlwdCB9ID0gcHJvcHM7XG4gICAgbGV0IG1hbmlmZXN0O1xuICAgIGlmIChpc1Byb2QpIHtcbiAgICAgICAgbWFuaWZlc3QgPSBnZXRNYW5pZmVzdCgpO1xuICAgIH1cbiAgICBsZXQgc2NyaXB0cyA9IGlzUHJvZFxuICAgICAgICA/IFNDUklQVFNfUFJPRC5tYXAoZ2V0SGFzaGVkRmlsZW5hbWUobWFuaWZlc3QpKVxuICAgICAgICA6IFNDUklQVFNfREVWO1xuICAgIGNvbnN0IHN0eWxlcyA9IGlzUHJvZFxuICAgICAgICA/IEdMT0JBTF9TVFlMRVMuY29uY2F0KExPQ0FMX1NUWUxFUykubWFwKGdldEhhc2hlZEZpbGVuYW1lKG1hbmlmZXN0KSlcbiAgICAgICAgOiAoaW5jbHVkZUxvY2FsU3R5bGVzaGVldHNcbiAgICAgICAgICAgID8gR0xPQkFMX1NUWUxFUy5jb25jYXQoTE9DQUxfU1RZTEVTKVxuICAgICAgICAgICAgOiBHTE9CQUxfU1RZTEVTKTtcbiAgICBsZXQgc2NyaXB0Q29udGVudCA9IF8ubWFwKHNjcmlwdERhdGEsICh2YWwsIGtleSkgPT4ge1xuICAgICAgICByZXR1cm4gYHZhciAke2tleX0gPSAke3ZhbH07YDtcbiAgICB9KS5qb2luKCcnKTtcbiAgICBpZiAobm9TY3JpcHQpIHtcbiAgICAgICAgc2NyaXB0cyA9IFtdO1xuICAgICAgICBzY3JpcHRDb250ZW50ID0gJyc7XG4gICAgfVxuICAgIGNvbnN0IGFzc2V0UGF0aCA9IGlzUHJvZCA/IEFTU0VUX1BBVEhfUFJPRCA6IEFTU0VUX1BBVEg7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KEh0bWwsIHsgdGl0bGU6IHRpdGxlLCBzdHlsZXM6IHN0eWxlcywgc2NyaXB0czogc2NyaXB0cywgaW5pdGlhbFN0YXRlOiBzdG9yZSAmJiBzdG9yZS5nZXRTdGF0ZSgpLCBib2R5Q2xhc3M6IGJvZHlDbGFzcyB8fCBudWxsLCBhcHBNYXJrdXA6IGFwcE1hcmt1cCwgc2NyaXB0Q29udGVudElkOiBTQ1JJUFRfQ09OVEVOVF9JRCwgc2NyaXB0Q29udGVudDogc2NyaXB0Q29udGVudCwgYXNzZXRQYXRoOiBhc3NldFBhdGggfSkpO1xufVxuUGFnZVsnZGVmYXVsdFByb3BzJ10gPSB7XG4gICAgdGl0bGU6IERFRkFVTFRfVElUTEUsXG4gICAgaW5jbHVkZUxvY2FsU3R5bGVzaGVldHM6IHRydWVcbn07XG5leHBvcnQgZGVmYXVsdCBQYWdlO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JlbmRlci9jb21wb25lbnRzL1BhZ2UudHN4XG4gKiovIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgSU5JVElBTF9TVEFURSB9IGZyb20gJy4uLy4uLy4uL2lzb21vcnBoaWMvY29uc3RhbnRzL2NvbW1vbic7XG5mdW5jdGlvbiBTdHlsZUxpbmsocHJvcHMpIHtcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHsgcmVsOiBcInN0eWxlc2hlZXRcIiwgaHJlZjogYCR7cHJvcHMuYXNzZXRQYXRoIHx8ICcnfS8ke3Byb3BzLmZpbGVuYW1lfWAgfSkpO1xufVxuZnVuY3Rpb24gU2NyaXB0KHByb3BzKSB7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIsIHsgc3JjOiBgJHtwcm9wcy5hc3NldFBhdGggfHwgJyd9LyR7cHJvcHMuZmlsZW5hbWV9YCB9KSk7XG59XG5jb25zdCBiYWlkdVRyYWZmaWNDb2RlID0gYFxuICB2YXIgX2htdCA9IF9obXQgfHwgW107XG4gIChmdW5jdGlvbigpIHtcbiAgICB2YXIgaG0gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIpO1xuICAgIGhtLnNyYyA9IFwiaHR0cHM6Ly9obS5iYWlkdS5jb20vaG0uanM/ZDE2YzUzMzA1M2IyZDEyMjliNTkxNTU0MjA3ZGU0YzdcIjtcbiAgICB2YXIgcyA9IGRvY3VtZW50LmdldEVsZW1lbnRzQnlUYWdOYW1lKFwic2NyaXB0XCIpWzBdO1xuICAgIHMucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUoaG0sIHMpO1xuICB9KSgpO1xuYDtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIEh0bWwocHJvcHMpIHtcbiAgICBjb25zdCB7IHRpdGxlLCBzdHlsZXMsIHNjcmlwdHMsIGluaXRpYWxTdGF0ZSwgYm9keUNsYXNzLCBhcHBNYXJrdXAsIHVzZUZhdmljb24sIHNjcmlwdENvbnRlbnQsIHNjcmlwdENvbnRlbnRJZCwgYXNzZXRQYXRoIH0gPSBwcm9wcztcbiAgICByZXR1cm4gKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJodG1sXCIsIG51bGwsXG4gICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJoZWFkXCIsIG51bGwsXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibWV0YVwiLCB7IGh0dHBFcXVpdjogXCJYLVVBLUNvbXBhdGlibGVcIiwgY29udGVudDogXCJJRT1lZGdlLGNocm9tZT0xXCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibWV0YVwiLCB7IG5hbWU6IFwidmlld3BvcnRcIiwgY29udGVudDogXCJ3aWR0aD1kZXZpY2Utd2lkdGgsIGluaXRpYWwtc2NhbGU9MSwgdXNlci1zY2FsYWJsZT1ub1wiIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcIm1ldGFcIiwgeyBuYW1lOiBcImRlc2NyaXB0aW9uXCIsIGNvbnRlbnQ6IFwiVGhlIG5leHQgZ2VuZXJhdGlvbiBvbmxpbmUgcmVhZGluZyBhcHAuXCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7IHJlbDogXCJzaG9ydGN1dCBpY29uXCIsIHR5cGU6IFwiaW1hZ2UvcG5nXCIsIGhyZWY6IFwiL3N0YXRpYy9hcHBsZS10b3VjaC1pY29uLTYweDYwLTEucG5nXCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7IHJlbDogXCJhcHBsZS10b3VjaC1pY29uXCIsIHNpemVzOiBcIjYweDYwXCIsIGhyZWY6IFwiL3N0YXRpYy9hcHBsZS10b3VjaC1pY29uLTYweDYwLTEucG5nXCIgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwibGlua1wiLCB7IHJlbDogXCJhcHBsZS10b3VjaC1pY29uXCIsIHNpemVzOiBcIjEyMHgxMjBcIiwgaHJlZjogXCIvc3RhdGljL2FwcGxlLXRvdWNoLWljb24tMTIweDEyMC5wbmdcIiB9KSxcbiAgICAgICAgICAgIFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJsaW5rXCIsIHsgcmVsOiBcImFwcGxlLXRvdWNoLWljb25cIiwgc2l6ZXM6IFwiMTgweDE4MFwiLCBocmVmOiBcIi9zdGF0aWMvYXBwbGUtdG91Y2gtaWNvbi0xODB4MTgwLnBuZ1wiIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcInRpdGxlXCIsIG51bGwsIHRpdGxlIHx8ICcnKSxcbiAgICAgICAgICAgIHN0eWxlcyAmJiBzdHlsZXMubWFwKChzdHlsZXNoZWV0TmFtZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTdHlsZUxpbmssIHsgYXNzZXRQYXRoOiBhc3NldFBhdGgsIGZpbGVuYW1lOiBzdHlsZXNoZWV0TmFtZSwga2V5OiBpbmRleCB9KTtcbiAgICAgICAgICAgIH0pKSxcbiAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImJvZHlcIiwgX19hc3NpZ24oe30sIGJvZHlDbGFzcyAmJiB7IGNsYXNzTmFtZTogYm9keUNsYXNzIH0pLFxuICAgICAgICAgICAgUmVhY3QuY3JlYXRlRWxlbWVudChcImRpdlwiLCB7IGlkOiBcInJvb3RcIiwgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBhcHBNYXJrdXAgfHwgJycgfSB9KSxcbiAgICAgICAgICAgIHNjcmlwdENvbnRlbnQgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiwgeyBpZDogc2NyaXB0Q29udGVudElkLCBkYW5nZXJvdXNseVNldElubmVySFRNTDogeyBfX2h0bWw6IHNjcmlwdENvbnRlbnQgfSB9KSksXG4gICAgICAgICAgICBpbml0aWFsU3RhdGUgJiYgKFJlYWN0LmNyZWF0ZUVsZW1lbnQoXCJzY3JpcHRcIiwgeyBkYW5nZXJvdXNseVNldElubmVySFRNTDogeyBfX2h0bWw6IGB2YXIgJHtJTklUSUFMX1NUQVRFfSA9ICR7SlNPTi5zdHJpbmdpZnkoaW5pdGlhbFN0YXRlKX1gIH0gfSkpLFxuICAgICAgICAgICAgc2NyaXB0cyAmJiBzY3JpcHRzLm1hcCgoc2NyaXB0TmFtZSwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgICAgICByZXR1cm4gUmVhY3QuY3JlYXRlRWxlbWVudChTY3JpcHQsIHsgYXNzZXRQYXRoOiBhc3NldFBhdGgsIGZpbGVuYW1lOiBzY3JpcHROYW1lLCBrZXk6IGluZGV4IH0pO1xuICAgICAgICAgICAgfSksXG4gICAgICAgICAgICBSZWFjdC5jcmVhdGVFbGVtZW50KFwic2NyaXB0XCIsIHsgZGFuZ2Vyb3VzbHlTZXRJbm5lckhUTUw6IHsgX19odG1sOiBiYWlkdVRyYWZmaWNDb2RlIH0gfSkpKSk7XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9zZXJ2ZXIvcmVuZGVyL2NvbXBvbmVudHMvSHRtbC50c3hcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJmc1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiZnNcIlxuICoqIG1vZHVsZSBpZCA9IDM3OFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwidmFyIF9fYXNzaWduID0gKHRoaXMgJiYgdGhpcy5fX2Fzc2lnbikgfHwgT2JqZWN0LmFzc2lnbiB8fCBmdW5jdGlvbih0KSB7XG4gICAgZm9yICh2YXIgcywgaSA9IDEsIG4gPSBhcmd1bWVudHMubGVuZ3RoOyBpIDwgbjsgaSsrKSB7XG4gICAgICAgIHMgPSBhcmd1bWVudHNbaV07XG4gICAgICAgIGZvciAodmFyIHAgaW4gcykgaWYgKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChzLCBwKSlcbiAgICAgICAgICAgIHRbcF0gPSBzW3BdO1xuICAgIH1cbiAgICByZXR1cm4gdDtcbn07XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgUHJvdmlkZXIgfSBmcm9tICdyZWFjdC1yZWR1eCc7XG5pbXBvcnQgeyBSb3V0ZXJDb250ZXh0IH0gZnJvbSAncmVhY3Qtcm91dGVyJztcbmltcG9ydCBfIGZyb20gJ2xvZGFzaCc7XG5mdW5jdGlvbiBTZXJ2ZXJTaWRlQXBwUm9vdChwcm9wcykge1xuICAgIGNvbnN0IHsgc3RvcmUsIHJlbmRlclByb3BzLCByZW5kZXJQYWdlQ29udGVudCB9ID0gcHJvcHM7XG4gICAgcmV0dXJuICghXy5pc0VtcHR5KHJlbmRlclByb3BzKSAmJiAoUmVhY3QuY3JlYXRlRWxlbWVudChQcm92aWRlciwgeyBzdG9yZTogc3RvcmUgfSwgcmVuZGVyUGFnZUNvbnRlbnRcbiAgICAgICAgPyAoUmVhY3QuY3JlYXRlRWxlbWVudChSb3V0ZXJDb250ZXh0LCBfX2Fzc2lnbih7fSwgcmVuZGVyUHJvcHMpKSlcbiAgICAgICAgOiBSZWFjdC5jcmVhdGVFbGVtZW50KFwiZGl2XCIsIHsgY2xhc3NOYW1lOiBcInRleHQtbG9hZGluZ1wiIH0sIFwiXFx1NTJBMFxcdThGN0RcXHU0RTJEIC4uLlwiKSkpKTtcbn1cbmV4cG9ydCBkZWZhdWx0IFNlcnZlclNpZGVBcHBSb290O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL3JlbmRlci9jb21wb25lbnRzL1NlcnZlclNpZGVBcHBSb290LnRzeFxuICoqLyIsImltcG9ydCB7IGNyZWF0ZVN0b3JlLCBhcHBseU1pZGRsZXdhcmUgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgdGh1bmsgZnJvbSAncmVkdXgtdGh1bmsnO1xuaW1wb3J0IHJvb3RSZWR1Y2VyIGZyb20gJy4vcmVkdWNlcnMnO1xuaW1wb3J0IGFwaSBmcm9tICcuL21pZGRsZXdhcmUvYXBpJztcbmltcG9ydCBtb2RpZnlSZXNwb25zZSBmcm9tICcuL21pZGRsZXdhcmUvbW9kaWZ5UmVzcG9uc2UnO1xuaW1wb3J0IGhhbmRsZVNlcnZlclN0b3JlIGZyb20gJy4vbWlkZGxld2FyZS9oYW5kbGVTZXJ2ZXJTdG9yZSc7XG5pbXBvcnQgaGFuZGxlSW5pdGlhbFN0YXRlIGZyb20gJy4vaGFuZGxlSW5pdGlhbFN0YXRlJztcbmltcG9ydCBsb2dBY3Rpb25UeXBlcyBmcm9tICcuL21pZGRsZXdhcmUvbG9nQWN0aW9uVHlwZXMnO1xuaW1wb3J0IGNyZWF0ZUxvZ2dlciBmcm9tICdyZWR1eC1sb2dnZXInO1xuaW1wb3J0IG1pZGRsZXdhcmUgZnJvbSAnLi9taWRkbGV3YXJlJztcbmltcG9ydCBjcmVhdGVTYWdhTWlkZGxld2FyZSwgeyBFTkQgfSBmcm9tICdyZWR1eC1zYWdhJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uL2hlbHBlcnMnO1xuY29uc3Qgc2FnYU1pZGRsZXdhcmUgPSBjcmVhdGVTYWdhTWlkZGxld2FyZSgpO1xuY29uc3QgU0VSVkVSX01JRERMRVdBUkVTX0RFViA9IFtoYW5kbGVTZXJ2ZXJTdG9yZSwgc2FnYU1pZGRsZXdhcmUsIGFwaSwgbWlkZGxld2FyZS5jYWNoZSwgbW9kaWZ5UmVzcG9uc2UsIHRodW5rLCBsb2dBY3Rpb25UeXBlc107XG5jb25zdCBTRVJWRVJfTUlERExFV0FSRVNfUFJPRCA9IFtoYW5kbGVTZXJ2ZXJTdG9yZSwgc2FnYU1pZGRsZXdhcmUsIGFwaSwgbWlkZGxld2FyZS5jYWNoZSwgbW9kaWZ5UmVzcG9uc2UsIHRodW5rXTtcbmNvbnN0IE1JRERMRVdBUkVTX0RFViA9IFtzYWdhTWlkZGxld2FyZSwgYXBpLCBtaWRkbGV3YXJlLmNhY2hlLCBtb2RpZnlSZXNwb25zZSwgdGh1bmssIGNyZWF0ZUxvZ2dlcih7IGNvbGxhcHNlZDogdHJ1ZSB9KV07XG5jb25zdCBNSURETEVXQVJFU19QUk9EID0gW3NhZ2FNaWRkbGV3YXJlLCBhcGksIG1pZGRsZXdhcmUuY2FjaGUsIG1vZGlmeVJlc3BvbnNlLCB0aHVua107XG5jb25zdCBoYW5kbGVTdG9yZSA9IChtaWRkbGV3YXJlcykgPT4ge1xuICAgIHJldHVybiBjcmVhdGVTdG9yZShyb290UmVkdWNlciwgaGFuZGxlSW5pdGlhbFN0YXRlKCksIGFwcGx5TWlkZGxld2FyZS5hcHBseShudWxsLCBtaWRkbGV3YXJlcykpO1xufTtcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbmZpZ3VyZVN0b3JlKCkge1xuICAgIGxldCBzdG9yZSA9IHt9O1xuICAgIGlmIChoZWxwZXJzLmlzU2VydmVyRW52KCkpIHtcbiAgICAgICAgLy8gc2VydmVyIHNpZGVcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHN0b3JlID0gaGFuZGxlU3RvcmUoU0VSVkVSX01JRERMRVdBUkVTX1BST0QpO1xuICAgICAgICB9XG4gICAgICAgIGVsc2Uge1xuICAgICAgICAgICAgc3RvcmUgPSBoYW5kbGVTdG9yZShTRVJWRVJfTUlERExFV0FSRVNfREVWKTtcbiAgICAgICAgfVxuICAgIH1cbiAgICBlbHNlIHtcbiAgICAgICAgLy8gY2xpZW50IHNpZGVcbiAgICAgICAgaWYgKHByb2Nlc3MuZW52Lk5PREVfRU5WID09PSAncHJvZHVjdGlvbicpIHtcbiAgICAgICAgICAgIHN0b3JlID0gaGFuZGxlU3RvcmUoTUlERExFV0FSRVNfUFJPRCk7XG4gICAgICAgIH1cbiAgICAgICAgZWxzZSB7XG4gICAgICAgICAgICBzdG9yZSA9IGhhbmRsZVN0b3JlKE1JRERMRVdBUkVTX0RFVik7XG4gICAgICAgIH1cbiAgICB9XG4gICAgaWYgKG1vZHVsZS5ob3QpIHtcbiAgICAgICAgbW9kdWxlLmhvdC5hY2NlcHQoJy4vcmVkdWNlcnMnLCAoKSA9PiB7XG4gICAgICAgICAgICBjb25zb2xlLmluZm8oJ2hvdCB1cGRhdGluZyByZWR1Y2VycycpO1xuICAgICAgICAgICAgY29uc3QgbmV4dFJvb3RSZWR1Y2VyID0gcmVxdWlyZSgnLi9yZWR1Y2VycycpLmRlZmF1bHQ7XG4gICAgICAgICAgICBzdG9yZS5yZXBsYWNlUmVkdWNlcihuZXh0Um9vdFJlZHVjZXIpO1xuICAgICAgICB9KTtcbiAgICB9XG4gICAgc3RvcmVbJ3J1blNhZ2EnXSA9IHNhZ2FNaWRkbGV3YXJlLnJ1bjtcbiAgICBzdG9yZVsnY2xvc2UnXSA9ICgpID0+IHN0b3JlLmRpc3BhdGNoKEVORCk7XG4gICAgcmV0dXJuIHN0b3JlO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9jb25maWd1cmVTdG9yZS50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZHV4LXRodW5rXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJyZWR1eC10aHVua1wiXG4gKiogbW9kdWxlIGlkID0gMzgxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgXyBmcm9tICdsb2Rhc2gnO1xuaW1wb3J0IHsgY29tYmluZVJlZHVjZXJzIH0gZnJvbSAncmVkdXgnO1xuaW1wb3J0IHsgcm91dGVyUmVkdWNlciBhcyByb3V0aW5nIH0gZnJvbSAncmVhY3Qtcm91dGVyLXJlZHV4JztcbmltcG9ydCBjb21wb25lbnRzIGZyb20gJy4vY29tcG9uZW50cyc7XG5pbXBvcnQgcGFnaW5hdGlvbiBmcm9tICcuL3BhZ2luYXRpb24nO1xuaW1wb3J0IHsgcmVkdWNlciBhcyBmb3JtIH0gZnJvbSAnYmV0dGVyLXJlZHV4LWZvcm0nO1xuaW1wb3J0ICogYXMgQWN0aW9uVHlwZXMgZnJvbSAnLi4vLi4vY29uc3RhbnRzL2FjdGlvblR5cGVzJztcbmZ1bmN0aW9uIGVycm9yTWVzc2FnZShzdGF0ZSA9IFtdLCBhY3Rpb24pIHtcbiAgICBjb25zdCB7IGVycm9yIH0gPSBhY3Rpb247XG4gICAgaWYgKGVycm9yKSB7XG4gICAgICAgIHJldHVybiBbLi4uc3RhdGUsIGFjdGlvbi5lcnJvci5tZXNzYWdlIHx8ICflj5HnlJ/mnKrnn6XplJnor6/vvIEnXTtcbiAgICB9XG4gICAgcmV0dXJuIHN0YXRlO1xufVxuZXhwb3J0IGZ1bmN0aW9uIGVudGl0aWVzKHN0YXRlID0ge30sIGFjdGlvbikge1xuICAgIGlmIChhY3Rpb24ucmVzcG9uc2UgJiYgYWN0aW9uLnJlc3BvbnNlLmVudGl0aWVzKSB7XG4gICAgICAgIHJldHVybiBfLm1lcmdlKHt9LCBzdGF0ZSwgYWN0aW9uLnJlc3BvbnNlLmVudGl0aWVzKTtcbiAgICB9XG4gICAgaWYgKGFjdGlvbi50eXBlID09PSBBY3Rpb25UeXBlcy5SRU1PVkVfRU5USVRZKSB7XG4gICAgICAgIGNvbnN0IHsgbmFtZSwgaWQgfSA9IGFjdGlvbjtcbiAgICAgICAgcmV0dXJuIF8uYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgW25hbWVdOiBfLm9taXQoc3RhdGVbbmFtZV0sIFtpZF0pXG4gICAgICAgIH0pO1xuICAgIH1cbiAgICByZXR1cm4gc3RhdGU7XG59XG5jb25zdCBERUZBVUxUX1ZJU1RPUl9TVEFURSA9IHsgdXNlcjogeyByb2xlOiAndmlzaXRvcicgfSwgaXNGZXRjaGluZzogZmFsc2UsIGRldGVybWluZWQ6IGZhbHNlIH07XG5leHBvcnQgZnVuY3Rpb24gc2Vzc2lvbihzdGF0ZSA9IERFRkFVTFRfVklTVE9SX1NUQVRFLCBhY3Rpb24pIHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQWN0aW9uVHlwZXMuQVVUSC5SRVFVRVNUOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgaXNGZXRjaGluZzogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgQWN0aW9uVHlwZXMuQVVUSC5TVUNDRVNTOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgaXNGZXRjaGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgZGV0ZXJtaW5lZDogdHJ1ZSxcbiAgICAgICAgICAgICAgICB1c2VyOiBhY3Rpb24ucmVzcG9uc2VcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIEFjdGlvblR5cGVzLkFVVEguRkFJTFVSRTpcbiAgICAgICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIGlzRmV0Y2hpbmc6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGRldGVybWluZWQ6IHRydWVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIEFjdGlvblR5cGVzLkxPR09VVC5TVUNDRVNTOlxuICAgICAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIERFRkFVTFRfVklTVE9SX1NUQVRFLCB7XG4gICAgICAgICAgICAgICAgZGV0ZXJtaW5lZDogdHJ1ZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufVxuY29uc3Qgcm9vdFJlZHVjZXIgPSBjb21iaW5lUmVkdWNlcnMoe1xuICAgIGNvbXBvbmVudHMsXG4gICAgZW50aXRpZXMsXG4gICAgZXJyb3JNZXNzYWdlLFxuICAgIHNlc3Npb24sXG4gICAgcm91dGluZyxcbiAgICBmb3JtLFxuICAgIHBhZ2luYXRpb25cbn0pO1xuZXhwb3J0IGRlZmF1bHQgcm9vdFJlZHVjZXI7XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL3JlZHVjZXJzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IHsgY29tYmluZVJlZHVjZXJzIH0gZnJvbSAncmVkdXgnO1xuaW1wb3J0ICogYXMgQUNUSU9OX1RZUEVTIGZyb20gJy4uLy4uLy4uL2NvbnN0YW50cy9hY3Rpb25UeXBlcyc7XG5pbXBvcnQgdmlld2VyIGZyb20gJy4vdmlld2VyJztcbmZ1bmN0aW9uIG5vdGlmaWNhdGlvbnMoc3RhdGUgPSBbXSwgYWN0aW9uKSB7XG4gICAgaWYgKGFjdGlvbi50eXBlID09PSBBQ1RJT05fVFlQRVMuTk9USUZJQ0FUSU9OLkhJREUpIHtcbiAgICAgICAgcmV0dXJuIHN0YXRlLm1hcChuID0+IG4uaWQgPT09IGFjdGlvbi5pZCA/IE9iamVjdC5hc3NpZ24oe30sIG4sIHsgdmlzaWJsZTogZmFsc2UgfSkgOiBuKTtcbiAgICB9XG4gICAgaWYgKGFjdGlvbi50eXBlID09PSBBQ1RJT05fVFlQRVMuTk9USUZJQ0FUSU9OLlNIT1cpIHtcbiAgICAgICAgcmV0dXJuIFsuLi5zdGF0ZSwge1xuICAgICAgICAgICAgICAgIHZpc2libGU6IHRydWUsXG4gICAgICAgICAgICAgICAgbWVzc2FnZTogYWN0aW9uLm1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgdHlwZTogYWN0aW9uLm1zZ1R5cGUsXG4gICAgICAgICAgICAgICAgaWQ6IGFjdGlvbi5pZFxuICAgICAgICAgICAgfV07XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZTtcbn1cbmZ1bmN0aW9uIGNvbmZpcm1Nb2RhbChzdGF0ZSA9IHt9LCBhY3Rpb24pIHtcbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5PUEVOX0NPTkZJUk1fTU9EQUwpIHtcbiAgICAgICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHN0YXRlLCB7IG9wZW46IHRydWUgfSwgYWN0aW9uLmRhdGEpO1xuICAgIH1cbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5DTE9TRV9DT05GSVJNX01PREFMKSB7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICBvcGVuOiBmYWxzZVxuICAgICAgICB9O1xuICAgIH1cbiAgICByZXR1cm4gc3RhdGU7XG59XG5mdW5jdGlvbiBtb2RhbChzdGF0ZSA9IHt9LCBhY3Rpb24pIHtcbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5NT0RBTC5PUEVOKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwgeyBvcGVuOiB0cnVlIH0sIGFjdGlvbi5kYXRhKTtcbiAgICB9XG4gICAgaWYgKGFjdGlvbi50eXBlID09PSBBQ1RJT05fVFlQRVMuTU9EQUwuQ0xPU0UpIHtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9wZW46IGZhbHNlXG4gICAgICAgIH07XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZTtcbn1cbmNvbnN0IGNvbXBvbmVudHMgPSBjb21iaW5lUmVkdWNlcnMoe1xuICAgIG5vdGlmaWNhdGlvbnMsXG4gICAgY29uZmlybU1vZGFsLFxuICAgIG1vZGFsLFxuICAgIHZpZXdlclxufSk7XG5leHBvcnQgZGVmYXVsdCBjb21wb25lbnRzO1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9yZWR1Y2Vycy9jb21wb25lbnRzL2luZGV4LnRzXG4gKiovIiwiaW1wb3J0IHsgY29tYmluZVJlZHVjZXJzIH0gZnJvbSAncmVkdXgnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCAqIGFzIEFDVElPTl9UWVBFUyBmcm9tICcuLi8uLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuaW1wb3J0ICogYXMgQ09OU1RBTlRTIGZyb20gJy4uLy4uLy4uL2NvbnN0YW50cyc7XG5jb25zdCBnZXRGbGFnID0gKHJlc2V0LCBjdXJyZW50RmxhZykgPT4ge1xuICAgIGlmICh0eXBlb2YgcmVzZXQgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiAhY3VycmVudEZsYWc7XG4gICAgfVxuICAgIHJldHVybiByZXNldDtcbn07XG5mdW5jdGlvbiBjb250ZW50cyhzdGF0ZSA9IHt9LCBhY3Rpb24pIHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5DQUxDX1NVQ0NFU1M6XG4gICAgICAgICAgICByZXR1cm4gXy5tZXJnZSh7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBbYWN0aW9uLmJvb2tJZF06IHtcbiAgICAgICAgICAgICAgICAgICAgY29tcHV0ZWQ6IGFjdGlvbi5jb21wdXRlZFxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn1cbmZ1bmN0aW9uIGNvbmZpZyhzdGF0ZSA9IHsgdGhlbWU6IENPTlNUQU5UUy5WSUVXRVJfREVGUy5USEVNRVMuV0hJVEUsIGlzU2Nyb2xsTW9kZTogdHJ1ZSB9LCBhY3Rpb24pIHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5TQ1JPTExfTU9ERV9UT0dHTEU6XG4gICAgICAgICAgICBjb25zdCB7IHJlc2V0IH0gPSBhY3Rpb247XG4gICAgICAgICAgICByZXR1cm4gXy5tZXJnZSh7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBpc1Njcm9sbE1vZGU6IGdldEZsYWcocmVzZXQsIHN0YXRlLmlzU2Nyb2xsTW9kZSlcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5WSUVXRVIuVEhFTUVfQ0hBTkdFOlxuICAgICAgICAgICAgcmV0dXJuIF8ubWVyZ2Uoe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgdGhlbWU6IGFjdGlvbi50aGVtZVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5GT05UX0NIQU5HRTpcbiAgICAgICAgICAgIHJldHVybiBfLm1lcmdlKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIGZvbnRTaXplOiBhY3Rpb24uZm9udFNpemVcbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5WSUVXRVIuQ09ORklHOlxuICAgICAgICAgICAgcmV0dXJuIF8ubWVyZ2Uoe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgYm9va0lkOiBhY3Rpb24uYm9va0lkXG4gICAgICAgICAgICB9LCBhY3Rpb24ucGF5bG9hZCk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufVxuZnVuY3Rpb24gcHJvZ3Jlc3Moc3RhdGUgPSB7fSwgYWN0aW9uKSB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5WSUVXRVIuQk9PS19QUk9HUkVTU19VUERBVEU6XG4gICAgICAgICAgICByZXR1cm4gXy5tZXJnZSh7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICBbYWN0aW9uLmlkXToge1xuICAgICAgICAgICAgICAgICAgICBpc0ZldGNoaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAgICAgcGVyY2VudGFnZTogYWN0aW9uLnBlcmNlbnRhZ2UsXG4gICAgICAgICAgICAgICAgICAgIHBhZ2VObzogYWN0aW9uLnBhZ2VOb1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH0pO1xuICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5WSUVXRVIuQk9PS19QUk9HUkVTU19ERVNUUk9ZOlxuICAgICAgICAgICAgcmV0dXJuIF8uYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgICAgIFthY3Rpb24uaWRdOiB7XG4gICAgICAgICAgICAgICAgICAgIGlzRmV0Y2hpbmc6IGZhbHNlXG4gICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgfSk7XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufVxuY29uc3QgcGFuZWwgPSAoc3RhdGUgPSB7IHNob3c6IGZhbHNlIH0sIGFjdGlvbikgPT4ge1xuICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgY2FzZSBBQ1RJT05fVFlQRVMuVklFV0VSLlBBTkVMX1RPR0dMRTpcbiAgICAgICAgICAgIGNvbnN0IHsgcmVzZXQgfSA9IGFjdGlvbjtcbiAgICAgICAgICAgIGNvbnN0IGEgPSBnZXRGbGFnKHJlc2V0LCBzdGF0ZS5zaG93KTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc2hvdzogYVxuICAgICAgICAgICAgfTtcbiAgICAgICAgZGVmYXVsdDpcbiAgICAgICAgICAgIHJldHVybiBzdGF0ZTtcbiAgICB9XG59O1xuY29uc3QgcHJlZmVyZW5jZSA9IChzdGF0ZSA9IHsgc2hvdzogZmFsc2UgfSwgYWN0aW9uKSA9PiB7XG4gICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICBjYXNlIEFDVElPTl9UWVBFUy5WSUVXRVIuUFJFRkVSRU5DRV9UT0dHTEU6XG4gICAgICAgICAgICBjb25zdCB7IHJlc2V0IH0gPSBhY3Rpb247XG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAgIHNob3c6IGdldEZsYWcocmVzZXQsIHN0YXRlLnNob3cpXG4gICAgICAgICAgICB9O1xuICAgICAgICBkZWZhdWx0OlxuICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgIH1cbn07XG5jb25zdCBuYXZpZ2F0aW9uID0gKHN0YXRlID0geyBzaG93OiBmYWxzZSB9LCBhY3Rpb24pID0+IHtcbiAgICBzd2l0Y2ggKGFjdGlvbi50eXBlKSB7XG4gICAgICAgIGNhc2UgQUNUSU9OX1RZUEVTLlZJRVdFUi5OQVZJR0FUSU9OX1RPR0dMRTpcbiAgICAgICAgICAgIGNvbnN0IHsgcmVzZXQgfSA9IGFjdGlvbjtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgc2hvdzogZ2V0RmxhZyhyZXNldCwgc3RhdGUuc2hvdylcbiAgICAgICAgICAgIH07XG4gICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICByZXR1cm4gc3RhdGU7XG4gICAgfVxufTtcbmNvbnN0IGNvbXBvbmVudHMgPSBjb21iaW5lUmVkdWNlcnMoe1xuICAgIHBhbmVsLFxuICAgIHByZWZlcmVuY2UsXG4gICAgbmF2aWdhdGlvblxufSk7XG5leHBvcnQgZGVmYXVsdCBjb21iaW5lUmVkdWNlcnMoe1xuICAgIGNvbmZpZyxcbiAgICBjb250ZW50cyxcbiAgICBwcm9ncmVzcyxcbiAgICBjb21wb25lbnRzXG59KTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvcmVkdWNlcnMvY29tcG9uZW50cy92aWV3ZXIudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBBQ1RJT05fVFlQRVMgZnJvbSAnLi9hY3Rpb25UeXBlcyc7XG5pbXBvcnQgKiBhcyBDT01NT04gZnJvbSAnLi9jb21tb24nO1xuaW1wb3J0ICogYXMgVklFV0VSX0RFRlMgZnJvbSAnLi92aWV3ZXJEZWZzJztcbmV4cG9ydCB7IEFDVElPTl9UWVBFUywgQ09NTU9OLCBWSUVXRVJfREVGUyB9O1xuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9jb25zdGFudHMvaW5kZXgudHNcbiAqKi8iLCJpbXBvcnQgcGFnaW5hdGUgZnJvbSAnLi9wYWdpbmF0ZSc7XG5pbXBvcnQgeyBjb21iaW5lUmVkdWNlcnMgfSBmcm9tICdyZWR1eCc7XG5pbXBvcnQgKiBhcyBBY3Rpb25UeXBlcyBmcm9tICcuLi8uLi9jb25zdGFudHMvYWN0aW9uVHlwZXMnO1xuaW1wb3J0IHsgY29tcHV0ZVBhZ2luYXRpb25TdGF0ZSwgREVGQVVMVF9QQUdJTkFUSU9OX1NUQVRFIH0gZnJvbSAnLi9wYWdpbmF0ZSc7XG5jb25zdCBERUZBVUxUX0tFWSA9ICdkZWZhdWx0JztcbmNvbnN0IFNFQVJDSF9LRVkgPSAnc2VhcmNoJztcbmNvbnN0IHBhcnNlVHlwZXMgPSBhY3Rpb25UeXBlcyA9PiB7XG4gICAgcmV0dXJuIFtcbiAgICAgICAgYWN0aW9uVHlwZXMuUkVRVUVTVCxcbiAgICAgICAgYWN0aW9uVHlwZXMuU1VDQ0VTUyxcbiAgICAgICAgYWN0aW9uVHlwZXMuRkFJTFVSRSxcbiAgICBdO1xufTtcbmNvbnN0IGdlbmVyYWxNYXBBY3Rpb25Ub0tleSA9IGFjdGlvbiA9PiB7XG4gICAgY29uc3QgeyBvcHRpb25zLCBrZXkgfSA9IGFjdGlvbjtcbiAgICBjb25zdCB7IHEgfSA9IG9wdGlvbnMgfHwge307XG4gICAgaWYgKGtleSkge1xuICAgICAgICByZXR1cm4ga2V5O1xuICAgIH1cbiAgICBpZiAocSkge1xuICAgICAgICByZXR1cm4gU0VBUkNIX0tFWTtcbiAgICB9XG4gICAgcmV0dXJuIERFRkFVTFRfS0VZO1xufTtcbmZ1bmN0aW9uIHBhZ2luYXRpb24oc3RhdGUgPSB7fSwgYWN0aW9uKSB7XG4gICAgY29uc3QgY29tYmluZWRSZWR1Y2VyID0gY29tYmluZVJlZHVjZXJzKHtcbiAgICAgICAgYm9va3M6IHBhZ2luYXRlKHtcbiAgICAgICAgICAgIG1hcEFjdGlvblRvS2V5OiBnZW5lcmFsTWFwQWN0aW9uVG9LZXksXG4gICAgICAgICAgICB0eXBlczogcGFyc2VUeXBlcyhBY3Rpb25UeXBlcy5CT09LUylcbiAgICAgICAgfSksXG4gICAgICAgIHVzZXJzOiBwYWdpbmF0ZSh7XG4gICAgICAgICAgICBtYXBBY3Rpb25Ub0tleTogZ2VuZXJhbE1hcEFjdGlvblRvS2V5LFxuICAgICAgICAgICAgdHlwZXM6IHBhcnNlVHlwZXMoQWN0aW9uVHlwZXMuVVNFUlMpXG4gICAgICAgIH0pLFxuICAgICAgICBhdXRob3JzOiAoKSA9PiAoc3RhdGUuYXV0aG9ycyB8fCB7fSksXG4gICAgICAgIGRvdWJhbkJvb2tzOiAoKSA9PiAoc3RhdGUuZG91YmFuQm9va3MgfHwge30pLFxuICAgICAgICBib29rU2hlbHZlczogKCkgPT4gKHN0YXRlLmJvb2tTaGVsdmVzIHx8IHt9KSxcbiAgICB9KTtcbiAgICByZXR1cm4gY29tYmluZWRSZWR1Y2VyKHN0YXRlLCBhY3Rpb24pO1xufVxuLy8gbGVnYWN5IHBhZ2luYXRpb24gc3VwcG9ydFxuY29uc3QgdXBkYXRlUGFnaW5hdGlvbiA9IChzdGF0ZSA9IERFRkFVTFRfUEFHSU5BVElPTl9TVEFURSwgYWN0aW9uLCBtZXJnZSkgPT4ge1xuICAgIGlmICghYWN0aW9uLnJlc3BvbnNlKSB7XG4gICAgICAgIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICAgICAgaXNGZXRjaGluZzogdHJ1ZVxuICAgICAgICB9KTtcbiAgICB9XG4gICAgZWxzZSB7XG4gICAgICAgIHJldHVybiBjb21wdXRlUGFnaW5hdGlvblN0YXRlKHN0YXRlLCBhY3Rpb24pO1xuICAgIH1cbn07XG5mdW5jdGlvbiBsZWdhY3lQYWdpbmF0aW9uKHN0YXRlID0ge30sIGFjdGlvbikge1xuICAgIGlmIChhY3Rpb24ucGFnaW5hdGlvbikge1xuICAgICAgICBjb25zdCB7IG5hbWUsIHEsIGtleSwgbWVyZ2UgfSA9IGFjdGlvbi5wYWdpbmF0aW9uO1xuICAgICAgICBjb25zdCBxS2V5ID0gcSA/IFNFQVJDSF9LRVkgOiBudWxsO1xuICAgICAgICBjb25zdCBmaW5hbEtleSA9IHFLZXkgfHwga2V5IHx8IERFRkFVTFRfS0VZO1xuICAgICAgICBjb25zdCBvcmlnaW5hbFN0YXRlID0gKHN0YXRlW25hbWVdICYmIHN0YXRlW25hbWVdW2ZpbmFsS2V5XSkgfHwgdW5kZWZpbmVkO1xuICAgICAgICByZXR1cm4gT2JqZWN0LmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgIFtuYW1lXToge1xuICAgICAgICAgICAgICAgIFtmaW5hbEtleV06IHVwZGF0ZVBhZ2luYXRpb24ob3JpZ2luYWxTdGF0ZSwgYWN0aW9uLCBtZXJnZSlcbiAgICAgICAgICAgIH1cbiAgICAgICAgfSk7XG4gICAgfVxuICAgIHJldHVybiBzdGF0ZTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIGNvbWJpbmVkKHN0YXRlLCBhY3Rpb24pIHtcbiAgICByZXR1cm4gcGFnaW5hdGlvbihsZWdhY3lQYWdpbmF0aW9uKHN0YXRlLCBhY3Rpb24pLCBhY3Rpb24pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvaXNvbW9ycGhpYy9zdG9yZS9yZWR1Y2Vycy9wYWdpbmF0aW9uLnRzXG4gKiovIiwiaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmV4cG9ydCBjb25zdCBERUZBVUxUX1BBR0lOQVRJT05fU1RBVEUgPSB7XG4gICAgaXNGZXRjaGluZzogZmFsc2UsXG4gICAgcGFnZXM6IHt9LFxuICAgIGlkczogW10sXG4gICAgcGFnZUNvdW50OiAwLFxufTtcbmV4cG9ydCBmdW5jdGlvbiBjb21wdXRlUGFnaW5hdGlvblN0YXRlKHN0YXRlLCBhY3Rpb24pIHtcbiAgICBjb25zdCBjdXJyZW50UGFnZSA9IGFjdGlvbi5yZXNwb25zZS5fbmV4dFxuICAgICAgICA/IGFjdGlvbi5yZXNwb25zZS5fbmV4dC5wYWdlIC0gMVxuICAgICAgICA6IChhY3Rpb24ucmVzcG9uc2UuX2xhc3QgJiYgYWN0aW9uLnJlc3BvbnNlLl9sYXN0LnBhZ2UgfHwgMSk7XG4gICAgY29uc3QgcGFnZXMgPSBfLmFzc2lnbih7fSwge1xuICAgICAgICBbY3VycmVudFBhZ2VdOiBhY3Rpb24ucmVzcG9uc2UucmVzdWx0XG4gICAgfSk7XG4gICAgcmV0dXJuIF8uYXNzaWduKHt9LCBzdGF0ZSwge1xuICAgICAgICBpc0ZldGNoaW5nOiBmYWxzZSxcbiAgICAgICAgcGFnZXMsXG4gICAgICAgIGlkczogXy51bmlvbihzdGF0ZS5pZHMsIGFjdGlvbi5yZXNwb25zZS5yZXN1bHQpLFxuICAgICAgICAvLyDlpoLmnpzkuI3kvb/nlKggbnVsbCDlnKjlpJblsYLnmoQgbWVyZ2Ug5Lya5b+955WlIHVuZGVmaW5lZCDku47ogIzlr7zoh7TkuIDkupvovrnnvJjpl67pophcbiAgICAgICAgbmV4dDogYWN0aW9uLnJlc3BvbnNlLl9uZXh0IHx8IG51bGwsXG4gICAgICAgIGxhc3Q6IGFjdGlvbi5yZXNwb25zZS5fbGFzdCB8fCBudWxsLFxuICAgICAgICBwYWdlQ291bnQ6IHN0YXRlLnBhZ2VDb3VudCArIDFcbiAgICB9KTtcbn1cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHBhZ2luYXRlKHsgdHlwZXMsIG1hcEFjdGlvblRvS2V5IH0pIHtcbiAgICBpZiAoIUFycmF5LmlzQXJyYXkodHlwZXMpIHx8IHR5cGVzLmxlbmd0aCAhPT0gMykge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHR5cGVzIHRvIGJlIGFuIGFycmF5IG9mIHRocmVlIGVsZW1lbnRzLicpO1xuICAgIH1cbiAgICBpZiAoIXR5cGVzLmV2ZXJ5KHQgPT4gdHlwZW9mIHQgPT09ICdzdHJpbmcnKSkge1xuICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIHR5cGVzIHRvIGJlIHN0cmluZ3MuJyk7XG4gICAgfVxuICAgIGlmICh0eXBlb2YgbWFwQWN0aW9uVG9LZXkgIT09ICdmdW5jdGlvbicpIHtcbiAgICAgICAgdGhyb3cgbmV3IEVycm9yKCdFeHBlY3RlZCBtYXBBY3Rpb25Ub0tleSB0byBiZSBhIGZ1bmN0aW9uLicpO1xuICAgIH1cbiAgICBjb25zdCBbcmVxdWVzdFR5cGUsIHN1Y2Nlc3NUeXBlLCBmYWlsdXJlVHlwZV0gPSB0eXBlcztcbiAgICBmdW5jdGlvbiB1cGRhdGVQYWdpbmF0aW9uKHN0YXRlID0gREVGQVVMVF9QQUdJTkFUSU9OX1NUQVRFLCBhY3Rpb24pIHtcbiAgICAgICAgc3dpdGNoIChhY3Rpb24udHlwZSkge1xuICAgICAgICAgICAgY2FzZSByZXF1ZXN0VHlwZTpcbiAgICAgICAgICAgICAgICByZXR1cm4gXy5hc3NpZ24oe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgICAgIGlzRmV0Y2hpbmc6IHRydWVcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGNhc2Ugc3VjY2Vzc1R5cGU6XG4gICAgICAgICAgICAgICAgcmV0dXJuIGNvbXB1dGVQYWdpbmF0aW9uU3RhdGUoc3RhdGUsIGFjdGlvbik7XG4gICAgICAgICAgICBjYXNlIGZhaWx1cmVUeXBlOlxuICAgICAgICAgICAgICAgIHJldHVybiBfLmFzc2lnbih7fSwgc3RhdGUsIHtcbiAgICAgICAgICAgICAgICAgICAgaXNGZXRjaGluZzogZmFsc2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgICAgICB9XG4gICAgfVxuICAgIHJldHVybiBmdW5jdGlvbiB1cGRhdGVQYWdpbmF0aW9uQnlLZXkoc3RhdGUgPSB7fSwgYWN0aW9uKSB7XG4gICAgICAgIHN3aXRjaCAoYWN0aW9uLnR5cGUpIHtcbiAgICAgICAgICAgIGNhc2UgcmVxdWVzdFR5cGU6XG4gICAgICAgICAgICBjYXNlIHN1Y2Nlc3NUeXBlOlxuICAgICAgICAgICAgY2FzZSBmYWlsdXJlVHlwZTpcbiAgICAgICAgICAgICAgICBjb25zdCBrZXkgPSBtYXBBY3Rpb25Ub0tleShhY3Rpb24pO1xuICAgICAgICAgICAgICAgIGlmICh0eXBlb2Yga2V5ICE9PSAnc3RyaW5nJykge1xuICAgICAgICAgICAgICAgICAgICB0aHJvdyBuZXcgRXJyb3IoJ0V4cGVjdGVkIGtleSB0byBiZSBhIHN0cmluZy4nKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcmV0dXJuIF8ubWVyZ2Uoe30sIHN0YXRlLCB7XG4gICAgICAgICAgICAgICAgICAgIFtrZXldOiB1cGRhdGVQYWdpbmF0aW9uKHN0YXRlW2tleV0sIGFjdGlvbilcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgIGRlZmF1bHQ6XG4gICAgICAgICAgICAgICAgcmV0dXJuIHN0YXRlO1xuICAgICAgICB9XG4gICAgfTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvcmVkdWNlcnMvcGFnaW5hdGUudHNcbiAqKi8iLCJpbXBvcnQgY2FsbEFwaSBmcm9tICcuLi8uLi9zZXJ2aWNlcy91dGlscy9jYWxsQXBpJztcbmltcG9ydCBoZWxwZXJzIGZyb20gJy4uLy4uL2hlbHBlcnMnO1xuaW1wb3J0IF8gZnJvbSAnbG9kYXNoJztcbmltcG9ydCBoYW5kbGVSZXNwb25zZSBmcm9tICcuLi8uLi9zZXJ2aWNlcy91dGlscy9oYW5kbGVSZXNwb25zZSc7XG5leHBvcnQgZGVmYXVsdCBzdG9yZSA9PiBuZXh0ID0+IGFjdGlvbiA9PiB7XG4gICAgY29uc3QgQ0FMTF9BUEkgPSBhY3Rpb24uQ0FMTF9BUEk7XG4gICAgaWYgKHR5cGVvZiBDQUxMX0FQSSA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbiAgICB9XG4gICAgbGV0IHsgZW5kcG9pbnQsIGFwaVVybCwgb3B0aW9ucywgcGFnaW5hdGlvbiB9ID0gQ0FMTF9BUEk7XG4gICAgY29uc3QgeyB0eXBlcywgc2NoZW1hIH0gPSBDQUxMX0FQSTtcbiAgICBjb25zdCBbcmVxdWVzdFR5cGUsIHN1Y2Nlc3NUeXBlLCBmYWlsdXJlVHlwZV0gPSB0eXBlcztcbiAgICBjb25zdCBhY3Rpb25XaXRoID0gKHsgZGF0YSwgaGFzUGFnaW5hdGlvbiB9KSA9PiB7XG4gICAgICAgIGxldCBmaW5hbEFjdGlvbiA9IE9iamVjdC5hc3NpZ24oe30sIGFjdGlvbiwgZGF0YSk7XG4gICAgICAgIGZpbmFsQWN0aW9uID0gXy5vbWl0KGZpbmFsQWN0aW9uLCBbJ0NBTExfQVBJJ10pO1xuICAgICAgICBpZiAoIWhhc1BhZ2luYXRpb24pIHtcbiAgICAgICAgICAgIGZpbmFsQWN0aW9uID0gXy5vbWl0KGZpbmFsQWN0aW9uLCBbJ0NBTExfQVBJJywgJ3BhZ2luYXRpb24nXSk7XG4gICAgICAgIH1cbiAgICAgICAgcmV0dXJuIGZpbmFsQWN0aW9uO1xuICAgIH07XG4gICAgbmV4dChhY3Rpb25XaXRoKHtcbiAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgdHlwZTogcmVxdWVzdFR5cGUsXG4gICAgICAgICAgICBwYWdpbmF0aW9uXG4gICAgICAgIH0sXG4gICAgICAgIGhhc1BhZ2luYXRpb246IEJvb2xlYW4ocGFnaW5hdGlvbilcbiAgICB9KSk7XG4gICAgaWYgKHR5cGVvZiBlbmRwb2ludCA9PT0gJ2Z1bmN0aW9uJykge1xuICAgICAgICBlbmRwb2ludCA9IGVuZHBvaW50KHN0b3JlLmdldFN0YXRlKCkpO1xuICAgIH1cbiAgICBpZiAodHlwZW9mIGFwaVVybCA9PT0gJ3VuZGVmaW5lZCcpIHtcbiAgICAgICAgYXBpVXJsID0gaGVscGVycy5nZXRBcGlSb290KCk7XG4gICAgfVxuICAgIGNvbnN0IGZ1bGxVcmwgPSBgJHthcGlVcmx9LyR7ZW5kcG9pbnR9YDtcbiAgICByZXR1cm4gY2FsbEFwaShmdWxsVXJsLCBvcHRpb25zIHx8IHt9KS50aGVuKHJlc3BvbnNlID0+IHtcbiAgICAgICAgY29uc3Qgbm9ybWFsaXplZFJlcyA9IGhhbmRsZVJlc3BvbnNlKHJlc3BvbnNlLCBzY2hlbWEpO1xuICAgICAgICBsZXQgZmluYWxBY3Rpb24gPSB7XG4gICAgICAgICAgICByZXNwb25zZTogbm9ybWFsaXplZFJlcyxcbiAgICAgICAgICAgIHR5cGU6IHN1Y2Nlc3NUeXBlLFxuICAgICAgICAgICAgcGFnaW5hdGlvblxuICAgICAgICB9O1xuICAgICAgICByZXR1cm4gbmV4dChkaXNwYXRjaCA9PiB7XG4gICAgICAgICAgICBkaXNwYXRjaChhY3Rpb25XaXRoKHsgZGF0YTogZmluYWxBY3Rpb24sIGhhc1BhZ2luYXRpb246IEJvb2xlYW4ocGFnaW5hdGlvbikgfSkpO1xuICAgICAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgICAgICBvazogdHJ1ZSxcbiAgICAgICAgICAgICAgICByZXNwb25zZVxuICAgICAgICAgICAgfTtcbiAgICAgICAgfSk7XG4gICAgfSwgZXJyb3IgPT4gbmV4dChkaXNwYXRjaCA9PiB7XG4gICAgICAgIGRpc3BhdGNoKGFjdGlvbldpdGgoe1xuICAgICAgICAgICAgZGF0YToge1xuICAgICAgICAgICAgICAgIHR5cGU6IGZhaWx1cmVUeXBlLFxuICAgICAgICAgICAgICAgIHBhZ2luYXRpb24sXG4gICAgICAgICAgICAgICAgZXJyb3JcbiAgICAgICAgICAgIH0sXG4gICAgICAgICAgICBoYXNQYWdpbmF0aW9uOiBCb29sZWFuKHBhZ2luYXRpb24pXG4gICAgICAgIH0pKTtcbiAgICAgICAgcmV0dXJuIHtcbiAgICAgICAgICAgIG9rOiBmYWxzZSxcbiAgICAgICAgICAgIGVycm9yXG4gICAgICAgIH07XG4gICAgfSkpO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9hcGkudHNcbiAqKi8iLCJpbXBvcnQgKiBhcyBBQ1RJT05fVFlQRVMgZnJvbSAnLi4vLi4vY29uc3RhbnRzL2FjdGlvblR5cGVzJztcbmV4cG9ydCBkZWZhdWx0IHN0b3JlID0+IG5leHQgPT4gYWN0aW9uID0+IHtcbiAgICBpZiAoYWN0aW9uLnR5cGUgPT09IEFDVElPTl9UWVBFUy5ET1VCQU5fQk9PS1MuU1VDQ0VTUykge1xuICAgICAgICBhY3Rpb24ucmVzcG9uc2UucmVzdWx0ID0gYWN0aW9uLnJlc3BvbnNlLnJlc3VsdC5ib29rcztcbiAgICB9XG4gICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL21pZGRsZXdhcmUvbW9kaWZ5UmVzcG9uc2UudHNcbiAqKi8iLCJleHBvcnQgZGVmYXVsdCBzdG9yZSA9PiBuZXh0ID0+IGFjdGlvbiA9PiB7XG4gICAgaWYgKHR5cGVvZiBhY3Rpb24uU0VSVkVSX1NUT1JFID09PSAndW5kZWZpbmVkJykge1xuICAgICAgICByZXR1cm4gbmV4dChhY3Rpb24pO1xuICAgIH1cbiAgICBjb25zdCBhY3Rpb25Cb2R5ID0gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgIHJlc29sdmUoYWN0aW9uLlNFUlZFUl9TVE9SRS5ib2R5KTtcbiAgICB9KTtcbiAgICByZXR1cm4gYWN0aW9uQm9keS50aGVuKGJvZHkgPT4ge1xuICAgICAgICByZXR1cm4gbmV4dChkaXNwYXRjaCA9PiB7XG4gICAgICAgICAgICBkaXNwYXRjaChib2R5KTtcbiAgICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAgICAgb2s6IHRydWUsXG4gICAgICAgICAgICAgICAgcmVzcG9uc2U6IGFjdGlvbi5ib2R5LnJlc3BvbnNlXG4gICAgICAgICAgICB9O1xuICAgICAgICB9KTtcbiAgICB9KTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL21pZGRsZXdhcmUvaGFuZGxlU2VydmVyU3RvcmUudHNcbiAqKi8iLCJpbXBvcnQgeyBJTklUSUFMX1NUQVRFIH0gZnJvbSAnLi4vY29uc3RhbnRzL2NvbW1vbic7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBoYW5kbGVJbml0aWFsU3RhdGUoKSB7XG4gICAgaWYgKHR5cGVvZiB3aW5kb3cgPT09ICd1bmRlZmluZWQnKSB7XG4gICAgICAgIHJldHVybiB7fTtcbiAgICB9XG4gICAgcmV0dXJuIHdpbmRvd1tJTklUSUFMX1NUQVRFXSB8fCB7fTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvaGFuZGxlSW5pdGlhbFN0YXRlLnRzXG4gKiovIiwiZXhwb3J0IGRlZmF1bHQgc3RvcmUgPT4gbmV4dCA9PiBhY3Rpb24gPT4ge1xuICAgIGNvbnNvbGUuaW5mbyhhY3Rpb24udHlwZSk7XG4gICAgbmV4dChhY3Rpb24pO1xufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9sb2dBY3Rpb25UeXBlcy50c1xuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInJlZHV4LWxvZ2dlclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicmVkdXgtbG9nZ2VyXCJcbiAqKiBtb2R1bGUgaWQgPSAzOTNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCBhcGkgZnJvbSAnLi9hcGknO1xuaW1wb3J0IG1vZGlmeVJlc3BvbnNlIGZyb20gJy4vbW9kaWZ5UmVzcG9uc2UnO1xuaW1wb3J0IGhhbmRsZVNlcnZlclN0b3JlIGZyb20gJy4vaGFuZGxlU2VydmVyU3RvcmUnO1xuaW1wb3J0IGxvZ0FjdGlvblR5cGVzIGZyb20gJy4vbG9nQWN0aW9uVHlwZXMnO1xuaW1wb3J0IGNhY2hlIGZyb20gJy4vY2FjaGUnO1xuZXhwb3J0IGRlZmF1bHQge1xuICAgIGFwaSxcbiAgICBtb2RpZnlSZXNwb25zZSxcbiAgICBoYW5kbGVTZXJ2ZXJTdG9yZSxcbiAgICBsb2dBY3Rpb25UeXBlcyxcbiAgICBjYWNoZVxufTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL2lzb21vcnBoaWMvc3RvcmUvbWlkZGxld2FyZS9pbmRleC50c1xuICoqLyIsImNvbnN0IFNVQ0NFU1MgPSAnU1VDQ0VTUyc7XG5jb25zdCBpc1N1Y2Nlc3NBY3Rpb24gPSBhY3Rpb24gPT4ge1xuICAgIC8vIGNvbnNvbGUubG9nKGFjdGlvbilcbiAgICAvLyByZXR1cm4gdHJ1ZVxuICAgIC8vIHJldHVybiBfLmxhc3QoYWN0aW9uLnR5cGUuc3BsaXQoJy8nKSkgPT09IFNVQ0NFU1Ncbn07XG5jb25zdCBjYWNoZVJlc3BvbnNlQWN0aW9uID0gYWN0aW9uID0+IHtcbiAgICAvLyBjb25zb2xlLmxvZygnY2FjaGVkJylcbn07XG5leHBvcnQgZGVmYXVsdCBzdG9yZSA9PiBuZXh0ID0+IGFjdGlvbiA9PiB7XG4gICAgLy8gaWYgKGFjdGlvbi5jYWNoZUtleSkge1xuICAgIC8vICAgLy8gZnVuY3Rpb24qIGdlbigpIHtcbiAgICAvLyAgIC8vICAgeWllbGQgMVxuICAgIC8vICAgLy8gfVxuICAgIC8vICAgLy8gY29uc3QgZnVjayA9IGdlbigpXG4gICAgLy8gICAvLyBjb25zb2xlLmxvZyhmdWNrLm5leHQoKSlcbiAgICAvLyAgIG5leHQoe1xuICAgIC8vICAgICB0eXBlOiAnY2FjaGUnXG4gICAgLy8gICB9KVxuICAgIC8vICAgLy8gcmV0dXJuIGZhbHNlXG4gICAgLy8gfVxuICAgIC8vIGlmIChhY3Rpb24uY2FjaGVLZXkgJiYgaXNTdWNjZXNzQWN0aW9uKGFjdGlvbikpIHtcbiAgICAvLyAgIGNhY2hlUmVzcG9uc2VBY3Rpb24oYWN0aW9uKVxuICAgIC8vICAgbmV4dChhY3Rpb24pXG4gICAgLy8gICByZXR1cm4gZmFsc2VcbiAgICAvLyB9XG4gICAgcmV0dXJuIG5leHQoYWN0aW9uKTtcbn07XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3NyYy9pc29tb3JwaGljL3N0b3JlL21pZGRsZXdhcmUvY2FjaGUudHNcbiAqKi8iLCJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IEVycm9yUGFnZSBmcm9tICcuL2NvbXBvbmVudHMvRXJyb3JQYWdlJztcbmltcG9ydCB7IHJlbmRlclRvU3RhdGljTWFya3VwIH0gZnJvbSAncmVhY3QtZG9tL3NlcnZlcic7XG5jb25zdCBFUlJPUl9ET0NfVElUTEUgPSAn5pyN5Yqh5Zmo6ZSZ6K+vJztcbmNvbnN0IEVSUk9SX1BBR0VfVElUTEUgPSAn6aKd77yM5Ly85LmO5Ye65LqG54K554q25Ya1JztcbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uIHJlbmRlcjUwMChtZXNzYWdlLCBpc1Byb2QpIHtcbiAgICByZXR1cm4gcmVuZGVyVG9TdGF0aWNNYXJrdXAoUmVhY3QuY3JlYXRlRWxlbWVudChFcnJvclBhZ2UsIHsgaXNQcm9kOiBpc1Byb2QsIG1lc3NhZ2U6IG1lc3NhZ2UsIHRpdGxlOiBFUlJPUl9QQUdFX1RJVExFLCBkb2NUaXRsZTogRVJST1JfRE9DX1RJVExFIH0pKTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9yZW5kZXIvcmVuZGVyNTAwLnRzeFxuICoqLyIsImltcG9ydCBQYWdlIGZyb20gJy4vUGFnZSc7XG5pbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnO1xuaW1wb3J0IHsgcmVuZGVyVG9TdHJpbmcgfSBmcm9tICdyZWFjdC1kb20vc2VydmVyJztcbmltcG9ydCBBcHBFcnJvciBmcm9tICcuLi8uLi8uLi9pc29tb3JwaGljL2NvbXBvbmVudHMvQXBwRXJyb3InO1xuZnVuY3Rpb24gRXJyb3JQYWdlKHByb3BzKSB7XG4gICAgY29uc3QgeyBpc1Byb2QsIG1lc3NhZ2UsIGRvY1RpdGxlLCB0aXRsZSB9ID0gcHJvcHM7XG4gICAgcmV0dXJuIChSZWFjdC5jcmVhdGVFbGVtZW50KFBhZ2UsIHsgaXNQcm9kOiBpc1Byb2QsIHRpdGxlOiBkb2NUaXRsZSwgbm9TY3JpcHQ6IHRydWUsIGFwcE1hcmt1cDogcmVuZGVyVG9TdHJpbmcoUmVhY3QuY3JlYXRlRWxlbWVudChBcHBFcnJvciwgeyB0aXRsZTogdGl0bGUsIG1lc3NhZ2U6IG1lc3NhZ2UgfSkpIH0pKTtcbn1cbmV4cG9ydCBkZWZhdWx0IEVycm9yUGFnZTtcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9yZW5kZXIvY29tcG9uZW50cy9FcnJvclBhZ2UudHN4XG4gKiovIiwiaW1wb3J0IGFwcENvbmZpZyBmcm9tICcuLi9hcHAuY29uZmlnJztcbmltcG9ydCBwcmludCBmcm9tICcuL3V0aWxzL3ByaW50JztcbmNvbnN0IGh0dHAgPSByZXF1aXJlKCdodHRwJyk7XG5jb25zdCBwb3J0ID0gYXBwQ29uZmlnLnBvcnQ7XG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBib290c3RyYXAoYXBwLCB7IHByb2R1Y3Rpb24sIHJlbmRlciwgaG90LCByb3V0ZSB9KSB7XG4gICAgbGV0IGZlYXR1cmVzID0gW107XG4gICAgaWYgKGhvdCkge1xuICAgICAgICBmZWF0dXJlcy5wdXNoKCdob3QnKTtcbiAgICB9XG4gICAgaWYgKHJlbmRlcikge1xuICAgICAgICBmZWF0dXJlcy5wdXNoKCdzZXJ2ZXIgcmVuZGVyaW5nJyk7XG4gICAgfVxuICAgIGVsc2UgaWYgKHJvdXRlKSB7XG4gICAgICAgIGZlYXR1cmVzLnB1c2goJ3NlcnZlciByb3V0aW5nJyk7XG4gICAgfVxuICAgIGVsc2Uge1xuICAgICAgICBmZWF0dXJlcy5wdXNoKCdoYXNoIHJvdXRpbmcnKTtcbiAgICB9XG4gICAgYXBwLnNldCgncG9ydCcsIHBvcnQpO1xuICAgIGNvbnN0IHNlcnZlciA9IGh0dHAuY3JlYXRlU2VydmVyKGFwcCk7XG4gICAgc2VydmVyLmxpc3Rlbihwb3J0KTtcbiAgICBmZWF0dXJlcyA9IGZlYXR1cmVzLm1hcChmZWF0dXJlID0+IGBbJHtmZWF0dXJlfV1gKS5qb2luKCcgJyk7XG4gICAgcHJpbnQuaW5mbyhgU2VydmVyIHJ1bm5pbmcgaW4gJHtwcm9kdWN0aW9uID8gJ3Byb2R1Y3Rpb24nIDogJ2RldmVsb3BtZW50J30gKCR7cG9ydH0pICR7ZmVhdHVyZXN9YCk7XG4gICAgaWYgKGhvdCkge1xuICAgICAgICBjb25zb2xlLmluZm8oJ3dlYnBhY2sgYnVpbGRpbmcuLi4nKTtcbiAgICB9XG4gICAgcmV0dXJuIGFwcDtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9ib290c3RyYXAudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJodHRwXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJodHRwXCJcbiAqKiBtb2R1bGUgaWQgPSAzOTlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImltcG9ydCB3ZWJwYWNrIGZyb20gJ3dlYnBhY2snO1xuaW1wb3J0IHdlYnBhY2tDb25maWcgZnJvbSAnLi93ZWJwYWNrLmhvdC5jb25maWcnO1xuaW1wb3J0IGNvbWJpbmVNaWRkbGV3YXJlIGZyb20gJy4uL3V0aWxzL2NvbWJpbmUtbWlkZGxld2FyZSc7XG5jb25zdCB3ZWJwYWNrRGV2TWlkZGxld2FyZSA9IHJlcXVpcmUoJ3dlYnBhY2stZGV2LW1pZGRsZXdhcmUnKTtcbmNvbnN0IHdlYnBhY2tIb3RNaWRkbGV3YXJlID0gcmVxdWlyZSgnd2VicGFjay1ob3QtbWlkZGxld2FyZScpO1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gaG90TW9kdWxlUmVwbGFjZW1lbnQoKSB7XG4gICAgY29uc3QgY29tcGlsZXIgPSB3ZWJwYWNrKHdlYnBhY2tDb25maWcpO1xuICAgIHJldHVybiBjb21iaW5lTWlkZGxld2FyZShbXG4gICAgICAgIHdlYnBhY2tEZXZNaWRkbGV3YXJlKGNvbXBpbGVyLCB7IG5vSW5mbzogdHJ1ZSwgcHVibGljUGF0aDogd2VicGFja0NvbmZpZy5vdXRwdXQucHVibGljUGF0aCB9KSxcbiAgICAgICAgd2VicGFja0hvdE1pZGRsZXdhcmUoY29tcGlsZXIpLFxuICAgIF0pO1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi9zcmMvc2VydmVyL2Rldi10b29scy9ob3QtbW9kdWxlLXJlcGxhY2VtZW50LnRzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwid2VicGFja1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwid2VicGFja1wiXG4gKiogbW9kdWxlIGlkID0gNDAxXG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJpbXBvcnQgd2VicGFjayBmcm9tICd3ZWJwYWNrJztcbmNvbnN0IGJhc2UgPSByZXF1aXJlKCcuLi8uLi8uLi93ZWJwYWNrL2Jhc2UnKTtcbmNvbnN0IHBhdGhzID0gYmFzZS52YXJzLnBhdGhzO1xuY29uc3QgRXh0cmFjdFRleHRQbHVnaW4gPSByZXF1aXJlKCdleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4nKTtcbmNvbnN0IGNvbmZpZyA9IHtcbiAgICBlbnRyeToge1xuICAgICAgICBhcHA6IFtcbiAgICAgICAgICAgIC8vIOmcgOimgeaUvuWcqOesrOS4gOS4qlxuICAgICAgICAgICAgJ3JlYWN0LWhvdC1sb2FkZXIvcGF0Y2gnLFxuICAgICAgICAgICAgJ3dlYnBhY2staG90LW1pZGRsZXdhcmUvY2xpZW50JyxcbiAgICAgICAgICAgICdiYWJlbC1wb2x5ZmlsbCcsXG4gICAgICAgICAgICBwYXRocy5pc29tb3JwaGljXG4gICAgICAgIF1cbiAgICB9LFxuICAgIG91dHB1dDoge1xuICAgICAgICBwYXRoOiBwYXRocy5idWlsdCxcbiAgICAgICAgZmlsZW5hbWU6ICdbbmFtZV0uanMnLFxuICAgICAgICBwdWJsaWNQYXRoOiAnaHR0cDovL2xvY2FsaG9zdDozMDAwL2J1aWx0LycsXG4gICAgfSxcbiAgICBwbHVnaW5zOiBbXG4gICAgICAgIGJhc2UucGx1Z2lucy5kZXZFbnYoKSxcbiAgICAgICAgLi4uYmFzZS5wbHVnaW5zLmRsbFJlZmVyZW5jZXMoKSxcbiAgICAgICAgbmV3IHdlYnBhY2suSG90TW9kdWxlUmVwbGFjZW1lbnRQbHVnaW4oKSxcbiAgICAgICAgbmV3IHdlYnBhY2suTm9FcnJvcnNQbHVnaW4oKSxcbiAgICAgICAgbmV3IEV4dHJhY3RUZXh0UGx1Z2luKCdbbmFtZV0uY3NzJywge1xuICAgICAgICAgICAgYWxsQ2h1bmtzOiB0cnVlXG4gICAgICAgIH0pLFxuICAgIF0sXG4gICAgZGV2dG9vbDogJ2lubGluZS1zb3VyY2UtbWFwJyxcbiAgICBtb2R1bGU6IHtcbiAgICAgICAgbG9hZGVyczogW1xuICAgICAgICAgICAgYmFzZS5sb2FkZXJzLmltYWdlKCksXG4gICAgICAgICAgICBiYXNlLmxvYWRlcnMuc2Fzcyh7XG4gICAgICAgICAgICAgICAgc291cmNlTWFwOiB0cnVlLFxuICAgICAgICAgICAgICAgIGV4dHJhY3Q6IHRydWUsXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGJhc2UubG9hZGVycy5wb3N0Y3NzKHtcbiAgICAgICAgICAgICAgICBzb3VyY2VNYXA6IHRydWUsXG4gICAgICAgICAgICAgICAgZXh0cmFjdDogdHJ1ZSxcbiAgICAgICAgICAgIH0pLFxuICAgICAgICAgICAgYmFzZS5sb2FkZXJzLmJhYmVsKCksXG4gICAgICAgICAgICBiYXNlLmxvYWRlcnMudHlwZXNjcmlwdCh7XG4gICAgICAgICAgICAgICAgb2ZmaWNpYWxMb2FkZXI6IGZhbHNlLFxuICAgICAgICAgICAgICAgIGlzSG90OiB0cnVlXG4gICAgICAgICAgICB9KSxcbiAgICAgICAgICAgIGJhc2UubG9hZGVycy5qc29uKClcbiAgICAgICAgXVxuICAgIH0sXG4gICAgc2Fzc0xvYWRlcjogYmFzZS5sb2FkZXJzLmxvYWRlckNvbmZpZy5zYXNzTG9hZGVyKCksXG4gICAgcG9zdGNzczogYmFzZS5sb2FkZXJzLmxvYWRlckNvbmZpZy5wb3N0Y3NzKCksXG4gICAgcmVzb2x2ZTogYmFzZS5jb21tb24ucmVzb2x2ZVxufTtcbmV4cG9ydCBkZWZhdWx0IGNvbmZpZztcblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci9kZXYtdG9vbHMvd2VicGFjay5ob3QuY29uZmlnLnRzXG4gKiovIiwiY29uc3QgdmFycyA9IHJlcXVpcmUoJy4vdmFyaWFibGVzJylcbmNvbnN0IGxvYWRlcnMgPSByZXF1aXJlKCcuL2xvYWRlcnMnKVxuY29uc3QgcGx1Z2lucyA9IHJlcXVpcmUoJy4vcGx1Z2lucycpXG5jb25zdCBjb21tb24gPSByZXF1aXJlKCcuL2NvbW1vbicpXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICB2YXJzLFxuICBsb2FkZXJzLFxuICBwbHVnaW5zLFxuICBjb21tb24sXG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3dlYnBhY2svYmFzZS9pbmRleC5qc1xuICoqLyIsImNvbnN0IHBhdGggPSByZXF1aXJlKCdwYXRoJylcblxuY29uc3QgcGF0aFByZWZpeCA9IHByb2Nlc3MuY3dkKClcblxuY29uc3QgcGF0aHMgPSB7XG4gIHJvb3Q6IHBhdGhQcmVmaXgsXG4gIHNyYzogcGF0aC5qb2luKHBhdGhQcmVmaXgsICdzcmMnKSxcbiAgYnVpbHQ6IHBhdGguam9pbihwYXRoUHJlZml4LCAncHVibGljL2J1aWx0JyksXG4gIGJ1aWx0UHJvZDogcGF0aC5qb2luKHBhdGhQcmVmaXgsICdwdWJsaWMvYnVpbHRfcHJvZCcpLFxuICBhc3NldHM6IHBhdGguam9pbihwYXRoUHJlZml4LCAnc3JjL2Fzc2V0cycpLFxuICBpc29tb3JwaGljOiBwYXRoLmpvaW4ocGF0aFByZWZpeCwgJ3NyYy9pc29tb3JwaGljJyksXG4gIHNlcnZlcjogcGF0aC5qb2luKHBhdGhQcmVmaXgsICdzcmMvc2VydmVyJylcbn1cblxuY29uc3QgY3NzTG9jYWxJZGVudE5hbWUgPSAnW2xvY2FsXV9baGFzaDpiYXNlNjQ6NV0nXG5cbmNvbnN0IGltYWdlTmFtZSA9ICdpbWcvW25hbWVdLltoYXNoOjEwXS5bZXh0XSdcblxuLy8g5pq06Zyy5Yiw5YWo5bGA5Y+Y6YeP55qE5ZCN56ewXG5jb25zdCB2ZW5kb3JMaWJOYW1lID0gJ19bbmFtZV1fZGxsJ1xuXG4vLyBITVIgZW50cnkg6YeM6Z2i55qE5LiA5Liq5qCH6K6w77yM5YW35L2T5LiN5oeC44CC44CCXG5jb25zdCBob3QgPSAnd2VicGFjay1ob3QtbWlkZGxld2FyZS9jbGllbnQnXG5cbi8vIHdlYnBhY2sg5Lya5L2/55So5paH5Lu25ZCN5L2c5Li65Y+Y6YeP77yM5omA5Lul5LiN6IO95L2/55So5bim5pyJIC0g55qE5ZCN5a2XXG4vLyDov5novrnnmoTphY3nva7kvJrlkIzml7blvbHlk43nlJ/miJDlkozlvJXnlKjvvIzmiYDku6Xlj6rpnIDlnKjov5novrnkv67mlLnlsLHooYzkuoZcbmNvbnN0IGRsbE5hbWVzID0ge1xuICByZWFjdEtpdDogJ3JlYWN0X2tpdCcsXG4gIHV0aWxzOiAndXRpbHMnXG59XG5cbi8vIGNvZGUgc3BsaXR0aW5nXG5jb25zdCBsaWJzID0ge1xuICByZWFjdEtpdDogW1xuICAgICdyZWFjdCcsXG4gICAgJ3JlYWN0LWRvbScsXG4gICAgJ3JlYWN0LWFkZG9ucy1jc3MtdHJhbnNpdGlvbi1ncm91cCcsXG4gICAgJ3JlZHV4JyxcbiAgICAncmVhY3QtcmVkdXgnLFxuICAgICdyZWFjdC1yb3V0ZXInLFxuICAgICdyZWR1eC10aHVuaycsXG4gICAgJ3JlYWN0LWNzcy1tb2R1bGVzJyxcbiAgICAncmVhY3Qtc2lkZS1lZmZlY3QnLFxuICAgICdyZWFjdC1yb3V0ZXItcmVkdXgnLFxuICAgICdpbW11dGFibGUnLFxuICAgICdyZWFjdC1tb3Rpb24nLFxuICAgICdyZXNlbGVjdCcsXG4gICAgJ3JlZHV4LXNhZ2EnXG4gIF0sXG5cbiAgcmVhY3REZXZLaXQ6IFtcbiAgICAncmVkdXgtZGV2dG9vbHMtbG9nLW1vbml0b3InLFxuICAgICdyZWR1eC1kZXZ0b29scy1kb2NrLW1vbml0b3InLFxuICBdLFxuXG4gIHV0aWxzOiBbXG4gICAgJ2xvZGFzaCcsXG4gICAgJ2pxdWVyeScsXG4gICAgJ25vcm1hbGl6cicsXG4gICAgJ2h1bXBzJyxcbiAgICAnaXNvbW9ycGhpYy1mZXRjaCcsXG4gICAgJ2NsYXNzbmFtZXMnLFxuICAgICdtYXJrZWQnLFxuICAgICdtb21lbnQnLFxuICBdXG59XG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICBwYXRoUHJlZml4LFxuICBwYXRocyxcbiAgY3NzTG9jYWxJZGVudE5hbWUsXG4gIGltYWdlTmFtZSxcbiAgdmVuZG9yTGliTmFtZSxcbiAgaG90LFxuICBkbGxOYW1lcyxcbiAgbGlic1xufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi93ZWJwYWNrL2Jhc2UvdmFyaWFibGVzLmpzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicGF0aFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicGF0aFwiXG4gKiogbW9kdWxlIGlkID0gNDA1XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJjb25zdCB2YXJzID0gcmVxdWlyZSgnLi92YXJpYWJsZXMnKVxuY29uc3QgRXh0cmFjdFRleHRQbHVnaW4gPSByZXF1aXJlKCdleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW4nKVxuXG5jb25zdCBwYXJzZUxvYWRlcnNGb3JFeHRyYWN0VGV4dFBsdWdpbiA9IGxvYWRlcnMgPT4ge1xuICByZXR1cm4gW1xuICAgIGxvYWRlcnNbMF0sXG4gICAgbG9hZGVycy5zbGljZSgxLCBsb2FkZXJzLmxlbmd0aCkuam9pbignIScpXG4gIF1cbn1cblxubW9kdWxlLmV4cG9ydHMgPSB7XG4gIGxvYWRlckNvbmZpZzoge1xuICAgIHNhc3NMb2FkZXIoKSB7XG4gICAgICByZXR1cm4ge1xuICAgICAgICAvLyDnlKjkuo4gc2NzcyDmlofku7bph4wgaW1wb3J0IOWFtuWug+aWh+S7tlxuICAgICAgICBpbmNsdWRlUGF0aHM6IFtcbiAgICAgICAgICB2YXJzLnBhdGhzLmlzb21vcnBoaWMsXG4gICAgICAgICAgdmFycy5wYXRocy5zdGF0aWNcbiAgICAgICAgXVxuICAgICAgfVxuICAgIH0sXG5cbiAgICBwb3N0Y3NzKCkge1xuICAgICAgcmV0dXJuIFtcbiAgICAgICAgcmVxdWlyZSgncG9zdGNzcy1pbXBvcnQnKSh7XG4gICAgICAgICAgcGF0aDogW1xuICAgICAgICAgICAgdmFycy5wYXRocy5pc29tb3JwaGljXG4gICAgICAgICAgXVxuICAgICAgICB9KSxcbiAgICAgICAgcmVxdWlyZSgncG9zdGNzcy1jc3NuZXh0JylcbiAgICAgIF1cbiAgICB9LFxuICB9LFxuXG4gIGpzb24oKSB7XG4gICAgcmV0dXJuIHtcbiAgICAgIHRlc3Q6IC9cXC5qc29uJC8sXG4gICAgICBsb2FkZXI6ICdqc29uJ1xuICAgIH1cbiAgfSxcblxuICBiYWJlbCgpIHtcbiAgICByZXR1cm4ge1xuICAgICAgdGVzdDogL1xcLmpzeD8kLyxcbiAgICAgIGV4Y2x1ZGU6IC8obm9kZV9tb2R1bGVzfGJvd2VyX2NvbXBvbmVudHMpLyxcbiAgICAgIGxvYWRlcjogJ2JhYmVsJ1xuICAgIH1cbiAgfSxcblxuICBpbWFnZSh7IGVtaXRGaWxlIH0gPSB7IGVtaXRGaWxlOiB0cnVlIH0pIHtcbiAgICBjb25zdCBlbWl0RmlsZUNvbmZpZyA9IGVtaXRGaWxlID8gJ2VtaXRGaWxlPXRydWUnIDogJ2VtaXRGaWxlPWZhbHNlJ1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRlc3Q6IC9cXC4oanBlP2d8cG5nfGdpZnxzdmcpJC9pLFxuICAgICAgbG9hZGVyczogW1xuICAgICAgICBgZmlsZT9uYW1lPSR7dmFycy5pbWFnZU5hbWV9JiR7ZW1pdEZpbGVDb25maWd9YCxcbiAgICAgICAgJ2ltYWdlLXdlYnBhY2s/YnlwYXNzT25EZWJ1ZyZvcHRpbWl6YXRpb25MZXZlbD03JmludGVybGFjZWQ9ZmFsc2UnXG4gICAgICBdXG4gICAgfVxuICB9LFxuXG4gIHR5cGVzY3JpcHQoeyBvZmZpY2lhbExvYWRlciwgaXNIb3QgfSA9IHt9KSB7XG4gICAgY29uc3QgdHNMb2FkZXIgPSBvZmZpY2lhbExvYWRlciA/ICd0cycgOiAnYXdlc29tZS10eXBlc2NyaXB0J1xuICAgIGNvbnN0IGJhYmVsID0gaXNIb3RcbiAgICAgID8gJ2JhYmVsP3BsdWdpbnM9cmVhY3QtaG90LWxvYWRlci9iYWJlbCdcbiAgICAgIDogJ2JhYmVsJ1xuXG4gICAgcmV0dXJuIHtcbiAgICAgIHRlc3Q6IC9cXC50c3g/JC8sXG4gICAgICBsb2FkZXJzOiBbYmFiZWwsIGAke3RzTG9hZGVyfWBdXG4gICAgfVxuICB9LFxuXG4gIHNhc3MoeyBpc29tb3JwaGljLCBnbG9iYWwsIGV4dHJhY3QsIHNvdXJjZU1hcCB9ID0ge30pIHtcbiAgICBjb25zdCBzdHlsZUxvYWRlciA9IGlzb21vcnBoaWMgPyAnaXNvbW9ycGhpYy1zdHlsZScgOiAnc3R5bGUnXG4gICAgY29uc3Qgc291cmNlTWFwQ29uZmlnID0gc291cmNlTWFwID8gJ3NvdXJjZU1hcD10cnVlJyA6ICdzb3VyY2VNYXA9ZmFsc2UnXG4gICAgY29uc3QgbG9jYWxJZGVudE5hbWUgPSBnbG9iYWwgPyAnW2xvY2FsXScgOiB2YXJzLmNzc0xvY2FsSWRlbnROYW1lXG5cbiAgICBjb25zdCBsb2FkZXJzID0gW1xuICAgICAgYCR7c3R5bGVMb2FkZXJ9PyR7c291cmNlTWFwQ29uZmlnfWAsXG4gICAgICBgY3NzPyR7c291cmNlTWFwQ29uZmlnfSZtb2R1bGVzJmltcG9ydExvYWRlcnM9MSZsb2NhbElkZW50TmFtZT0ke2xvY2FsSWRlbnROYW1lfWAsXG4gICAgICBgc2Fzcz8ke3NvdXJjZU1hcENvbmZpZ31gLFxuICAgIF1cblxuICAgIHJldHVybiB7XG4gICAgICB0ZXN0OiAvXFwuc2NzcyQvLFxuICAgICAgbG9hZGVyOiBleHRyYWN0XG4gICAgICAgID8gRXh0cmFjdFRleHRQbHVnaW4uZXh0cmFjdC5hcHBseShudWxsLCBwYXJzZUxvYWRlcnNGb3JFeHRyYWN0VGV4dFBsdWdpbihsb2FkZXJzKSlcbiAgICAgICAgOiBsb2FkZXJzLmpvaW4oJyEnKVxuICAgIH1cbiAgfSxcblxuICBwb3N0Y3NzKHsgZ2xvYmFsLCBleHRyYWN0LCBzb3VyY2VNYXAsIGlzb21vcnBoaWMgfSA9IHt9KSB7XG4gICAgY29uc3Qgc3R5bGVMb2FkZXIgPSBpc29tb3JwaGljID8gJ2lzb21vcnBoaWMtc3R5bGUnIDogJ3N0eWxlJ1xuICAgIGNvbnN0IGxvY2FsSWRlbnROYW1lID0gZ2xvYmFsID8gJ1tsb2NhbF0nIDogdmFycy5jc3NMb2NhbElkZW50TmFtZVxuICAgIGNvbnN0IHNvdXJjZU1hcENvbmZpZyA9IHNvdXJjZU1hcCA/ICdzb3VyY2VNYXA9dHJ1ZScgOiAnc291cmNlTWFwPWZhbHNlJ1xuXG4gICAgY29uc3QgbG9hZGVycyA9IFtcbiAgICAgIGAke3N0eWxlTG9hZGVyfT8ke3NvdXJjZU1hcENvbmZpZ31gLFxuICAgICAgYGNzcz8ke3NvdXJjZU1hcENvbmZpZ30mbW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9JHtsb2NhbElkZW50TmFtZX1gLFxuICAgICAgYHBvc3Rjc3M/JHtzb3VyY2VNYXBDb25maWd9YCxcbiAgICBdXG5cbiAgICByZXR1cm4ge1xuICAgICAgdGVzdDogL1xcLmNzcyQvLFxuICAgICAgbG9hZGVyOiBleHRyYWN0XG4gICAgICAgID8gRXh0cmFjdFRleHRQbHVnaW4uZXh0cmFjdC5hcHBseShudWxsLCBwYXJzZUxvYWRlcnNGb3JFeHRyYWN0VGV4dFBsdWdpbihsb2FkZXJzKSlcbiAgICAgICAgOiBsb2FkZXJzLmpvaW4oJyEnKVxuICAgIH1cbiAgfSxcblxuICAvLyDmnKrnu4/mtYvor5VcbiAgY3NzKCkge1xuICAgIHJldHVybiB7XG4gICAgICB0ZXN0OiAvXFwuY3NzJC8sXG4gICAgICBsb2FkZXJzOiBbXG4gICAgICAgICdzdHlsZScsXG4gICAgICAgICdjc3M/bW9kdWxlcyZpbXBvcnRMb2FkZXJzPTEmbG9jYWxJZGVudE5hbWU9W2xvY2FsXScsXG4gICAgICAgICdyZXNvbHZlLXVybCcsXG4gICAgICBdXG4gICAgfVxuICB9XG59XG5cblxuXG4vKiogV0VCUEFDSyBGT09URVIgKipcbiAqKiAuL3dlYnBhY2svYmFzZS9sb2FkZXJzLmpzXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiZXh0cmFjdC10ZXh0LXdlYnBhY2stcGx1Z2luXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJleHRyYWN0LXRleHQtd2VicGFjay1wbHVnaW5cIlxuICoqIG1vZHVsZSBpZCA9IDQwN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwicG9zdGNzcy1pbXBvcnRcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcInBvc3Rjc3MtaW1wb3J0XCJcbiAqKiBtb2R1bGUgaWQgPSA0MDhcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcInBvc3Rjc3MtY3NzbmV4dFwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwicG9zdGNzcy1jc3NuZXh0XCJcbiAqKiBtb2R1bGUgaWQgPSA0MDlcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsImNvbnN0IHdlYnBhY2sgPSByZXF1aXJlKCd3ZWJwYWNrJylcbmNvbnN0IGZzID0gcmVxdWlyZSgnZnMnKVxuY29uc3QgdmFycyA9IHJlcXVpcmUoJy4vdmFyaWFibGVzJylcbmNvbnN0IF8gPSByZXF1aXJlKCdsb2Rhc2gnKVxuXG4vKipcbiAqIEBwYXJhbSBuYW1lc1xuICoge1xuICogICBbbmFtZTogc3RyaW5nXTogc3RyaW5nXG4gKiB9XG4gKi9cbmNvbnN0IGNyZWF0ZURsbFJlZmVyZW5jZXMgPSAobmFtZXMpID0+IHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gXy5tYXAobmFtZXMsIG5hbWUgPT4ge1xuICAgICAgcmV0dXJuIG5ldyB3ZWJwYWNrLkRsbFJlZmVyZW5jZVBsdWdpbih7XG4gICAgICAgIGNvbnRleHQ6ICcuJyxcbiAgICAgICAgbWFuaWZlc3Q6IEpTT04ucGFyc2UoZnMucmVhZEZpbGVTeW5jKGAke3ZhcnMucGF0aHMuYnVpbHR9LyR7bmFtZX0uZGxsLm1hbmlmZXN0Lmpzb25gLCAndXRmOCcpKVxuICAgICAgfSlcbiAgICB9KVxuICB9IGNhdGNoIChlcnJvcikge1xuICAgIGNvbnNvbGUud2FybignV0FSTklORzogJywgZXJyb3IubWVzc2FnZSlcbiAgICByZXR1cm4gW11cbiAgfVxufVxuXG5tb2R1bGUuZXhwb3J0cyA9IHtcbiAgcHJvZEVudigpIHtcbiAgICByZXR1cm4gbmV3IHdlYnBhY2suRGVmaW5lUGx1Z2luKHtcbiAgICAgICdwcm9jZXNzLmVudi5OT0RFX0VOVic6ICdcInByb2R1Y3Rpb25cIicsXG4gICAgfSlcbiAgfSxcblxuICBkZXZFbnYoKSB7XG4gICAgcmV0dXJuIG5ldyB3ZWJwYWNrLkRlZmluZVBsdWdpbih7XG4gICAgICAncHJvY2Vzcy5lbnYuTk9ERV9FTlYnOiAnXCJkZXZlbG9wbWVudFwiJyxcbiAgICB9KVxuICB9LFxuXG4gIG5vZGVTb3VyY2VNYXBTdXBwb3J0KCkge1xuICAgIHJldHVybiBuZXcgd2VicGFjay5CYW5uZXJQbHVnaW4oYHJlcXVpcmUoJ3NvdXJjZS1tYXAtc3VwcG9ydCcpLmluc3RhbGwoKWAsIHtcbiAgICAgIHJhdzogdHJ1ZSxcbiAgICAgIGVudHJ5T25seTogdHJ1ZVxuICAgIH0pXG4gIH0sXG5cbiAgb2NjdXJlbmNlT3JkZXIoKSB7XG4gICAgcmV0dXJuIG5ldyB3ZWJwYWNrLm9wdGltaXplLk9jY3VyZW5jZU9yZGVyUGx1Z2luKClcbiAgfSxcblxuICBkbGxSZWZlcmVuY2VzKCkge1xuICAgIHJldHVybiBjcmVhdGVEbGxSZWZlcmVuY2VzKHZhcnMuZGxsTmFtZXMpXG4gIH0sXG5cbiAgZGxsKCkge1xuICAgIHJldHVybiBuZXcgd2VicGFjay5EbGxQbHVnaW4oe1xuICAgICAgcGF0aDogYCR7dmFycy5wYXRocy5idWlsdH0vW25hbWVdLmRsbC5tYW5pZmVzdC5qc29uYCxcbiAgICAgIG5hbWU6IHZhcnMudmVuZG9yTGliTmFtZVxuICAgIH0pXG4gIH0sXG5cbiAgdWdsaWZ5KCkge1xuICAgIHJldHVybiBuZXcgd2VicGFjay5vcHRpbWl6ZS5VZ2xpZnlKc1BsdWdpbih7XG4gICAgICBjb21wcmVzczoge1xuICAgICAgICB3YXJuaW5nczogZmFsc2VcbiAgICAgIH1cbiAgICB9KVxuICB9LFxufVxuXG5cblxuLyoqIFdFQlBBQ0sgRk9PVEVSICoqXG4gKiogLi93ZWJwYWNrL2Jhc2UvcGx1Z2lucy5qc1xuICoqLyIsImNvbnN0IHZhcnMgPSByZXF1aXJlKCcuL3ZhcmlhYmxlcycpXG5cbm1vZHVsZS5leHBvcnRzID0ge1xuICByZXNvbHZlOiB7XG4gICAgLy8g6L+Z6L655a6a5LmJ55qEIHJvb3Qg5pqC5pe25rKh55So77yM5Zug5Li6IHZzIGNvZGUg6YeM6Z2i55uu5YmN6YWN572u55qE5piv5Y+q5L2/55So55u45a+56Lev5b6EXG4gICAgcm9vdDogdmFycy5wYXRocy5zcmMsXG4gICAgYWxpYXM6IHtcbiAgICAgIC8vIOaWueS+v+WcqOe7hOW7uumHjOmdouW8leeUqOmAmueUqOeahCBzY3NzIOaWh+S7tu+8iOWPr+iDveS4jeS8muWkquW4uOeUqO+8iVxuICAgICAgLy8gY29tcG9zZXMg5L2/55So55qE5pivIHdlYnBhY2sgcmVzb2x2ZSDph4zpnaLnmoTop4TliJlcbiAgICAgIHN0eWxlczogYCR7dmFycy5wYXRocy5pc29tb3JwaGljfS9zdHlsZXNgLFxuICAgIH0sXG4gICAgZXh0ZW5zaW9uczogWycnLCAnLmpzJywgJy5qc3gnLCAnLnRzJywgJy50c3gnXSxcbiAgfSxcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vd2VicGFjay9iYXNlL2NvbW1vbi5qc1xuICoqLyIsIi8qKlxuICogQ29tYmluZSBtdWx0aXBsZSBtaWRkbGV3YXJlIHRvZ2V0aGVyXG4gKiBTb3VyY2U6IGh0dHA6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjAyNzQ0ODMvaG93LWRvLWktY29tYmluZS1jb25uZWN0LW1pZGRsZXdhcmUtaW50by1vbmUtbWlkZGxld2FyZVxuICpcbiAqIEBwYXJhbSB7RnVuY3Rpb25bXX0gbWlkcyBmdW5jdGlvbnMgb2YgZm9ybTpcbiAqICAgZnVuY3Rpb24ocmVxLCByZXMsIG5leHQpIHsgLi4uIH1cbiAqIEByZXR1cm4ge0Z1bmN0aW9ufSBzaW5nbGUgY29tYmluZWQgbWlkZGxld2FyZVxuICovXG4vKipcbiAqIENvbWJpbmUgbXVsdGlwbGUgbWlkZGxld2FyZSB0b2dldGhlclxuICogU291cmNlOiBodHRwOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzIwMjc0NDgzL2hvdy1kby1pLWNvbWJpbmUtY29ubmVjdC1taWRkbGV3YXJlLWludG8tb25lLW1pZGRsZXdhcmVcbiAqXG4gKiBAcGFyYW0ge0Z1bmN0aW9uW119IG1pZHMgZnVuY3Rpb25zIG9mIGZvcm06XG4gKiAgIGZ1bmN0aW9uKHJlcSwgcmVzLCBuZXh0KSB7IC4uLiB9XG4gKiBAcmV0dXJuIHtGdW5jdGlvbn0gc2luZ2xlIGNvbWJpbmVkIG1pZGRsZXdhcmVcbiAqLyBleHBvcnQgZGVmYXVsdCBmdW5jdGlvbiBjb21iaW5lTWlkZGxld2FyZShtaWRzKSB7XG4gICAgcmV0dXJuIG1pZHMucmVkdWNlKChhLCBiKSA9PiB7XG4gICAgICAgIHJldHVybiAocmVxLCByZXMsIG5leHQpID0+IHtcbiAgICAgICAgICAgIGEocmVxLCByZXMsIGVyciA9PiB7XG4gICAgICAgICAgICAgICAgaWYgKGVycikge1xuICAgICAgICAgICAgICAgICAgICByZXR1cm4gbmV4dChlcnIpO1xuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICByZXR1cm4gYihyZXEsIHJlcywgbmV4dCk7XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcbiAgICB9KTtcbn1cblxuXG5cbi8qKiBXRUJQQUNLIEZPT1RFUiAqKlxuICoqIC4vc3JjL3NlcnZlci91dGlscy9jb21iaW5lLW1pZGRsZXdhcmUudHNcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJ3ZWJwYWNrLWRldi1taWRkbGV3YXJlXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJ3ZWJwYWNrLWRldi1taWRkbGV3YXJlXCJcbiAqKiBtb2R1bGUgaWQgPSA0MTNcbiAqKiBtb2R1bGUgY2h1bmtzID0gMFxuICoqLyIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZShcIndlYnBhY2staG90LW1pZGRsZXdhcmVcIik7XG5cblxuLyoqKioqKioqKioqKioqKioqXG4gKiogV0VCUEFDSyBGT09URVJcbiAqKiBleHRlcm5hbCBcIndlYnBhY2staG90LW1pZGRsZXdhcmVcIlxuICoqIG1vZHVsZSBpZCA9IDQxNFxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwibW9yZ2FuXCIpO1xuXG5cbi8qKioqKioqKioqKioqKioqKlxuICoqIFdFQlBBQ0sgRk9PVEVSXG4gKiogZXh0ZXJuYWwgXCJtb3JnYW5cIlxuICoqIG1vZHVsZSBpZCA9IDQxNVxuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiY29va2llLXBhcnNlclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiY29va2llLXBhcnNlclwiXG4gKiogbW9kdWxlIGlkID0gNDE2XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iLCJtb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoXCJib2R5LXBhcnNlclwiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiYm9keS1wYXJzZXJcIlxuICoqIG1vZHVsZSBpZCA9IDQxN1xuICoqIG1vZHVsZSBjaHVua3MgPSAwXG4gKiovIiwibW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKFwiY29ubmVjdC1tb25nb1wiKTtcblxuXG4vKioqKioqKioqKioqKioqKipcbiAqKiBXRUJQQUNLIEZPT1RFUlxuICoqIGV4dGVybmFsIFwiY29ubmVjdC1tb25nb1wiXG4gKiogbW9kdWxlIGlkID0gNDE4XG4gKiogbW9kdWxlIGNodW5rcyA9IDBcbiAqKi8iXSwic291cmNlUm9vdCI6IiJ9