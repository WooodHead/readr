{"version":3,"sources":["../app.js"],"names":[],"mappings":";;AAAA,IAAI,OAAO,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC;AACjC,IAAI,GAAG,GAAG,OAAO,EAAE,CAAC;AACpB,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC;AAC3B,IAAI,OAAO,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AACvC,IAAI,MAAM,GAAG,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC/B,IAAI,YAAY,GAAG,OAAO,CAAC,eAAe,CAAC,CAAC;AAC5C,IAAI,UAAU,GAAG,OAAO,CAAC,aAAa,CAAC,CAAC;;AAKxC,IAAI,WAAW,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAChD,IAAI,GAAG,GAAG,OAAO,CAAC,YAAY,CAAC;;;AAAC,AAKhC,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAC;AAChD,GAAG,CAAC,GAAG,CAAC,aAAa,EAAE,MAAM,CAAC;;;;AAAC,AAI/B,GAAG,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;;;AAAC,AAGvB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,IAAI,CAAC,EAAC,KAAK,EAAE,MAAM,EAAC,CAAC,CAAC,CAAC;AAC1C,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,UAAU,CAAC,EAAC,KAAK,EAAE,MAAM,EAAE,QAAQ,EAAE,IAAI,EAAC,CAAC,CAAC,CAAC;;AAEhE,GAAG,CAAC,GAAG,CAAC,YAAY,EAAE,CAAC,CAAC;AACxB,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;;AAKxD,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;AAC1B,GAAG,CAAC,GAAG,CAAC,MAAM,EAAE,GAAG,CAAC;;;;;;;;;;AAAC,AAgBrB,GAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AAC/B,MAAI,GAAG,GAAG,IAAI,KAAK,CAAC,WAAW,CAAC,CAAC;AACjC,KAAG,CAAC,MAAM,GAAG,GAAG,CAAC;AACjB,MAAI,CAAC,GAAG,CAAC,CAAC;CACX,CAAC;;;;;;AAAC,AAMH,IAAI,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,KAAK,aAAa,EAAE;AACpC,KAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACpC,OAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;AAC9B,OAAG,CAAC,MAAM,CAAC,OAAO,EAAE;AAClB,aAAO,EAAE,GAAG,CAAC,OAAO;AACpB,WAAK,EAAE,GAAG;KACX,CAAC,CAAC;GACJ,CAAC,CAAC;CACJ;;;;AAAA,AAID,GAAG,CAAC,GAAG,CAAC,UAAS,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,IAAI,EAAE;AACpC,KAAG,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,IAAI,GAAG,CAAC,CAAC;AAC9B,KAAG,CAAC,MAAM,CAAC,OAAO,EAAE;AAClB,WAAO,EAAE,GAAG,CAAC,OAAO;AACpB,SAAK,EAAE,EAAE;GACV,CAAC,CAAC;CACJ,CAAC,CAAC;;AAGH,MAAM,CAAC,OAAO,GAAG,GAAG,CAAC","file":"app.js","sourcesContent":["var express = require('express');\nvar app = express();\nvar path = require('path');\nvar favicon = require('serve-favicon');\nvar logger = require('morgan');\nvar cookieParser = require('cookie-parser');\nvar bodyParser = require('body-parser');\n\n\n\n\nvar controllers = require('./core/controllers');\nvar api = require('./core/api');\n\n\n\n// view engine setup\napp.set('views', path.join(__dirname, 'views'));\napp.set('view engine', 'jade');\n\n// uncomment after placing your favicon in /public\n//app.use(favicon(path.join(__dirname, 'public', 'favicon.ico')));\napp.use(logger('dev'));\n\n// 添加 limit 参数，提高数据流传输上限\napp.use(bodyParser.json({limit: '50mb'}));\napp.use(bodyParser.urlencoded({limit: '50mb', extended: true}));\n\napp.use(cookieParser());\napp.use(express.static(path.join(__dirname, 'public')));\n\n\n\n\napp.use('/', controllers);\napp.use('/api', api);\n// app.use('/users', users);\n// app.use('/signup', signup);\n// app.use('/signin', signin);\n// app.use('/auth', auth);\n// app.use('/newuser', newuser);\n// app.use('/addbook', addbook);\n// app.use('/view', view);\n\n\n\n\n\n\n\n// catch 404 and forward to error handler\napp.use(function(req, res, next) {\n  var err = new Error('Not Found');\n  err.status = 404;\n  next(err);\n});\n\n// error handlers\n\n// development error handler\n// will print stacktrace\nif (app.get('env') === 'development') {\n  app.use(function(err, req, res, next) {\n    res.status(err.status || 500);\n    res.render('error', {\n      message: err.message,\n      error: err\n    });\n  });\n}\n\n// production error handler\n// no stacktraces leaked to user\napp.use(function(err, req, res, next) {\n  res.status(err.status || 500);\n  res.render('error', {\n    message: err.message,\n    error: {}\n  });\n});\n\n\nmodule.exports = app;\n"]}