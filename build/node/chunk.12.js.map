{"version":3,"sources":["../.././src/routes/Signup/Signup.tsx","../.././src/utils/validation.ts","../.././src/routes/Signup/components/SignupForm.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AACH;AACF;AACa;AACQ;AACR;AACf;AAQjC;;IAAa;;;AACX,oBAAiB;AACV;;oHAAO;;AACR,cAAa,eAAO,MAAa,aACvC;;AAEY;;;;qCAAK;AACT,qEAAW,WAAM,MAChB,KAAI;AACH,qBAAM,MAAiB,iBAAS;AAC9B,yEAAU,UAAC,EAAO,OAAM,KAAS,UAAU,UAAM,KAAY,YAAK,KAAC;AACnE,yBAAM,MAAW,WAAK,KAAC;AACf,mCAAC;AACF,sFAAS,SAClB;AAAC,2BACH;AACF;AACF;AAAC,eAAK;AACA,qBAAM,MAAiB,iBAAI,IAAQ,SACzC;AACJ;AAEM;;;;AACG,mBACL,4DAAa,6EAAM,OAAK,QACtB,qEAAc,WAAoB,uBAChC,oEAAa,WAAa,gBAAc,uBACxC,4DAAW,2EACH,QAAM,KACV,iBACJ,mEAAY,WAAO,4CAAM,4DAAK,sDAAG,IAAU,aAInD;AACD;;;;EAnCwC;;AAqCzC;AAEgB,kBAAO,MAAW,WAAa;AACvC,UAAO,MACX;AAHQ,CAAD,CADW,EAKpB,EACD,gFAAQ,Q;;;;;;;;;;;ACzDa;AAQR,oBAA2B,QAAiB;AACxD,UAAY,SAAU;AAErB,mDAAK,KAAQ,QAAQ,QAAI;AACrB,YAAC,CAAO,OAAM,MAAE;AACX,mBAAQ,OAChB;AACF;AAAE;AAEI,WACR;AAAC,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AClBuC;AACH;AACD;AACe;AACK;AACN;AAwBlD;AAAiB;;AAEf,wBAAiB;AACV;;uHACP;AAEM;;;;;AACJ,kBAAM,EACE,QAAE,EAAU,UAAO,OAAY,YACzB,cAEb,WAAO,KAAM;AAEP,mBACL,yEACE,4DAAM,iFAAY,aAAM,SAAiB,YACzC,4DAAM,iFAAY,aAAK,QAAc,SACrC,4DAAM,iFAAY,aAAK,MAAK,MAAW,cAAiB,wEACjD,oEACA,OAAO,QACL,sBAAmB;AAClB,2BACR;AAAE,iBAFmB,GAFvB,EAON;AACD;;;;EA1BkD;AAAnC;AANV,UAAU;AACR,YAAE,CAAW,YAAS,SAAa;AACjC,cAAQ;AACR,eAAW,0FACnB;AACA;AANI,CAAD,IAiCJ;AAED,oIACE,CAAM,OAAU;AACR;AACS,uBAAU,SAAc;AAC9B,iBAAO,MAAQ,QAE1B;AAJS;AAIR,CANmB,EAOpB,EACD,gFAAY,Y","file":"chunk.12.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router'\nimport { sendNotification } from '../../actions'\nimport DocContainer from '../../components/DocContainer'\nimport SignupForm from './components/SignupForm'\nimport webAPI from '../../webAPI'\nimport helpers from '../../helpers'\n\ninterface Props {\n  sendNotification?: any\n  userAuth?: any\n}\n\nclass Signup extends Component<Props, {}> {\n  constructor(props) {\n    super(props)\n    this.handleSignup = this.handleSignup.bind(this)\n  }\n\n  handleSignup(data) {\n    webAPI.userSignup(data)\n      .then(res => {\n        this.props.sendNotification('注册成功！')\n        webAPI.userLogin({ login: data.username, password: data.password }).then(() => {\n          this.props.userAuth().then(() => {\n            setTimeout(() => {\n              helpers.redirect('/')\n            }, 600)\n          })\n        })\n      }, err => {\n        this.props.sendNotification(err.message, 'error')\n      })\n  }\n\n  render() {\n    return (\n      <DocContainer title=\"注册\">\n        <div className=\"content-container\">\n          <h1 className=\"page-title\">加入 Readr</h1>\n          <SignupForm\n            onSave={this.handleSignup}\n            />\n          <p className=\"hint\">已有账号？<Link to=\"/signin\">登录</Link></p>\n        </div>\n      </DocContainer>\n    )\n  }\n}\n\nexport default connect<{}, {}, Props>(\n  state => ({\n    notification: state.components.notification,\n    user: state.user\n  }),\n  { sendNotification }\n)(Signup)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Signup/Signup.tsx","import _ from 'lodash'\n\ntype Config = {\n  validators: {\n    [key: string]: [(value: string) => boolean, string]\n  }[]\n}\n\nexport default function validation(values, config?: Config) {\n  const errors: any = {}\n\n  _.keys(values).forEach(key => {\n    if (!values[key]) {\n      errors[key] = `不能为空！`\n    }\n  })\n\n  return errors\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/utils/validation.ts","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport form from 'better-redux-form'\nimport { sendNotification } from '../../../actions'\nimport { Input, Button } from '../../../components/form'\nimport validation from '../../../utils/validation'\n\ninterface Props {\n  initialValues?: any\n  onSave: (data: any) => void\n}\n\ninterface AllProps extends Props {\n  routing: any\n  sendNotification: any\n  handleSubmit: any\n  fields: any\n}\n\ninterface State {\n}\n\n@form({\n  form: 'signup',\n  fields: ['username', 'email', 'password'],\n  validate: values => {\n    return validation(values)\n  }\n})\nclass SignupForm extends Component<AllProps, State> {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const {\n      fields: { username, email, password },\n      handleSubmit,\n      onSave\n    } = this.props\n\n    return (\n      <div>\n        <Input placeholder=\"用户名\" {...username} />\n        <Input placeholder=\"邮箱\" {...email} />\n        <Input placeholder=\"密码\" type=\"password\" {...password} />\n        <Button\n          color=\"blue\"\n          onClick={handleSubmit(data => {\n            onSave(data)\n          })}>注册</Button>\n      </div>\n    )\n  }\n}\n\nexport default connect<{}, {}, Props>(\n  (state, ownProps) => {\n    return {\n      initialValues: ownProps.initialValues,\n      routing: state.routing.locationBeforeTransitions\n    }\n  },\n  { sendNotification }\n)(SignupForm)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/Signup/components/SignupForm.tsx"],"sourceRoot":""}