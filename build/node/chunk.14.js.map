{"version":3,"sources":["../.././src/routes/AddCollection/AddCollection.tsx","../.././src/routes/AddCollection/components/AddCollectionForm.tsx"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAwC;AAEH;AACsB;AACd;AAEiB;AAC7B;AAWjC;;IAAoB;;;AAElB,2BAAiB;AACV;;kIAAO;;AACR,cAAW,aAAO,MAAW,WAAW;AACxC,cAAuB,yBAAO,MAAuB,uBAC3D;;AAEU;;;;mCAAK;AACb,kBAAa,UAAO,KAAM,MAAQ,QAAK,KAAG;AAC1C,kBAAc,kBAAgB,OAAG,IAAM;AAErC;AAFuC,aAAlB;AAIjB,qEAAc,cAAU,UAAK,KAAO;AACpC,qBAAM,MAAiB,iBAAS;AAChC,qBAAM,MAAU,UACtB;AAAC,eAAO;AACF,qBAAM,MAAiB,iBAAM,MAAQ,SAC3C;AACF;AAEsB;;;+CAAO;AACC;AACD;AACX;AACT;AAET;AAEM;;;;AACG,mBACL,4DAAa,6EAAM,OAAO,UACxB,oEAAa,WAAa,gBAAU,6BACpC,4DAAkB,kFACV,QAAM,KAAW,YACL,oBAAM,KAIhC;AACD;;;;EAzC+C;;AA2ChD,yBAA8B;AACtB;AACQ,sBAAO,MAAW,WAAa;AACnC,kBAAO,MAAS;AACjB,iBAAO,MAElB;AALS;AAKR;8DAEqB,4EACL,iBACf,EAAkB,8EAAW,gEAC9B,sEAAsB,e;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEiB;AACH;AACc;AAC+B;AAE5D;AACc;AAuBpC;AAAwB;;AAEtB,+BAAiB;AACV;;qIACP;AAEiB;;;;4CACjB,CAEM;;;;AACJ,kBAAM,EACE,QAAE,EAAM,MAAa,aAAc,cAAe,eAAe,eAC3D,cACN,QACY,oBAEnB,yBAAO,KAAM;AAEP,mBACL,yEACE,4DAAM,iFAAY,aAAO,UAAa,QACtC,4DAAe,4EACF,aAAO,QACL,eAAU;AAClB,wBAAoB,oBAAE;AACL,2CACpB;AAAC;AACU,gCAAI,IACjB;AAAC,mBACI,OAAa,YAAM,OACV,gBAAc,aAAS,UAC9B,SAAsB,sBACvB,QAAc,aAAM,SACxB,OACJ,4DAAS,sFACQ,eACJ,aACT,sEACG,oEACE,sBAAmB;AACxB,wBAAY,WAAI,+CAAK,KAAK,MAAE,CAAO,QAAiB;AAC5C,sCAAgB,OAAG,IAAU;AAC9B,+BAAc,aAAM,QAAe,aAAM,MAAI,IAAK,QAAQ,KAAO,SACtE;AAFqC,qBAAtB;AAGX,2BACR;AAAE,iBANmB,GADvB,EAWN;AACD;;;;EAlDyD;AAAnC;AAHjB,UAAiB;AACf,YAAE,CAAO,QAAe,eAAgB,gBAAiB,iBAC/D;AAHI,CAAD,IAsDJ;AAED,MAAqB,kBAAG,CAAM,OAAU;AAChC;AACG,iBAAO,MAAQ,QAG1B;AAJS;AAIR;AAED,wDAAsB,4EACL,iBACf,EACD,gFAAmB,mB","file":"chunk.14.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { connect } from 'react-redux'\nimport { sendNotification, resetForm } from '../../actions'\nimport { loadBooks } from '../../actions/api'\nimport _ from 'lodash'\nimport AddCollectionForm from './components/AddCollectionForm'\nimport webAPI from '../../webAPI'\nimport DocContainer from '../../components/DocContainer'\n\ninterface Props {\n  session: any\n  notification?: any\n  sendNotification?: typeof sendNotification\n  resetForm: typeof resetForm\n  loadBooks?: typeof loadBooks\n}\n\nclass AddCollection extends Component<Props, {}> {\n\n  constructor(props) {\n    super(props)\n    this.handleSave = this.handleSave.bind(this)\n    this.handleBooksValueChange = this.handleBooksValueChange.bind(this)\n  }\n\n  handleSave(data) {\n    const creator = this.props.session.user.id\n    const postData = Object.assign({}, data, {\n      creator\n    })\n\n    webAPI.addCollection(postData).then(result => {\n      this.props.sendNotification('添加成功！')\n      this.props.resetForm('addCollection')\n    }, error => {\n      this.props.sendNotification(error.message, 'error')\n    })\n  }\n\n  handleBooksValueChange(newVal) {\n    // if (!_.isEmpty(newVal)) {\n    //   this.props.loadBooks({\n    //     q: newVal\n    //   })\n    // }\n  }\n\n  render() {\n    return (\n      <DocContainer title=\"添加合集\">\n        <h1 className=\"page-title\">添加合集</h1>\n        <AddCollectionForm\n          onSave={this.handleSave}\n          onBooksValueChange={this.handleBooksValueChange}\n          />\n      </DocContainer>\n    )\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    notification: state.components.notification,\n    elements: state.elements,\n    session: state.session\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { sendNotification, resetForm, loadBooks }\n)(AddCollection as any)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/AddCollection/AddCollection.tsx","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { sendNotification } from '../../../actions'\nimport { Textarea, Button, SelectizeInput, Input } from '../../../components/form'\nimport * as selectors from '../../../selectors'\nimport _ from 'lodash'\nimport form from 'better-redux-form'\n\ninterface Props {\n  initialData?: any\n  onSave: (data: any) => void\n  onBooksValueChange?: (val: string) => void\n}\n\ninterface AllProps extends Props {\n  routing: any\n  sendNotification: any\n  handleSubmit: any\n  fields: any\n  booksSearchAsOptions: any\n}\n\ninterface State {\n}\n\n@form({\n  form: 'addCollection',\n  fields: ['name', '_booksValue', '_booksValues', '_booksOptions', 'description'],\n})\nclass AddCollectionForm extends Component<AllProps, State> {\n\n  constructor(props) {\n    super(props)\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const {\n      fields: { name, _booksValue, _booksValues, _booksOptions, description },\n      handleSubmit,\n      onSave,\n      onBooksValueChange,\n      booksSearchAsOptions\n    } = this.props\n\n    return (\n      <div>\n        <Input placeholder=\"合集名称\" {...name} />\n        <SelectizeInput\n          placeholder=\"选择书籍\"\n          onInputChange={newValue => {\n            if (onBooksValueChange) {\n              onBooksValueChange(newValue)\n            }\n            _booksValue.set(newValue)\n          } }\n          value={_booksValue.get()}\n          onValuesChange={_booksValues.onChange}\n          options={booksSearchAsOptions}\n          values={_booksValues.value || []}\n          />\n        <Textarea\n          {...description}\n          placeholder=\"描述\"\n          />\n        <Button\n          onClick={handleSubmit(data => {\n            let postData = _.pick(data, ['name', 'description'])\n            postData = Object.assign({}, postData, {\n              items: _booksValues.value ? _booksValues.value.map(item => item.value) : []\n            })\n            onSave(postData)\n          })}\n          >添加</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    routing: state.routing.locationBeforeTransitions,\n    // booksSearchAsOptions: selectors.booksAsOptions('search')(state)\n  }\n}\n\nexport default connect<{}, {}, Props>(\n  mapStateToProps,\n  { sendNotification }\n)(AddCollectionForm)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/AddCollection/components/AddCollectionForm.tsx"],"sourceRoot":""}