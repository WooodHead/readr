{"version":3,"sources":["../.././src/routes/AddBook/AddBook.tsx","webpack:///./src/components/FileUploader/FileUploader.tsx?db06","webpack:///./src/components/FileUploader/index.ts?9f03","../.././src/routes/AddBook/components/AddAuthorForm.tsx","../.././src/routes/AddBook/components/AddBookForm.tsx"],"names":[],"mappings":"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","file":"chunk.11.js","sourcesContent":["import React, { Component } from 'react'\nimport ReactDOM from 'react-dom'\nimport { connect } from 'react-redux'\nimport { sendNotification, openModal, searchDoubanBooks, closeModal, fetchAuthors, resetForm, initializeForm } from '../../actions'\nimport _ from 'lodash'\nimport webAPI from '../../webAPI'\nimport DocContainer from '../../components/DocContainer'\nimport AddBookForm from './components/AddBookForm'\n\ninterface Props {\n  elements?: any\n  changeValue?: any\n  sendNotification?: any\n  openModal?: (data: openModal) => void\n  searchDoubanBooks?: any\n  closeModal?: any\n  fetchAuthors?: any\n  resetForm?: typeof resetForm\n  fetchDoubanBooks: any\n  initializeForm?: typeof initializeForm\n}\n\nclass AddBook extends Component<Props, {}> {\n\n  defaultState: {}\n  fetchDoubanBooks: any\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      slData: {\n        author: {}\n      }\n    }\n\n    this.handleTitleValueChange = this.handleTitleValueChange.bind(this)\n    this.handleAuthorValueChange = this.handleAuthorValueChange.bind(this)\n    this.addAuthor = this.addAuthor.bind(this)\n    this.addBook = this.addBook.bind(this)\n  }\n\n  addBook(data) {\n    webAPI.addBook(data).then(result => {\n      this.props.sendNotification('添加成功')\n      this.props.resetForm('addBook')\n    }, error => {\n      this.props.sendNotification(error.message, 'error', 0)\n    })\n  }\n\n  addAuthor(data) {\n    webAPI.addAuthor(data).then(result => {\n      this.props.sendNotification('添加成功')\n      const id = result.json.ops[0]._id\n      const name = result.json.ops[0].name\n      this.props.initializeForm('addBook', {\n        authors: [{\n          name: name,\n          value: id\n        }],\n        author: ''\n      })\n      this.props.closeModal()\n    }, error => {\n      this.props.sendNotification(error.message, 'error')\n    })\n  }\n\n  handleAuthorValueChange(query) {\n    if (!_.isEmpty(query)) {\n      this.props.fetchAuthors({\n        q: query\n      })\n    }\n  }\n\n  handleTitleValueChange(newVal) {\n    if (!_.isEmpty(newVal)) {\n      this.props.searchDoubanBooks(newVal)\n    }\n  }\n\n  render() {\n    return (\n      <DocContainer title=\"添加书籍\">\n        <h1 className=\"page-title\">添加书籍</h1>\n        <AddBookForm\n          onTitleInputChange={this.handleTitleValueChange}\n          onAuthorInputChange={this.handleAuthorValueChange}\n          onSaveAuthor={this.addAuthor}\n          onSaveBook={this.addBook}\n          />\n      </DocContainer>\n    )\n  }\n}\n\nconst mapStateToProps = state => {\n  return {\n    notification: state.components.notification,\n    elements: state.elements\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  { sendNotification, openModal, searchDoubanBooks, closeModal, fetchAuthors, resetForm, initializeForm }\n)(AddBook as any)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/AddBook/AddBook.tsx","import React, { Component } from 'react'\nimport $ from 'jquery'\n\ninterface Callback {\n  (data: any): any\n}\n\ninterface Props {\n  url: string\n  noAjax?: boolean\n  onSuccess?: Callback\n  onError?: Callback\n  onComplete?: Callback\n  name?: string\n  multiple?: boolean\n  accept?: string\n  style?: React.CSSProperties\n}\n\ninterface State {\n  value: string\n}\n\nclass FileUploader extends Component<Props, State> {\n\n  fileInput: HTMLInputElement\n\n  constructor(props) {\n    super(props)\n    this.state = {\n      value: null\n    }\n    this.handleFileChange = this.handleFileChange.bind(this)\n  }\n\n  handleFileChange(e) {\n    const { url, onComplete, onSuccess, onError } = this.props\n\n    const files = e.target.files\n    const data = new FormData()\n\n    if (files.length > 1) {\n      $.each(files, function (key, value) {\n        data.append(key, value)\n      })\n    } else {\n      data.append('file', files[0])\n    }\n\n    $.ajax({\n      url,\n      type: 'POST',\n      data,\n      cache: false,\n      processData: false,\n\n      // 如果这么设置 contentType 会导致不存在 boundary 的问题, 需要设置为 false\n      // contentType: 'multipart/form-data',\n      contentType: false,\n\n      xhrFields: {\n        withCredentials: true\n      },\n      complete: data2 => {\n        if (onComplete) {\n          onComplete(data2)\n        }\n      },\n      success: function (data2, textStatus, jqXHR) {\n        if (onSuccess) {\n          onSuccess(data2)\n        }\n      },\n      error: function (jqXHR, textStatus, errorThrown) {\n        if (onError) {\n          onError(jqXHR.responseJSON)\n        }\n      }\n    })\n  }\n\n  componentDidMount() {\n  }\n\n  render() {\n    const { url, accept, noAjax, children, name, multiple, style } = this.props\n\n    // 如果页面上有两个上传组件可能会出错\n    // input value 设为空会使得每次选中文件后都触发 onChange\n    return (\n      <div\n        className=\"file-trigger\"\n        onClick={e => {\n          if (!noAjax) {\n            $(this.fileInput).click()\n          }\n        } }\n        style={\n          {\n            ...{\n              display: 'inline-block'\n            },\n            ...style\n          }\n        }\n        >\n        <form action={url} method=\"post\" encType=\"multipart/form-data\" style={noAjax ? {} : { display: 'none' }}>\n          <input\n            multiple={multiple}\n            type=\"file\"\n            name={name || 'file'}\n            id=\"upload-file\"\n            value={noAjax ? undefined : ''}\n            ref={ref => { this.fileInput = ref } }\n            onChange={e => {\n              if (!noAjax) {\n                this.handleFileChange(e)\n              }\n            } }\n            accept={accept || '.*'}\n            />\n          <input type=\"submit\" value=\"提交\" />\n        </form>\n        {children}\n      </div>\n    )\n  }\n}\n\nexport default FileUploader\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FileUploader/FileUploader.tsx","import FileUploader from './FileUploader'\nexport default FileUploader\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/FileUploader/index.ts","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport form from 'better-redux-form'\nimport { sendNotification, closeModal } from '../../../actions'\nimport Input from '../../../components/Input'\nimport ModalFooter from '../../../components/Modal/ModalFooter'\n\ninterface Props {\n  onSave: (data: any) => void\n}\n\ninterface AllProps extends Props {\n  sendNotification: any\n  handleSubmit: any\n  fields: any\n  closeModal: () => void\n}\n\n@form({\n  form: 'addAuthor',\n  fields: ['name', 'slug', 'description']\n})\nclass AddAuthorForm extends Component<AllProps, {}> {\n\n  constructor(props) {\n    super(props)\n  }\n\n  render() {\n    const {\n      fields: { name, slug, description },\n      handleSubmit, closeModal, onSave\n    } = this.props\n\n    return (\n      <div>\n        <Input placeholder=\"名字\" {...name} />\n        <Input placeholder=\"唯一标识\" {...slug} />\n        <Input placeholder=\"描述\" {...description} />\n        <ModalFooter\n          onConfirm={handleSubmit(data => {\n            onSave(data)\n          })}\n          onCancel={closeModal}\n          />\n      </div>\n    )\n  }\n}\n\nexport default connect<{}, {}, Props>(\n  state => state,\n  { sendNotification, closeModal }\n)(AddAuthorForm)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/AddBook/components/AddAuthorForm.tsx","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport form from 'better-redux-form'\nimport { sendNotification, openModal, initializeForm } from '../../../actions'\nimport * as selectors from '../../../selectors'\nimport { Textarea, Button, SelectizeInput, Input } from '../../../components/form'\nimport AddAuthorForm from './AddAuthorForm'\nimport _ from 'lodash'\nimport FileUploader from '../../../components/FileUploader'\n\ninterface Props {\n  onTitleInputChange?: (newVal: string) => void\n  onAuthorInputChange?: (newVal: string) => void\n  onSaveAuthor: (data: any) => void\n  onSaveBook: (data: any) => void\n  initializeForm?: typeof initializeForm\n}\n\ninterface AllProps extends Props {\n  routing: any\n  sendNotification: any\n  handleSubmit: any\n  fields: any\n  doubanBooksAsOptions: any[]\n  authorsAsOptions: any[]\n  openModal: (data: openModal) => void\n}\n\n@form({\n  form: 'addBook',\n  fields: ['title', 'author', 'authors', 'cover', 'description', 'file'],\n  destroyOnUnmount: true\n})\nclass AddBookForm extends Component<AllProps, {}> {\n\n  constructor(props) {\n    super(props)\n    this.handleTitleOptionClick = this.handleTitleOptionClick.bind(this)\n    this.handleAddNewAuthor = this.handleAddNewAuthor.bind(this)\n  }\n\n  handleTitleOptionClick(option) {\n    const data = {\n      cover: option.additional.cover,\n      description: option.additional.description,\n      author: option.additional.author\n    }\n    this.props.initializeForm('addBook', data)\n    this.setState({\n      slAuthor: {\n        value: option.additional.author,\n        values: []\n      }\n    })\n  }\n\n  handleAddNewAuthor(value) {\n    this.props.openModal({\n      title: '添加作者',\n      content: <AddAuthorForm\n        onSave={this.props.onSaveAuthor}\n        />\n    })\n    this.props.initializeForm('addAuthor', { name: value })\n  }\n\n  render() {\n    const {\n      fields: {\n        title, author, authors, cover, description, file\n      },\n      handleSubmit,\n      onTitleInputChange,\n      onAuthorInputChange,\n      doubanBooksAsOptions,\n      authorsAsOptions,\n      onSaveBook,\n    } = this.props\n\n    const selectedAuthorIds = authors.get([]).map(a => a.value)\n    const filteredAuthorOptions = authorsAsOptions.filter(a => {\n      return selectedAuthorIds.indexOf(a.value) === -1\n    })\n\n    return (\n      <div>\n        <SelectizeInput\n          placeholder=\"书名\"\n          value={title.value}\n          values={[]}\n          options={doubanBooksAsOptions}\n          onInputChange={newValue => {\n            onTitleInputChange(newValue)\n            title.set(newValue)\n          } }\n          useValue\n          onOptionClick={this.handleTitleOptionClick}\n          />\n        <SelectizeInput\n          placeholder=\"作者\"\n          value={author.get()}\n          values={authors.get([])}\n          options={filteredAuthorOptions}\n          onInputChange={newValue => {\n            onAuthorInputChange(newValue)\n            author.set(newValue)\n          } }\n          onValuesChange={authors.onChange}\n          onAddNewValue={this.handleAddNewAuthor}\n          />\n        <Input placeholder=\"封面图片地址\" {...cover} />\n        <Textarea placeholder=\"描述\" {...description} />\n        {\n          !_.isEmpty(file.value)\n            ? (\n              <div>\n                <span>{file.value.originalname} </span>\n                <Button\n                  color=\"white\"\n                  onClick={() => {\n                    file.set({})\n                  } }>重新选择</Button>\n              </div>\n            )\n            : (\n              <div>\n                <FileUploader\n                  url=\"/api/books\"\n                  accept=\".txt,.epub\"\n                  name=\"book-file\"\n                  onSuccess={result => {\n                    file.set(result)\n                  } }\n                  onError={error => {\n                    this.props.sendNotification(error.message, 'error')\n                  } }\n                  >\n                  <Button color=\"white\">选择书籍</Button>\n                </FileUploader>\n                <p>支持 txt 和 epub 格式</p>\n              </div>\n            )\n        }\n        <Button onClick={handleSubmit(data => {\n          const postData = _.omit(data, ['author'])\n          postData['authors'] = _.map(postData['authors'], 'value')\n          postData['file'] = data.file._id\n          onSaveBook(postData)\n        })}>添加</Button>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    routing: state.routing.locationBeforeTransitions,\n    doubanBooksAsOptions: selectors.doubanBooksAsOptions('search')(state),\n    authorsAsOptions: selectors.authorsAsOptions('search')(state),\n  }\n}\n\nexport default connect<{}, {}, Props>(\n  mapStateToProps,\n  { sendNotification, openModal, initializeForm }\n)(AddBookForm)\n\n\n\n// WEBPACK FOOTER //\n// ./src/routes/AddBook/components/AddBookForm.tsx"],"sourceRoot":""}